var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.276,1,2.195]],["body/classes/AcceptLogIn.html",[0,0.528,1,3.268,2,0.455,3,0.02,4,0.02,5,0.049,6,2.026,7,1.614,8,1.069,9,4.342,10,1.508,11,2.137,12,3.273,13,4.037,14,3.874,15,2.931,16,3.49,17,2.022,18,4.163,19,4.127,20,3.668,21,3.16,22,3.078,23,3.247,24,2.551,25,4.056,26,4.163,27,3.15,28,1.559,29,3.668,30,3.956,31,4.163,32,0.191,33,0.955,34,0.147,35,0.338,36,0.958,37,1.455,38,1.199,39,0.243,40,0.992,41,3.856,42,0.199,43,5.664,44,0.258,45,0.005,46,0.253,47,0.258,48,3.822,49,0.411,50,0.359,51,0.09,52,0.342,53,3.071,54,1.739,55,2.491,56,1.739,57,2.132,58,2.578,59,2.132,60,0.06,61,0.53,62,1.978,63,3.133,64,1.059,65,2.085,66,3.412,67,2.578,68,3.668,69,3.052,70,4.695,71,3.956,72,3.412,73,2.077,74,2.481,75,3.69,76,3.208,77,4.029,78,3.412,79,1.343,80,3.412,81,2.077,82,3.133,83,3.464,84,3.492,85,1.774,86,2.077,87,1.774,88,0.992,89,2.132,90,2.741,91,1.118,92,2.077,93,3.133,94,1.849,95,3.133,96,2.077,97,2.077,98,1.431,99,1.774,100,0.808,101,1.774,102,1.706,103,1.811,104,1.505,105,2.132,106,2.132,107,3.16,108,3.078,109,1.775,110,3.078,111,2.132,112,1.213,113,1.213,114,1.133,115,2.132,116,2.077,117,1.89,118,2.132,119,1.89,120,1.505,121,1.073,122,2.077,123,2.901,124,3.16,125,3.071,126,2.931,127,1.558,128,1.031,129,2.077,130,2.026,131,3.956,132,1.088,133,2.132,134,1.978,135,2.077,136,2.864,137,1.276,138,2.132,139,2.132,140,4.163,141,2.077,142,2.132,143,3.078,144,2.132,145,3.078,146,0.522,147,2.132,148,2.077,149,2.132,150,2.077,151,2.132,152,2.63,153,3.078,154,1.433,155,2.132,156,2.132,157,2.132,158,2.132,159,2.132,160,2.026,161,0.002,162,0.003,163,0.002]],["title/classes/AcceptLogOut.html",[0,0.276,77,2.534]],["body/classes/AcceptLogOut.html",[0,0.53,1,2.993,2,0.465,3,0.02,4,0.02,5,0.046,6,2.07,7,1.648,8,1.072,9,4.302,10,1.04,11,1.931,12,3.272,13,3.958,14,3.904,15,2.021,16,3.521,17,2.089,18,4.206,19,3.975,20,3.127,21,2.178,22,2.122,23,3.073,24,2.336,25,3.714,26,3.812,27,2.885,28,1.427,29,3.127,30,3.622,31,3.21,32,0.189,33,0.959,34,0.15,35,0.344,36,0.891,37,1.27,38,1.203,39,0.293,41,2.784,42,0.17,45,0.005,49,0.42,50,0.366,51,0.09,52,0.349,53,3.11,54,1.777,55,2.522,56,1.777,57,2.178,58,2.619,59,2.178,60,0.06,61,0.541,62,2.021,63,3.172,64,1.082,65,2.112,66,3.455,67,2.619,68,3.714,69,3.097,70,4.727,71,3.997,72,3.455,73,2.122,74,2.52,75,3.975,76,3.242,77,4.398,78,3.455,79,1.364,80,3.455,81,2.122,82,3.172,83,3.5,84,3.536,85,1.813,86,2.122,87,1.813,88,1.013,89,2.178,90,2.784,91,1.142,92,2.122,93,3.172,94,1.889,95,3.172,96,2.122,97,2.122,98,1.443,99,1.813,100,0.815,101,1.813,102,1.743,103,1.85,104,1.538,105,2.178,106,2.178,107,3.21,108,3.127,109,1.803,110,3.127,111,2.178,112,1.22,113,1.22,114,1.14,115,2.178,116,2.122,117,1.931,118,2.178,119,1.931,120,1.538,121,1.096,122,2.122,123,2.938,124,3.21,125,3.11,126,2.978,127,1.591,128,1.054,129,2.122,130,2.07,131,4.261,132,1.111,133,2.178,134,2.021,135,2.122,136,2.91,137,1.296,138,2.178,139,2.178,140,4.692,141,2.122,142,2.178,143,3.127,144,2.178,145,3.127,146,0.534,147,3.21,148,3.127,149,3.21,150,3.127,151,3.21,152,3.172,153,3.714,154,1.464,155,2.178,156,2.178,157,2.178,158,2.178,159,2.178,160,2.07,161,0.002,162,0.003,163,0.002,164,5.754]],["title/classes/AcceptLogOutSuccess.html",[0,0.276,78,2.534]],["body/classes/AcceptLogOutSuccess.html",[0,0.53,1,2.991,2,0.465,3,0.02,4,0.02,5,0.049,6,2.068,7,1.647,8,1.072,9,4.361,10,1.039,11,2.058,12,3.279,13,4.061,14,3.903,15,2.019,16,3.301,17,2.035,18,3.81,19,3.974,20,3.125,21,2.176,22,2.12,23,3.072,24,2.577,25,4.096,26,4.205,27,3.182,28,1.574,29,3.125,30,3.995,31,3.208,32,0.19,33,0.959,34,0.15,35,0.344,36,0.891,37,1.27,38,1.203,39,0.167,41,2.783,42,0.115,45,0.005,49,0.42,50,0.366,51,0.09,52,0.349,53,3.108,54,1.775,55,2.521,56,1.775,57,2.176,58,2.617,59,2.176,60,0.06,61,0.54,62,2.019,63,3.171,64,1.081,65,2.111,66,3.454,67,2.617,68,3.712,69,3.065,70,4.726,71,3.995,72,3.454,73,2.12,74,2.519,75,3.727,76,3.24,77,4.251,78,3.811,79,1.363,80,3.454,81,2.12,82,3.171,83,3.499,84,3.534,85,1.811,86,2.12,87,1.811,88,1.012,89,2.176,90,2.783,91,1.141,92,2.12,93,3.171,94,1.888,95,3.171,96,2.12,97,2.12,98,1.443,99,1.811,100,0.815,101,1.811,102,1.741,103,1.849,104,1.537,105,2.176,106,2.176,107,3.208,108,3.125,109,1.802,110,3.125,111,2.176,112,1.22,113,1.22,114,1.14,115,2.176,116,2.12,117,1.929,118,2.176,119,1.929,120,1.537,121,1.096,122,2.12,123,2.936,124,3.208,125,3.108,126,2.976,127,1.59,128,1.053,129,2.12,130,2.068,131,3.995,132,1.11,133,2.176,134,2.019,135,2.12,136,3.454,137,1.539,138,2.176,139,2.176,140,4.483,141,2.12,142,2.176,143,3.712,144,2.176,145,3.125,146,0.533,147,2.176,148,2.12,149,2.176,150,2.12,151,2.176,152,3.171,153,3.712,154,2.157,155,3.208,156,2.176,157,2.176,158,2.176,159,2.176,160,2.068,161,0.002,162,0.003,163,0.002,165,3.901]],["title/classes/Action.html",[0,0.276,8,0.532]],["body/classes/Action.html",[0,0.519,2,0.53,3,0.023,4,0.023,5,0.027,8,0.671,11,1.139,23,1.812,24,1.52,28,1.673,32,0.161,36,0.493,38,1.322,39,0.41,42,0.131,44,0.3,45,0.005,46,0.418,47,0.3,50,0.593,51,0.088,60,0.061,61,0.876,100,1.037,112,1.264,113,1.264,114,1.181,123,3.163,161,0.003,162,0.003,163,0.002,166,2.624,167,3.99,168,4.875,169,5.535,170,3.473,171,4.218,172,3.039,173,5.036,174,5.036,175,3.323,176,3.51,177,5.036,178,5.036,179,5.036,180,5.036,181,5.036,182,3.527,183,4.447,184,2.301,185,0.685,186,2.301,187,1.812,188,2.064,189,0.894,190,2.795,191,2.064,192,1.413,193,2.795,194,2.55,195,2.795,196,2.795,197,2.795,198,2.795,199,2.795,200,2.795,201,2.795,202,2.795,203,3.974,204,2.085,205,3.126,206,2.795,207,3.974,208,1.556,209,1.616,210,3.625,211,2.795,212,1.641,213,1.912,214,1.52,215,1.985,216,2.706,217,2.795,218,2.795,219,2.795,220,2.795,221,2.795,222,2.795,223,3.189,224,2.795,225,2.795,226,2.795,227,2.706,228,2.706,229,2.449,230,2.795,231,2.795,232,2.795,233,2.795,234,1.877,235,2.795,236,2.55,237,2.795,238,2.795,239,2.795,240,2.795,241,2.624,242,2.152,243,2.795,244,1.095,245,2.55,246,2.706,247,1.985,248,2.706,249,2.417,250,2.795,251,2.795,252,2.795,253,2.795,254,1.812,255,2.795,256,2.795,257,2.795,258,2.795,259,2.795,260,2.795,261,2.795,262,2.795,263,2.795,264,2.248,265,2.795,266,2.795,267,2.481,268,2.795,269,2.795,270,2.795,271,2.795,272,2.795,273,3.847,274,1.318,275,1.318,276,2.706,277,2.706,278,2.706,279,2.107,280,2.795,281,2.795,282,2.098,283,2.795,284,2.481,285,3.847,286,2.795,287,2.795]],["title/components/ActionComponent.html",[288,1.008,289,1.713]],["body/components/ActionComponent.html",[0,0.273,3,0.026,4,0.035,5,0.042,8,1.007,32,0.181,33,0.68,34,0.19,35,0.407,36,0.548,39,0.292,42,0.281,44,0.334,45,0.005,46,0.555,47,0.334,51,0.106,60,0.03,64,1.371,91,1.446,100,0.922,112,0.676,113,0.676,114,0.632,121,1.389,128,1.335,132,1.408,161,0.002,162,0.003,163,0.002,170,2.875,175,2.825,176,3.651,185,1.049,188,2.296,249,4.562,274,1.466,275,2.019,288,1.567,289,2.869,290,2.261,291,1.743,292,2.127,293,1.77,294,1.77,295,4.946,296,2.875,297,1.666,298,3.635,299,3.1,300,7.79,301,2.437,302,6.811,303,2.314,304,6.99,305,1.594,306,3.199,307,6.963,308,7.79,309,7.302,310,6.462,311,4.946,312,7.531,313,7.79,314,6.811,315,6.811,316,4.946,317,4.946,318,4.946,319,4.946,320,4.946,321,1.574,322,2.247,323,4.946,324,0.899,325,1.642,326,2.919,327,3.01,328,2.56,329,4.438,330,4.438,331,6.811,332,4.946,333,4.946,334,4.946,335,4.946,336,4.946,337,6.811,338,1.982,339,1.916,340,1.982,341,1.982,342,1.982,343,1.982,344,1.691,345,1.982,346,1.982,347,1.982,348,1.885,349,1.982,350,1.948,351,1.982,352,1.982,353,1.982,354,1.234,355,1.982,356,1.529,357,2.437,358,2.4,359,1.595,360,3.003,361,1.77,362,1.77,363,1.691,364,1.77,365,1.691,366,2.442,367,2.437,368,1.691,369,2.437,370,1.691,371,1.77,372,1.666,373,1.77,374,1.691,375,1.77,376,3.003,377,1.691,378,1.77,379,1.642,380,2.437,381,1.691,382,1.666,383,1.642,384,1.743,385,1.77,386,1.691,387,2.4,388,1.77,389,1.717,390,1.618,391,2.437,392,1.691,393,1.77,394,3.003,395,1.642,396,1.77,397,1.691,398,1.691,399,1.77,400,1.666,401,1.77,402,1.691,403,1.691,404,1.77,405,1.666,406,1.77,407,1.691,408,1.77,409,1.717,410,1.691,411,1.77,412,1.691,413,1.446,414,1.77,415,1.691,416,2.4,417,1.691,418,2.787,419,1.77,420,1.691,421,1.77,422,1.691,423,1.77,424,1.666,425,1.691,426,1.691,427,1.691,428,1.691,429,1.862,430,1.691,431,1.77,432,1.691,433,1.691,434,1.691,435,1.25,436,1.666,437,1.666,438,1.77,439,1.666,440,1.77,441,1.666,442,1.743,443,1.77]],["title/classes/ActionStatus.html",[0,0.276,229,1.942]],["body/classes/ActionStatus.html",[0,0.52,2,0.536,3,0.023,4,0.023,5,0.028,8,0.478,11,1.153,23,1.835,24,1.539,28,1.683,32,0.153,36,0.499,38,1.323,39,0.411,42,0.133,44,0.304,45,0.005,46,0.422,47,0.304,50,0.598,51,0.089,60,0.061,61,0.884,100,1.031,112,1.268,113,1.268,114,1.185,123,1.935,161,0.003,162,0.003,163,0.002,166,2.657,168,3.881,169,5.485,170,3.483,171,4.247,172,3.031,173,5.064,174,5.064,175,3.341,176,3.527,177,5.064,178,5.064,179,5.064,180,5.064,181,5.064,185,0.693,186,2.33,187,1.835,188,2.09,189,0.905,190,2.83,191,2.09,192,1.431,193,2.83,194,2.581,195,2.83,196,2.83,197,2.83,198,2.83,199,2.83,200,2.83,201,2.83,202,2.83,203,4.009,204,2.093,205,3.154,206,2.83,207,4.009,208,1.567,209,1.636,210,3.657,211,2.83,212,1.662,213,1.935,214,1.539,215,2.009,216,2.739,217,2.83,218,2.83,219,2.83,220,2.83,221,2.83,222,2.83,223,3.196,224,2.83,225,2.83,226,2.83,227,2.739,228,2.739,229,2.869,230,2.83,231,2.83,232,2.83,233,2.83,234,1.901,235,2.83,236,2.581,237,2.83,238,2.83,239,2.83,240,2.83,241,2.657,242,2.178,243,2.83,244,1.109,245,2.581,246,2.739,247,2.009,248,2.739,249,2.447,250,2.83,251,2.83,252,2.83,253,2.83,254,1.835,255,2.83,256,2.83,257,2.83,258,2.83,259,2.83,260,2.83,261,2.83,262,2.83,263,2.83,264,2.276,265,2.83,266,2.83,267,2.512,268,2.83,269,2.83,270,2.83,271,2.83,272,2.83,273,3.881,274,1.335,275,1.335,276,2.739,277,2.739,278,2.739,279,2.133,280,2.83,281,2.83,282,2.117,283,2.83,284,2.512,285,3.881,286,2.83,287,2.83,444,4.039,445,4.502]],["title/classes/AddActionsAppear.html",[0,0.276,446,2.724]],["body/classes/AddActionsAppear.html",[0,0.539,2,0.627,3,0.027,4,0.027,5,0.032,8,1.056,32,0.193,33,0.986,34,0.202,35,0.425,36,0.788,37,1.678,38,1.237,39,0.226,40,1.365,42,0.238,44,0.355,45,0.005,46,0.348,47,0.355,49,0.566,50,0.494,51,0.085,52,0.47,60,0.061,61,0.729,79,1.684,88,1.365,98,1.73,100,0.94,112,1.335,113,1.335,114,1.247,146,1.295,161,0.002,162,0.003,163,0.002,185,1.601,187,2.144,214,2.429,244,1.296,446,4.681,447,3.105,448,7.104,449,5.262,450,4.466,451,3.017,452,4.372,453,1.912,454,4.067,455,2.71,456,4.487,457,4.487,458,2.049,459,4.264,460,4.162,461,4.487,462,4.487,463,1.835,464,1.365,465,1.33,466,1.497,467,1.497,468,2.038,469,3.105,470,1.478,471,1.626,472,3.307,473,3.307,474,3.307,475,3.307,476,3.307,477,3.307,478,3.307,479,3.307,480,3.201]],["title/classes/AddLightCardFailure.html",[0,0.276,481,2.237]],["body/classes/AddLightCardFailure.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.448,482,3.587,483,1.908,484,1.85,485,5.973,486,4.109,487,2.89,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,1.988,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908]],["title/classes/AddThirdActions.html",[0,0.276,511,2.237]],["body/classes/AddThirdActions.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.448,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,2.89,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,552,5.973,553,4.109]],["title/components/AppComponent.html",[288,1.008,363,1.713]],["body/components/AppComponent.html",[0,0.227,3,0.021,4,0.031,5,0.037,8,0.635,12,2.46,17,1.65,32,0.179,33,0.598,34,0.158,35,0.358,36,0.858,38,0.876,39,0.303,42,0.273,44,0.404,45,0.005,46,0.543,47,0.404,49,0.833,50,0.726,51,0.113,52,0.369,60,0.025,64,1.954,65,2.391,67,2.725,91,1.206,100,0.785,109,2.425,121,1.158,126,2.134,128,1.113,132,1.174,137,1.993,161,0.002,162,0.003,163,0.002,172,2.587,185,0.922,204,0.977,212,2.603,223,2.805,236,4.043,274,1.222,275,1.775,288,1.418,289,1.41,290,1.988,291,1.453,292,1.773,293,1.475,294,1.475,296,2.603,297,1.389,298,3.599,299,2.725,301,2.142,303,2.253,305,1.402,306,2.949,321,1.384,322,1.728,324,0.75,338,1.652,339,1.597,340,1.652,341,1.652,342,1.652,343,1.652,344,1.41,345,1.652,346,1.652,347,1.652,348,1.571,349,1.652,350,1.624,351,1.652,352,1.652,353,1.652,354,1.029,355,1.652,356,1.274,357,2.142,358,2.11,359,1.33,360,2.768,361,1.475,362,1.475,363,2.645,364,1.475,365,1.41,366,2.21,367,2.142,368,1.41,369,2.142,370,1.41,371,1.475,372,1.389,373,1.475,374,1.41,375,1.475,376,2.768,377,1.41,378,1.475,379,1.369,380,2.142,381,1.41,382,1.389,383,1.369,384,1.453,385,1.475,386,1.41,387,2.11,388,1.475,389,1.431,390,1.349,391,2.142,392,1.41,393,1.475,394,2.768,395,1.369,396,1.475,397,1.41,398,1.41,399,1.475,400,1.389,401,1.475,402,1.41,403,1.41,404,1.475,405,1.389,406,1.475,407,1.41,408,1.475,409,1.431,410,1.41,411,1.475,412,1.41,413,1.206,414,1.475,415,1.41,416,2.11,417,1.41,418,2.523,419,1.475,420,1.41,421,1.475,422,1.41,423,1.475,424,1.389,425,1.41,426,1.41,427,1.41,428,1.41,429,1.637,430,1.41,431,1.475,432,1.41,433,1.41,434,1.41,435,1.042,436,1.389,437,1.389,438,1.475,439,1.389,440,1.475,441,1.389,442,1.453,443,1.475,504,1.274,517,2.528,524,2.78,554,4.123,555,4.967,556,7.051,557,5.988,558,7.051,559,5.493,560,7.051,561,5.794,562,7.738,563,5.981,564,5.988,565,1.453,566,6.93,567,7.051,568,4.935,569,5.988,570,5.988,571,5.988,572,4.665,573,4.062,574,5.988,575,4.123,576,5.849,577,5.988,578,4.665,579,5.373,580,4.423,581,3.434,582,5.988,583,4.123,584,4.123,585,4.123,586,4.123,587,4.123,588,4.123,589,5.988,590,4.123,591,2.907,592,2.788,593,1.158,594,1.158,595,1.189,596,3.045,597,4.123,598,3.699,599,3.212,600,3.764,601,3.42,602,1.995,603,4.123,604,4.123,605,2.186,606,3.699,607,3.341,608,1.158,609,4.123,610,4.123,611,4.123,612,4.123,613,4.123,614,4.123,615,4.123,616,3.212,617,4.123,618,4.123,619,4.221,620,4.123,621,4.123,622,4.123,623,2.433,624,4.123,625,4.123,626,4.123,627,1.914,628,4.123,629,4.123,630,4.123,631,4.123,632,4.123,633,3.764,634,5.988,635,5.988,636,5.988,637,2.907,638,3.212,639,3.699,640,2.509,641,2.433,642,3.212,643,4.123,644,2.907,645,4.123,646,3.699,647,4.123,648,3.212]],["title/modules/AppModule.html",[649,2.195,650,3.702]],["body/modules/AppModule.html",[0,0.309,3,0.029,4,0.038,5,0.046,36,0.622,45,0.005,51,0.126,58,2.551,60,0.034,76,2.41,91,1.639,121,2.651,128,1.513,132,2.686,161,0.003,162,0.003,163,0.003,324,1.019,326,3.308,327,3.411,328,4.572,338,2.246,339,2.172,340,2.246,341,2.246,342,2.246,343,2.246,344,1.917,345,2.246,346,2.246,347,2.246,348,2.137,349,2.246,350,2.208,351,2.246,352,2.246,353,2.246,354,1.399,355,2.246,356,1.732,363,3.463,386,3.227,403,3.227,407,3.227,412,3.227,576,4.65,591,5.225,592,3.791,649,2.455,650,7.801,651,2.835,652,3.214,653,5.052,654,4.374,655,2.972,656,5.03,657,5.03,658,5.03,659,5.03,660,6.971,661,6.786,662,6.786,663,6.382,664,4.374,665,3.411,666,5.606,667,4.028,668,7.412,669,4.028,670,7.412,671,5.606,672,7.412,673,2.972,674,4.659,675,6.65,676,7.412,677,3.308,678,5.773,679,5.773,680,2.835,681,5.606,682,5.773,683,5.606,684,3.952,685,5.606,686,5.606,687,5.03,688,5.606,689,4.141,690,2.901,691,2.901,692,5.606,693,5.606,694,6.65,695,4.65,696,4.65,697,5.03,698,4.65,699,5.773,700,4.65,701,5.606,702,5.606,703,4.65,704,4.65,705,4.65,706,5.606,707,5.606,708,5.606,709,5.03,710,5.606,711,5.606,712,5.03,713,5.606,714,5.606,715,3.649,716,3.649,717,5.606,718,5.606,719,5.606,720,5.606,721,5.606,722,5.606,723,4.141,724,4.367]],["title/modules/AppRoutingModule.html",[649,2.195,660,3.702]],["body/modules/AppRoutingModule.html",[0,0.362,3,0.034,4,0.043,5,0.05,12,2.088,36,0.728,45,0.005,51,0.107,60,0.05,82,3.049,83,3.049,87,3.049,91,1.921,121,2.305,128,1.772,134,3.399,161,0.003,162,0.004,163,0.003,204,1.945,223,2.928,244,1.618,267,3.664,288,1.321,324,1.194,338,2.631,339,2.545,340,2.631,341,2.631,342,2.631,343,2.631,344,2.245,345,2.631,346,2.631,347,2.631,348,2.503,349,2.631,350,2.587,351,2.631,352,2.631,353,2.631,354,1.639,355,2.631,651,3.321,655,3.482,660,6.061,667,3.57,669,4.46,675,5.893,687,5.893,725,6.568,726,4.851,727,8.206,728,6.061,729,6.103,730,3.766,731,7.375,732,4.578,733,9.376,734,6.568,735,7.303,736,7.303,737,5.448,738,6.568,739,5.448,740,6.568,741,3.248,742,6.568,743,5.448,744,4.276,745,6.568,746,6.568,747,6.568,748,5.893,749,6.568,750,4.129,751,6.568,752,6.568,753,6.568,754,6.568,755,8.206,756,6.568,757,3.876,758,6.568,759,6.568,760,6.568]],["title/interfaces/AppState.html",[594,1.407,761,1.974]],["body/interfaces/AppState.html",[3,0.027,4,0.027,5,0.032,12,2.847,15,3.646,25,5.401,32,0.191,34,0.199,35,0.421,45,0.005,51,0.128,52,0.465,60,0.055,69,2.888,137,1.801,161,0.002,162,0.003,163,0.002,185,1.379,204,2.031,245,4.04,366,2.807,390,2.93,413,2.619,429,2.449,470,1.979,594,1.979,732,4.997,741,4.429,761,2.047,762,2.825,763,5.198,764,5.45,765,5.805,766,5.63,767,7.108,768,7.108,769,7.108,770,7.108,771,7.108,772,7.108,773,8.569,774,7.108,775,7.108,776,7.108,777,7.108,778,7.108,779,5.198,780,4.967,781,4.049,782,4.663,783,7.046,784,5.198,785,7.046,786,7.046,787,2.69,788,2.755,789,7.046,790,5.198,791,5.845,792,5.198,793,5.845,794,5.198,795,5.198,796,5.198,797,7.046,798,4.663,799,7.046,800,5.198,801,7.046,802,5.198,803,5.198,804,7.046,805,5.198,806,7.046,807,5.198,808,7.046,809,5.198,810,7.046,811,5.198,812,7.046,813,5.198,814,7.046,815,5.198,816,5.198,817,5.198,818,4.287,819,5.198,820,5.198,821,5.198,822,5.845,823,5.198,824,5.198,825,5.198,826,5.845,827,5.198,828,5.198,829,4.663,830,5.845,831,5.198,832,5.198,833,5.198,834,5.845,835,5.198,836,5.198,837,5.845,838,5.198,839,5.198,840,5.845,841,5.198,842,7.046,843,5.198,844,5.198,845,5.845,846,5.198,847,7.046,848,5.198,849,5.488,850,5.198,851,5.198,852,4.663,853,4.663,854,5.198,855,7.046,856,4.663,857,4.663,858,5.198]],["title/classes/ApplyFilter.html",[0,0.276,859,2.958]],["body/classes/ApplyFilter.html",[0,0.466,2,0.819,3,0.036,4,0.036,5,0.042,8,1.011,32,0.197,33,0.912,34,0.264,35,0.504,36,0.936,37,1.539,38,1.184,39,0.295,40,1.784,42,0.27,44,0.464,45,0.005,46,0.455,47,0.464,49,0.74,50,0.645,51,0.11,52,0.615,60,0.059,61,0.952,64,1.905,65,2.609,98,1.516,112,1.154,113,1.154,114,1.078,161,0.003,162,0.004,163,0.003,172,2.01,189,1.383,435,2.309,484,2.401,732,4.71,859,5.623,860,5.355,861,8.442,862,6.875,863,7.574,864,4.649,865,4.476,866,5.137,867,4.322,868,5.355,869,3.942,870,5.703,871,6.168,872,4.322,873,5.951,874,6.168,875,6.168,876,5.703]],["title/injectables/ArchiveEffects.html",[840,4.157,877,1.389]],["body/injectables/ArchiveEffects.html",[0,0.305,3,0.029,4,0.029,5,0.034,8,0.875,10,1.955,11,1.88,17,2.14,28,1.835,32,0.157,34,0.212,35,0.439,39,0.237,42,0.244,44,0.373,45,0.005,46,0.365,47,0.373,49,0.79,50,0.689,51,0.121,52,0.494,60,0.034,88,2.489,109,2.301,112,0.756,113,0.756,114,0.706,120,3.248,127,4.019,137,2.118,146,1.201,161,0.003,162,0.003,163,0.003,189,1.112,204,2.083,208,2.061,247,4.082,254,3.58,275,2.177,303,1.93,324,1.005,366,2.301,435,1.856,463,1.261,488,1.661,489,1.708,490,1.684,565,1.947,593,1.552,594,1.552,595,1.594,608,1.552,627,4.364,840,6.091,877,2.035,878,2.421,879,5.527,880,8.245,881,8.245,882,5.719,883,5.527,884,6.488,885,7.343,886,5.719,887,4.866,888,6.091,889,7.343,890,7.343,891,7.343,892,7.343,893,7.343,894,6.193,895,5.586,896,7.882,897,3.991,898,5.527,899,7.343,900,7.343,901,7.343,902,5.11,903,7.343,904,7.343,905,7.343,906,7.343,907,6.588,908,5.527,909,3.004,910,2.86,911,4.305,912,2.421,913,2.619,914,4.082,915,1.947,916,3.598,917,3.363,918,3.262,919,4.585,920,5.527,921,4.959,922,3.474,923,3.363,924,5.527]],["title/components/ArchiveFiltersComponent.html",[288,1.008,365,1.713]],["body/components/ArchiveFiltersComponent.html",[0,0.223,3,0.021,4,0.021,5,0.025,17,2.152,28,1.92,32,0.172,33,0.59,34,0.155,35,0.353,39,0.174,42,0.272,44,0.273,45,0.005,46,0.507,47,0.273,49,0.436,50,0.654,51,0.112,52,0.362,60,0.047,61,0.56,64,1.121,100,0.599,104,3.021,121,1.136,128,1.092,132,1.151,137,1.919,161,0.004,162,0.003,163,0.002,172,1.183,182,2.257,185,0.909,189,1.542,204,2.137,205,2,208,1.475,223,1.323,254,2.842,274,1.199,275,2.273,288,1.403,289,1.383,290,1.96,291,1.425,292,1.739,293,1.447,294,1.447,296,2.574,297,1.363,298,3.595,299,2.688,301,2.113,303,1.063,305,1.382,306,2.923,321,1.365,322,2.012,324,0.736,326,2.387,327,2.461,328,2.094,356,1.25,357,2.113,358,3.098,359,1.304,360,2.744,361,1.447,362,1.447,363,1.383,364,1.447,365,2.622,366,3.001,367,2.113,368,1.383,369,2.113,370,1.383,371,1.447,372,1.363,373,1.447,374,1.383,375,1.447,376,2.744,377,1.383,378,1.447,379,1.343,380,2.113,381,1.383,382,1.363,383,1.343,384,1.425,385,1.447,386,1.383,387,2.081,388,1.447,389,1.404,390,1.323,391,2.113,392,1.383,393,1.447,394,2.744,395,1.343,396,1.447,397,1.383,398,1.383,399,1.447,400,1.363,401,1.447,402,1.383,403,1.383,404,1.447,405,1.363,406,1.447,407,1.383,408,1.447,409,1.404,410,1.383,411,1.447,412,1.383,413,1.183,414,1.447,415,1.383,416,2.081,417,1.383,418,2.495,419,1.447,420,1.383,421,1.447,422,1.383,423,1.447,424,1.363,425,1.383,426,2.788,427,1.383,428,1.383,429,2.23,430,1.383,431,1.447,432,1.383,433,1.383,434,1.383,435,1.493,436,1.363,437,1.363,438,1.447,439,1.363,440,1.447,441,1.363,442,1.425,443,1.447,565,1.425,593,1.136,594,1.136,595,1.167,602,1.958,605,2.144,608,1.136,627,1.878,637,4.163,648,5.974,680,2.046,887,2.387,902,4.433,907,3.63,925,6.586,926,7.75,927,3.63,928,6.975,929,5.299,930,6.975,931,6.975,932,4.244,933,6.258,934,4.917,935,7.669,936,5.19,937,5.906,938,4.045,939,4.045,940,4.278,941,4.045,942,5.906,943,4.045,944,4.045,945,4.045,946,4.045,947,3.356,948,5.528,949,4.045,950,3.356,951,4.045,952,4.045,953,5.299,954,5.299,955,2.461,956,5.299,957,3.63,958,5.299,959,3.63,960,5.299,961,3.63,962,5.299,963,3.63,964,5.299,965,4.045,966,4.045,967,2.852,968,4.045,969,1.806,970,4.045,971,4.045,972,4.045,973,5.906,974,4.045,975,4.045,976,4.045,977,4.045,978,3.356,979,3.63,980,3.63,981,3.63,982,4.045,983,4.045,984,4.045,985,4.045,986,4.045,987,5.906,988,4.045,989,4.045,990,4.045,991,4.045,992,4.045,993,4.045,994,4.045,995,4.045,996,4.045,997,5.906,998,3.63,999,6.258,1000,5.299,1001,3.63,1002,4.045,1003,4.045,1004,3.151,1005,4.045]],["title/components/ArchiveListComponent.html",[288,1.008,368,1.713]],["body/components/ArchiveListComponent.html",[0,0.28,3,0.026,4,0.036,5,0.043,17,1.847,32,0.169,33,0.692,34,0.194,36,0.875,39,0.218,42,0.251,44,0.342,45,0.005,46,0.561,47,0.342,51,0.113,52,0.453,60,0.031,64,1.405,91,1.482,121,1.423,128,1.368,132,1.443,137,2.065,161,0.002,162,0.003,163,0.002,171,2.906,175,2.873,176,3.272,185,1.066,274,1.503,275,2.514,288,1.587,289,1.733,290,2.299,291,1.786,292,2.179,293,1.813,294,1.813,296,2.912,297,1.707,298,3.64,299,3.152,301,2.478,305,1.621,306,3.232,321,1.171,322,1.998,324,0.922,338,2.031,339,1.964,340,2.031,341,2.031,342,2.031,343,2.031,344,1.733,345,2.031,346,2.031,347,2.031,348,1.932,349,2.031,350,1.997,351,2.031,352,2.031,353,2.031,354,1.265,355,2.031,356,1.566,357,2.478,358,2.44,359,1.634,360,3.034,361,1.813,362,1.813,363,1.733,364,1.813,365,1.733,366,3.071,367,2.478,368,2.899,369,2.478,370,1.733,371,1.813,372,1.707,373,1.813,374,1.733,375,1.813,376,3.034,377,1.733,378,1.813,379,1.682,380,2.478,381,1.733,382,1.707,383,1.682,384,1.786,385,1.813,386,1.733,387,2.44,388,1.813,389,1.759,390,1.658,391,2.478,392,1.733,393,1.813,394,3.034,395,1.682,396,1.813,397,1.733,398,1.733,399,1.813,400,1.707,401,1.813,402,1.733,403,1.733,404,1.813,405,1.707,406,1.813,407,1.733,408,1.813,409,1.759,410,1.733,411,1.813,412,1.733,413,1.482,414,1.813,415,1.733,416,2.44,417,1.733,418,2.823,419,1.813,420,1.733,421,1.813,422,1.733,423,1.813,424,1.707,425,1.733,426,1.733,427,1.733,428,1.733,429,1.894,430,1.733,431,1.813,432,1.733,433,1.733,434,1.733,435,1.281,436,1.707,437,1.707,438,1.813,439,1.707,440,1.813,441,1.707,442,1.786,443,1.813,488,2.372,489,1.566,490,1.545,504,1.566,507,3.392,531,3.392,565,1.786,593,1.423,594,1.423,595,1.462,608,1.423,640,4.215,641,4.088,642,3.948,732,3.864,912,2.22,915,1.786,925,6.259,1006,7.365,1007,4.548,1008,7.08,1009,6.215,1010,6.215,1011,5.069,1012,5.069,1013,2.828,1014,4.548,1015,4.548,1016,3.948,1017,5.395,1018,3.948,1019,3.948,1020,4.205]],["title/components/ArchiveListPageComponent.html",[288,1.008,370,1.713]],["body/components/ArchiveListPageComponent.html",[0,0.257,3,0.024,4,0.034,5,0.04,17,2.147,32,0.17,33,0.653,34,0.179,35,0.391,36,0.517,39,0.2,42,0.264,44,0.441,45,0.005,46,0.57,47,0.441,51,0.112,52,0.417,60,0.029,64,1.293,91,1.365,121,1.311,127,2.666,128,1.259,132,1.328,137,2.013,161,0.002,162,0.003,163,0.002,176,1.935,185,1.007,274,1.384,275,3.062,288,1.519,289,1.595,290,2.171,291,1.644,292,2.006,293,1.67,294,1.67,296,2.788,297,1.572,298,3.625,299,2.977,301,2.34,305,1.531,306,3.12,321,1.512,322,2.361,324,0.849,338,1.87,339,1.808,340,1.87,341,1.87,342,1.87,343,1.87,344,1.595,345,1.87,346,1.87,347,1.87,348,1.779,349,1.87,350,1.838,351,1.87,352,1.87,353,1.87,354,1.165,355,1.87,356,1.442,357,2.34,358,2.305,359,1.505,360,2.928,361,1.67,362,1.67,363,1.595,364,1.67,365,1.595,366,3.021,367,2.34,368,1.595,369,2.34,370,2.798,371,1.67,372,1.572,373,1.67,374,1.595,375,1.67,376,2.928,377,1.595,378,1.67,379,1.549,380,2.34,381,1.595,382,1.572,383,1.549,384,1.644,385,1.67,386,1.595,387,2.305,388,1.67,389,1.62,390,1.527,391,2.34,392,1.595,393,1.67,394,2.928,395,1.549,396,1.67,397,1.595,398,1.595,399,1.67,400,1.572,401,1.67,402,1.595,403,1.595,404,1.67,405,1.572,406,1.67,407,1.595,408,1.67,409,1.62,410,1.595,411,1.67,412,1.595,413,1.365,414,1.67,415,1.595,416,2.305,417,1.595,418,2.702,419,1.67,420,1.595,421,1.67,422,1.595,423,1.67,424,1.572,425,1.595,426,1.595,427,1.595,428,1.595,429,1.789,430,1.595,431,1.67,432,1.595,433,1.595,434,1.595,435,1.18,436,1.572,437,1.572,438,1.67,439,1.572,440,1.67,441,1.572,442,1.644,443,1.67,504,1.442,565,1.644,593,1.311,594,1.311,595,1.346,602,2.258,608,1.311,627,2.167,912,2.044,915,1.644,918,2.754,919,3.871,925,6.467,932,4.596,934,6.076,978,3.871,979,4.187,980,4.187,981,4.187,1006,7.61,1013,2.604,1015,4.187,1021,8.231,1022,4.667,1023,7.553,1024,6.542,1025,7.553,1026,6.542,1027,6.542,1028,4.667,1029,6.542,1030,4.667,1031,6.542,1032,4.667,1033,4.667,1034,4.667,1035,3.447,1036,4.667,1037,3.871,1038,4.667,1039,3.29,1040,4.667,1041,4.667,1042,2.167,1043,6.298,1044,6.542,1045,6.542,1046,6.542,1047,6.542,1048,6.542]],["title/classes/ArchiveQuerySuccess.html",[0,0.276,917,3.049]],["body/classes/ArchiveQuerySuccess.html",[0,0.526,2,0.691,3,0.03,4,0.03,5,0.036,8,1.044,10,2.018,32,0.196,33,0.969,34,0.223,35,0.453,36,0.84,37,1.677,38,1.223,39,0.249,40,1.505,42,0.249,44,0.391,45,0.005,46,0.383,47,0.391,49,0.624,50,0.544,51,0.101,52,0.519,60,0.061,61,0.803,98,1.711,100,0.588,112,1.327,113,1.327,114,1.24,127,3.648,146,1.154,161,0.004,162,0.004,163,0.003,185,1.167,189,1.524,254,2.364,282,1.925,354,1.447,366,2.986,435,1.466,460,3.922,463,1.926,464,1.505,465,1.466,466,1.651,467,1.651,484,2.219,488,1.743,489,1.792,490,1.767,504,1.792,506,2.21,535,2.323,581,3.325,887,4.982,902,3.152,916,3.775,917,5.447,918,4.982,922,3.646,923,5.137,1049,3.775,1050,7.579,1051,5.8,1052,5.343,1053,5.307,1054,3.775,1055,5.137,1056,4.088,1057,4.088,1058,4.088,1059,3.921,1060,4.088,1061,4.088,1062,3.921]],["title/interfaces/ArchiveState.html",[761,1.974,767,4.157]],["body/interfaces/ArchiveState.html",[3,0.038,4,0.038,5,0.045,28,1.82,32,0.185,34,0.278,35,0.521,45,0.005,51,0.112,60,0.054,100,0.948,127,3.953,161,0.003,162,0.004,163,0.003,172,2.733,189,1.951,204,1.718,209,2.633,223,2.37,488,2.178,489,2.239,490,2.208,535,3.975,633,6.238,761,2.854,762,3.938,767,7.754,865,4.717,902,5.393,922,4.554,1059,6.71,1063,7.245,1064,7.245,1065,7.245,1066,7.245,1067,7.245,1068,2.854]],["title/components/ArchivesComponent.html",[288,1.008,372,1.688]],["body/components/ArchivesComponent.html",[0,0.291,3,0.027,4,0.037,5,0.044,17,2.107,32,0.171,33,0.711,34,0.203,35,0.426,36,0.585,39,0.227,42,0.255,44,0.356,45,0.005,46,0.57,47,0.356,51,0.114,52,0.472,60,0.032,64,1.463,91,1.544,121,1.482,128,1.425,132,1.503,137,2.09,161,0.002,162,0.003,163,0.002,185,1.096,189,1.062,274,1.565,275,2.111,288,1.62,289,1.805,290,2.363,291,1.86,292,2.27,293,1.889,294,1.889,296,2.974,297,1.778,298,3.647,299,3.241,301,2.547,305,1.666,306,3.287,321,1.22,322,1.523,324,0.96,338,2.115,339,2.045,340,2.115,341,2.115,342,2.115,343,2.115,344,1.805,345,2.115,346,2.115,347,2.115,348,2.012,349,2.115,350,2.079,351,2.115,352,2.115,353,2.115,354,1.317,355,2.115,356,1.631,357,2.547,358,2.509,359,1.702,360,3.085,361,1.889,362,1.889,363,1.805,364,1.889,365,1.805,366,2.525,367,2.547,368,1.805,369,2.547,370,1.805,371,1.889,372,2.905,373,1.889,374,1.805,375,1.889,376,3.085,377,1.805,378,1.889,379,1.752,380,2.547,381,1.805,382,1.778,383,1.752,384,1.86,385,1.889,386,1.805,387,2.509,388,1.889,389,1.832,390,1.727,391,2.547,392,1.805,393,1.889,394,3.085,395,1.752,396,1.889,397,1.805,398,1.805,399,1.889,400,1.778,401,1.889,402,1.805,403,1.805,404,1.889,405,1.778,406,1.889,407,1.805,408,1.889,409,1.832,410,1.805,411,1.889,412,1.805,413,1.544,414,1.889,415,1.805,416,2.509,417,1.805,418,2.882,419,1.889,420,1.805,421,1.889,422,1.805,423,1.889,424,1.778,425,1.805,426,1.805,427,1.805,428,1.805,429,1.947,430,1.805,431,1.889,432,1.805,433,1.805,434,1.805,435,1.334,436,1.778,437,1.778,438,1.889,439,1.778,440,1.889,441,1.778,442,1.86,443,1.889,488,1.587,489,1.631,490,1.609,504,1.631,507,3.464,531,3.464,565,1.86,593,1.482,594,1.482,595,1.523,608,1.482,737,5.906,912,2.312,915,1.86,921,4.737,1013,2.945,1014,4.737,1037,4.379,1039,3.722,1069,5.279,1070,8.057,1071,7.12,1072,7.12,1073,5.279,1074,5.279,1075,5.279,1076,4.379,1077,5.279,1078,4.737,1079,5.279]],["title/modules/ArchivesModule.html",[649,2.195,1080,3.904]],["body/modules/ArchivesModule.html",[0,0.337,3,0.032,4,0.041,5,0.048,36,0.678,45,0.005,51,0.124,60,0.038,76,2.629,91,1.788,128,1.65,161,0.003,162,0.004,163,0.003,275,2.325,324,1.112,326,3.609,327,3.721,328,4.059,338,2.45,339,2.369,340,2.45,341,2.45,342,2.45,343,2.45,344,2.091,345,2.45,346,2.45,347,2.45,348,2.331,349,2.45,350,2.409,351,2.45,352,2.45,353,2.45,354,1.526,355,2.45,356,1.89,365,3.304,368,3.304,370,3.304,372,3.255,392,3.304,415,3.304,649,2.679,651,3.093,652,3.507,653,5.269,654,3.609,655,3.242,664,4.629,665,3.721,667,4.263,669,4.263,674,4.931,677,3.609,678,6.11,679,6.11,680,3.093,682,6.11,684,4.311,689,5.793,690,3.165,691,3.165,737,5.073,926,5.073,1006,6.507,1021,5.487,1080,8.194,1081,5.487,1082,5.487,1083,5.487,1084,7.138,1085,6.813,1086,6.116,1087,9.446,1088,6.116,1089,5.487,1090,5.487,1091,6.116,1092,5.487,1093,5.487,1094,7.038,1095,5.487,1096,5.487,1097,5.487]],["title/modules/ArchivesRoutingModule.html",[649,2.195,1084,3.702]],["body/modules/ArchivesRoutingModule.html",[0,0.374,3,0.035,4,0.043,5,0.051,36,0.752,45,0.005,51,0.119,60,0.042,91,1.984,128,1.831,161,0.003,162,0.004,163,0.003,204,1.609,288,1.907,324,1.234,338,2.718,339,2.629,340,2.718,341,2.718,342,2.718,343,2.718,344,2.32,345,2.718,346,2.718,347,2.718,348,2.586,349,2.718,350,2.673,351,2.718,352,2.718,353,2.718,354,1.693,355,2.718,372,2.821,379,3.015,395,2.78,540,3.192,651,3.431,655,3.597,667,3.688,669,4.552,726,5.012,728,6.185,729,5.913,730,3.891,731,7.329,735,5.286,736,6.523,743,5.629,1084,6.185,1089,6.088,1098,6.786,1099,6.088,1100,6.088,1101,5.286,1102,5.629,1103,6.088,1104,8.149,1105,6.088,1106,6.088,1107,6.088,1108,6.088,1109,5.286]],["title/classes/AuthObject.html",[0,0.276,1110,3.533]],["body/classes/AuthObject.html",[0,0.432,1,1.049,2,0.285,3,0.012,4,0.012,5,0.015,7,1.012,8,0.254,9,2.32,12,2.77,13,1.789,17,1.77,23,2.037,24,0.819,27,1.012,28,1.888,32,0.149,33,0.393,34,0.092,35,0.235,36,1.091,37,0.662,39,0.248,41,3.79,42,0.189,44,0.265,45,0.005,46,0.33,47,0.337,49,0.258,51,0.108,52,0.214,53,3.122,54,1.09,55,1.451,58,1.789,60,0.048,61,0.332,63,1.112,67,1.789,69,1.267,74,2.189,82,3.185,83,1.825,85,1.112,87,1.112,90,3.089,91,2.006,93,1.825,94,1.902,95,1.825,99,3.636,100,0.998,101,4.196,102,4.249,103,3.711,104,2.278,117,1.185,119,2.859,120,2.98,125,2.632,128,1.349,137,1.816,146,0.683,161,0.001,162,0.002,163,0.001,172,2.212,184,1.24,189,0.482,204,2.257,208,2.099,209,2.101,212,1.845,214,1.344,223,1.635,234,1.012,254,1.602,282,2.741,303,2.42,322,2.58,324,0.436,354,1.443,383,0.795,429,1.746,435,0.606,453,0.871,470,0.673,501,0.884,504,0.74,520,0.832,561,4.076,568,3.562,573,1.135,593,0.673,594,0.673,595,0.691,602,1.159,605,1.27,607,4.607,608,1.403,619,2.771,627,1.825,640,2.392,673,1.27,715,2.559,716,2.559,744,1.56,757,3.413,761,0.944,787,1.24,788,1.27,877,1.089,912,1.722,913,1.135,915,0.844,969,2.231,1013,1.337,1042,1.825,1043,2.771,1068,0.944,1110,4.501,1111,1.689,1112,5.067,1113,4.715,1114,4.715,1115,2.396,1116,2.396,1117,2.396,1118,2.396,1119,2.396,1120,2.396,1121,3.316,1122,1.689,1123,1.62,1124,1.56,1125,3.635,1126,1.62,1127,1.77,1128,5.943,1129,1.689,1130,1.24,1131,1.337,1132,4.271,1133,2.903,1134,2.903,1135,2.903,1136,4.076,1137,2.903,1138,1.77,1139,1.77,1140,1.77,1141,1.77,1142,1.414,1143,1.689,1144,2.903,1145,1.689,1146,1.77,1147,1.77,1148,3.691,1149,1.77,1150,1.77,1151,1.77,1152,1.77,1153,1.77,1154,1.77,1155,1.77,1156,1.77,1157,1.77,1158,1.77,1159,4.076,1160,1.77,1161,4.076,1162,1.77,1163,1.689,1164,1.77,1165,1.77,1166,1.77,1167,1.77,1168,1.77,1169,3.691,1170,1.77,1171,1.77,1172,1.77,1173,1.77,1174,5.351,1175,5.587,1176,2.903,1177,4.715,1178,1.77,1179,3.691,1180,1.77,1181,2.903,1182,1.77,1183,4.271,1184,2.903,1185,1.77,1186,1.77,1187,1.77,1188,1.77,1189,1.77,1190,1.77,1191,2.903,1192,1.77,1193,2.903,1194,2.903,1195,1.77,1196,1.77,1197,2.771,1198,1.77,1199,2.903,1200,1.77,1201,1.77,1202,1.689,1203,2.559,1204,1.77,1205,2.771,1206,1.62,1207,1.77,1208,1.77,1209,1.77,1210,2.903,1211,1.77,1212,3.691,1213,1.77,1214,5.333,1215,3.691,1216,3.691,1217,3.691,1218,3.691,1219,3.691,1220,3.523,1221,1.77,1222,1.77,1223,1.77,1224,1.77,1225,2.903,1226,2.771,1227,2.903,1228,1.689,1229,2.716,1230,2.903,1231,2.903,1232,2.136,1233,1.77,1234,2.903,1235,2.254,1236,2.903,1237,1.77,1238,2.903,1239,1.77,1240,2.771,1241,1.77,1242,2.903,1243,1.77,1244,1.77,1245,2.903,1246,2.903,1247,1.77,1248,1.77,1249,1.77,1250,1.77,1251,1.77,1252,1.77,1253,1.77,1254,1.77,1255,2.903,1256,1.77,1257,1.77,1258,1.77,1259,1.77,1260,1.77,1261,1.77,1262,1.77,1263,1.012,1264,1.77,1265,1.77,1266,1.77,1267,1.77,1268,1.77,1269,1.77,1270,1.77,1271,2.559,1272,4.715,1273,4.271,1274,1.77,1275,1.77,1276,4.076,1277,3.523,1278,1.77,1279,1.689,1280,1.77,1281,1.77,1282,2.949,1283,1.77,1284,2.903,1285,1.77,1286,2.903,1287,1.77,1288,1.62,1289,1.77,1290,1.77,1291,1.77,1292,1.77,1293,1.77,1294,1.77,1295,1.62,1296,1.77,1297,2.471,1298,1.77,1299,1.77,1300,1.77,1301,1.77,1302,1.77,1303,1.77,1304,1.77,1305,1.77,1306,1.77,1307,1.77,1308,1.77,1309,1.77,1310,1.77,1311,1.77,1312,2.903,1313,1.77,1314,1.77,1315,3.691,1316,2.903,1317,1.77,1318,1.77,1319,2.903,1320,2.903,1321,1.77,1322,1.77,1323,1.77,1324,1.77,1325,1.77,1326,1.77,1327,1.77,1328,4.271,1329,2.903,1330,1.689,1331,1.77,1332,1.77,1333,1.77,1334,1.62,1335,1.77,1336,1.77,1337,1.77,1338,1.77,1339,1.77,1340,2.771,1341,1.77,1342,1.77,1343,1.77,1344,2.903,1345,2.903,1346,1.77,1347,1.77,1348,1.77,1349,1.77,1350,1.77,1351,1.77,1352,1.77,1353,1.77,1354,1.77,1355,1.77,1356,1.77,1357,1.506,1358,1.77,1359,1.77,1360,1.77,1361,2.903,1362,1.77,1363,1.77,1364,1.77,1365,1.77,1366,1.77,1367,1.77,1368,1.77,1369,1.77,1370,1.77,1371,1.77,1372,1.689,1373,1.77,1374,1.77,1375,1.77,1376,1.77,1377,1.77,1378,1.77,1379,1.77,1380,1.77,1381,1.77,1382,1.77,1383,1.77,1384,1.77,1385,1.77,1386,1.302,1387,1.988,1388,3.691,1389,2.254,1390,1.77,1391,1.77,1392,1.77,1393,1.77,1394,1.27,1395,1.77,1396,1.77,1397,1.77,1398,4.271,1399,1.77,1400,4.076,1401,1.77,1402,1.77,1403,1.77,1404,3.379,1405,1.689,1406,1.77,1407,1.689,1408,1.77,1409,2.903,1410,2.771,1411,1.789,1412,1.77,1413,1.689,1414,1.77,1415,3.691,1416,1.689,1417,1.77,1418,2.903,1419,1.77,1420,1.56,1421,1.77,1422,1.77,1423,1.77,1424,1.77,1425,1.77,1426,1.77,1427,1.77,1428,1.77,1429,1.77,1430,1.77,1431,1.77,1432,1.77]],["title/interfaces/AuthState.html",[761,1.974,768,4.157]],["body/interfaces/AuthState.html",[3,0.035,4,0.035,5,0.042,28,1.417,32,0.195,34,0.26,35,0.5,45,0.005,51,0.1,53,4.434,54,3.088,55,3.779,56,3.088,60,0.051,91,2.849,99,4.523,100,1.065,101,4.523,102,4.349,103,4.616,104,3.578,161,0.003,162,0.004,163,0.003,172,2.656,204,1.609,209,3.654,223,2.22,761,2.673,762,3.688,768,7.534,1433,6.786,1434,7.589,1435,9.743,1436,7.589,1437,6.786,1438,6.786]],["title/injectables/AuthenticationEffects.html",[15,2.594,877,1.389]],["body/injectables/AuthenticationEffects.html",[0,0.135,1,2.831,3,0.013,4,0.013,5,0.015,7,1.691,8,1.008,11,1.502,12,3.053,13,3.474,14,1.86,15,2.073,17,2.309,19,3.619,20,3.187,22,2.177,23,2.39,28,2.061,32,0.177,34,0.094,35,0.239,37,1.286,39,0.105,42,0.246,44,0.493,45,0.005,46,0.505,47,0.342,49,0.822,50,0.687,51,0.111,52,0.219,55,2.998,56,1.116,60,0.015,62,1.269,65,1.238,66,2.568,67,2.669,69,2.785,71,2.124,72,2.568,75,2.9,77,4.206,78,2.568,80,2.568,82,2.722,83,2.358,88,1.98,91,2.028,92,2.177,100,0.515,102,3.626,104,1.578,109,2.174,112,0.548,113,0.548,114,0.512,116,2.177,120,3.276,123,2.521,125,3.863,126,2.073,127,2.827,129,2.177,131,2.124,135,2.177,137,1.779,141,3.187,145,2.177,146,0.694,148,3.187,150,3.187,152,3,153,2.177,160,4.578,161,0.002,162,0.002,163,0.001,170,0.905,182,3.271,188,1.138,189,1.737,191,1.138,204,1.926,208,2.11,236,3.362,244,0.987,247,4.326,254,1.633,267,2.235,303,1.923,305,0.938,321,1.174,322,0.707,324,0.446,452,2.76,453,2.131,465,0.62,496,2.267,540,1.527,565,0.864,568,4.259,573,3.286,578,3.121,593,0.689,594,0.689,595,0.707,599,1.91,601,2.034,602,1.187,607,3.606,608,0.689,638,3.121,730,1.406,732,2.235,757,2.364,765,5.335,787,1.269,788,1.3,877,1.11,878,1.074,882,4.969,884,4.331,886,3.121,888,3.323,897,3.977,909,1.333,910,1.269,911,1.91,912,2.224,913,3.062,914,1.811,915,0.864,932,2.438,1013,4.083,1035,1.811,1039,2.824,1068,0.966,1124,1.596,1142,1.447,1159,2.824,1202,2.824,1203,2.608,1206,4.69,1228,2.824,1263,3.223,1271,2.608,1276,2.824,1277,4.889,1340,1.729,1386,1.333,1387,2.568,1389,2.297,1405,4.134,1439,2.452,1440,5.079,1441,5.079,1442,4.006,1443,5.864,1444,4.567,1445,2.452,1446,4.006,1447,4.006,1448,4.006,1449,4.006,1450,2.709,1451,4.557,1452,3.965,1453,4.006,1454,4.006,1455,5.079,1456,2.452,1457,4.006,1458,4.006,1459,2.452,1460,4.006,1461,2.452,1462,4.006,1463,4.006,1464,2.452,1465,6.332,1466,6.936,1467,4.006,1468,5.403,1469,4.006,1470,4.006,1471,4.006,1472,4.377,1473,4.006,1474,4.006,1475,4.006,1476,4.006,1477,4.006,1478,4.006,1479,5.864,1480,5.864,1481,5.864,1482,5.864,1483,5.864,1484,6.936,1485,5.864,1486,6.07,1487,4.006,1488,4.006,1489,4.006,1490,4.006,1491,4.006,1492,4.006,1493,4.006,1494,4.37,1495,4.006,1496,4.006,1497,4.006,1498,3.594,1499,4.006,1500,4.006,1501,4.006,1502,4.006,1503,2.452,1504,4.006,1505,3.323,1506,2.959,1507,4.006,1508,5.261,1509,4.006,1510,3.121,1511,2.518,1512,4.006,1513,4.006,1514,3.192,1515,6.936,1516,4.006,1517,2.452,1518,4.006,1519,4.006,1520,4.006,1521,5.079,1522,4.006,1523,4.006,1524,4.006,1525,4.006,1526,4.006,1527,4.006,1528,4.006,1529,2.452,1530,4.006,1531,5.261,1532,2.452,1533,2.608,1534,4.006,1535,4.006,1536,4.006,1537,6.463,1538,2.452,1539,4.006,1540,4.006,1541,4.006,1542,5.079,1543,4.006,1544,4.006,1545,2.518,1546,4.006,1547,4.006,1548,2.452,1549,4.006,1550,2.438,1551,1.658,1552,2.452,1553,1.811,1554,1.658,1555,1.541,1556,1.811,1557,2.452,1558,6.463,1559,2.452,1560,2.452,1561,2.452,1562,2.452,1563,2.452,1564,1.91,1565,2.452,1566,2.452,1567,2.452,1568,2.452,1569,2.452,1570,2.452,1571,4.006,1572,2.452,1573,2.452,1574,2.452,1575,2.452,1576,2.452,1577,2.452,1578,2.452,1579,2.452]],["title/interfaces/AuthenticationModeHandler.html",[761,1.974,1161,3.533]],["body/interfaces/AuthenticationModeHandler.html",[0,0.42,1,1.065,3,0.013,4,0.013,5,0.015,8,0.258,9,1.847,12,2.739,13,1.811,17,1.781,23,2.058,24,1.36,27,1.027,28,1.894,32,0.123,33,0.397,34,0.093,36,1.058,37,0.67,39,0.217,41,3.811,42,0.172,44,0.268,45,0.005,46,0.334,47,0.164,49,0.262,51,0.109,52,0.217,53,2.298,54,1.107,55,1.469,58,1.811,60,0.048,61,0.337,63,1.129,67,1.811,69,1.283,74,1.743,82,3.207,83,1.847,85,1.129,87,1.129,90,3.114,91,2.02,93,1.847,94,1.177,95,1.847,99,2.987,100,0.982,101,4,102,4.26,103,3.731,104,2.298,117,1.203,119,2.885,120,2.872,125,2.298,128,1.363,137,1.825,146,0.69,161,0.001,162,0.002,163,0.001,172,2.303,189,0.489,204,2.262,208,2.103,209,2.12,212,1.864,214,1.36,223,1.652,234,1.027,254,1.622,282,2.526,303,2.427,305,0.931,321,1.348,322,2.685,324,0.442,354,1.456,383,0.807,429,1.759,435,0.615,453,0.884,470,0.683,501,0.898,504,0.752,520,0.844,561,4.536,568,3.59,573,1.152,593,0.683,594,0.683,595,0.702,602,1.177,605,1.289,607,4.629,608,1.418,619,2.805,627,1.847,640,2.421,673,1.289,715,2.59,716,2.59,744,1.583,757,3.443,761,0.958,762,1.322,787,1.259,788,1.289,877,1.103,912,1.743,913,1.152,915,0.857,969,2.254,1013,1.357,1042,1.847,1043,2.805,1068,0.958,1110,4.113,1111,1.714,1112,4.753,1113,2.939,1114,1.796,1121,3.345,1122,1.714,1123,1.644,1124,1.583,1125,3.668,1126,1.644,1127,1.796,1128,5.969,1129,1.714,1130,1.259,1131,1.357,1132,4.309,1133,2.939,1134,2.939,1135,2.939,1136,4.113,1137,2.939,1138,1.796,1139,1.796,1140,1.796,1141,1.796,1142,1.435,1143,1.714,1144,2.939,1145,1.714,1146,1.796,1147,1.796,1148,3.729,1149,1.796,1150,1.796,1151,1.796,1152,1.796,1153,1.796,1154,1.796,1155,1.796,1156,1.796,1157,1.796,1158,1.796,1159,4.113,1160,1.796,1161,4.536,1162,1.796,1163,1.714,1164,1.796,1165,1.796,1166,1.796,1167,1.796,1168,1.796,1169,3.729,1170,1.796,1171,1.796,1172,1.796,1173,1.796,1174,5.386,1175,5.62,1176,2.939,1177,4.753,1178,1.796,1179,3.729,1180,1.796,1181,2.939,1182,1.796,1183,4.309,1184,2.939,1185,1.796,1186,1.796,1187,1.796,1188,1.796,1189,1.796,1190,1.796,1191,2.939,1192,1.796,1193,2.939,1194,2.939,1195,1.796,1196,1.796,1197,2.805,1198,1.796,1199,2.939,1200,1.796,1201,1.796,1202,1.714,1203,2.59,1204,1.796,1205,2.805,1206,1.644,1207,1.796,1208,1.796,1209,1.796,1210,2.939,1211,1.796,1212,3.729,1213,1.796,1214,5.364,1215,3.729,1216,3.729,1217,3.729,1218,3.729,1219,3.729,1220,3.56,1221,1.796,1222,1.796,1223,1.796,1224,1.796,1225,2.939,1226,2.805,1227,2.939,1228,1.714,1229,2.745,1230,2.939,1231,2.939,1232,2.163,1233,1.796,1234,2.939,1235,2.281,1236,2.939,1237,1.796,1238,2.939,1239,1.796,1240,2.805,1241,1.796,1242,2.939,1243,1.796,1244,1.796,1245,2.939,1246,2.939,1247,1.796,1248,1.796,1249,1.796,1250,1.796,1251,1.796,1252,1.796,1253,1.796,1254,1.796,1255,2.939,1256,1.796,1257,1.796,1258,1.796,1259,1.796,1260,1.796,1261,1.796,1262,1.796,1263,1.027,1264,1.796,1265,1.796,1266,1.796,1267,1.796,1268,1.796,1269,1.796,1270,1.796,1271,2.59,1272,4.753,1273,5.386,1274,1.796,1275,1.796,1276,4.113,1277,3.56,1278,1.796,1279,1.714,1280,1.796,1281,1.796,1282,2.98,1283,1.796,1284,2.939,1285,1.796,1286,2.939,1287,1.796,1288,1.644,1289,1.796,1290,1.796,1291,1.796,1292,1.796,1293,1.796,1294,1.796,1295,1.644,1296,1.796,1297,2.501,1298,1.796,1299,1.796,1300,1.796,1301,1.796,1302,1.796,1303,1.796,1304,1.796,1305,1.796,1306,1.796,1307,1.796,1308,1.796,1309,1.796,1310,1.796,1311,1.796,1312,2.939,1313,1.796,1314,1.796,1315,3.729,1316,2.939,1317,1.796,1318,1.796,1319,2.939,1320,2.939,1321,1.796,1322,1.796,1323,1.796,1324,1.796,1325,1.796,1326,1.796,1327,1.796,1328,4.309,1329,2.939,1330,1.714,1331,1.796,1332,1.796,1333,1.796,1334,1.644,1335,1.796,1336,1.796,1337,1.796,1338,1.796,1339,1.796,1340,2.805,1341,1.796,1342,1.796,1343,1.796,1344,2.939,1345,2.939,1346,1.796,1347,1.796,1348,1.796,1349,1.796,1350,1.796,1351,1.796,1352,1.796,1353,1.796,1354,1.796,1355,1.796,1356,1.796,1357,1.529,1358,1.796,1359,1.796,1360,1.796,1361,2.939,1362,1.796,1363,1.796,1364,1.796,1365,1.796,1366,1.796,1367,1.796,1368,1.796,1369,1.796,1370,1.796,1371,1.796,1372,1.714,1373,1.796,1374,1.796,1375,1.796,1376,1.796,1377,1.796,1378,1.796,1379,1.796,1380,1.796,1381,1.796,1382,1.796,1383,1.796,1384,1.796,1385,1.796,1386,1.322,1387,2.012,1388,3.729,1389,2.281,1390,1.796,1391,1.796,1392,1.796,1393,1.796,1394,1.289,1395,1.796,1396,1.796,1397,1.796,1398,4.753,1399,1.796,1400,5.141,1401,1.796,1402,1.796,1403,1.796,1404,3.414,1405,1.714,1406,1.796,1407,1.714,1408,1.796,1409,2.939,1410,2.805,1411,1.811,1412,1.796,1413,1.714,1414,1.796,1415,5.102,1416,1.714,1417,1.796,1418,2.939,1419,1.796,1420,1.583,1421,1.796,1422,1.796,1423,1.796,1424,1.796,1425,1.796,1426,1.796,1427,1.796,1428,1.796,1429,1.796,1430,1.796,1431,1.796,1432,1.796,1580,3.301,1581,2.432,1582,2.432,1583,2.432,1584,2.017,1585,2.432]],["title/components/BaseSettingComponent.html",[288,1.008,374,1.713]],["body/components/BaseSettingComponent.html",[0,0.222,3,0.021,4,0.021,5,0.025,28,1.23,32,0.18,33,0.588,34,0.155,35,0.352,36,0.772,39,0.173,42,0.294,44,0.549,45,0.005,46,0.596,47,0.549,49,0.634,50,0.798,51,0.113,52,0.361,60,0.025,64,1.117,100,0.776,114,0.515,121,1.132,128,2.066,132,1.147,137,1.916,143,2.191,161,0.002,162,0.003,163,0.002,172,2.036,175,2.443,176,3.175,185,0.907,189,0.811,204,0.956,208,1.472,209,1.465,234,1.702,242,1.951,274,1.195,275,1.746,288,1.54,289,1.378,290,1.955,291,1.42,293,1.442,294,1.442,296,2.569,297,1.358,298,3.595,301,2.107,303,2.414,305,1.379,306,2.918,321,2.081,322,2.35,324,0.733,344,2.38,356,1.246,357,2.107,358,2.075,359,1.3,360,2.739,361,1.442,362,1.442,363,1.378,364,1.442,365,1.378,366,2.182,367,2.107,368,1.378,369,2.107,370,1.378,371,1.442,372,1.358,373,1.442,374,2.617,375,3.143,376,2.739,377,1.378,378,1.442,379,1.338,380,2.107,381,1.378,382,1.358,383,1.338,384,1.42,385,1.442,386,1.378,387,2.075,388,1.442,389,1.399,390,1.319,391,2.107,392,1.378,393,1.442,394,2.739,395,1.338,396,1.442,397,1.378,398,1.378,399,1.442,400,1.358,401,1.442,402,1.378,403,1.378,404,1.442,405,1.358,406,1.442,407,1.378,408,1.442,409,1.399,410,1.378,411,1.442,412,1.378,413,1.179,414,1.442,415,1.378,416,2.075,417,1.378,418,2.49,419,1.442,420,1.378,421,1.442,422,1.378,423,1.442,424,1.358,425,1.378,426,1.378,427,1.378,428,1.378,429,1.611,430,1.378,431,1.442,432,1.378,433,1.378,434,1.378,435,1.489,436,1.358,437,1.358,438,1.442,439,1.358,440,1.442,441,1.358,442,1.42,443,1.442,565,1.42,593,1.132,594,1.132,595,1.163,602,1.951,605,2.137,627,1.872,680,2.039,741,2.913,915,1.42,932,2.453,940,4.271,1130,2.086,1142,2.379,1263,2.487,1282,3.477,1357,2.534,1394,3.123,1586,9.984,1587,7.374,1588,3.14,1589,4.108,1590,6.193,1591,4.589,1592,4.907,1593,4.235,1594,6.836,1595,4.907,1596,4.907,1597,4.153,1598,4.518,1599,5.397,1600,4.153,1601,4.907,1602,4.907,1603,4.907,1604,5.891,1605,4.032,1606,3.617,1607,3.617,1608,2.842,1609,4.032,1610,2.842,1611,4.032,1612,4.032,1613,4.153,1614,5.12,1615,4.032,1616,2.842,1617,4.032,1618,4.032,1619,4.032,1620,2.842,1621,4.032,1622,4.032,1623,4.032,1624,4.032,1625,3.617,1626,2.312,1627,3.344,1628,3.617,1629,3.617,1630,3.14,1631,4.589,1632,2.978,1633,2.842,1634,3.617,1635,2.842,1636,4.032,1637,4.032,1638,4.032,1639,3.617,1640,2.842,1641,4.032,1642,5.891,1643,4.032,1644,5.285,1645,4.032,1646,4.032,1647,4.032,1648,4.032,1649,4.589,1650,4.032,1651,3.14,1652,4.032,1653,3.14,1654,4.032,1655,4.032,1656,4.032,1657,4.032,1658,4.032,1659,4.032,1660,4.032,1661,3.14,1662,3.14,1663,4.032,1664,4.032,1665,4.032,1666,4.032,1667,4.032,1668,4.032,1669,4.032,1670,4.032,1671,4.032,1672,3.617,1673,4.032,1674,4.589]],["title/directives/CalcHeightDirective.html",[359,1.616,437,1.688]],["body/directives/CalcHeightDirective.html",[0,0.308,3,0.029,4,0.029,5,0.034,28,1.167,32,0.18,34,0.214,35,0.442,39,0.24,42,0.284,44,0.499,45,0.005,46,0.489,47,0.499,50,0.524,51,0.099,60,0.034,100,1.002,114,0.713,161,0.003,162,0.003,163,0.003,175,3.067,176,3.659,204,1.965,208,1.753,296,2.062,297,1.882,298,2.528,303,2.478,305,1.731,321,1.291,322,1.612,324,1.016,344,3.016,354,1.394,358,2.605,359,2.673,436,1.882,437,2.972,517,3.122,527,2.2,593,1.569,608,1.569,640,3.399,641,5.676,915,1.968,1017,4.351,1068,2.2,1508,5.012,1510,4.351,1675,9.765,1676,5.586,1677,8.289,1678,7.394,1679,9.618,1680,9.618,1681,9.177,1682,5.213,1683,6.456,1684,5.586,1685,7.916,1686,7.394,1687,7.394,1688,5.586,1689,5.586,1690,5.586,1691,5.586,1692,7.394,1693,5.586,1694,4.351,1695,5.012,1696,5.586,1697,5.586,1698,5.586,1699,5.586,1700,5.586,1701,5.586,1702,5.586,1703,5.012,1704,5.012,1705,5.586,1706,7.437,1707,7.394,1708,5.586,1709,5.012,1710,5.586,1711,5.586,1712,5.586,1713,5.012,1714,7.394,1715,5.586,1716,9.177,1717,5.586,1718,5.586,1719,5.586,1720,8.289,1721,5.586,1722,5.586,1723,5.586,1724,6.634,1725,5.586,1726,5.586,1727,5.012,1728,5.586,1729,5.586,1730,5.586,1731,6.634,1732,5.586,1733,5.586,1734,5.586,1735,7.394,1736,5.586,1737,5.586,1738,7.394,1739,8.289,1740,5.586,1741,5.586,1742,5.586,1743,7.394,1744,5.586,1745,5.586,1746,5.586,1747,5.586,1748,4.634,1749,7.394,1750,7.394,1751,5.586,1752,5.586,1753,5.586,1754,5.586,1755,5.586]],["title/classes/Card.html",[0,0.276,185,0.772]],["body/classes/Card.html",[0,0.436,2,0.737,3,0.032,4,0.032,5,0.038,11,2.23,32,0.118,38,1.313,39,0.374,42,0.183,44,0.417,45,0.005,46,0.409,47,0.417,51,0.095,60,0.054,61,0.857,100,1.078,112,1.08,113,1.08,114,1.009,161,0.003,162,0.004,163,0.003,170,3.683,184,5.163,185,1.217,186,4.748,188,2.873,205,4.306,214,2.977,282,3.411,292,2.66,489,1.912,490,1.886,501,3.214,563,6.204,644,4.362,1756,5.133,1757,5.552,1758,5.139,1759,6.139,1760,6.431,1761,6.431,1762,6.431,1763,6.415,1764,6.783,1765,6.783,1766,6.431,1767,6.431,1768,6.431,1769,6.188,1770,6.156,1771,7.223,1772,4.82,1773,4.028,1774,5.552,1775,5.133]],["title/components/CardComponent.html",[288,1.008,377,1.713]],["body/components/CardComponent.html",[0,0.194,3,0.018,4,0.028,5,0.033,8,0.892,28,1.113,32,0.179,33,0.532,34,0.135,35,0.319,36,0.898,39,0.151,42,0.289,44,0.433,45,0.005,46,0.535,47,0.433,49,0.772,50,0.603,51,0.114,52,0.315,60,0.022,64,0.977,67,1.604,88,1.997,91,1.031,100,0.972,104,1.388,109,1.105,112,0.482,113,0.482,114,0.45,121,0.99,128,0.951,132,1.003,137,1.951,161,0.002,162,0.002,163,0.002,172,1.559,175,2.211,176,2.666,182,2.974,185,1.432,186,1.824,189,0.709,204,1.825,208,1.941,212,1.301,216,2.144,223,2.345,241,2.08,274,1.906,275,1.58,282,2.134,288,1.293,289,1.205,290,1.769,291,1.242,292,1.515,293,1.261,294,1.261,296,2.373,297,1.187,298,3.564,299,2.426,301,1.907,303,2.33,305,1.248,306,2.731,309,6.975,321,1.943,322,2.068,324,0.641,325,1.17,338,1.412,339,1.365,340,1.412,341,1.412,342,1.412,343,1.412,344,2.768,345,1.412,346,1.412,347,1.412,348,1.343,349,1.412,350,1.388,351,1.412,352,1.412,353,1.412,354,0.879,355,1.412,356,1.089,357,1.907,358,1.878,359,1.136,360,2.564,361,1.261,362,1.261,363,1.205,364,1.261,365,1.205,366,2.015,367,1.907,368,1.205,369,1.907,370,1.205,371,1.261,372,1.187,373,1.261,374,1.205,375,1.261,376,2.564,377,2.45,378,1.261,379,1.17,380,1.907,381,1.205,382,1.187,383,1.17,384,1.242,385,1.261,386,1.205,387,1.878,388,1.261,389,1.223,390,1.153,391,1.907,392,1.205,393,1.261,394,2.564,395,1.17,396,1.261,397,1.205,398,1.205,399,1.261,400,1.187,401,1.261,402,1.205,403,1.205,404,1.261,405,1.187,406,1.261,407,1.205,408,1.261,409,1.223,410,1.205,411,1.261,412,1.205,413,1.031,414,1.261,415,1.205,416,1.878,417,1.205,418,2.3,419,1.261,420,1.205,421,1.261,422,1.205,423,1.261,424,1.187,425,1.205,426,1.205,427,1.205,428,1.205,429,2.105,430,1.205,431,1.261,432,1.205,433,1.205,434,1.205,435,0.891,436,1.187,437,1.187,438,1.261,439,1.187,440,1.261,441,1.187,442,1.242,443,1.261,446,1.916,488,2.796,489,1.089,490,1.074,504,2.215,506,1.343,540,1.343,559,5.008,563,2.383,593,0.99,594,0.99,595,1.017,596,2.603,602,1.705,605,1.868,608,0.99,616,4.152,627,1.636,637,2.485,690,1.824,691,1.824,730,2.021,757,2.08,764,3.243,765,5.09,915,1.242,934,4.532,936,4.23,955,2.144,969,1.573,1004,2.745,1386,1.916,1387,3.624,1389,3.056,1472,3.686,1589,3.794,1593,3.912,1594,4.347,1598,4.23,1633,2.485,1644,3.162,1766,2.603,1773,2.294,1776,3.524,1777,6.429,1778,5.331,1779,5.768,1780,5.768,1781,6.429,1782,6.429,1783,5.331,1784,7.167,1785,5.331,1786,7.167,1787,6.429,1788,3.351,1789,3.524,1790,3.587,1791,4.666,1792,5.331,1793,3.524,1794,3.524,1795,5.331,1796,3.524,1797,3.524,1798,5.331,1799,3.524,1800,3.524,1801,3.524,1802,3.524,1803,3.524,1804,3.524,1805,3.524,1806,3.524,1807,3.524,1808,3.524,1809,3.524,1810,3.524,1811,3.162,1812,3.524,1813,2.924,1814,3.162,1815,3.524,1816,3.162,1817,3.524,1818,4.783,1819,3.524,1820,2.745,1821,2.924,1822,2.745,1823,3.162,1824,3.524,1825,2.485,1826,2.383,1827,3.524,1828,3.524,1829,3.524,1830,6.429,1831,3.524,1832,3.524,1833,3.524,1834,3.524,1835,3.524,1836,3.162,1837,3.524,1838,3.524,1839,3.524,1840,3.524,1841,3.524,1842,3.524,1843,5.331,1844,3.524,1845,3.524,1846,3.524,1847,2.924,1848,3.524,1849,3.524,1850,3.162,1851,3.524,1852,3.162,1853,3.524,1854,3.524,1855,3.524,1856,3.524,1857,3.524,1858,3.524,1859,5.331,1860,5.331,1861,3.524,1862,3.937,1863,3.524,1864,3.524,1865,3.524,1866,3.524,1867,6.43,1868,3.524,1869,5.333,1870,3.524,1871,3.524,1872,3.524,1873,3.524,1874,3.524,1875,3.524,1876,3.524]],["title/components/CardDetailsComponent.html",[288,1.008,379,1.664]],["body/components/CardDetailsComponent.html",[0,0.265,3,0.025,4,0.025,5,0.03,11,1.711,32,0.172,33,0.667,34,0.185,35,0.399,39,0.206,42,0.267,44,0.324,45,0.005,46,0.548,47,0.324,51,0.115,52,0.43,60,0.03,64,1.333,121,1.351,132,1.369,137,2.032,146,0.658,161,0.002,162,0.003,163,0.002,185,1.543,186,3.972,187,1.96,192,2.124,204,1.584,209,1.748,212,1.775,215,2.147,274,1.426,275,1.981,288,1.544,289,1.644,290,2.218,291,1.695,293,1.721,294,1.721,296,2.833,297,1.62,298,3.63,301,2.39,303,1.756,305,1.564,306,3.161,321,1.544,322,1.927,324,0.875,356,1.486,357,2.39,358,2.354,359,1.551,360,2.967,361,1.721,362,1.721,363,1.644,364,1.721,365,1.644,366,2.406,367,2.39,368,1.644,369,2.39,370,1.644,371,1.721,372,1.62,373,1.721,374,1.644,375,1.721,376,2.967,377,1.644,378,1.721,379,2.753,380,2.39,381,1.644,382,1.62,383,1.597,384,1.695,385,1.721,386,1.644,387,2.354,388,1.721,389,1.669,390,1.573,391,2.39,392,1.644,393,1.721,394,2.967,395,1.597,396,1.721,397,1.644,398,1.644,399,1.721,400,1.62,401,1.721,402,1.644,403,1.644,404,1.721,405,1.62,406,1.721,407,1.644,408,1.721,409,1.669,410,1.644,411,1.721,412,1.644,413,1.407,414,1.721,415,1.644,416,2.354,417,1.644,418,2.746,419,1.721,420,1.644,421,1.721,422,1.644,423,1.721,424,1.62,425,1.644,426,1.644,427,1.644,428,1.644,429,1.827,430,1.644,431,1.721,432,1.644,433,1.644,434,1.644,435,1.216,436,1.62,437,1.62,438,1.721,439,1.62,440,1.721,441,1.62,442,1.695,443,1.721,505,2.872,540,1.833,559,5.979,565,1.695,594,1.351,595,1.388,596,3.552,608,1.351,616,5.204,627,2.233,730,2.758,765,5.815,1101,7.206,1533,3.131,1555,3.024,1640,3.391,1768,6.436,1813,3.99,1816,4.316,1820,3.747,1821,3.99,1822,3.747,1823,4.316,1847,3.99,1877,9.251,1878,4.81,1879,5.994,1880,8.294,1881,5.161,1882,6.681,1883,4.81,1884,4.81,1885,4.81,1886,4.81,1887,4.81,1888,3.252,1889,4.316,1890,4.81,1891,4.81,1892,4.316,1893,6.681,1894,6.681,1895,4.81,1896,4.81,1897,4.316,1898,4.81,1899,4.81,1900,3.391,1901,3.99,1902,4.316,1903,4.316,1904,4.316]],["title/injectables/CardEffects.html",[791,4.157,877,1.389]],["body/injectables/CardEffects.html",[0,0.311,3,0.029,4,0.029,5,0.035,8,0.599,17,2.257,28,1.975,32,0.169,34,0.217,35,0.445,39,0.242,42,0.262,44,0.381,45,0.005,46,0.373,47,0.381,49,0.897,50,0.782,51,0.12,52,0.505,60,0.035,88,2.502,112,0.772,113,0.772,114,0.721,120,3.282,137,2.131,161,0.003,162,0.003,163,0.003,185,1.525,187,2.301,189,1.676,208,2.115,247,4.304,303,1.957,324,1.027,451,3.238,452,4.529,454,2.855,456,3.15,457,3.15,459,2.993,461,3.15,462,3.15,493,2.428,505,2.428,565,1.989,593,1.586,594,1.586,595,1.629,608,1.586,627,4.113,791,6.177,877,2.063,878,2.473,882,5.767,884,6.985,895,5.612,897,4.529,909,3.069,910,2.922,911,4.398,912,2.473,913,2.675,915,1.989,1411,2.57,1555,3.549,1556,4.17,1889,5.066,1905,5.647,1906,8.333,1907,8.333,1908,8.333,1909,5.647,1910,7.447,1911,5.647,1912,7.447,1913,6.246,1914,7.447,1915,7.949,1916,7.447,1917,6.246,1918,7.447,1919,5.647,1920,6.682,1921,7.447,1922,7.447,1923,7.447,1924,5.647,1925,4.684,1926,4.684,1927,4.684]],["title/interfaces/CardFeedState.html",[761,1.974,771,4.157]],["body/interfaces/CardFeedState.html",[3,0.03,4,0.03,5,0.035,7,2.427,11,2.434,24,3.167,28,1.201,32,0.176,34,0.221,35,0.45,45,0.005,51,0.107,55,3.293,60,0.06,100,0.964,146,1.266,161,0.004,162,0.004,163,0.003,172,2.458,185,1.16,189,1.795,204,1.786,208,1.959,209,2.089,214,2.576,223,1.881,435,2.125,488,3.111,489,1.777,490,1.752,492,2.617,518,3.301,527,2.969,535,3.88,540,2.872,633,6.089,732,5.303,761,2.265,762,3.125,771,6.974,864,3.888,865,3.743,866,3.499,867,3.614,902,5.264,1068,2.265,1510,5.87,1564,5.87,1928,5.75,1929,6.762,1930,8.311,1931,8.691,1932,8.006,1933,6.252,1934,7.536,1935,6.762,1936,6.762,1937,6.252,1938,6.762,1939,7.536,1940,7.536,1941,4.586,1942,7.536,1943,7.536,1944,5.75,1945,5.75,1946,9.263,1947,5.75,1948,5.75,1949,5.75,1950,5.75,1951,5.75,1952,5.75,1953,5.75,1954,5.75,1955,5.75,1956,5.75,1957,5.75,1958,5.75,1959,5.75,1960,5.75,1961,5.75,1962,5.75,1963,5.75,1964,5.159,1965,5.75,1966,5.75,1967,5.159]],["title/components/CardListComponent.html",[288,1.008,381,1.713]],["body/components/CardListComponent.html",[0,0.264,3,0.025,4,0.035,5,0.041,17,1.793,32,0.172,33,0.665,34,0.184,35,0.398,36,0.849,39,0.206,42,0.273,44,0.323,45,0.005,46,0.547,47,0.323,51,0.113,52,0.428,60,0.029,64,1.327,91,1.401,121,1.345,128,1.293,132,1.363,137,2.029,161,0.002,162,0.003,163,0.002,171,2.747,172,1.401,175,2.763,176,3.177,185,1.473,204,1.136,212,1.768,274,1.42,275,2.454,288,1.54,289,1.638,290,2.211,291,1.688,292,2.059,293,1.714,294,1.714,296,2.827,297,1.614,298,3.63,299,3.032,301,2.383,305,1.559,306,3.155,321,1.539,322,2.21,324,0.871,338,1.919,339,1.856,340,1.919,341,1.919,342,1.919,343,1.919,344,1.638,345,1.919,346,1.919,347,1.919,348,1.826,349,1.919,350,1.887,351,1.919,352,1.919,353,1.919,354,1.195,355,1.919,356,1.48,357,2.383,358,2.347,359,1.545,360,2.962,361,1.714,362,1.714,363,1.638,364,1.714,365,1.638,366,2.401,367,2.383,368,1.638,369,2.383,370,1.638,371,1.714,372,1.614,373,1.714,374,1.638,375,1.714,376,2.962,377,1.638,378,1.714,379,1.59,380,2.383,381,2.83,382,1.614,383,1.59,384,1.688,385,1.714,386,1.638,387,2.347,388,1.714,389,1.662,390,1.567,391,2.383,392,1.638,393,1.714,394,2.962,395,1.59,396,1.714,397,1.638,398,1.638,399,1.714,400,1.614,401,1.714,402,1.638,403,1.638,404,1.714,405,1.614,406,1.714,407,1.638,408,1.714,409,1.662,410,1.638,411,1.714,412,1.638,413,1.401,414,1.714,415,1.638,416,2.347,417,1.638,418,2.74,419,1.714,420,1.638,421,1.714,422,3.159,423,1.714,424,1.614,425,1.638,426,1.638,427,1.638,428,1.638,429,1.822,430,1.638,431,1.714,432,1.638,433,1.638,434,1.638,435,1.211,436,1.614,437,1.614,438,1.714,439,1.614,440,1.714,441,1.614,442,1.688,443,1.714,446,2.604,488,2.302,489,1.48,490,1.46,507,3.293,531,3.293,565,1.688,593,1.345,594,1.345,595,1.382,596,3.538,608,1.345,627,2.224,640,4.054,641,3.932,642,3.731,732,3.717,1007,4.298,1008,6.872,1009,5.977,1010,4.298,1016,3.731,1017,5.189,1018,3.731,1019,3.731,1020,3.974,1682,4.696,1683,5.966,1813,3.974,1814,4.298,1820,3.731,1821,3.974,1822,3.731,1941,4.054,1968,6.427,1969,7.807,1970,5.526,1971,5.966,1972,6.662,1973,5.179,1974,4.298,1975,4.79,1976,4.298,1977,4.298,1978,4.298,1979,3.974,1980,4.79,1981,4.79]],["title/classes/CardOperation.html",[0,0.276,1982,4.157]],["body/classes/CardOperation.html",[0,0.378,2,0.817,3,0.036,4,0.036,5,0.042,10,1.826,32,0.189,33,0.841,34,0.263,38,1.214,39,0.362,42,0.249,44,0.568,45,0.005,46,0.557,47,0.568,50,0.856,51,0.082,60,0.052,61,0.95,100,1.022,112,0.937,113,0.937,114,0.875,161,0.003,162,0.004,163,0.003,182,3.824,184,4.361,208,1.782,279,4.323,282,3.378,305,1.972,321,1.584,468,2.656,488,2.861,490,2.089,506,2.613,540,3.477,1982,7.895,1983,8.186,1984,6.151,1985,8.427,1986,6.855,1987,9.124,1988,7.895,1989,9.124,1990,6.855,1991,6.855,1992,6.855,1993,6.855,1994,6.855,1995,6.855,1996,6.855,1997,5.686]],["title/injectables/CardOperationEffects.html",[793,4.157,877,1.389]],["body/injectables/CardOperationEffects.html",[0,0.247,3,0.023,4,0.023,5,0.028,8,0.9,12,2.555,17,2.122,28,2.039,32,0.168,34,0.172,35,0.38,37,1.071,39,0.192,42,0.238,44,0.302,45,0.005,46,0.296,47,0.302,49,1.015,50,0.693,51,0.119,52,0.401,60,0.028,69,2.592,88,2.352,109,1.992,112,0.612,113,0.612,114,0.572,120,2.91,137,1.986,146,1.267,161,0.002,162,0.004,163,0.002,185,1.426,189,1.486,205,3.143,208,2.097,214,2.173,247,4.047,275,1.884,303,1.671,324,0.815,435,1.133,454,3.735,463,1.022,481,3.297,493,1.926,498,3.176,506,2.422,508,3.297,509,3.429,510,2,518,3.521,531,2.733,535,2.546,540,2.422,551,2.08,565,1.579,572,4.951,593,1.258,594,1.258,595,1.293,608,1.258,627,4.093,793,5.273,859,5.009,866,2.726,867,2.816,868,3.49,877,1.761,878,1.962,882,5.233,894,6.216,895,5.597,896,7.213,897,4.015,909,2.435,910,2.319,911,3.49,912,1.962,913,3.5,914,3.309,915,1.579,1068,2.504,1263,4.035,1357,4.643,1386,3.455,1387,4.065,1472,5.055,1506,5.937,1554,3.029,1555,2.816,1556,3.309,1564,4.951,1633,3.158,1852,5.703,1933,5.273,1988,3.717,1998,8.488,1999,4.48,2000,7.387,2001,4.48,2002,5.273,2003,6.356,2004,6.356,2005,8.039,2006,6.356,2007,6.356,2008,6.356,2009,6.356,2010,6.356,2011,6.356,2012,5.703,2013,6.356,2014,6.356,2015,4.48,2016,7.213,2017,7.213,2018,4.951,2019,6.356,2020,6.356,2021,6.356,2022,8.039,2023,6.356,2024,6.356,2025,6.356,2026,6.356,2027,6.356,2028,6.356,2029,6.356,2030,6.356,2031,4.48,2032,6.356,2033,6.356,2034,6.356,2035,5.273,2036,6.356,2037,6.356,2038,6.356,2039,4.48,2040,3.309,2041,4.48,2042,4.48,2043,4.02,2044,4.02,2045,2.569,2046,3.309]],["title/injectables/CardService.html",[877,1.389,882,3.263]],["body/injectables/CardService.html",[0,0.254,3,0.024,4,0.034,5,0.028,17,2.315,28,1.859,32,0.181,34,0.177,35,0.388,36,0.832,38,1.219,39,0.198,42,0.29,44,0.6,45,0.005,46,0.589,47,0.6,49,0.497,50,0.609,51,0.119,55,2.395,60,0.028,74,2.02,100,0.995,101,2.141,127,1.88,146,1.113,161,0.002,162,0.003,163,0.002,182,2.573,185,0.71,187,1.88,189,1.509,204,1.93,208,2.034,214,2.218,244,1.136,254,3.058,282,2.954,303,2.14,305,1.518,321,2.113,322,1.33,324,0.839,326,2.722,344,2.566,454,3.281,459,3.439,488,1.386,489,1.425,490,1.406,540,1.758,568,4.543,593,1.295,608,1.295,673,2.445,750,2.899,787,2.387,788,2.445,877,1.798,878,2.02,882,4.223,902,2.507,922,2.899,936,5.396,955,2.806,1121,5.103,1125,5.747,1126,3.118,1145,4.573,1214,3.251,1334,4.387,1372,3.251,1444,5.846,1450,3.118,1982,3.826,2043,4.138,2044,4.138,2047,4.612,2048,7.505,2049,7.505,2050,7.505,2051,7.505,2052,6.488,2053,6.488,2054,8.143,2055,8.143,2056,6.488,2057,3.251,2058,6.446,2059,6.488,2060,6.488,2061,4.612,2062,6.488,2063,8.581,2064,4.612,2065,6.488,2066,4.612,2067,6.488,2068,4.612,2069,6.488,2070,4.612,2071,4.612,2072,6.488,2073,8.581,2074,4.612,2075,7.505,2076,4.612,2077,4.612,2078,4.612,2079,3.118,2080,3.826,2081,5.381,2082,3.826,2083,4.612,2084,6.488,2085,4.612,2086,4.612,2087,4.612,2088,4.612,2089,4.612,2090,4.612,2091,4.612,2092,4.612,2093,4.612,2094,6.755,2095,4.612,2096,4.612,2097,4.612,2098,4.612,2099,4.612,2100,4.612,2101,4.612,2102,4.138,2103,4.612,2104,4.612,2105,4.138,2106,4.612,2107,4.612,2108,4.612,2109,4.612,2110,4.612,2111,4.612,2112,4.612,2113,4.612,2114,4.612,2115,4.612,2116,4.612,2117,4.612,2118,3.826,2119,6.488,2120,4.612,2121,4.612,2122,4.612,2123,4.612,2124,4.612,2125,4.612,2126,4.612,2127,4.612,2128,4.612,2129,4.612,2130,4.612,2131,4.612,2132,4.138,2133,4.612,2134,4.612,2135,3.406,2136,4.612]],["title/interfaces/CardState.html",[761,1.974,769,4.157]],["body/interfaces/CardState.html",[3,0.039,4,0.039,5,0.046,32,0.186,34,0.285,35,0.529,45,0.005,51,0.089,60,0.054,100,1.028,146,1.366,161,0.003,162,0.004,163,0.003,172,2.763,185,1.506,187,3.027,204,1.761,209,3.214,223,2.43,518,4.376,633,6.28,761,2.926,762,4.037,769,7.837,1780,8.964,2137,7.428,2138,7.428]],["title/modules/CardsModule.html",[649,2.195,1085,3.533]],["body/modules/CardsModule.html",[0,0.315,3,0.03,4,0.039,5,0.046,36,0.634,42,0.169,45,0.005,51,0.123,60,0.035,76,2.457,91,1.671,128,1.542,161,0.003,162,0.004,163,0.003,208,1.209,279,3.557,289,3.244,305,1.338,321,1.321,324,1.039,326,3.373,327,3.477,328,3.885,338,2.289,339,2.214,340,2.289,341,2.289,342,2.289,343,2.289,344,1.954,345,2.289,346,2.289,347,2.289,348,2.178,349,2.289,350,2.251,351,2.289,352,2.289,353,2.289,354,1.426,355,2.289,356,1.766,377,3.473,379,3.372,382,3.457,395,3.372,397,3.473,649,2.503,651,2.89,652,3.277,653,5.1,654,5.253,655,4.443,663,6.416,664,4.43,665,3.477,667,4.08,669,4.556,674,4.718,677,3.373,682,5.847,689,5.544,690,2.958,691,2.958,1085,7.446,1101,4.452,1102,4.741,1881,4.188,2139,5.128,2140,5.128,2141,5.715,2142,5.128,2143,5.128,2144,7.009,2145,5.715,2146,7.506,2147,6.953,2148,5.715,2149,6.953,2150,5.715,2151,5.128,2152,5.715,2153,5.715,2154,5.128,2155,5.128,2156,5.128,2157,5.715,2158,5.715,2159,4.452,2160,5.128]],["title/classes/CheckAuthenticationStatus.html",[0,0.276,66,2.534]],["body/classes/CheckAuthenticationStatus.html",[0,0.531,1,3.022,2,0.473,3,0.021,4,0.021,5,0.047,6,2.105,7,1.676,8,1.07,9,4.248,10,1.057,11,1.946,12,3.277,13,3.85,14,3.758,15,2.055,16,3.329,17,1.98,18,3.849,19,4.003,20,3.166,21,2.215,22,2.158,23,3.098,24,2.359,25,3.75,26,3.849,27,2.913,28,1.441,29,3.166,30,3.658,31,3.25,32,0.19,33,0.962,34,0.152,35,0.348,36,0.897,37,1.281,38,1.207,39,0.17,41,2.819,42,0.117,45,0.005,49,0.427,50,0.373,51,0.091,52,0.355,53,3.14,54,1.807,55,2.547,56,1.807,57,2.215,58,2.651,59,2.215,60,0.06,61,0.55,62,2.055,63,3.203,64,1.1,65,2.132,66,3.844,67,2.651,68,3.75,69,3.076,70,4.752,71,4.029,72,3.489,73,2.158,74,2.551,75,3.759,76,3.268,77,4.093,78,3.489,79,1.381,80,3.489,81,2.158,82,3.203,83,3.529,84,3.571,85,1.843,86,2.158,87,1.843,88,1.03,89,2.215,90,2.819,91,1.161,92,2.158,93,3.203,94,1.921,95,3.203,96,2.158,97,2.158,98,1.453,99,1.843,100,0.821,101,1.843,102,1.772,103,1.881,104,1.564,105,2.215,106,2.215,107,3.849,108,3.75,109,2.162,110,3.75,111,2.215,112,1.226,113,1.226,114,1.145,115,2.215,116,3.166,117,1.963,118,2.215,119,1.963,120,1.564,121,1.115,122,2.158,123,2.966,124,3.25,125,3.14,126,3.015,127,1.618,128,1.071,129,2.158,130,2.105,131,4.029,132,1.13,133,2.215,134,2.055,135,2.158,136,2.946,137,1.312,138,2.215,139,2.215,140,4.24,141,2.158,142,2.215,143,3.166,144,2.215,145,3.166,146,0.543,147,2.215,148,2.158,149,2.215,150,2.158,151,2.215,152,2.704,153,3.166,154,1.489,155,2.215,156,2.215,157,2.215,158,2.215,159,2.215,160,2.105,161,0.002,162,0.003,163,0.002,2161,3.97]],["title/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.276,80,2.534]],["body/classes/CheckImplicitFlowAuthenticationStatus.html",[0,0.532,1,3.031,2,0.475,3,0.021,4,0.021,5,0.047,6,2.115,8,1.071,9,4.254,10,1.063,11,1.951,12,3.272,13,3.857,14,3.766,15,2.065,16,3.337,17,1.984,18,3.861,19,4.011,20,3.178,21,2.226,22,2.169,23,3.105,24,2.366,25,3.761,26,3.861,27,2.922,28,1.445,29,3.178,30,3.668,31,3.262,32,0.19,33,0.963,34,0.153,35,0.349,36,0.899,37,1.284,38,1.208,39,0.171,41,2.829,42,0.118,45,0.005,49,0.43,50,0.374,51,0.091,52,0.357,53,3.149,54,1.816,55,2.554,56,1.816,57,2.226,58,2.661,59,2.226,60,0.06,61,0.553,62,2.065,63,3.213,64,1.106,65,2.139,66,3.499,67,2.661,68,3.761,69,3.079,70,4.759,71,4.039,72,3.499,73,2.169,74,2.561,75,3.768,76,3.276,77,4.102,78,3.499,79,1.386,80,3.853,81,2.169,82,3.213,83,3.537,84,3.581,85,1.853,86,2.169,87,1.853,88,1.035,89,2.226,90,2.829,91,1.167,92,2.169,93,3.213,94,1.931,95,3.213,96,2.169,97,2.169,98,1.456,99,1.853,100,0.822,101,1.853,102,1.781,103,1.891,104,1.572,105,2.226,106,2.226,107,3.262,108,3.178,109,1.832,110,3.178,111,2.226,112,1.228,113,1.228,114,1.147,115,2.226,116,2.169,117,1.973,118,2.226,119,1.973,120,1.572,121,1.121,122,2.169,123,2.975,124,3.262,125,3.149,126,3.026,127,1.626,128,1.077,129,2.169,130,2.115,131,4.039,132,1.136,133,2.226,134,2.065,135,2.169,136,2.957,137,1.317,138,2.226,139,2.226,140,4.251,141,2.169,142,2.226,143,3.178,144,2.226,145,3.178,146,0.545,147,2.226,148,2.169,149,2.226,150,2.169,151,2.226,152,2.714,153,3.178,154,1.496,155,2.226,156,3.262,157,2.226,158,2.226,159,2.226,160,2.115,161,0.002,162,0.003,163,0.002,2162,3.99]],["title/classes/CheckTokenResponse.html",[0,0.276,1407,3.533]],["body/classes/CheckTokenResponse.html",[0,0.432,1,1.052,2,0.286,3,0.012,4,0.012,5,0.015,7,1.014,8,0.255,9,1.828,12,2.729,13,1.792,17,1.772,23,2.04,24,0.821,27,1.014,28,1.889,32,0.144,33,0.393,34,0.092,35,0.235,36,1.084,37,0.663,39,0.249,41,3.793,42,0.171,44,0.265,45,0.005,46,0.331,47,0.489,49,0.258,51,0.108,52,0.215,53,2.278,54,1.093,55,1.453,58,1.792,60,0.048,61,0.333,63,1.115,67,1.792,69,1.27,74,1.724,82,3.188,83,1.828,85,1.115,87,1.115,90,3.093,91,2.008,93,1.828,94,1.162,95,1.828,99,2.967,100,0.998,101,4.198,102,4.293,103,3.714,104,2.281,117,1.187,119,2.863,120,2.982,125,2.278,128,1.351,137,1.817,146,0.684,161,0.001,162,0.002,163,0.001,172,2.214,184,2.59,189,0.483,204,2.257,208,2.099,209,2.104,212,1.847,214,1.346,223,1.637,234,1.014,254,1.605,282,2.743,303,2.421,322,2.581,324,0.437,354,1.595,383,0.797,429,1.748,435,0.607,453,0.872,470,0.674,501,0.886,504,0.742,520,0.833,561,4.082,568,3.566,573,1.138,593,0.674,594,0.674,595,0.693,602,1.162,605,1.273,607,4.61,608,1.405,619,2.776,627,1.828,640,2.396,673,1.273,715,2.563,716,2.563,744,1.563,757,3.417,761,0.946,787,1.243,788,1.273,877,1.091,912,1.724,913,1.138,915,0.846,969,2.234,1013,1.339,1042,1.828,1043,2.776,1068,0.946,1110,4.082,1111,1.693,1112,5.071,1113,2.908,1114,1.773,1121,3.32,1122,1.693,1123,1.623,1124,1.563,1125,3.639,1126,1.623,1127,1.773,1128,6.053,1129,1.693,1130,1.243,1131,1.339,1132,4.276,1133,2.908,1134,2.908,1135,2.908,1136,4.082,1137,2.908,1138,1.773,1139,1.773,1140,1.773,1141,1.773,1142,1.417,1143,1.693,1144,2.908,1145,1.693,1146,1.773,1147,1.773,1148,3.696,1149,1.773,1150,1.773,1151,1.773,1152,1.773,1153,1.773,1154,1.773,1155,1.773,1156,1.773,1157,1.773,1158,1.773,1159,4.082,1160,1.773,1161,4.082,1162,1.773,1163,1.693,1164,1.773,1165,1.773,1166,1.773,1167,1.773,1168,1.773,1169,3.696,1170,1.773,1171,1.773,1172,1.773,1173,1.773,1174,5.356,1175,5.591,1176,2.908,1177,4.72,1178,1.773,1179,3.696,1180,1.773,1181,2.908,1182,1.773,1183,4.276,1184,4.72,1185,1.773,1186,1.773,1187,1.773,1188,1.773,1189,1.773,1190,1.773,1191,2.908,1192,1.773,1193,5.071,1194,2.908,1195,1.773,1196,1.773,1197,2.776,1198,1.773,1199,2.908,1200,1.773,1201,1.773,1202,1.693,1203,3.258,1204,1.773,1205,2.776,1206,1.623,1207,1.773,1208,1.773,1209,1.773,1210,2.908,1211,1.773,1212,3.696,1213,1.773,1214,5.337,1215,3.696,1216,3.696,1217,3.696,1218,3.696,1219,3.696,1220,3.528,1221,1.773,1222,1.773,1223,1.773,1224,1.773,1225,2.908,1226,2.776,1227,2.908,1228,1.693,1229,2.72,1230,2.908,1231,2.908,1232,2.14,1233,1.773,1234,2.908,1235,2.258,1236,2.908,1237,1.773,1238,2.908,1239,1.773,1240,2.776,1241,1.773,1242,2.908,1243,1.773,1244,1.773,1245,2.908,1246,2.908,1247,1.773,1248,1.773,1249,1.773,1250,1.773,1251,1.773,1252,1.773,1253,1.773,1254,1.773,1255,2.908,1256,1.773,1257,1.773,1258,1.773,1259,1.773,1260,1.773,1261,1.773,1262,1.773,1263,1.014,1264,1.773,1265,1.773,1266,1.773,1267,1.773,1268,1.773,1269,1.773,1270,1.773,1271,2.563,1272,4.72,1273,4.276,1274,1.773,1275,1.773,1276,4.082,1277,3.528,1278,1.773,1279,1.693,1280,1.773,1281,1.773,1282,2.954,1283,1.773,1284,2.908,1285,1.773,1286,2.908,1287,1.773,1288,1.623,1289,1.773,1290,1.773,1291,1.773,1292,1.773,1293,1.773,1294,1.773,1295,1.623,1296,1.773,1297,2.475,1298,1.773,1299,1.773,1300,1.773,1301,1.773,1302,1.773,1303,1.773,1304,1.773,1305,1.773,1306,1.773,1307,1.773,1308,1.773,1309,1.773,1310,1.773,1311,1.773,1312,2.908,1313,1.773,1314,1.773,1315,3.696,1316,2.908,1317,1.773,1318,1.773,1319,2.908,1320,2.908,1321,1.773,1322,1.773,1323,1.773,1324,1.773,1325,1.773,1326,1.773,1327,1.773,1328,4.276,1329,2.908,1330,1.693,1331,1.773,1332,1.773,1333,1.773,1334,1.623,1335,1.773,1336,1.773,1337,1.773,1338,1.773,1339,1.773,1340,2.776,1341,1.773,1342,1.773,1343,1.773,1344,2.908,1345,2.908,1346,1.773,1347,1.773,1348,1.773,1349,1.773,1350,1.773,1351,1.773,1352,1.773,1353,1.773,1354,1.773,1355,1.773,1356,1.773,1357,1.509,1358,1.773,1359,1.773,1360,1.773,1361,2.908,1362,1.773,1363,1.773,1364,1.773,1365,1.773,1366,1.773,1367,1.773,1368,1.773,1369,1.773,1370,1.773,1371,1.773,1372,1.693,1373,1.773,1374,1.773,1375,1.773,1376,1.773,1377,1.773,1378,1.773,1379,1.773,1380,1.773,1381,1.773,1382,1.773,1383,1.773,1384,1.773,1385,1.773,1386,1.305,1387,1.991,1388,3.696,1389,2.258,1390,1.773,1391,1.773,1392,1.773,1393,1.773,1394,1.273,1395,1.773,1396,1.773,1397,1.773,1398,4.276,1399,1.773,1400,4.082,1401,1.773,1402,1.773,1403,1.773,1404,3.915,1405,2.776,1406,2.908,1407,2.776,1408,1.773,1409,2.908,1410,2.776,1411,1.792,1412,1.773,1413,1.693,1414,1.773,1415,3.696,1416,1.693,1417,1.773,1418,2.908,1419,1.773,1420,1.563,1421,1.773,1422,1.773,1423,1.773,1424,1.773,1425,1.773,1426,1.773,1427,1.773,1428,1.773,1429,1.773,1430,1.773,1431,1.773,1432,1.773,2163,2.401,2164,2.401,2165,2.401,2166,2.401,2167,2.401]],["title/classes/ClearCard.html",[0,0.276,452,2.724]],["body/classes/ClearCard.html",[0,0.541,2,0.642,3,0.028,4,0.028,5,0.033,8,1.061,32,0.192,33,0.99,34,0.207,35,0.431,37,1.632,38,1.242,42,0.159,45,0.005,49,0.58,50,0.506,51,0.087,52,0.482,60,0.061,61,0.746,79,1.711,88,1.398,98,1.739,100,0.825,112,1.341,113,1.341,114,1.253,146,1.303,161,0.003,162,0.003,163,0.003,185,1.605,187,2.196,214,2.468,244,1.327,446,4.425,447,3.18,450,3.387,451,3.089,452,4.726,453,1.958,454,4.116,455,2.729,456,4.542,457,4.542,458,2.082,459,4.315,460,4.213,461,4.542,462,4.542,463,1.857,464,1.398,465,1.362,466,1.533,467,1.533,468,2.087,469,3.18,470,1.513,471,1.665,472,4.538,473,3.387,474,3.387,475,3.387,476,3.387,477,3.387,478,3.387,479,3.387,480,3.278,2168,5.388]],["title/classes/ClearLightCardSelection.html",[0,0.276,505,2.155]],["body/classes/ClearLightCardSelection.html",[0,0.556,2,0.499,3,0.022,4,0.022,5,0.026,8,1.087,10,2.202,11,1.072,12,1.331,32,0.194,33,1.01,34,0.161,35,0.362,37,1.562,38,1.261,39,0.398,42,0.179,45,0.005,49,0.451,50,0.393,51,0.093,52,0.374,60,0.062,61,0.58,65,1.293,79,0.992,88,2.145,98,1.69,100,0.721,109,1.312,112,1.304,113,1.304,114,1.218,146,1.215,154,1.57,161,0.002,162,0.003,163,0.002,185,1.468,189,0.842,192,1.924,229,2.345,244,1.031,325,1.389,354,1.511,453,1.521,455,2.279,458,1.746,463,1.623,464,1.086,465,1.058,466,1.191,467,1.191,468,1.622,470,1.175,471,1.293,481,3.174,482,3.302,483,1.943,487,2.025,488,2.485,489,1.293,490,1.276,491,1.983,492,1.905,493,1.799,494,3.237,495,4.775,496,3.174,497,1.905,498,3.057,499,2.81,500,1.983,501,1.545,502,3.237,503,3.174,504,1.293,505,3.35,506,3.284,507,1.799,508,3.174,509,1.943,510,3.174,511,3.174,512,1.983,513,1.983,514,3.174,515,3.115,516,3.174,517,1.767,518,1.833,519,3.174,520,1.452,521,3.174,522,1.983,523,3.174,524,1.943,525,3.174,526,1.736,527,1.649,528,2.025,529,2.025,530,2.025,531,1.799,532,2.025,533,2.025,534,2.025,535,1.677,536,2.929,537,2.025,538,2.025,539,2.025,540,1.595,541,2.025,542,2.025,543,2.025,544,2.025,545,2.025,546,2.025,547,2.025,548,2.025,549,2.025,550,2.025,551,1.943,2169,6.054]],["title/injectables/ConfigEffects.html",[830,4.157,877,1.389]],["body/injectables/ConfigEffects.html",[0,0.319,3,0.03,4,0.03,5,0.036,8,0.613,17,2.171,28,1.867,32,0.16,34,0.222,35,0.452,39,0.248,42,0.249,44,0.39,45,0.005,46,0.382,47,0.39,49,0.622,50,0.542,51,0.12,52,0.517,55,2.791,60,0.036,88,2.516,112,0.79,113,0.79,114,0.738,120,3.654,137,2.144,161,0.003,162,0.004,163,0.003,189,1.162,208,1.891,247,4.141,282,2.797,303,2.215,324,1.051,435,1.461,455,2.614,565,2.036,593,1.623,594,1.623,595,1.667,600,5.297,601,4.793,605,3.063,608,1.623,627,3.51,764,4.6,829,5.184,830,6.272,877,2.095,878,2.531,895,5.126,897,4.109,909,3.14,910,2.99,912,2.531,913,2.738,914,4.268,915,2.036,1068,2.276,1263,3.774,1411,2.63,1450,5.112,1472,5.126,1514,3.632,1551,3.907,1826,5.112,1913,5.33,1917,5.33,1925,4.793,1926,4.793,1927,4.793,2170,5.778,2171,8.427,2172,8.427,2173,6.602,2174,8.427,2175,5.778,2176,7.561,2177,7.561,2178,7.561,2179,7.561,2180,7.561,2181,5.778,2182,8.021,2183,6.784,2184,5.778,2185,8.54,2186,6.784,2187,5.184,2188,5.184,2189,5.184,2190,3.761,2191,5.778,2192,5.184,2193,5.778,2194,5.778,2195,5.778,2196,7.561,2197,7.561,2198,7.561,2199,7.561,2200,5.778]],["title/injectables/ConfigService.html",[877,1.389,2173,3.702]],["body/injectables/ConfigService.html",[0,0.397,3,0.037,4,0.037,5,0.044,17,2.182,32,0.165,34,0.276,35,0.519,39,0.309,42,0.275,44,0.486,45,0.005,46,0.476,47,0.486,51,0.121,52,0.644,60,0.044,100,0.88,137,2.293,161,0.003,162,0.004,163,0.003,208,1.523,303,2.544,305,2.032,321,1.664,324,1.309,593,2.022,594,2.022,595,2.077,608,2.022,673,3.817,787,3.727,788,3.817,877,2.406,878,3.154,1121,5.771,2057,5.076,2173,6.413,2201,7.201,2202,9.323,2203,9.679,2204,8.683,2205,7.201,2206,7.201,2207,7.201,2208,7.201]],["title/interfaces/ConfigState.html",[761,1.974,770,4.157]],["body/interfaces/ConfigState.html",[3,0.038,4,0.038,5,0.045,32,0.19,34,0.281,35,0.525,45,0.005,60,0.058,100,0.953,146,1.361,161,0.003,162,0.004,163,0.003,172,2.956,204,2.081,209,2.665,223,2.872,282,3.119,623,5.876,633,6.259,761,2.889,762,3.987,764,5.926,770,7.795,1068,2.889,2185,8.934,2192,6.582,2209,7.336,2210,6.582,2211,7.336,2212,7.336]],["title/components/ConfirmModalComponent.html",[288,1.008,382,1.688]],["body/components/ConfirmModalComponent.html",[0,0.288,3,0.027,4,0.027,5,0.032,8,1.046,10,1.883,28,1.477,32,0.164,34,0.201,35,0.423,36,0.784,39,0.224,42,0.265,44,0.352,45,0.005,46,0.568,47,0.352,51,0.085,60,0.043,61,0.724,64,1.448,65,2.859,98,0.938,121,1.468,132,1.488,161,0.002,162,0.003,163,0.002,185,1.089,274,1.549,275,2.097,288,1.805,289,1.787,290,2.347,291,1.841,293,1.87,294,1.87,297,1.76,298,3.643,301,2.53,305,1.655,321,1.852,322,2.312,324,0.95,326,3.084,327,3.18,328,2.705,356,1.615,357,2.53,358,2.492,359,1.685,360,3.073,361,1.87,362,1.87,363,1.787,364,1.87,365,1.787,366,2.512,367,2.53,368,1.787,369,2.53,370,1.787,371,1.87,372,1.76,373,1.87,374,1.787,375,1.87,376,3.073,377,1.787,378,1.87,379,1.735,380,2.53,381,1.787,382,2.893,383,2.851,384,3.332,385,1.87,386,1.787,387,2.492,388,1.87,389,1.814,390,1.71,391,2.53,392,1.787,393,1.87,394,3.073,395,1.735,396,1.87,397,1.787,398,1.787,399,1.87,400,1.76,401,1.87,402,1.787,403,1.787,404,1.87,405,1.76,406,1.87,407,1.787,408,1.87,409,1.814,410,1.787,411,1.87,412,1.787,413,1.528,414,1.87,415,1.787,416,2.492,417,1.787,418,2.868,419,1.87,420,1.787,421,1.87,422,1.787,423,1.87,424,1.76,425,1.787,426,1.787,427,1.787,428,1.787,429,2.348,430,1.787,431,1.87,432,1.787,433,1.787,434,1.787,435,1.321,436,1.76,437,1.76,438,1.87,439,1.76,440,1.87,441,1.76,442,1.841,443,1.87,581,4.925,1295,4.782,1506,6.343,1731,6.345,1904,4.689,2159,7.205,2213,8.299,2214,4.689,2215,7.072,2216,7.706,2217,7.706,2218,5.227,2219,8.974,2220,5.227,2221,5.227,2222,5.227,2223,5.227,2224,5.227,2225,5.227,2226,5.227,2227,5.227,2228,5.227,2229,4.335,2230,5.227,2231,7.706,2232,7.072,2233,7.072,2234,7.072,2235,7.072]],["title/classes/CreateUserApplication.html",[0,0.276,2236,3.049]],["body/classes/CreateUserApplication.html",[0,0.524,2,0.684,3,0.03,4,0.03,5,0.035,8,1.042,27,3.547,32,0.196,33,0.967,34,0.22,35,0.45,36,0.835,37,1.674,38,1.22,39,0.247,40,1.49,42,0.248,44,0.387,45,0.005,46,0.38,47,0.387,49,0.618,50,0.539,51,0.09,52,0.514,60,0.06,61,0.796,69,3.38,79,1.361,98,1.706,112,1.299,113,1.299,114,1.214,146,1.324,161,0.003,162,0.004,163,0.003,463,1.917,464,1.49,465,1.452,466,1.635,467,1.635,484,2.208,573,4.388,1131,3.204,1232,4.093,2045,3.293,2236,5.426,2237,3.738,2238,7.53,2239,5.743,2240,5.309,2241,5.112,2242,5.112,2243,5.112,2244,5.112,2245,3.121,2246,3.738,2247,4.048,2248,4.048,2249,4.048,2250,4.048,2251,4.048,2252,3.738]],["title/classes/CreateUserApplicationOnFailure.html",[0,0.276,2244,3.049]],["body/classes/CreateUserApplicationOnFailure.html",[0,0.524,2,0.684,3,0.03,4,0.03,5,0.035,8,1.042,27,3.547,32,0.196,33,0.967,34,0.22,35,0.45,36,0.835,37,1.674,38,1.22,39,0.247,40,1.49,42,0.248,44,0.387,45,0.005,46,0.38,47,0.387,49,0.618,50,0.539,51,0.09,52,0.514,60,0.06,61,0.796,69,3.38,79,1.361,98,1.706,112,1.299,113,1.299,114,1.214,146,1.324,161,0.003,162,0.004,163,0.003,463,1.917,464,1.49,465,1.452,466,1.635,467,1.635,484,2.208,573,4.388,1131,3.204,1232,4.093,2045,3.293,2236,5.112,2237,3.738,2240,4.048,2241,5.112,2242,5.112,2243,5.112,2244,5.426,2245,3.121,2246,3.738,2247,4.048,2248,4.048,2249,4.048,2250,5.309,2251,4.048,2252,3.738,2253,7.53,2254,5.743]],["title/classes/CreateUserApplicationOnSuccess.html",[0,0.276,2243,3.049]],["body/classes/CreateUserApplicationOnSuccess.html",[0,0.524,2,0.684,3,0.03,4,0.03,5,0.035,8,1.042,27,3.547,32,0.196,33,0.967,34,0.22,35,0.45,36,0.835,37,1.674,38,1.22,39,0.247,40,1.49,42,0.248,44,0.387,45,0.005,46,0.38,47,0.387,49,0.618,50,0.539,51,0.09,52,0.514,60,0.06,61,0.796,69,3.38,79,1.361,98,1.706,112,1.299,113,1.299,114,1.214,146,1.324,161,0.003,162,0.004,163,0.003,463,1.917,464,1.49,465,1.452,466,1.635,467,1.635,484,2.208,573,4.388,1131,3.204,1232,4.093,2045,3.293,2236,5.112,2237,3.738,2240,4.048,2241,5.112,2242,5.112,2243,5.426,2244,5.112,2245,3.121,2246,3.738,2247,4.048,2248,4.048,2249,5.309,2250,4.048,2251,4.048,2252,3.738,2255,7.53,2256,5.743]],["title/components/CustomLogoComponent.html",[288,1.008,386,1.713]],["body/components/CustomLogoComponent.html",[0,0.241,3,0.023,4,0.032,5,0.038,32,0.185,33,0.623,34,0.167,35,0.373,36,0.969,39,0.187,42,0.29,44,0.294,45,0.005,46,0.525,47,0.294,49,0.672,50,0.409,51,0.075,60,0.027,64,1.209,91,1.276,98,0.784,100,0.633,121,1.226,128,1.178,132,1.242,161,0.002,162,0.003,163,0.002,172,1.824,175,2.587,176,3.485,185,0.96,208,0.923,274,1.294,275,1.849,282,3.225,288,1.464,289,1.492,290,2.071,291,1.538,292,1.876,293,1.561,294,1.561,296,2.687,297,1.47,298,3.611,299,2.839,301,2.232,303,1.914,305,1.46,306,3.028,321,1.682,322,1.8,324,0.794,338,1.748,339,1.691,340,1.748,341,1.748,342,1.748,343,1.748,344,1.492,345,1.748,346,1.748,347,1.748,348,1.663,349,1.748,350,1.719,351,1.748,352,1.748,353,1.748,354,1.089,355,1.748,356,1.349,357,2.232,358,2.198,359,1.407,360,2.842,361,1.561,362,1.561,363,1.492,364,1.561,365,1.492,366,2.282,367,2.232,368,1.492,369,2.232,370,1.492,371,1.561,372,1.47,373,1.561,374,1.492,375,1.561,376,2.842,377,1.492,378,1.561,379,1.449,380,2.232,381,1.492,382,1.47,383,1.449,384,1.538,385,1.561,386,2.716,387,3.348,388,1.561,389,1.514,390,1.428,391,2.232,392,1.492,393,1.561,394,2.842,395,1.449,396,1.561,397,1.492,398,1.492,399,1.561,400,1.47,401,1.561,402,1.492,403,1.492,404,1.561,405,1.47,406,1.561,407,1.492,408,1.561,409,1.514,410,1.492,411,1.561,412,1.492,413,1.276,414,1.561,415,1.492,416,2.198,417,1.492,418,2.605,419,1.561,420,1.492,421,1.561,422,1.492,423,1.561,424,1.47,425,1.492,426,1.492,427,1.492,428,1.492,429,1.706,430,1.492,431,1.561,432,1.492,433,1.492,434,1.492,435,1.103,436,1.47,437,1.47,438,1.561,439,1.47,440,1.561,441,1.47,442,1.538,443,1.561,591,3.076,592,2.951,623,2.575,641,4.297,712,8.857,869,2.502,934,3.076,969,1.948,1387,2.207,1862,5.377,2257,9.872,2258,4.364,2259,7.28,2260,7.28,2261,6.238,2262,7.28,2263,7.28,2264,7.944,2265,7.28,2266,7.28,2267,7.944,2268,7.944,2269,7.944,2270,6.532,2271,4.364,2272,6.971,2273,6.238,2274,4.364,2275,4.364,2276,4.364,2277,4.364,2278,4.364,2279,6.532,2280,4.364,2281,4.364,2282,4.364,2283,4.364,2284,4.364,2285,4.364,2286,6.238,2287,6.238,2288,6.238,2289,4.364,2290,7.28,2291,7.28,2292,4.364,2293,4.364,2294,4.364,2295,6.238,2296,5.867,2297,4.364,2298,3.62,2299,4.364,2300,7.127,2301,7.127,2302,6.532,2303,4.364,2304,4.364,2305,4.364,2306,3.916,2307,4.364,2308,4.364]],["title/injectables/CustomRouterEffects.html",[818,3.049,877,1.389]],["body/injectables/CustomRouterEffects.html",[0,0.267,3,0.025,4,0.025,5,0.03,8,0.818,17,2.297,28,2.067,29,4.524,30,3.562,32,0.177,34,0.368,35,0.402,37,1.132,39,0.208,42,0.258,44,0.52,45,0.005,46,0.444,47,0.327,49,0.896,50,0.781,51,0.118,52,0.434,60,0.03,88,2.489,137,2.089,161,0.002,162,0.003,163,0.002,189,0.975,192,2.646,204,2.144,208,2.122,212,2.48,247,4.283,303,1.275,324,0.882,413,2.434,435,1.226,454,2.452,459,2.571,503,2.165,505,3.314,565,1.709,593,1.362,594,1.362,595,1.399,608,1.362,739,5.574,780,3.419,818,4.088,877,1.862,878,2.124,884,6.981,897,4.524,909,2.636,910,2.51,913,2.298,915,1.709,919,4.023,1055,2.951,1465,5.574,1545,4.224,1550,4.088,1554,3.279,1555,3.048,1556,3.582,1913,6.375,2012,6.028,2309,9.043,2310,4.85,2311,7.71,2312,7.71,2313,7.71,2314,5.418,2315,4.85,2316,6.719,2317,9.451,2318,7.71,2319,6.719,2320,6.719,2321,4.85,2322,9.043,2323,9.272,2324,6.719,2325,9.043,2326,9.043,2327,6.719,2328,9.451,2329,6.719,2330,4.85,2331,6.719,2332,6.719,2333,4.85,2334,6.719,2335,6.719,2336,6.719,2337,4.374,2338,6.719,2339,6.719,2340,4.85,2341,7.71,2342,6.719,2343,6.719,2344,4.374,2345,5.418,2346,3.852,2347,6.028,2348,4.42,2349,4.088,2350,4.374,2351,4.088,2352,4.85,2353,4.85,2354,3.582]],["title/classes/CustomRouterStateSerializer.html",[0,0.276,2355,3.904]],["body/classes/CustomRouterStateSerializer.html",[0,0.437,2,0.739,3,0.032,4,0.041,5,0.038,11,2.233,13,3.603,28,1.296,32,0.151,33,0.791,34,0.238,38,1.083,39,0.266,42,0.234,44,0.619,45,0.005,46,0.523,47,0.534,51,0.095,60,0.054,100,0.629,109,1.945,112,0.848,113,0.848,114,0.792,137,1.784,161,0.003,162,0.004,163,0.003,204,2.177,208,1.674,212,3.39,244,1.95,254,4.226,264,3.137,279,2.94,303,2.292,305,1.853,321,2.015,429,1.697,501,2.29,520,2.153,730,3.558,765,3.9,780,4.374,781,6.791,1053,3.9,1068,2.444,1229,3.372,1297,3.9,1387,3.137,2349,4.817,2355,6.167,2356,5.567,2357,7.618,2358,7.917,2359,7.917,2360,7.103,2361,8.24,2362,6.205,2363,7.103,2364,7.87,2365,6.205,2366,7.103,2367,5.567,2368,5.567,2369,8.24,2370,5.567,2371,5.147,2372,5.567,2373,7.232,2374,5.567,2375,5.567,2376,6.567,2377,5.567,2378,5.567,2379,5.567,2380,5.567,2381,5.567,2382,5.567,2383,5.567,2384,5.567,2385,5.567,2386,5.567,2387,5.567,2388,5.567]],["title/classes/DateTimeNgb.html",[0,0.276,950,4.157]],["body/classes/DateTimeNgb.html",[0,0.306,2,0.661,3,0.029,4,0.029,5,0.034,24,3.009,32,0.14,34,0.213,39,0.238,42,0.271,44,0.497,45,0.005,46,0.487,47,0.497,50,0.775,51,0.067,60,0.054,100,1.001,104,3.783,112,0.759,113,0.759,114,0.709,161,0.004,162,0.003,163,0.003,184,3.812,204,2.086,208,2.125,209,3.198,282,2.445,303,1.46,305,1.724,321,2.034,326,3.277,327,3.379,328,2.874,429,2.626,750,4.63,950,6.11,953,8.446,954,7.897,1042,2.578,1068,3.255,1410,3.915,1941,4.482,1979,4.606,2135,4.101,2389,9.414,2390,5.553,2391,8.265,2392,7.301,2393,8.802,2394,8.802,2395,6.608,2396,5.553,2397,5.553,2398,5.553,2399,5.553,2400,5.553,2401,7.366,2402,5.553,2403,5.553,2404,7.366,2405,5.553,2406,5.553,2407,5.553,2408,5.553,2409,4.606,2410,5.553,2411,5.553,2412,5.553,2413,8.265,2414,8.265,2415,6.438,2416,8.265,2417,7.415,2418,6.856,2419,7.366,2420,7.366,2421,3.915,2422,5.553,2423,5.553,2424,5.553,2425,5.553,2426,5.553,2427,5.553,2428,5.553,2429,4.982,2430,5.553,2431,5.553,2432,5.553,2433,5.553,2434,5.553,2435,4.982,2436,4.982,2437,4.982,2438,5.553,2439,5.553]],["title/components/DatetimeFilterComponent.html",[288,1.008,392,1.713]],["body/components/DatetimeFilterComponent.html",[0,0.207,3,0.019,4,0.019,5,0.023,24,1.284,28,1.732,32,0.177,33,0.558,34,0.144,35,0.334,36,0.919,39,0.287,42,0.282,44,0.559,45,0.005,46,0.596,47,0.595,49,0.796,50,0.694,51,0.067,55,1.386,60,0.023,64,1.04,100,0.567,104,2.202,108,3.038,112,1.206,113,1.206,114,1.127,121,1.054,132,1.069,161,0.002,162,0.003,163,0.002,172,1.953,175,2.318,176,2.318,185,0.861,208,0.794,209,2.426,223,2.185,242,1.817,274,1.113,275,1.657,288,1.343,289,1.284,290,1.855,291,1.323,292,1.614,293,1.343,294,1.343,296,1.386,297,1.265,298,3.579,299,2.544,301,2,305,1.308,321,1.985,322,2.75,324,0.683,339,1.455,356,1.16,357,2,358,1.969,359,1.211,360,2.647,361,1.343,362,1.343,363,1.284,364,1.343,365,1.284,366,2.093,367,2,368,1.284,369,2,370,1.284,371,1.343,372,1.265,373,1.343,374,1.284,375,1.343,376,2.647,377,1.284,378,1.343,379,1.246,380,2,381,1.284,382,1.265,383,1.246,384,1.323,385,1.343,386,1.284,387,1.969,388,1.343,389,1.303,390,1.228,391,2,392,3.017,393,3.157,394,2.647,395,1.246,396,1.343,397,1.284,398,1.284,399,1.343,400,1.265,401,1.343,402,1.284,403,1.284,404,1.343,405,1.265,406,1.343,407,1.284,408,1.343,409,1.303,410,1.284,411,1.343,412,1.284,413,1.098,414,1.343,415,1.284,416,2.921,417,1.284,418,2.389,419,1.343,420,1.284,421,1.343,422,1.284,423,1.343,424,1.265,425,1.284,426,1.284,427,1.284,428,1.284,429,2.466,430,1.284,431,1.343,432,1.284,433,1.284,434,1.284,435,1.688,436,1.265,437,1.265,438,1.343,439,1.265,440,1.343,441,1.265,442,1.323,443,1.343,637,3.941,648,4.354,654,3.299,680,1.899,723,5.464,925,6.782,940,4.413,948,4.972,969,3.833,998,3.369,999,5.016,1000,5.016,1001,3.369,1068,3.266,1095,8.631,1096,8.631,1203,2.444,1206,2.539,2079,2.539,2435,3.369,2436,5.992,2437,5.992,2440,2.773,2441,6.678,2442,6.678,2443,6.678,2444,7.398,2445,7.909,2446,6.678,2447,5.992,2448,4.129,2449,7.398,2450,5.539,2451,6.678,2452,5.59,2453,6.137,2454,5.59,2455,5.59,2456,5.59,2457,5.59,2458,5.992,2459,3.755,2460,3.369,2461,5.59,2462,3.369,2463,3.755,2464,5.59,2465,3.369,2466,6.678,2467,5.59,2468,3.755,2469,3.755,2470,3.755,2471,5.59,2472,5.59,2473,6.637,2474,3.755,2475,6.678,2476,5.59,2477,3.755,2478,5.992,2479,3.115,2480,2.925,2481,3.755,2482,2.925,2483,2.773,2484,3.755,2485,3.755,2486,2.647,2487,3.755,2488,3.755,2489,3.755,2490,3.755,2491,3.755,2492,3.755,2493,3.755,2494,3.755,2495,3.755,2496,5.59,2497,3.755,2498,5.016,2499,3.755,2500,3.755,2501,3.369,2502,3.755,2503,3.755,2504,3.755,2505,3.755]],["title/classes/DelayedLightCardUpdate.html",[0,0.276,523,2.237]],["body/classes/DelayedLightCardUpdate.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.448,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,1.988,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,2.89,549,1.988,550,1.988,551,1.908,2506,5.973,2507,4.109]],["title/classes/Detail.html",[0,0.276,186,2.594]],["body/classes/Detail.html",[0,0.457,2,0.793,3,0.035,4,0.035,5,0.041,11,1.706,32,0.127,38,1.32,39,0.387,42,0.197,44,0.449,45,0.005,46,0.44,47,0.449,51,0.099,60,0.055,61,0.923,100,1.068,112,1.132,113,1.132,114,1.057,161,0.003,162,0.004,163,0.003,170,3.646,185,1.026,186,4.662,188,3.092,205,3.294,214,2.277,282,3.128,292,3.873,489,2.059,490,2.03,501,2.459,563,6.371,644,4.696,1756,5.525,1758,3.931,1759,4.696,1760,4.92,1761,4.92,1762,4.92,1763,5.864,1764,5.189,1765,5.189,1766,4.92,1767,4.92,1768,4.92,1770,5.189,1771,8.194,1772,5.189,1773,4.336,1774,8.082,1775,7.472,2508,6.661,2509,6.661]],["title/components/DetailComponent.html",[288,1.008,395,1.664]],["body/components/DetailComponent.html",[0,0.2,3,0.019,4,0.019,5,0.022,8,0.9,11,1.393,28,1.517,32,0.176,33,0.543,34,0.139,35,0.325,36,0.724,38,0.812,39,0.155,42,0.289,44,0.49,45,0.005,46,0.561,47,0.49,49,0.585,50,0.51,51,0.115,52,0.324,60,0.022,64,1.003,100,0.662,110,1.967,121,1.016,126,2.814,132,1.03,137,1.911,161,0.002,162,0.003,163,0.002,169,3.118,170,2.681,175,2.255,176,2.709,185,1.4,186,4.517,187,1.475,188,1.68,192,2.475,204,2.156,208,1.382,212,1.336,214,1.237,215,1.615,223,1.779,244,0.892,267,2.019,274,1.612,275,1.612,288,1.461,289,1.237,290,1.805,291,1.275,293,1.946,294,1.295,296,2.411,297,1.219,298,3.57,301,1.946,303,2.61,305,1.273,306,2.768,321,2.017,322,2.576,324,0.658,325,1.201,339,2.107,356,1.118,357,2.337,358,2.559,359,1.167,360,2.599,361,1.295,362,1.295,363,1.237,364,1.295,365,1.237,366,2.047,367,1.946,368,1.237,369,1.946,370,1.237,371,1.295,372,1.219,373,1.295,374,1.237,375,1.295,376,2.599,377,1.237,378,1.295,379,1.201,380,1.946,381,1.237,382,1.219,383,1.201,384,1.275,385,1.295,386,1.237,387,1.916,388,1.295,389,1.256,390,1.184,391,1.946,392,1.237,393,1.295,394,2.599,395,2.411,396,1.295,397,1.237,398,1.237,399,1.295,400,1.219,401,1.295,402,1.237,403,1.237,404,1.295,405,1.219,406,1.295,407,1.237,408,1.295,409,1.256,410,1.237,411,1.295,412,1.237,413,1.058,414,1.295,415,1.237,416,1.916,417,1.237,418,2.337,419,1.295,420,1.237,421,1.295,422,1.237,423,1.295,424,1.219,425,1.237,426,1.237,427,1.237,428,1.237,429,1.487,430,1.237,431,1.295,432,1.237,433,1.237,434,1.237,435,0.915,436,1.219,437,1.219,438,1.295,439,1.219,440,1.295,441,1.219,442,1.275,443,1.295,506,1.379,591,2.551,592,2.447,593,1.016,594,1.016,595,1.044,608,1.016,690,1.873,691,1.873,872,4.106,1068,1.426,1142,2.136,1357,2.275,1685,6.517,1758,2.136,1759,3.834,1788,3.419,1790,3.645,1791,4.728,1850,3.247,1881,4.052,1888,2.447,1892,3.247,1897,3.247,1902,3.247,1903,3.247,2079,3.677,2144,5.365,2155,3.247,2272,6.025,2296,2.673,2346,2.075,2453,5.419,2510,3.619,2511,5.438,2512,6.533,2513,6.533,2514,6.533,2515,6.609,2516,5.438,2517,5.438,2518,5.438,2519,7.264,2520,7.264,2521,6.517,2522,7.264,2523,6.533,2524,3.619,2525,5.089,2526,5.419,2527,5.861,2528,5.438,2529,3.619,2530,3.619,2531,5.438,2532,6.533,2533,8.179,2534,3.619,2535,3.619,2536,3.619,2537,5.438,2538,3.619,2539,3.619,2540,3.619,2541,3.619,2542,3.619,2543,3.619,2544,6.533,2545,3.619,2546,3.619,2547,3.619,2548,4.236,2549,3.619,2550,3.619,2551,3.619,2552,3.247,2553,3.619,2554,3.247,2555,2.819,2556,3.247,2557,4.511,2558,3.619,2559,3.247,2560,5.438,2561,5.438,2562,3.619,2563,3.619,2564,3.619,2565,3.619,2566,3.619,2567,3.619,2568,3.619,2569,3.619,2570,3.619,2571,3.619,2572,3.619,2573,3.619,2574,3.619,2575,3.619,2576,4.879,2577,5.438,2578,3.619,2579,3.619,2580,3.619,2581,3.619,2582,3.619,2583,3.619,2584,3.619,2585,3.619,2586,3.619,2587,3.619,2588,3.619,2589,3.619,2590,5.438,2591,3.619,2592,3.247,2593,3.619,2594,3.619,2595,3.619,2596,3.619,2597,3.619,2598,3.619,2599,3.619,2600,3.619,2601,5.438,2602,3.619,2603,5.438,2604,3.619,2605,5.438,2606,3.619,2607,3.619,2608,3.619,2609,3.619,2610,3.619,2611,3.619,2612,3.619,2613,3.247,2614,3.247,2615,3.002,2616,3.619,2617,3.619,2618,3.619,2619,3.619,2620,3.619,2621,3.619,2622,3.619,2623,3.619,2624,3.247,2625,3.247,2626,3.619,2627,3.619]],["title/classes/DetailContext.html",[0,0.276,2555,3.904]],["body/classes/DetailContext.html",[0,0.429,2,0.926,3,0.04,4,0.04,5,0.048,32,0.148,38,0.965,39,0.334,42,0.23,44,0.524,45,0.005,46,0.514,47,0.524,51,0.109,60,0.048,161,0.004,162,0.004,163,0.004,185,1.528,187,3.167,2409,6.447,2515,8.049,2555,7.077,2557,6.447,2559,6.973,2628,9.085,2629,6.973,2630,7.772,2631,7.772,2632,7.772]],["title/components/DetailsComponent.html",[288,1.008,397,1.713]],["body/components/DetailsComponent.html",[0,0.247,3,0.023,4,0.033,5,0.039,32,0.176,33,0.635,34,0.172,35,0.38,36,0.705,39,0.317,42,0.288,44,0.429,45,0.005,46,0.562,47,0.429,51,0.096,60,0.028,64,1.243,69,1.446,91,1.311,100,0.645,121,1.259,128,1.21,132,1.276,161,0.002,162,0.003,163,0.002,171,2.571,172,1.311,175,2.638,176,2.638,185,1.427,186,3.292,187,1.828,208,0.949,223,1.467,274,1.329,275,1.886,288,1.486,289,1.533,290,2.111,291,1.58,292,1.928,293,1.604,294,1.604,297,1.511,298,3.617,299,2.895,301,2.275,303,2.318,305,1.489,309,6.131,321,1.962,322,2.617,324,0.815,338,1.797,339,1.737,340,1.797,341,1.797,342,1.797,343,1.797,344,1.533,345,1.797,346,1.797,347,1.797,348,1.709,349,1.797,350,1.766,351,1.797,352,1.797,353,1.797,354,1.119,355,1.797,356,1.386,357,2.275,358,2.241,359,1.446,360,2.877,361,1.604,362,1.604,363,1.533,364,1.604,365,1.533,366,2.316,367,2.275,368,1.533,369,2.275,370,1.533,371,1.604,372,1.511,373,1.604,374,1.533,375,1.604,376,2.877,377,1.533,378,1.604,379,1.489,380,2.275,381,1.533,382,1.511,383,1.489,384,1.58,385,1.604,386,1.533,387,2.241,388,1.604,389,1.556,390,1.467,391,2.275,392,1.533,393,1.604,394,2.877,395,2.818,396,1.604,397,2.749,398,1.533,399,1.604,400,1.511,401,1.604,402,1.533,403,1.533,404,1.604,405,1.511,406,1.604,407,1.533,408,1.604,409,1.556,410,1.533,411,1.604,412,1.533,413,1.311,414,1.604,415,1.533,416,2.241,417,1.533,418,2.644,419,1.604,420,1.533,421,1.604,422,3.101,423,1.604,424,1.511,425,1.533,426,1.533,427,1.533,428,1.533,429,1.739,430,1.533,431,1.604,432,1.533,433,1.533,434,1.533,435,1.134,436,1.511,437,1.511,438,1.604,439,1.511,440,1.604,441,1.511,442,1.58,443,1.604,641,2.647,872,2.819,897,2.437,932,2.729,969,2.002,1016,3.493,1017,4.954,1018,3.493,1019,3.493,1020,3.72,1068,1.766,1550,2.729,1682,4.484,1683,5.757,1768,6.514,1779,6.631,1788,3.998,1811,4.024,1818,5.707,1879,5.707,1941,3.87,1970,5.276,1971,7.065,1973,4.997,1974,4.024,1976,4.024,1977,4.024,1978,4.024,1979,3.72,2453,6.131,2521,5.707,2552,7.216,2592,4.024,2633,4.485,2634,6.131,2635,7.391,2636,6.36,2637,8.042,2638,6.36,2639,4.485,2640,4.485,2641,6.36,2642,4.485,2643,4.485,2644,6.36,2645,4.485,2646,4.485,2647,7.391,2648,6.36,2649,4.485,2650,4.485,2651,4.485,2652,4.485,2653,6.36,2654,4.485,2655,4.485,2656,4.485,2657,4.485,2658,5.707,2659,2.437,2660,6.36,2661,4.485,2662,4.485,2663,4.485,2664,4.485,2665,4.485,2666,6.36,2667,4.485,2668,4.485,2669,6.36]],["title/directives/DraggableDirective.html",[359,1.616,439,1.688]],["body/directives/DraggableDirective.html",[0,0.318,3,0.03,4,0.03,5,0.035,28,1.757,32,0.16,34,0.221,35,0.451,42,0.286,45,0.005,49,0.62,50,0.54,51,0.069,60,0.035,91,1.683,161,0.003,162,0.004,163,0.003,208,1.779,223,2.92,274,1.707,297,1.939,298,2.578,303,2.211,322,2.575,324,1.047,359,2.432,436,1.939,439,2.541,469,3.397,504,1.779,607,4.693,969,4.325,1279,4.058,1400,5.317,1468,7.407,1682,5.317,1694,4.484,1997,4.775,2079,6.999,2576,5.165,2659,3.129,2670,7.656,2671,8.819,2672,5.757,2673,7.543,2674,8.412,2675,6.767,2676,8.412,2677,8.412,2678,8.412,2679,7.543,2680,7.543,2681,7.543,2682,8.693,2683,5.757,2684,5.757,2685,5.757,2686,6.978,2687,5.757,2688,9.509,2689,5.757,2690,10.171,2691,5.317,2692,5.757,2693,5.757,2694,5.757,2695,5.757,2696,5.317,2697,5.757,2698,8.009,2699,5.757,2700,5.757,2701,9.509,2702,5.757,2703,5.757,2704,5.757,2705,5.757,2706,5.757,2707,5.757,2708,5.757,2709,5.757,2710,5.757,2711,5.757,2712,5.165,2713,6.767,2714,5.757,2715,5.757,2716,5.757,2717,5.757,2718,5.757]],["title/components/EmailSettingComponent.html",[288,1.008,398,1.713]],["body/components/EmailSettingComponent.html",[0,0.229,3,0.022,4,0.022,5,0.026,28,0.867,32,0.186,33,0.601,34,0.159,35,0.359,39,0.178,42,0.303,44,0.598,45,0.005,46,0.621,47,0.598,49,0.648,50,0.806,51,0.099,52,0.371,60,0.026,64,1.15,100,0.717,121,1.165,128,1.623,132,1.181,137,1.936,161,0.002,162,0.003,163,0.002,172,2.512,175,2.495,176,2.495,185,0.926,204,0.983,208,0.877,242,2.008,274,1.783,275,1.783,288,1.423,289,1.418,290,1.997,291,1.462,293,1.484,294,1.484,296,2.612,297,1.397,298,3.601,301,2.152,303,2.258,305,1.408,306,2.697,321,2.244,322,2.479,324,0.754,344,1.418,356,1.282,357,2.152,358,2.119,359,1.338,360,2.776,361,1.484,362,1.484,363,1.418,364,1.484,365,1.418,366,2.218,367,2.152,368,1.418,369,2.152,370,1.418,371,1.484,372,1.397,373,1.484,374,3.41,375,1.484,376,2.776,377,1.418,378,1.484,379,1.377,380,2.152,381,1.418,382,1.397,383,1.377,384,1.462,385,1.484,386,1.418,387,2.119,388,1.484,389,1.44,390,1.357,391,2.152,392,1.418,393,1.484,394,2.776,395,1.377,396,1.484,397,1.418,398,2.653,399,2.947,400,1.397,401,1.484,402,1.418,403,1.418,404,1.484,405,1.397,406,1.484,407,1.418,408,1.484,409,1.44,410,1.418,411,1.484,412,1.418,413,1.213,414,1.484,415,1.418,416,2.119,417,1.418,418,2.532,419,1.484,420,1.418,421,1.484,422,1.418,423,1.484,424,1.397,425,1.418,426,1.418,427,3.212,428,1.418,429,1.645,430,1.418,431,1.484,432,1.418,433,1.418,434,1.418,435,1.049,436,1.397,437,1.397,438,1.484,439,1.397,440,1.484,441,1.397,442,1.462,443,1.484,565,1.462,594,1.165,595,1.197,680,2.098,940,3.356,1282,3.55,1394,3.189,1588,3.232,1589,4.176,1590,5.471,1591,4.685,1592,4.24,1593,3.66,1594,6.777,1595,4.24,1596,6.057,1597,5.471,1598,4.176,1599,4.988,1600,5.471,1601,4.24,1602,4.24,1603,4.24,1607,3.722,1608,2.925,1610,2.925,1613,4.24,1614,4.878,1616,4.24,1620,4.24,1635,2.925,1941,3.66,1973,6.881,2450,6.834,2483,5.226,2719,7.761,2720,6.963,2721,7.952,2722,5.397,2723,6.015,2724,4.149,2725,4.149,2726,3.064,2727,3.064,2728,3.064,2729,4.149,2730,4.149,2731,4.149,2732,4.149,2733,3.064,2734,3.064,2735,3.064,2736,3.064,2737,3.064,2738,3.064,2739,3.064,2740,3.064,2741,3.064,2742,3.064,2743,3.064,2744,3.064,2745,3.064,2746,3.441,2747,3.064,2748,3.064,2749,4.149,2750,4.149,2751,4.149,2752,4.685,2753,4.99,2754,4.99]],["title/classes/EmptyLightCards.html",[0,0.276,496,2.237]],["body/classes/EmptyLightCards.html",[0,0.556,2,0.501,3,0.022,4,0.022,5,0.026,8,1.087,10,2.206,11,1.077,12,1.336,32,0.194,33,1.011,34,0.161,35,0.363,37,1.564,38,1.262,39,0.382,42,0.124,45,0.005,49,0.453,50,0.394,51,0.094,52,0.376,60,0.062,61,0.582,65,1.299,79,0.997,88,2.149,98,1.692,100,0.723,109,1.318,112,1.305,113,1.305,114,1.219,146,1.216,154,1.577,161,0.002,162,0.003,163,0.002,185,1.469,189,0.846,192,1.931,229,2.353,244,1.036,325,1.396,354,1.515,453,1.528,455,2.284,458,1.752,463,1.627,464,1.091,465,1.063,466,1.197,467,1.197,468,1.629,470,1.181,471,1.299,481,3.182,482,2.82,483,1.952,487,2.034,488,2.489,489,1.299,490,1.281,491,1.992,492,1.913,493,1.808,494,3.245,495,4.778,496,3.486,497,1.913,498,3.065,499,2.82,500,1.992,501,1.552,502,3.245,503,3.182,504,1.299,505,3.065,506,3.289,507,1.808,508,3.182,509,1.952,510,3.182,511,3.182,512,1.992,513,1.992,514,3.182,515,3.123,516,3.182,517,1.775,518,1.841,519,3.182,520,1.459,521,3.182,522,1.992,523,3.182,524,1.952,525,3.182,526,1.744,527,1.656,528,2.034,529,2.939,530,2.034,531,1.808,532,2.034,533,2.034,534,2.034,535,1.684,536,2.034,537,2.034,538,2.034,539,2.034,540,1.602,541,2.034,542,2.034,543,2.034,544,2.034,545,2.034,546,2.034,547,2.034,548,2.034,549,2.034,550,2.034,551,1.952,2755,4.204]],["title/classes/FailToUpdateTimeReference.html",[0,0.276,2756,3.263]],["body/classes/FailToUpdateTimeReference.html",[0,0.505,2,0.732,3,0.032,4,0.032,5,0.038,7,2.596,8,1.027,10,2.312,16,2.693,32,0.192,33,0.914,34,0.236,35,0.47,36,0.962,37,1.594,38,1.175,39,0.264,40,1.595,42,0.257,44,0.415,45,0.005,46,0.407,47,0.415,49,0.662,50,0.577,51,0.11,52,0.55,55,2.905,56,2.798,60,0.06,61,0.852,74,2.693,98,1.643,104,2.422,109,2.467,136,3.98,146,1.187,161,0.003,162,0.004,163,0.003,282,2.041,290,2.041,429,2.646,458,1.774,484,2.282,520,2.133,573,3.729,580,5.813,869,3.525,1394,3.259,1411,3.582,1452,4.157,1533,5.123,1900,5.548,2756,5.651,2757,4.334,2758,5.548,2759,6.131,2760,7.129,2761,5.813,2762,6.131,2763,7.87,2764,6.148,2765,6.131,2766,4.002,2767,4.334,2768,4.002,2769,4.334,2770,4.789,2771,5.401,2772,4.789,2773,5.548,2774,4.789,2775,6.412,2776,6.412,2777,4.789,2778,4.789,2779,6.131,2780,4.541,2781,4.157,2782,4.789,2783,4.789,2784,4.541,2785,4.789,2786,4.157,2787,4.541,2788,5.123,2789,4.789,2790,4.789,2791,4.541]],["title/components/FeedComponent.html",[288,1.008,400,1.688]],["body/components/FeedComponent.html",[0,0.267,3,0.025,4,0.035,5,0.041,17,2.043,32,0.172,33,0.67,34,0.186,35,0.401,36,0.536,39,0.208,42,0.267,44,0.326,45,0.005,46,0.55,47,0.326,51,0.116,52,0.432,60,0.03,64,1.34,91,1.414,121,1.358,128,1.305,132,1.376,137,2.035,161,0.002,162,0.003,163,0.002,172,1.961,185,1.032,274,1.433,275,1.988,288,1.548,289,1.653,290,2.225,291,1.703,292,2.079,293,1.73,294,1.73,296,2.841,297,1.628,298,3.631,299,3.051,301,2.399,303,1.271,305,1.569,306,3.168,321,1.549,322,1.934,324,0.879,338,1.937,339,1.873,340,1.937,341,1.937,342,1.937,343,1.937,344,1.653,345,1.937,346,1.937,347,1.937,348,2.933,349,1.937,350,1.904,351,1.937,352,1.937,353,1.937,354,1.206,355,1.937,356,1.494,357,2.399,358,2.362,359,1.559,360,2.974,361,1.73,362,1.73,363,1.653,364,1.73,365,1.653,366,2.412,367,2.399,368,1.653,369,2.399,370,1.653,371,1.73,372,1.628,373,1.73,374,1.653,375,1.73,376,2.974,377,1.653,378,1.73,379,1.605,380,2.399,381,1.653,382,1.628,383,1.605,384,1.703,385,1.73,386,1.653,387,2.362,388,1.73,389,1.678,390,1.582,391,2.399,392,1.653,393,1.73,394,2.974,395,1.605,396,1.73,397,1.653,398,1.653,399,1.73,400,2.8,401,1.73,402,1.653,403,1.653,404,1.73,405,1.628,406,1.73,407,1.653,408,1.73,409,1.678,410,1.653,411,1.73,412,1.653,413,1.414,414,1.73,415,1.653,416,2.362,417,1.653,418,2.754,419,1.73,420,1.653,421,1.73,422,1.653,423,1.73,424,1.628,425,1.653,426,1.653,427,1.653,428,1.653,429,1.833,430,1.653,431,1.73,432,1.653,433,1.653,434,1.653,435,1.222,436,1.628,437,1.628,438,1.73,439,1.628,440,1.73,441,1.628,442,1.703,443,1.73,488,1.453,489,1.494,490,1.473,504,1.494,507,3.309,531,3.309,540,2.555,565,1.703,593,1.358,594,1.358,595,1.395,602,2.339,605,2.563,608,1.358,912,2.117,915,1.703,932,4.079,1037,4.01,1039,3.408,1042,3.113,1076,4.01,1078,4.338,1411,3.051,1971,6.475,2058,6.531,2082,4.01,2415,3.766,2418,4.01,2634,6.385,2792,4.835,2793,7.697,2794,6.705,2795,7.697,2796,6.705,2797,4.835,2798,4.835,2799,4.835,2800,4.835,2801,4.338,2802,3.269,2803,4.835,2804,4.835,2805,4.835,2806,4.835,2807,4.835,2808,6.906,2809,4.835,2810,6.016,2811,4.835,2812,4.835,2813,4.835,2814,4.835,2815,4.835,2816,4.835,2817,4.835,2818,6.705,2819,4.835]],["title/injectables/FeedFiltersEffects.html",[826,4.157,877,1.389]],["body/injectables/FeedFiltersEffects.html",[0,0.225,3,0.021,4,0.021,5,0.025,8,0.936,9,1.898,12,1.892,17,2.065,28,1.61,32,0.163,34,0.157,35,0.356,39,0.175,42,0.261,44,0.276,45,0.005,46,0.464,47,0.276,49,0.973,50,0.802,51,0.116,52,0.366,60,0.025,65,1.839,69,1.919,88,2.289,112,0.559,113,0.559,114,0.522,120,2.764,137,1.926,161,0.002,162,0.003,163,0.002,185,0.916,189,1.411,204,2.026,208,2.065,209,3.403,223,1.947,247,4.035,282,1.975,284,3.32,288,0.822,303,2.494,324,0.743,348,3.657,429,2.337,435,2.07,497,2.708,565,1.44,578,3.184,593,1.148,594,1.148,595,1.179,602,1.978,605,2.167,608,1.148,644,2.881,764,3.621,826,4.936,859,4.141,866,2.487,867,2.569,872,4.844,873,2.881,877,1.649,878,1.79,897,3.813,909,2.222,910,2.115,914,3.019,915,1.44,969,3.132,1018,3.184,1068,3.036,1263,3.609,1468,4.635,1472,4.901,1506,4.395,1627,3.391,2016,5.339,2017,5.339,2018,4.635,2035,4.936,2040,3.019,2045,2.344,2046,3.019,2548,6.003,2659,2.222,2691,6.764,2696,6.373,2758,4.195,2769,2.881,2771,4.141,2780,5.182,2787,5.692,2802,2.764,2820,9.041,2821,4.088,2822,7.016,2823,5.82,2824,7.016,2825,7.016,2826,7.016,2827,7.707,2828,5.692,2829,5.95,2830,4.088,2831,4.088,2832,9.365,2833,5.95,2834,5.95,2835,5.95,2836,5.95,2837,5.95,2838,5.95,2839,5.95,2840,7.707,2841,5.95,2842,7.707,2843,5.95,2844,5.95,2845,4.936,2846,5.95,2847,5.95,2848,4.088,2849,5.95,2850,4.395,2851,5.95,2852,4.088,2853,5.95,2854,5.95,2855,7.016,2856,5.95,2857,9.041,2858,5.95,2859,5.95,2860,7.707,2861,8.548,2862,5.95,2863,5.95,2864,5.95,2865,5.95,2866,5.95,2867,5.95,2868,7.707,2869,5.95,2870,8.548,2871,8.548,2872,5.95,2873,5.95,2874,5.95,2875,4.088,2876,2.344,2877,2.487,2878,3.667,2879,3.184,2880,4.088,2881,4.088,2882,3.391,2883,2.764,2884,4.088,2885,4.088,2886,4.088,2887,4.088,2888,4.088]],["title/modules/FeedModule.html",[649,2.195,2889,3.904]],["body/modules/FeedModule.html",[0,0.284,3,0.027,4,0.036,5,0.043,32,0.098,36,0.571,45,0.005,51,0.126,60,0.032,76,2.213,91,1.505,128,1.389,161,0.002,162,0.003,163,0.002,324,0.936,326,3.037,327,3.131,328,3.622,338,2.062,339,1.994,340,2.062,341,2.062,342,2.062,343,2.062,344,1.759,345,2.062,346,2.062,347,2.062,348,1.961,349,2.062,350,2.027,351,2.062,352,2.062,353,2.062,354,1.284,355,2.062,356,1.59,381,3.148,389,3.195,390,2.289,400,3.367,402,3.148,409,3.195,420,3.148,425,3.148,428,3.148,430,3.148,433,1.759,434,3.148,439,3.101,441,3.101,649,2.254,651,2.602,652,2.951,653,4.839,654,4.13,655,4.216,663,6.226,664,4.13,665,3.131,667,3.804,669,3.804,674,4.399,677,3.037,678,5.452,679,5.452,680,2.602,682,4.009,684,3.628,689,5.169,690,3.622,691,2.663,694,6.279,695,4.269,696,4.269,697,4.618,698,4.269,699,5.452,700,4.269,703,4.269,704,4.269,705,4.269,723,3.801,724,4.009,732,2.871,936,4.693,955,3.131,1085,6.491,1090,4.618,1094,7.135,1097,4.618,1969,4.618,2151,8.009,2156,4.618,2392,4.269,2671,4.618,2771,3.037,2889,8.265,2890,4.618,2891,4.618,2892,4.618,2893,4.618,2894,7.172,2895,6.801,2896,5.147,2897,4.618,2898,5.147,2899,4.618,2900,5.147,2901,9.208,2902,4.618,2903,5.147,2904,5.147,2905,4.618,2906,4.618,2907,4.618,2908,4.618,2909,5.147,2910,6.999,2911,6.999,2912,4.618,2913,4.618,2914,5.147,2915,5.147,2916,6.999,2917,4.618,2918,4.618,2919,4.618,2920,5.147,2921,4.618,2922,5.147,2923,5.147,2924,5.147,2925,5.147,2926,4.618,2927,4.618,2928,6.279,2929,5.147,2930,5.147]],["title/modules/FeedRoutingModule.html",[649,2.195,2895,3.702]],["body/modules/FeedRoutingModule.html",[0,0.374,3,0.035,4,0.043,5,0.051,36,0.752,45,0.005,51,0.119,60,0.042,91,1.984,128,1.831,161,0.003,162,0.004,163,0.003,204,1.609,288,1.907,324,1.234,338,2.718,339,2.629,340,2.718,341,2.718,342,2.718,343,2.718,344,2.32,345,2.718,346,2.718,347,2.718,348,2.586,349,2.718,350,2.673,351,2.718,352,2.718,353,2.718,354,1.693,355,2.718,379,3.015,395,2.78,400,2.821,540,3.192,651,3.431,655,3.597,667,3.688,669,4.552,726,5.012,728,6.185,729,5.913,730,3.891,731,7.329,735,5.286,736,6.523,743,5.629,1099,6.088,1100,6.088,1101,5.286,1102,5.629,1103,6.088,1104,8.149,1105,6.088,1106,6.088,1107,6.088,1108,6.088,1109,5.286,2895,6.185,2897,6.088,2931,6.786]],["title/classes/Filter.html",[0,0.276,435,1.267]],["body/classes/Filter.html",[0,0.274,2,0.591,3,0.026,4,0.026,5,0.031,7,2.095,11,2.152,24,2.668,28,1.036,30,4.455,32,0.173,34,0.19,35,0.408,36,1.01,38,0.616,39,0.361,42,0.276,44,0.567,45,0.005,46,0.556,47,0.567,51,0.06,60,0.031,65,3.093,76,2.935,109,2.139,112,0.678,113,0.678,114,1.246,137,1.538,161,0.002,162,0.003,163,0.002,172,2.577,185,1.588,208,1.926,223,2.553,236,3.914,279,3.697,288,1.373,305,1.598,321,2.104,322,1.431,350,2.689,435,2.657,488,2.899,489,1.533,490,1.512,607,4.916,732,3.808,757,4.028,859,4.028,872,5.283,902,4.568,969,3.483,1068,2.689,1240,4.812,1510,6.547,1825,4.812,2186,6.125,2371,5.662,2686,5.662,2845,5.662,2882,5.662,2932,9.504,2933,4.962,2934,6.826,2935,6.125,2936,6.826,2937,6.826,2938,9.504,2939,6.125,2940,6.826,2941,6.826,2942,6.826,2943,6.826,2944,6.826,2945,6.826,2946,6.826,2947,6.826,2948,6.125,2949,8.405,2950,7.803,2951,4.962,2952,4.962,2953,4.962,2954,4.962,2955,4.962,2956,6.826,2957,4.962,2958,6.826,2959,8.405,2960,4.962,2961,8.405,2962,6.826,2963,6.826,2964,6.826,2965,4.962,2966,6.826,2967,6.826,2968,4.962,2969,4.962,2970,4.962,2971,4.962,2972,4.962,2973,4.962,2974,4.962,2975,4.962,2976,4.962,2977,4.962,2978,4.962,2979,4.962,2980,6.826,2981,4.962]],["title/injectables/FilterService.html",[877,1.389,2828,3.702]],["body/injectables/FilterService.html",[0,0.311,3,0.029,4,0.029,5,0.035,8,0.884,28,2.014,34,0.217,35,0.445,36,0.924,39,0.358,42,0.289,45,0.005,49,0.608,50,0.53,51,0.106,60,0.046,61,0.782,65,2.738,161,0.004,162,0.003,163,0.003,185,1.283,189,1.902,204,2.242,208,2.07,223,2.726,234,2.384,303,2.724,305,1.743,321,2.186,324,1.027,426,1.93,435,2.328,488,1.697,489,1.745,490,1.721,555,4.684,864,3.818,865,3.676,866,3.436,873,5.874,877,2.063,878,2.473,902,4.048,969,4.11,1068,2.224,1130,2.922,1763,3.676,2828,5.5,2982,5.066,2983,8.333,2984,8.86,2985,8.86,2986,8.86,2987,8.86,2988,8.86,2989,7.447,2990,5.647,2991,5.647,2992,5.647,2993,5.647,2994,5.647,2995,5.647,2996,5.066,2997,7.447,2998,5.647,2999,6.154,3000,4.684,3001,4.684,3002,6.154,3003,4.684,3004,5.874,3005,4.684,3006,5.647,3007,8.86,3008,5.647,3009,5.647,3010,5.647,3011,5.647,3012,5.647,3013,5.647,3014,5.647,3015,5.647,3016,5.647,3017,5.647,3018,5.647,3019,5.647,3020,5.647,3021,5.647,3022,5.647,3023,5.647,3024,5.647,3025,5.066,3026,5.066,3027,5.066,3028,5.066,3029,5.066]],["title/components/FiltersComponent.html",[288,1.008,402,1.713]],["body/components/FiltersComponent.html",[0,0.308,3,0.029,4,0.029,5,0.034,17,1.941,32,0.168,33,0.739,34,0.215,35,0.442,39,0.24,42,0.245,44,0.377,45,0.005,46,0.584,47,0.377,51,0.11,52,0.5,60,0.034,64,1.55,121,1.571,132,1.592,137,2.125,161,0.003,162,0.003,163,0.003,185,1.139,274,1.658,275,2.194,288,1.668,289,1.912,290,2.456,291,1.97,293,2.001,294,2.001,296,3.061,297,1.884,298,3.657,301,2.647,305,1.732,306,3.364,321,1.292,322,1.613,324,1.017,356,1.728,357,2.647,358,2.607,359,1.803,360,3.158,361,2.001,362,2.001,363,1.912,364,2.001,365,1.912,366,2.599,367,2.647,368,1.912,369,2.647,370,1.912,371,2.001,372,1.884,373,2.001,374,1.912,375,2.001,376,3.158,377,1.912,378,2.001,379,1.856,380,2.647,381,1.912,382,1.884,383,1.856,384,1.97,385,2.001,386,1.912,387,2.607,388,2.001,389,1.941,390,1.83,391,2.647,392,1.912,393,2.001,394,3.158,395,1.856,396,2.001,397,1.912,398,1.912,399,2.001,400,1.884,401,2.001,402,3.017,403,1.912,404,2.001,405,1.884,406,2.001,407,1.912,408,2.001,409,1.941,410,1.912,411,2.001,412,1.912,413,1.635,414,2.001,415,1.912,416,2.607,417,1.912,418,2.967,419,2.001,420,1.912,421,2.001,422,1.912,423,2.001,424,1.884,425,1.912,426,1.912,427,1.912,428,1.912,429,2.023,430,1.912,431,2.001,432,1.912,433,1.912,434,1.912,435,1.414,436,1.884,437,1.884,438,2.001,439,1.884,440,2.001,441,1.884,442,1.97,443,2.001,565,1.97,593,1.571,594,1.571,595,1.613,602,2.706,608,1.571,902,4.022,929,6.64,1035,4.131,1968,6.519,3030,5.593,3031,7.441,3032,7.4,3033,5.593,3034,5.018,3035,5.018]],["title/classes/GuidService.html",[0,0.276,1125,3.15]],["body/classes/GuidService.html",[0,0.403,2,0.871,3,0.038,4,0.038,5,0.045,32,0.139,34,0.281,35,0.524,38,1.166,39,0.403,42,0.287,45,0.005,51,0.105,53,4.716,54,3.328,60,0.045,100,0.741,161,0.003,162,0.004,163,0.003,208,1.854,303,2.467,305,2.051,321,2.025,324,1.33,555,6.066,1125,5.509,2187,7.863,2996,6.561,3036,7.313,3037,9.729,3038,9.385,3039,8.764,3040,7.313,3041,7.313,3042,8.764,3043,7.313,3044,7.313,3045,7.313]],["title/classes/HandleUnexpectedError.html",[0,0.276,463,1.144]],["body/classes/HandleUnexpectedError.html",[0,0.526,2,0.691,3,0.03,4,0.03,5,0.036,8,1.044,10,2.018,32,0.196,33,0.969,34,0.223,35,0.453,36,0.84,37,1.677,38,1.223,39,0.249,40,1.505,42,0.249,44,0.391,45,0.005,46,0.383,47,0.391,49,0.624,50,0.544,51,0.101,52,0.519,60,0.061,61,0.803,98,1.711,100,0.588,112,1.327,113,1.327,114,1.24,127,3.648,146,1.154,161,0.004,162,0.004,163,0.003,185,1.167,189,1.524,254,2.364,282,1.925,354,1.447,366,2.986,435,1.466,460,3.922,463,2.043,464,1.505,465,1.466,466,1.651,467,1.651,484,2.219,488,1.743,489,1.792,490,1.767,504,1.792,506,2.21,535,2.323,581,3.325,887,4.982,902,3.152,916,3.775,917,5.137,918,4.982,922,3.646,923,5.137,1049,3.775,1052,4.088,1053,5.307,1054,3.775,1055,5.137,1056,4.088,1057,4.088,1058,5.343,1059,3.921,1060,4.088,1061,4.088,1062,3.921,3046,7.579,3047,5.8]],["title/classes/HandleUnexpectedError-1.html",[0,0.23,463,0.951,1042,1.936]],["body/classes/HandleUnexpectedError-1.html",[0,0.538,2,0.625,3,0.027,4,0.027,5,0.032,8,1.056,32,0.196,33,0.985,34,0.201,35,0.424,36,0.786,37,1.677,38,1.236,39,0.225,40,1.36,42,0.237,44,0.354,45,0.005,46,0.347,47,0.354,49,0.565,50,0.492,51,0.085,52,0.469,60,0.061,61,0.727,79,1.68,88,1.36,98,1.729,100,0.814,112,1.334,113,1.334,114,1.246,146,1.294,161,0.002,162,0.003,163,0.002,185,1.601,187,2.137,214,2.423,244,1.292,446,4.364,447,3.095,450,3.296,451,3.007,452,4.364,453,1.905,454,4.06,455,2.708,456,4.48,457,4.48,458,2.045,459,4.256,460,4.155,461,4.48,462,4.48,463,1.962,464,1.36,465,1.326,466,1.492,467,1.492,468,2.032,469,3.095,470,1.473,471,1.621,472,3.296,473,3.296,474,3.296,475,3.296,476,3.296,477,3.296,478,3.296,479,4.456,480,3.191,484,2.11,3048,7.088,3049,5.244]],["title/classes/HandleUnexpectedError-2.html",[0,0.23,463,0.951,750,2.621]],["body/classes/HandleUnexpectedError-2.html",[0,0.51,2,0.753,3,0.033,4,0.033,5,0.039,8,1.034,32,0.196,33,0.953,34,0.243,35,0.479,36,0.888,37,1.642,38,1.211,39,0.271,40,1.64,42,0.26,44,0.426,45,0.005,46,0.418,47,0.426,49,0.681,50,0.593,51,0.076,52,0.565,60,0.06,61,0.876,79,1.498,98,1.579,112,1.264,113,1.264,114,1.181,146,1.304,161,0.003,162,0.004,163,0.003,244,1.557,455,2.572,458,1.824,463,2.11,464,1.64,465,1.598,466,1.799,467,1.799,470,1.775,471,1.953,484,2.312,600,5.528,764,6.097,1514,5.528,1551,4.274,1826,4.274,2190,5.725,3050,4.456,3051,8.011,3052,6.321,3053,6.24,3054,4.924,3055,4.924,3056,4.924,3057,4.669]],["title/classes/HandleUnexpectedError-3.html",[0,0.23,463,0.951,2421,2.939]],["body/classes/HandleUnexpectedError-3.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.763,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,2.89,539,1.988,540,1.566,541,1.988,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,3058,5.973,3059,4.109]],["title/classes/HandleUnexpectedError-4.html",[0,0.23,463,0.951,3060,3.459]],["body/classes/HandleUnexpectedError-4.html",[0,0.519,2,0.611,3,0.027,4,0.027,5,0.032,8,1.06,14,2.381,16,2.247,17,1.201,32,0.194,33,0.957,34,0.197,35,0.417,36,0.774,37,1.683,38,1.207,39,0.3,40,1.331,42,0.235,44,0.575,45,0.005,46,0.339,47,0.346,49,0.552,50,0.481,51,0.084,52,0.459,60,0.06,61,0.711,79,1.655,98,1.652,100,0.864,112,1.287,113,1.287,114,1.202,146,1.309,152,2.381,161,0.002,162,0.003,163,0.002,192,1.631,212,2.577,213,3.002,214,2.387,215,2.29,244,1.264,325,1.703,413,3.034,455,2.322,458,1.48,463,1.945,464,1.331,465,1.297,470,1.44,471,1.585,484,2.087,504,2.453,520,2.755,818,3.121,1229,3.795,1235,2.941,1545,3.224,1550,3.121,2245,2.788,2314,3.339,2337,5.168,2344,5.168,2345,3.339,2346,5.112,2348,4.552,2349,3.121,2350,3.339,2351,4.831,3061,3.224,3062,6.983,3063,5.13,3064,4.722,3065,3.027,3066,4.552,3067,4.429,3068,4.685,3069,4.685,3070,4.685,3071,3.468,3072,3.468,3073,3.468,3074,3.468,3075,3.468,3076,3.339,3077,3.339,3078,5.368,3079,5.368,3080,4.722,3081,3.468,3082,3.468,3083,3.468,3084,3.468,3085,3.339]],["title/classes/HandleUnexpectedError-5.html",[0,0.23,463,0.951,2210,3.741]],["body/classes/HandleUnexpectedError-5.html",[0,0.533,2,0.676,3,0.029,4,0.029,5,0.035,8,1.051,32,0.196,33,0.978,34,0.218,35,0.446,36,0.828,37,1.67,38,1.231,39,0.244,40,1.472,42,0.247,44,0.383,45,0.005,46,0.375,47,0.383,49,0.611,50,0.532,51,0.068,52,0.507,60,0.061,61,0.786,69,1.829,79,1.771,98,1.7,112,1.295,113,1.295,114,1.209,146,1.32,161,0.003,162,0.003,163,0.003,244,1.398,455,2.442,458,2.155,463,2.025,464,1.472,465,1.434,466,1.615,467,1.615,470,1.593,471,1.753,484,2.195,741,5.11,1626,4.789,2876,4.789,2877,3.452,3086,3.566,3087,7.471,3088,5.674,3089,5.051,3090,4.929,3091,4.929,3092,5.437,3093,4.929,3094,4.929,3095,3.836,3096,3.836,3097,3.836,3098,3.836,3099,3.693,3100,3.836,3101,3.836,3102,3.693]],["title/classes/HandleUnexpectedError-6.html",[0,0.23,463,0.951,2810,3.741]],["body/classes/HandleUnexpectedError-6.html",[0,0.524,2,0.684,3,0.03,4,0.03,5,0.035,8,1.042,27,3.547,32,0.196,33,0.967,34,0.22,35,0.45,36,0.835,37,1.674,38,1.22,39,0.247,40,1.49,42,0.248,44,0.387,45,0.005,46,0.38,47,0.387,49,0.618,50,0.539,51,0.09,52,0.514,60,0.06,61,0.796,69,3.38,79,1.361,98,1.706,112,1.299,113,1.299,114,1.214,146,1.324,161,0.003,162,0.004,163,0.003,463,2.035,464,1.49,465,1.452,466,1.635,467,1.635,484,2.208,573,4.388,1131,3.204,1232,4.093,2045,3.293,2236,5.112,2237,3.738,2240,4.048,2241,5.112,2242,5.112,2243,5.112,2244,5.112,2245,3.121,2246,3.738,2247,4.048,2248,4.048,2249,4.048,2250,4.048,2251,5.309,2252,3.738,3103,7.53,3104,5.743]],["title/injectables/HandlebarsService.html",[877,1.389,2144,3.702]],["body/injectables/HandlebarsService.html",[0,0.193,3,0.018,4,0.018,5,0.022,17,1.498,24,3.176,28,1.492,32,0.154,34,0.322,35,0.317,36,0.895,39,0.15,42,0.293,44,0.482,45,0.005,46,0.555,47,0.482,49,0.571,50,0.758,51,0.115,52,0.313,53,2.414,54,1.593,60,0.022,87,1.625,100,0.971,120,1.379,137,1.89,161,0.004,162,0.002,163,0.002,170,1.292,182,1.953,185,0.539,187,1.427,189,1.544,191,1.625,194,2.007,204,1.819,208,2.155,215,2.367,267,1.953,282,1.76,291,1.233,303,2.767,305,1.241,321,2.26,322,2.785,324,0.637,429,1.45,593,0.983,594,0.983,595,1.01,608,0.983,690,1.812,691,1.812,877,1.47,878,1.533,915,1.233,936,4.215,955,2.13,967,3.739,969,1.563,1013,1.953,1042,2.462,1068,3.181,1386,1.903,1387,4.753,1389,4.4,1411,2.414,1713,3.141,1758,2.066,1775,2.904,1790,3.572,1791,4.65,1881,3.985,2144,3.917,2154,3.141,2421,3.739,2525,4.987,2526,2.904,2555,4.987,2556,3.141,2557,2.904,3060,2.904,3105,3.501,3106,5.744,3107,5.304,3108,4.758,3109,5.304,3110,5.304,3111,7.143,3112,7.143,3113,7.143,3114,7.143,3115,7.143,3116,6.403,3117,7.143,3118,7.143,3119,7.143,3120,7.143,3121,7.143,3122,7.143,3123,7.143,3124,7.143,3125,6.403,3126,3.501,3127,5.304,3128,3.141,3129,3.501,3130,4.513,3131,5.304,3132,6.403,3133,3.501,3134,3.501,3135,3.501,3136,3.501,3137,3.501,3138,3.501,3139,3.501,3140,3.501,3141,3.501,3142,3.501,3143,3.501,3144,3.501,3145,3.501,3146,3.501,3147,3.501,3148,3.501,3149,3.501,3150,3.501,3151,3.501,3152,3.501,3153,2.904,3154,2.904,3155,3.501,3156,3.501,3157,3.501,3158,3.501,3159,3.501,3160,3.501,3161,3.501,3162,3.501,3163,3.501,3164,3.501,3165,3.501,3166,3.501,3167,3.501,3168,3.501,3169,3.501,3170,3.501,3171,3.501,3172,3.141,3173,3.141,3174,3.501,3175,5.304,3176,3.141,3177,5.744,3178,3.141,3179,3.141,3180,3.141,3181,3.501,3182,3.501,3183,3.501,3184,3.501,3185,3.501,3186,3.501,3187,3.501,3188,3.501,3189,3.501,3190,3.501,3191,3.501,3192,3.501,3193,3.501,3194,2.727,3195,3.501,3196,3.501,3197,8.847,3198,6.403,3199,8.847,3200,8.847,3201,3.501,3202,3.501,3203,3.501,3204,7.675,3205,5.304,3206,3.501,3207,3.501,3208,3.501,3209,3.501,3210,8.076,3211,3.501,3212,7.675,3213,3.501,3214,3.501,3215,3.501,3216,3.501,3217,5.304,3218,3.501,3219,3.501,3220,3.501,3221,3.501,3222,3.501,3223,3.501,3224,2.904,3225,3.501,3226,3.501,3227,3.501,3228,3.501,3229,3.501,3230,3.501,3231,3.501,3232,3.501,3233,3.501,3234,3.501,3235,3.501,3236,3.501,3237,3.501,3238,3.501,3239,3.501,3240,3.501,3241,3.501,3242,5.304,3243,6.403,3244,6.403,3245,3.501]],["title/classes/I18n.html",[0,0.276,170,1.85]],["body/classes/I18n.html",[0,0.425,2,0.918,3,0.04,4,0.04,5,0.047,32,0.147,38,1.123,39,0.388,42,0.228,44,0.667,45,0.005,46,0.51,47,0.52,51,0.092,60,0.047,100,0.973,112,1.054,113,1.054,114,0.984,161,0.004,162,0.004,163,0.004,170,3.337,182,5.044,184,3.989,189,1.991,191,3.578,3246,7.708,3247,7.708,3248,7.708]],["title/injectables/I18nService.html",[566,3.702,877,1.389]],["body/injectables/I18nService.html",[0,0.356,3,0.034,4,0.034,5,0.04,32,0.177,34,0.248,35,0.485,36,1.065,39,0.277,42,0.29,44,0.548,45,0.005,46,0.537,47,0.548,51,0.119,52,0.578,60,0.04,100,1.009,137,2.242,161,0.003,162,0.004,163,0.003,208,1.718,303,2.576,305,1.901,321,1.493,322,1.864,324,1.175,566,5.998,593,1.814,594,1.814,595,1.864,608,1.814,690,3.343,691,3.343,877,2.25,878,2.829,947,6.737,1411,3.696,1788,5.105,1790,4.531,1791,5.783,2768,6.657,3106,7.287,3108,7.287,3128,5.796,3130,6.77,3153,5.359,3154,5.359,3172,5.796,3173,5.796,3176,5.796,3177,7.97,3178,5.796,3179,5.796,3180,5.796,3249,6.46,3250,8.122,3251,6.46,3252,8.122,3253,6.46,3254,6.46,3255,6.46,3256,6.46,3257,6.46,3258,6.46,3259,6.46,3260,6.46,3261,6.46,3262,5.796,3263,5.796,3264,6.46,3265,6.46,3266,8.122,3267,6.46,3268,6.46]],["title/components/IconComponent.html",[288,1.008,403,1.713]],["body/components/IconComponent.html",[0,0.262,3,0.025,4,0.034,5,0.041,32,0.182,33,0.662,34,0.183,35,0.396,36,0.527,39,0.204,42,0.286,44,0.321,45,0.005,46,0.546,47,0.321,49,0.512,50,0.446,51,0.092,60,0.029,64,1.318,69,1.534,91,1.391,100,0.911,121,1.336,128,1.283,132,1.354,161,0.002,162,0.003,163,0.002,175,2.749,176,3.423,185,1.021,274,1.41,275,1.965,288,1.535,289,1.626,290,2.2,291,1.676,292,2.045,293,1.702,294,1.702,296,2.816,297,1.602,298,3.628,299,3.017,301,1.702,303,2.362,305,1.552,306,3.146,321,1.763,322,2.201,324,0.865,338,1.905,339,1.843,340,1.905,341,1.905,342,1.905,343,1.905,344,1.626,345,1.905,346,1.905,347,1.905,348,1.813,349,1.905,350,1.874,351,1.905,352,1.905,353,1.905,354,1.187,355,1.905,356,1.47,357,2.372,358,2.336,359,1.534,360,2.953,361,1.702,362,1.702,363,1.626,364,1.702,365,1.626,366,2.391,367,2.372,368,1.626,369,2.372,370,1.626,371,1.702,372,1.602,373,1.702,374,1.626,375,1.702,376,2.953,377,1.626,378,1.702,379,1.579,380,2.372,381,1.626,382,1.602,383,1.579,384,1.676,385,1.702,386,1.626,387,2.336,388,1.702,389,1.651,390,1.556,391,2.372,392,1.626,393,1.702,394,2.953,395,1.579,396,1.702,397,1.626,398,1.626,399,1.702,400,1.602,401,1.702,402,1.626,403,2.822,404,1.702,405,1.602,406,1.702,407,1.626,408,1.702,409,1.651,410,1.626,411,1.702,412,1.626,413,1.391,414,1.702,415,1.626,416,2.336,417,1.626,418,2.73,419,1.702,420,1.626,421,1.702,422,1.626,423,1.702,424,1.602,425,1.626,426,1.626,427,1.626,428,1.626,429,1.813,430,1.626,431,1.702,432,1.626,433,1.626,434,1.626,435,1.202,436,1.602,437,1.602,438,1.702,439,1.602,440,1.702,441,1.602,442,1.676,443,1.702,506,2.908,677,2.807,934,4.673,978,6.847,1386,2.585,1387,3.858,1389,4.375,1533,3.096,1869,3.946,2296,3.513,2615,6.33,2659,2.585,3269,4.757,3270,7.405,3271,7.63,3272,4.757,3273,6.629,3274,6.629,3275,8.254,3276,8.254,3277,6.629,3278,6.629,3279,6.629,3280,8.679,3281,6.629,3282,4.757,3283,4.757,3284,4.757,3285,4.757,3286,4.757,3287,4.757,3288,4.757,3289,4.757,3290,4.757,3291,4.757,3292,4.757,3293,4.757,3294,4.757,3295,4.757,3296,4.757,3297,4.757,3298,4.757,3299,4.757,3300,4.757,3301,4.757,3302,4.757,3303,4.757,3304,4.757,3305,4.757,3306,4.757,3307,6.629,3308,4.757,3309,7.63,3310,4.757,3311,4.757,3312,4.757,3313,4.268,3314,5.948]],["title/components/IframeDisplayComponent.html",[288,1.008,405,1.688]],["body/components/IframeDisplayComponent.html",[0,0.286,3,0.027,4,0.036,5,0.043,32,0.163,33,0.702,34,0.199,35,0.42,36,0.574,39,0.222,42,0.253,44,0.349,45,0.005,46,0.566,47,0.349,51,0.107,52,0.463,60,0.032,64,1.435,91,1.515,121,1.455,128,1.398,132,1.474,137,2.079,161,0.002,162,0.003,163,0.002,185,1.082,208,1.096,274,1.536,275,2.084,288,1.605,289,1.771,290,2.333,291,1.825,292,2.227,293,1.853,294,1.853,296,2.945,297,1.745,298,3.644,299,3.199,301,2.515,303,2.249,305,1.645,306,3.261,321,1.197,322,1.494,324,0.942,338,2.075,339,2.007,340,2.075,341,2.075,342,2.075,343,2.075,344,1.771,345,2.075,346,2.075,347,2.075,348,1.974,349,2.075,350,2.041,351,2.075,352,2.075,353,2.075,354,1.293,355,2.075,356,1.601,357,2.515,358,2.477,359,1.67,360,3.062,361,1.853,362,1.853,363,1.771,364,1.853,365,1.771,366,2.501,367,2.515,368,1.771,369,2.515,370,1.771,371,1.853,372,1.745,373,1.853,374,1.771,375,1.853,376,3.062,377,1.771,378,1.853,379,1.72,380,2.515,381,1.771,382,1.745,383,1.72,384,1.825,385,1.853,386,1.771,387,2.477,388,1.853,389,1.798,390,1.695,391,2.515,392,1.771,393,1.853,394,3.062,395,1.72,396,1.853,397,1.771,398,1.771,399,1.853,400,1.745,401,1.853,402,1.771,403,1.771,404,1.853,405,2.882,406,1.853,407,1.771,408,1.853,409,1.798,410,1.771,411,1.853,412,1.771,413,1.515,414,1.853,415,1.771,416,2.477,417,1.771,418,2.855,419,1.853,420,1.771,421,1.853,422,1.771,423,1.853,424,1.745,425,1.771,426,1.771,427,1.771,428,1.771,429,1.922,430,1.771,431,1.853,432,1.771,433,1.771,434,1.771,435,1.309,436,1.745,437,1.745,438,1.853,439,1.745,440,1.853,441,1.745,442,1.825,443,1.853,517,2.187,565,1.825,591,3.652,592,3.503,594,1.455,595,1.494,608,1.455,641,3.057,642,5.476,1004,5.476,1773,3.372,1788,4.419,1862,3.826,2272,7.099,2279,7.678,2527,7.159,3314,4.648,3315,5.181,3316,7.03,3317,7.98,3318,7.03,3319,7.98,3320,7.98,3321,7.03,3322,5.181,3323,5.181,3324,5.181,3325,5.181,3326,4.648,3327,5.181,3328,5.181,3329,7.03,3330,5.181]],["title/classes/ImplicitAuthenticationHandler.html",[0,0.276,1197,3.533]],["body/classes/ImplicitAuthenticationHandler.html",[0,0.418,1,1.054,2,0.287,3,0.012,4,0.012,5,0.015,8,0.255,9,1.832,12,2.731,13,1.796,17,1.774,23,2.043,24,1.349,27,1.016,28,1.89,32,0.131,33,0.501,34,0.092,36,1.067,37,0.665,39,0.249,41,3.797,42,0.189,44,0.338,45,0.005,46,0.383,47,0.266,49,0.259,51,0.109,52,0.215,53,2.282,54,1.095,55,1.456,58,1.796,60,0.048,61,0.333,63,1.118,67,1.796,69,1.272,74,1.728,82,3.192,83,1.832,85,1.118,87,1.118,90,3.097,91,2.01,93,1.832,94,1.165,95,1.832,99,2.971,100,0.98,101,3.989,102,4.253,103,3.718,104,2.284,117,1.19,119,2.867,120,2.86,125,2.282,128,1.353,137,1.966,146,0.685,161,0.001,162,0.002,163,0.001,172,2.294,189,0.484,204,2.258,208,2.1,209,2.107,212,1.851,214,1.349,223,1.64,234,1.016,254,1.608,282,2.515,303,2.422,305,0.923,321,1.34,322,2.68,324,0.438,354,1.447,383,0.799,429,1.75,435,0.608,453,0.875,470,0.676,501,0.888,504,0.744,520,0.835,561,4.512,568,4.228,573,1.141,593,0.676,594,0.676,595,0.694,602,1.165,605,1.276,607,4.614,608,1.408,619,2.781,627,1.832,640,2.401,673,1.276,715,2.569,716,2.569,744,1.567,757,3.422,761,0.948,787,1.246,788,1.276,877,1.093,912,1.728,913,1.141,915,0.848,969,2.238,1013,1.343,1042,1.832,1043,2.781,1068,0.948,1110,4.088,1111,1.697,1112,4.727,1113,2.914,1114,1.778,1121,3.325,1122,1.697,1123,1.628,1124,1.567,1125,3.645,1126,1.628,1127,1.778,1128,5.951,1129,1.697,1130,1.246,1131,1.343,1132,4.283,1133,2.914,1134,2.914,1135,2.914,1136,4.088,1137,2.914,1138,1.778,1139,1.778,1140,1.778,1141,1.778,1142,1.421,1143,1.697,1144,2.914,1145,1.697,1146,1.778,1147,1.778,1148,3.703,1149,1.778,1150,1.778,1151,1.778,1152,1.778,1153,1.778,1154,1.778,1155,1.778,1156,1.778,1157,1.778,1158,1.778,1159,4.088,1160,1.778,1161,4.512,1162,1.778,1163,1.697,1164,1.778,1165,1.778,1166,1.778,1167,1.778,1168,1.778,1169,3.703,1170,1.778,1171,1.778,1172,1.778,1173,1.778,1174,5.362,1175,5.597,1176,2.914,1177,4.727,1178,1.778,1179,3.703,1180,1.778,1181,2.914,1182,1.778,1183,4.283,1184,2.914,1185,1.778,1186,1.778,1187,1.778,1188,1.778,1189,1.778,1190,1.778,1191,2.914,1192,1.778,1193,2.914,1194,2.914,1195,1.778,1196,1.778,1197,3.534,1198,1.778,1199,2.914,1200,1.778,1201,1.778,1202,1.697,1203,2.569,1204,1.778,1205,2.781,1206,1.628,1207,1.778,1208,1.778,1209,1.778,1210,2.914,1211,1.778,1212,3.703,1213,1.778,1214,5.342,1215,3.703,1216,3.703,1217,3.703,1218,3.703,1219,3.703,1220,3.534,1221,1.778,1222,1.778,1223,1.778,1224,1.778,1225,2.914,1226,2.781,1227,2.914,1228,1.697,1229,2.725,1230,2.914,1231,2.914,1232,2.144,1233,1.778,1234,2.914,1235,2.262,1236,2.914,1237,1.778,1238,2.914,1239,1.778,1240,2.781,1241,1.778,1242,2.914,1243,1.778,1244,1.778,1245,2.914,1246,2.914,1247,1.778,1248,1.778,1249,1.778,1250,1.778,1251,1.778,1252,1.778,1253,1.778,1254,1.778,1255,2.914,1256,1.778,1257,1.778,1258,1.778,1259,1.778,1260,1.778,1261,1.778,1262,1.778,1263,1.016,1264,1.778,1265,1.778,1266,1.778,1267,1.778,1268,1.778,1269,1.778,1270,1.778,1271,2.569,1272,4.727,1273,5.362,1274,1.778,1275,1.778,1276,4.088,1277,3.534,1278,1.778,1279,1.697,1280,1.778,1281,1.778,1282,2.959,1283,1.778,1284,2.914,1285,1.778,1286,2.914,1287,1.778,1288,1.628,1289,1.778,1290,1.778,1291,1.778,1292,1.778,1293,1.778,1294,1.778,1295,1.628,1296,1.778,1297,2.48,1298,1.778,1299,1.778,1300,1.778,1301,1.778,1302,1.778,1303,1.778,1304,1.778,1305,1.778,1306,1.778,1307,1.778,1308,1.778,1309,1.778,1310,1.778,1311,1.778,1312,2.914,1313,1.778,1314,1.778,1315,3.703,1316,2.914,1317,1.778,1318,1.778,1319,2.914,1320,2.914,1321,1.778,1322,1.778,1323,1.778,1324,1.778,1325,1.778,1326,1.778,1327,1.778,1328,4.283,1329,2.914,1330,1.697,1331,1.778,1332,1.778,1333,1.778,1334,1.628,1335,1.778,1336,1.778,1337,1.778,1338,1.778,1339,1.778,1340,2.781,1341,1.778,1342,1.778,1343,1.778,1344,2.914,1345,2.914,1346,1.778,1347,1.778,1348,1.778,1349,1.778,1350,1.778,1351,1.778,1352,1.778,1353,1.778,1354,1.778,1355,1.778,1356,1.778,1357,1.513,1358,1.778,1359,1.778,1360,1.778,1361,2.914,1362,1.778,1363,1.778,1364,1.778,1365,1.778,1366,1.778,1367,1.778,1368,1.778,1369,1.778,1370,1.778,1371,1.778,1372,1.697,1373,1.778,1374,1.778,1375,1.778,1376,1.778,1377,1.778,1378,1.778,1379,1.778,1380,1.778,1381,1.778,1382,1.778,1383,1.778,1384,1.778,1385,1.778,1386,1.308,1387,1.995,1388,3.703,1389,2.262,1390,1.778,1391,1.778,1392,1.778,1393,1.778,1394,1.276,1395,1.778,1396,1.778,1397,1.778,1398,4.727,1399,1.778,1400,5.118,1401,1.778,1402,1.778,1403,1.778,1404,3.39,1405,1.697,1406,1.778,1407,1.697,1408,1.778,1409,2.914,1410,2.781,1411,1.796,1412,1.778,1413,1.697,1414,1.778,1415,5.078,1416,1.697,1417,1.778,1418,2.914,1419,1.778,1420,1.567,1421,1.778,1422,1.778,1423,1.778,1424,1.778,1425,1.778,1426,1.778,1427,1.778,1428,1.778,1429,1.778,1430,1.778,1431,1.778,1432,1.778,1580,3.273,1584,1.997,3331,2.16,3332,2.407,3333,2.407,3334,2.407,3335,2.407,3336,2.407]],["title/classes/ImplicitallyAuthenticated.html",[0,0.276,93,2.327]],["body/classes/ImplicitallyAuthenticated.html",[0,0.532,1,3.031,2,0.475,3,0.021,4,0.021,5,0.047,6,2.115,8,1.071,9,4.254,10,1.063,11,1.951,12,3.272,13,3.857,14,3.766,15,2.065,16,3.337,17,1.984,18,3.861,19,4.011,20,3.178,21,2.226,22,2.169,23,3.105,24,2.366,25,3.761,26,3.861,27,2.922,28,1.445,29,3.178,30,3.668,31,3.262,32,0.19,33,0.963,34,0.153,35,0.349,36,0.899,37,1.284,38,1.208,39,0.171,41,2.829,42,0.118,45,0.005,49,0.43,50,0.374,51,0.091,52,0.357,53,3.149,54,1.816,55,2.554,56,1.816,57,2.226,58,2.661,59,2.226,60,0.06,61,0.553,62,2.065,63,3.213,64,1.106,65,2.139,66,3.499,67,2.661,68,3.761,69,3.079,70,4.759,71,4.039,72,3.499,73,2.169,74,2.561,75,3.768,76,3.276,77,4.102,78,3.499,79,1.386,80,3.499,81,2.169,82,3.213,83,3.537,84,3.581,85,1.853,86,2.169,87,1.853,88,1.035,89,2.226,90,2.829,91,1.167,92,2.169,93,3.537,94,1.931,95,3.213,96,2.169,97,2.169,98,1.456,99,1.853,100,0.822,101,1.853,102,1.781,103,1.891,104,1.572,105,2.226,106,2.226,107,3.262,108,3.178,109,1.832,110,3.178,111,2.226,112,1.228,113,1.228,114,1.147,115,2.226,116,2.169,117,1.973,118,2.226,119,1.973,120,1.572,121,1.121,122,2.169,123,2.975,124,3.262,125,3.149,126,3.026,127,1.626,128,1.077,129,2.169,130,2.115,131,4.039,132,1.136,133,2.226,134,2.065,135,2.169,136,2.957,137,1.317,138,2.226,139,2.226,140,4.251,141,2.169,142,2.226,143,3.178,144,2.226,145,3.178,146,0.545,147,2.226,148,2.169,149,2.226,150,2.169,151,2.226,152,2.714,153,3.178,154,1.496,155,2.226,156,2.226,157,2.226,158,3.262,159,2.226,160,2.115,161,0.002,162,0.003,163,0.002,3337,3.99]],["title/components/InfoComponent.html",[288,1.008,407,1.713]],["body/components/InfoComponent.html",[0,0.269,3,0.043,4,0.025,5,0.03,7,3.52,17,2.172,32,0.172,33,0.673,34,0.187,35,0.403,39,0.209,42,0.28,44,0.328,45,0.005,46,0.551,47,0.328,51,0.118,52,0.435,60,0.03,64,1.349,69,1.57,121,1.367,130,4.096,132,1.386,134,2.52,137,2.04,161,0.002,162,0.003,163,0.002,185,1.037,189,0.979,208,1.634,274,1.444,275,1.998,288,1.554,289,1.665,290,2.237,291,1.716,292,2.094,293,1.742,294,1.742,296,2.852,297,1.64,298,3.633,299,3.067,301,2.411,303,2.556,305,1.577,306,3.178,321,1.125,322,1.405,324,0.885,356,1.505,357,2.411,358,2.374,359,1.57,360,2.983,361,1.742,362,1.742,363,1.665,364,1.742,365,1.665,366,2.422,367,2.411,368,1.665,369,2.411,370,1.665,371,1.742,372,1.64,373,1.742,374,1.665,375,1.742,376,2.983,377,1.665,378,1.742,379,1.616,380,2.411,381,1.665,382,1.64,383,1.616,384,1.716,385,1.742,386,1.665,387,2.374,388,1.742,389,1.69,390,1.593,391,2.411,392,1.665,393,1.742,394,2.983,395,1.616,396,1.742,397,1.665,398,1.665,399,1.742,400,1.64,401,1.742,402,1.665,403,1.665,404,1.742,405,1.64,406,1.742,407,2.85,408,1.742,409,1.69,410,1.665,411,1.742,412,1.665,413,1.424,414,1.742,415,1.665,416,2.374,417,1.665,418,2.764,419,1.742,420,1.665,421,1.742,422,1.665,423,1.742,424,1.64,425,1.665,426,1.665,427,1.665,428,1.665,429,2.476,430,1.665,431,1.742,432,1.665,433,1.665,434,1.665,435,1.231,436,1.64,437,1.64,438,1.742,439,1.64,440,1.742,441,1.64,442,1.716,443,1.742,565,1.716,593,1.367,594,1.367,595,1.405,608,1.367,641,2.874,915,1.716,934,4.75,936,5.478,947,5.589,955,2.963,1142,2.874,1263,2.056,1411,3.067,1511,3.061,1628,4.369,1629,4.369,1788,4.236,1867,6.046,1869,5.589,2712,6.046,3153,4.039,3154,4.039,3262,4.369,3263,4.369,3338,4.87,3339,7.727,3340,6.738,3341,7.727,3342,7.727,3343,7.727,3344,6.738,3345,4.87,3346,4.87,3347,4.87,3348,4.87,3349,4.87,3350,4.87,3351,4.87,3352,4.87,3353,4.87,3354,4.87,3355,4.87,3356,4.369,3357,6.738,3358,4.87,3359,6.738,3360,4.87,3361,6.738,3362,4.87,3363,4.87,3364,4.87,3365,6.738,3366,6.738,3367,6.738,3368,4.87,3369,3.433,3370,4.87]],["title/classes/InitAuthStatus.html",[0,0.276,63,2.327]],["body/classes/InitAuthStatus.html",[0,0.529,1,2.987,2,0.464,3,0.02,4,0.02,5,0.046,6,2.063,7,1.643,8,1.068,9,4.226,10,1.036,11,1.928,12,3.271,13,3.823,14,3.727,15,2.014,16,3.297,17,1.966,18,3.805,19,3.97,20,3.12,21,2.171,22,2.115,23,3.068,24,2.331,25,3.707,26,3.805,27,2.879,28,1.424,29,3.12,30,3.615,31,3.202,32,0.193,33,0.958,34,0.149,35,0.343,36,0.963,37,1.464,38,1.203,39,0.246,40,1.01,41,2.778,42,0.202,44,0.262,45,0.005,46,0.257,47,0.262,49,0.419,50,0.365,51,0.09,52,0.348,53,3.104,54,1.771,55,2.517,56,1.771,57,2.171,58,2.612,59,2.171,60,0.06,61,0.539,62,2.014,63,3.495,64,1.078,65,2.108,66,3.449,67,2.612,68,3.707,69,3.064,70,4.722,71,3.99,72,3.449,73,2.115,74,2.514,75,3.722,76,3.236,77,4.06,78,3.449,79,1.361,80,3.449,81,2.115,82,3.166,83,3.495,84,3.529,85,1.807,86,2.115,87,1.807,88,1.01,89,2.171,90,2.778,91,1.138,92,2.115,93,3.166,94,1.883,95,3.166,96,2.115,97,2.115,98,1.441,99,1.807,100,0.814,101,1.807,102,1.737,103,1.844,104,1.533,105,2.171,106,2.171,107,3.805,108,3.707,109,2.137,110,3.707,111,3.202,112,1.219,113,1.219,114,1.139,115,2.171,116,2.115,117,1.924,118,2.171,119,1.924,120,1.533,121,1.093,122,2.115,123,2.932,124,3.202,125,3.104,126,2.971,127,1.586,128,1.05,129,2.115,130,2.063,131,3.99,132,1.108,133,2.171,134,2.014,135,2.115,136,2.903,137,1.293,138,2.171,139,2.171,140,4.2,141,2.115,142,2.171,143,3.12,144,2.171,145,3.12,146,0.532,147,2.171,148,2.115,149,2.171,150,2.115,151,2.171,152,2.665,153,3.12,154,1.459,155,2.171,156,2.171,157,2.171,158,2.171,159,2.171,160,2.063,161,0.002,162,0.003,163,0.002,484,1.793,3371,5.74,3372,3.892]],["title/classes/InitFilters.html",[0,0.276,873,3.533]],["body/classes/InitFilters.html",[0,0.466,2,0.819,3,0.036,4,0.036,5,0.042,8,1.011,32,0.197,33,0.912,34,0.264,35,0.504,36,0.936,37,1.539,38,1.184,39,0.295,40,1.784,42,0.27,44,0.464,45,0.005,46,0.455,47,0.464,49,0.74,50,0.645,51,0.11,52,0.615,60,0.059,61,0.952,64,1.905,65,2.609,98,1.516,112,1.154,113,1.154,114,1.078,161,0.003,162,0.004,163,0.003,172,2.01,189,1.383,435,2.309,484,2.401,732,4.71,859,5.392,860,5.355,863,6.168,864,4.649,865,4.476,866,5.137,867,4.322,868,5.355,869,3.942,870,5.703,871,6.168,872,4.322,873,6.44,874,7.574,875,6.168,876,5.703,3373,8.442,3374,6.875]],["title/classes/InitTimeline.html",[0,0.276,3375,3.533]],["body/classes/InitTimeline.html",[0,0.475,2,0.846,3,0.037,4,0.037,5,0.044,8,1.022,32,0.198,33,0.925,34,0.273,35,0.515,36,0.955,37,1.561,38,1.197,39,0.305,40,1.843,42,0.274,44,0.479,45,0.005,46,0.47,47,0.479,49,0.765,50,0.666,51,0.085,52,0.635,60,0.059,61,0.984,64,1.968,98,1.546,161,0.003,162,0.004,163,0.003,185,1.094,390,3.032,484,2.436,501,2.622,2659,3.861,3375,6.792,3376,5.533,3377,8.612,3378,7.103,3379,7.727,3380,5.892,3381,6.533,3382,6.373,3383,6.373,3384,6.373,3385,5.892]],["title/classes/Input.html",[0,0.276,176,2.079]],["body/classes/Input.html",[0,0.52,2,0.536,3,0.023,4,0.023,5,0.028,8,0.478,11,1.153,23,1.835,24,1.539,28,1.683,32,0.162,36,0.499,38,1.323,39,0.411,42,0.133,44,0.304,45,0.005,46,0.533,47,0.304,50,0.756,51,0.089,60,0.061,61,0.884,100,1.044,112,1.268,113,1.268,114,1.185,123,1.935,161,0.003,162,0.003,163,0.002,166,2.657,167,4.039,168,3.881,169,5.548,170,3.483,171,2.581,172,2.935,173,4.009,174,4.009,175,2.645,176,3.341,177,4.009,178,4.009,179,4.009,180,4.009,181,4.009,185,0.693,186,2.33,187,1.835,188,2.09,189,0.905,190,2.83,191,2.09,192,1.431,193,2.83,194,2.581,195,2.83,196,2.83,197,2.83,198,2.83,199,2.83,200,2.83,201,2.83,202,2.83,203,4.009,204,2.093,205,3.154,206,2.83,207,4.009,208,1.567,209,1.636,210,3.657,211,2.83,212,1.662,213,1.935,214,1.539,215,2.009,216,2.739,217,2.83,218,2.83,219,2.83,220,2.83,221,2.83,222,2.83,223,3.196,224,2.83,225,2.83,226,2.83,227,2.739,228,2.739,229,2.471,230,2.83,231,2.83,232,2.83,233,2.83,234,1.901,235,2.83,236,2.581,237,2.83,238,2.83,239,2.83,240,2.83,241,2.657,242,2.178,243,2.83,244,1.109,245,2.581,246,2.739,247,2.009,248,2.739,249,2.447,250,2.83,251,2.83,252,2.83,253,2.83,254,1.835,255,2.83,256,2.83,257,2.83,258,2.83,259,2.83,260,2.83,261,2.83,262,2.83,263,2.83,264,2.276,265,2.83,266,2.83,267,2.512,268,2.83,269,2.83,270,2.83,271,2.83,272,2.83,273,4.902,274,1.335,275,1.335,276,2.739,277,2.739,278,2.739,279,2.133,280,4.656,281,4.656,282,2.931,283,4.656,284,4.132,285,4.902,286,4.656,287,4.656,3386,4.502]],["title/classes/LightCard.html",[0,0.276,488,1.506]],["body/classes/LightCard.html",[0,0.415,2,0.682,3,0.03,4,0.03,5,0.035,8,0.89,11,2.149,24,1.959,32,0.109,38,1.302,39,0.36,42,0.169,44,0.386,45,0.005,46,0.379,47,0.386,51,0.09,60,0.058,61,1.163,88,1.95,100,1.073,112,0.783,113,0.783,114,0.732,161,0.005,162,0.004,163,0.003,170,3.572,184,5.139,188,2.66,189,1.512,205,4.15,208,1.212,214,2.869,282,3.408,325,1.902,426,2.869,488,2.26,563,5.674,750,3.601,1042,2.66,1068,2.257,1386,3.114,1387,4.505,1389,5.109,1511,4.726,1757,5.14,1758,4.953,1759,5.916,1760,6.198,1761,6.198,1762,6.198,1763,6.465,1764,6.537,1765,6.537,1766,6.198,1767,6.198,1770,5.856,2421,4.039,2691,4.039,2696,4.039,2781,6.025,2999,5.553,3000,4.752,3001,4.752,3002,6.198,3003,4.752,3004,5.916,3005,4.752,3369,4.039,3387,6.237,3388,4.752,3389,7.53,3390,5.729,3391,5.14,3392,5.14,3393,4.752,3394,4.752,3395,5.14]],["title/classes/LightCardAlreadyUpdated.html",[0,0.276,525,2.237]],["body/classes/LightCardAlreadyUpdated.html",[0,0.556,2,0.499,3,0.022,4,0.022,5,0.026,8,1.087,10,2.202,11,1.072,12,1.331,32,0.194,33,1.01,34,0.161,35,0.362,37,1.562,38,1.261,39,0.398,42,0.179,45,0.005,49,0.451,50,0.393,51,0.093,52,0.374,60,0.062,61,0.58,65,1.293,79,0.992,88,2.145,98,1.69,100,0.721,109,1.312,112,1.304,113,1.304,114,1.218,146,1.215,154,1.57,161,0.002,162,0.003,163,0.002,185,1.468,189,0.842,192,1.924,229,2.345,244,1.031,325,1.389,354,1.511,453,1.521,455,2.279,458,1.746,463,1.623,464,1.086,465,1.058,466,1.191,467,1.191,468,1.622,470,1.175,471,1.293,481,3.174,482,3.302,483,1.943,487,2.025,488,2.485,489,1.293,490,1.276,491,1.983,492,1.905,493,1.799,494,3.237,495,4.775,496,3.174,497,1.905,498,3.057,499,2.81,500,1.983,501,1.545,502,3.237,503,3.174,504,1.293,505,3.057,506,3.284,507,1.799,508,3.174,509,1.943,510,3.174,511,3.174,512,1.983,513,1.983,514,3.174,515,3.115,516,3.174,517,1.767,518,1.833,519,3.174,520,1.452,521,3.174,522,1.983,523,3.174,524,1.943,525,3.478,526,1.736,527,1.649,528,2.025,529,2.025,530,2.025,531,1.799,532,2.025,533,2.025,534,2.025,535,1.677,536,2.025,537,2.025,538,2.025,539,2.025,540,1.595,541,2.025,542,2.025,543,2.025,544,2.025,545,2.025,546,2.025,547,2.025,548,2.025,549,2.025,550,2.929,551,1.943,3396,6.054]],["title/injectables/LightCardEffects.html",[245,2.874,877,1.389]],["body/injectables/LightCardEffects.html",[0,0.226,3,0.021,4,0.021,5,0.025,8,0.818,17,2.158,28,2.04,32,0.156,34,0.157,35,0.356,39,0.176,42,0.242,44,0.276,45,0.005,46,0.271,47,0.276,49,0.83,50,0.724,51,0.116,52,0.366,60,0.025,88,2.607,112,0.56,113,0.56,114,0.523,137,1.927,161,0.002,162,0.003,163,0.002,185,1.187,189,1.413,204,2.409,208,2.173,229,2.721,234,1.729,245,3.416,246,4.273,247,4.116,303,1.566,310,6.398,324,0.745,325,1.359,451,2.348,454,2.071,488,2.772,489,1.265,490,1.248,491,1.94,493,1.76,511,3.135,514,1.828,515,3.076,516,3.135,517,2.515,519,3.135,521,3.135,523,3.135,525,3.135,565,1.443,593,1.15,594,1.15,595,1.181,608,1.15,877,1.651,878,1.793,886,6.008,894,4.2,895,4.422,897,4.192,909,2.225,910,2.119,912,1.793,913,1.94,915,1.443,1130,2.119,1263,3.819,1472,5.186,1494,4.029,1554,2.769,1555,4.415,1556,3.024,1836,5.346,1881,4.303,1888,2.769,1913,4.2,1915,5.346,1920,5.346,2188,3.674,2802,2.769,2850,4.4,3397,8.553,3398,4.095,3399,7.023,3400,7.023,3401,7.023,3402,5.826,3403,4.095,3404,5.958,3405,7.713,3406,8.553,3407,5.958,3408,5.958,3409,5.958,3410,8.553,3411,5.958,3412,4.095,3413,5.958,3414,5.958,3415,5.958,3416,5.958,3417,7.713,3418,5.958,3419,5.958,3420,8.553,3421,7.713,3422,5.958,3423,7.713,3424,5.958,3425,5.958,3426,7.713,3427,5.958,3428,9.045,3429,7.713,3430,4.095,3431,5.958,3432,5.958,3433,4.095,3434,5.958,3435,5.958,3436,5.958,3437,5.958,3438,5.958,3439,5.958,3440,5.958,3441,7.713,3442,5.958,3443,5.346,3444,4.095,3445,4.095,3446,3.674]],["title/components/ListSettingComponent.html",[288,1.008,410,1.713]],["body/components/ListSettingComponent.html",[0,0.204,3,0.019,4,0.019,5,0.023,17,1.293,28,1.382,32,0.184,33,0.552,34,0.142,35,0.33,39,0.159,42,0.3,44,0.576,45,0.005,46,0.605,47,0.576,49,0.595,50,0.843,51,0.105,52,0.331,60,0.023,64,1.024,100,0.91,121,1.038,123,1.589,128,1.491,132,1.052,137,1.857,161,0.002,162,0.003,163,0.002,169,4.505,170,2.039,172,2.297,175,2.291,176,2.291,185,0.851,188,1.716,208,1.552,223,1.209,242,1.788,274,1.096,275,2.444,284,3.691,288,1.33,289,1.264,290,1.834,291,1.302,293,1.322,294,1.322,296,2.442,297,1.245,298,3.575,301,1.976,303,2.403,305,1.293,306,3.256,321,2.217,322,2.465,324,0.672,344,1.264,348,2.521,356,1.142,357,1.976,358,1.946,359,1.192,360,2.626,361,1.322,362,1.322,363,1.264,364,1.322,365,1.264,366,2.073,367,1.976,368,1.264,369,1.976,370,1.264,371,1.322,372,1.245,373,1.322,374,3.404,375,1.976,376,2.626,377,1.264,378,1.322,379,1.227,380,1.976,381,1.264,382,1.245,383,1.227,384,1.302,385,1.322,386,1.264,387,1.946,388,1.322,389,1.283,390,1.209,391,1.976,392,1.264,393,1.322,394,2.626,395,1.227,396,1.322,397,1.264,398,1.264,399,1.322,400,1.245,401,1.322,402,1.264,403,1.264,404,1.322,405,1.245,406,1.322,407,1.264,408,1.322,409,1.283,410,2.509,411,1.322,412,1.264,413,1.081,414,1.322,415,1.264,416,1.946,417,1.264,418,2.367,419,1.322,420,1.264,421,1.322,422,1.264,423,1.322,424,1.245,425,1.264,426,1.264,427,1.264,428,1.264,429,1.511,430,1.264,431,1.322,432,1.264,433,1.264,434,1.264,435,0.934,436,1.245,437,1.245,438,1.322,439,1.245,440,1.322,441,1.245,442,1.302,443,1.322,484,1.452,565,1.302,593,1.038,594,1.038,595,1.066,680,1.869,690,1.913,691,1.913,869,2.119,940,4.095,948,3.473,967,3.895,1203,2.406,1282,3.26,1394,2.928,1587,2.73,1588,2.879,1589,3.904,1590,5.539,1591,4.303,1592,3.895,1593,3.361,1594,6.734,1595,3.895,1596,6.023,1597,5.174,1598,3.904,1599,4.664,1600,5.174,1601,3.895,1602,3.895,1603,3.895,1608,2.606,1610,2.606,1613,4.664,1614,4.939,1616,3.895,1620,4.664,1625,3.316,1635,2.606,1791,5.562,1941,3.361,1973,6.587,2473,4.957,2483,5.803,2486,2.606,2726,2.73,2727,2.73,2728,2.73,2733,2.73,2734,2.73,2735,2.73,2736,2.73,2737,2.73,2738,2.73,2739,2.73,2740,2.73,2741,2.73,2742,2.73,2743,2.73,2744,2.73,2745,2.73,2747,2.73,2748,2.73,2752,4.303,2753,4.583,2754,4.583,3447,9.143,3448,8.203,3449,5.935,3450,7.34,3451,7.34,3452,5.525,3453,3.696,3454,3.696,3455,3.696,3456,3.696,3457,3.696,3458,3.696,3459,5.525,3460,3.696,3461,3.316,3462,4.957,3463,4.957,3464,3.316,3465,3.316,3466,4.957,3467,3.316,3468,3.316,3469,3.316,3470,3.316,3471,3.696,3472,3.696,3473,3.696,3474,2.73,3475,3.066,3476,3.066,3477,3.696,3478,3.696,3479,3.316,3480,3.316,3481,3.696,3482,3.696,3483,4.957]],["title/classes/LoadArchivedCard.html",[0,0.276,459,2.657]],["body/classes/LoadArchivedCard.html",[0,0.538,2,0.625,3,0.027,4,0.027,5,0.032,8,1.056,32,0.196,33,0.985,34,0.201,35,0.424,36,0.786,37,1.677,38,1.236,39,0.225,40,1.36,42,0.237,44,0.354,45,0.005,46,0.347,47,0.354,49,0.565,50,0.492,51,0.085,52,0.469,60,0.061,61,0.727,79,1.68,88,1.36,98,1.729,100,0.814,112,1.334,113,1.334,114,1.246,146,1.294,161,0.002,162,0.003,163,0.002,185,1.601,187,2.137,214,2.423,244,1.292,446,4.364,447,3.095,450,3.296,451,3.007,452,4.364,453,1.905,454,4.06,455,2.708,456,4.48,457,4.48,458,2.045,459,4.559,460,4.155,461,4.48,462,4.48,463,1.832,464,1.36,465,1.326,466,1.492,467,1.492,468,2.032,469,3.095,470,1.473,471,1.621,472,3.296,473,3.296,474,3.296,475,3.296,476,4.456,477,3.296,478,3.296,479,3.296,480,3.191,484,2.11,3484,7.088,3485,5.244]],["title/classes/LoadArchivedCardFailure.html",[0,0.276,462,2.796]],["body/classes/LoadArchivedCardFailure.html",[0,0.538,2,0.625,3,0.027,4,0.027,5,0.032,8,1.056,32,0.196,33,0.985,34,0.201,35,0.424,36,0.786,37,1.677,38,1.236,39,0.225,40,1.36,42,0.237,44,0.354,45,0.005,46,0.347,47,0.354,49,0.565,50,0.492,51,0.085,52,0.469,60,0.061,61,0.727,79,1.68,88,1.36,98,1.729,100,0.814,112,1.334,113,1.334,114,1.246,146,1.294,161,0.002,162,0.003,163,0.002,185,1.601,187,2.137,214,2.423,244,1.292,446,4.364,447,3.095,450,3.296,451,3.007,452,4.364,453,1.905,454,4.06,455,2.708,456,4.48,457,4.48,458,2.045,459,4.256,460,4.155,461,4.48,462,4.798,463,1.832,464,1.36,465,1.326,466,1.492,467,1.492,468,2.032,469,3.095,470,1.473,471,1.621,472,3.296,473,3.296,474,3.296,475,3.296,476,3.296,477,4.456,478,3.296,479,3.296,480,3.191,484,2.11,3486,7.088,3487,5.244]],["title/classes/LoadArchivedCardSuccess.html",[0,0.276,461,2.796]],["body/classes/LoadArchivedCardSuccess.html",[0,0.538,2,0.625,3,0.027,4,0.027,5,0.032,8,1.056,32,0.196,33,0.985,34,0.201,35,0.424,36,0.786,37,1.677,38,1.236,39,0.225,40,1.36,42,0.237,44,0.354,45,0.005,46,0.347,47,0.354,49,0.565,50,0.492,51,0.085,52,0.469,60,0.061,61,0.727,79,1.68,88,1.36,98,1.729,100,0.814,112,1.334,113,1.334,114,1.246,146,1.294,161,0.002,162,0.003,163,0.002,185,1.601,187,2.137,214,2.423,244,1.292,446,4.364,447,3.095,450,3.296,451,3.007,452,4.364,453,1.905,454,4.06,455,2.708,456,4.48,457,4.48,458,2.045,459,4.256,460,4.155,461,4.798,462,4.48,463,1.832,464,1.36,465,1.326,466,1.492,467,1.492,468,2.032,469,3.095,470,1.473,471,1.621,472,3.296,473,3.296,474,3.296,475,3.296,476,3.296,477,3.296,478,4.456,479,3.296,480,3.191,484,2.11,3488,7.088,3489,5.244]],["title/classes/LoadCard.html",[0,0.276,454,2.534]],["body/classes/LoadCard.html",[0,0.538,2,0.625,3,0.027,4,0.027,5,0.032,8,1.056,32,0.196,33,0.985,34,0.201,35,0.424,36,0.786,37,1.677,38,1.236,39,0.225,40,1.36,42,0.237,44,0.354,45,0.005,46,0.347,47,0.354,49,0.565,50,0.492,51,0.085,52,0.469,60,0.061,61,0.727,79,1.68,88,1.36,98,1.729,100,0.814,112,1.334,113,1.334,114,1.246,146,1.294,161,0.002,162,0.003,163,0.002,185,1.601,187,2.137,214,2.423,244,1.292,446,4.364,447,3.095,450,3.296,451,3.007,452,4.364,453,1.905,454,4.349,455,2.708,456,4.48,457,4.48,458,2.045,459,4.256,460,4.155,461,4.48,462,4.48,463,1.832,464,1.36,465,1.326,466,1.492,467,1.492,468,2.032,469,3.095,470,1.473,471,1.621,472,3.296,473,4.456,474,3.296,475,3.296,476,3.296,477,3.296,478,3.296,479,3.296,480,3.191,484,2.11,3490,7.088,3491,5.244]],["title/classes/LoadCardFailure.html",[0,0.276,457,2.796]],["body/classes/LoadCardFailure.html",[0,0.538,2,0.625,3,0.027,4,0.027,5,0.032,8,1.056,32,0.196,33,0.985,34,0.201,35,0.424,36,0.786,37,1.677,38,1.236,39,0.225,40,1.36,42,0.237,44,0.354,45,0.005,46,0.347,47,0.354,49,0.565,50,0.492,51,0.085,52,0.469,60,0.061,61,0.727,79,1.68,88,1.36,98,1.729,100,0.814,112,1.334,113,1.334,114,1.246,146,1.294,161,0.002,162,0.003,163,0.002,185,1.601,187,2.137,214,2.423,244,1.292,446,4.364,447,3.095,450,3.296,451,3.007,452,4.364,453,1.905,454,4.06,455,2.708,456,4.48,457,4.798,458,2.045,459,4.256,460,4.155,461,4.48,462,4.48,463,1.832,464,1.36,465,1.326,466,1.492,467,1.492,468,2.032,469,3.095,470,1.473,471,1.621,472,3.296,473,3.296,474,4.456,475,3.296,476,3.296,477,3.296,478,3.296,479,3.296,480,3.191,484,2.11,3492,7.088,3493,5.244]],["title/classes/LoadCardSuccess.html",[0,0.276,456,2.796]],["body/classes/LoadCardSuccess.html",[0,0.538,2,0.625,3,0.027,4,0.027,5,0.032,8,1.056,32,0.196,33,0.985,34,0.201,35,0.424,36,0.786,37,1.677,38,1.236,39,0.225,40,1.36,42,0.237,44,0.354,45,0.005,46,0.347,47,0.354,49,0.565,50,0.492,51,0.085,52,0.469,60,0.061,61,0.727,79,1.68,88,1.36,98,1.729,100,0.814,112,1.334,113,1.334,114,1.246,146,1.294,161,0.002,162,0.003,163,0.002,185,1.601,187,2.137,214,2.423,244,1.292,446,4.364,447,3.095,450,3.296,451,3.007,452,4.364,453,1.905,454,4.06,455,2.708,456,4.798,457,4.48,458,2.045,459,4.256,460,4.155,461,4.48,462,4.48,463,1.832,464,1.36,465,1.326,466,1.492,467,1.492,468,2.032,469,3.095,470,1.473,471,1.621,472,3.296,473,3.296,474,3.296,475,4.456,476,3.296,477,3.296,478,3.296,479,3.296,480,3.191,484,2.11,3494,7.088,3495,5.244]],["title/classes/LoadConfig.html",[0,0.276,600,3.15]],["body/classes/LoadConfig.html",[0,0.516,2,0.778,3,0.034,4,0.034,5,0.04,8,1.043,32,0.19,33,0.962,34,0.251,35,0.489,37,1.504,38,1.221,42,0.193,45,0.005,49,0.703,50,0.613,51,0.078,52,0.584,60,0.06,61,0.905,79,1.548,98,1.603,112,1.279,113,1.279,114,1.195,146,1.317,161,0.003,162,0.004,163,0.003,244,1.609,455,2.611,458,1.884,463,2.037,464,1.695,465,1.651,466,1.859,467,1.859,470,1.834,471,2.019,600,5.882,764,6.136,1514,5.612,1551,4.416,1826,4.416,2190,5.812,3050,4.605,3053,5.088,3054,6.37,3055,5.088,3056,5.088,3057,4.824,3496,6.532]],["title/classes/LoadConfigFailure.html",[0,0.276,2190,3.263]],["body/classes/LoadConfigFailure.html",[0,0.51,2,0.753,3,0.033,4,0.033,5,0.039,8,1.034,32,0.196,33,0.953,34,0.243,35,0.479,36,0.888,37,1.642,38,1.211,39,0.271,40,1.64,42,0.26,44,0.426,45,0.005,46,0.418,47,0.426,49,0.681,50,0.593,51,0.076,52,0.565,60,0.06,61,0.876,79,1.498,98,1.579,112,1.264,113,1.264,114,1.181,146,1.304,161,0.003,162,0.004,163,0.003,244,1.557,455,2.572,458,1.824,463,2.007,464,1.64,465,1.598,466,1.799,467,1.799,470,1.775,471,1.953,484,2.312,600,5.528,764,6.097,1514,5.528,1551,4.274,1826,4.274,2190,6.019,3050,4.456,3053,4.924,3054,4.924,3055,6.24,3056,4.924,3057,4.669,3497,8.011,3498,6.321]],["title/classes/LoadConfigSuccess.html",[0,0.276,1514,3.15]],["body/classes/LoadConfigSuccess.html",[0,0.51,2,0.753,3,0.033,4,0.033,5,0.039,8,1.034,32,0.196,33,0.953,34,0.243,35,0.479,36,0.888,37,1.642,38,1.211,39,0.271,40,1.64,42,0.26,44,0.426,45,0.005,46,0.418,47,0.426,49,0.681,50,0.593,51,0.076,52,0.565,60,0.06,61,0.876,79,1.498,98,1.579,112,1.264,113,1.264,114,1.181,146,1.304,161,0.003,162,0.004,163,0.003,244,1.557,455,2.572,458,1.824,463,2.007,464,1.64,465,1.598,466,1.799,467,1.799,470,1.775,471,1.953,484,2.312,600,5.528,764,6.097,1514,5.812,1551,4.274,1826,4.274,2190,5.725,3050,4.456,3053,4.924,3054,4.924,3055,4.924,3056,6.24,3057,4.669,3499,8.011,3500,6.321]],["title/classes/LoadLightCards.html",[0,0.276,494,2.281]],["body/classes/LoadLightCards.html",[0,0.556,2,0.501,3,0.022,4,0.022,5,0.026,8,1.087,10,2.206,11,1.077,12,1.336,32,0.194,33,1.011,34,0.161,35,0.363,37,1.564,38,1.262,39,0.382,42,0.124,45,0.005,49,0.453,50,0.394,51,0.094,52,0.376,60,0.062,61,0.582,65,1.299,79,0.997,88,2.149,98,1.692,100,0.723,109,1.318,112,1.305,113,1.305,114,1.219,146,1.216,154,1.577,161,0.002,162,0.003,163,0.002,185,1.469,189,0.846,192,1.931,229,2.353,244,1.036,325,1.396,354,1.515,453,1.528,455,2.284,458,1.752,463,1.627,464,1.091,465,1.063,466,1.197,467,1.197,468,1.629,470,1.181,471,1.299,481,3.182,482,2.82,483,1.952,487,2.034,488,2.489,489,1.299,490,1.281,491,1.992,492,1.913,493,1.808,494,3.554,495,4.778,496,3.182,497,1.913,498,3.065,499,2.82,500,1.992,501,1.552,502,3.245,503,3.182,504,1.299,505,3.065,506,3.289,507,1.808,508,3.182,509,1.952,510,3.182,511,3.182,512,1.992,513,1.992,514,3.182,515,3.123,516,3.182,517,1.775,518,1.841,519,3.182,520,1.459,521,3.182,522,1.992,523,3.182,524,1.952,525,3.182,526,1.744,527,1.656,528,2.939,529,2.034,530,2.034,531,1.808,532,2.034,533,2.034,534,2.034,535,1.684,536,2.034,537,2.034,538,2.034,539,2.034,540,1.602,541,2.034,542,2.034,543,2.034,544,2.034,545,2.034,546,2.034,547,2.034,548,2.034,549,2.034,550,2.034,551,1.952,3501,4.204]],["title/classes/LoadLightCardsExtendedData.html",[0,0.276,499,2.327]],["body/classes/LoadLightCardsExtendedData.html",[0,0.556,2,0.499,3,0.022,4,0.022,5,0.026,8,1.087,10,2.202,11,1.072,12,1.331,32,0.194,33,1.01,34,0.161,35,0.362,37,1.562,38,1.261,39,0.398,42,0.179,45,0.005,49,0.451,50,0.393,51,0.093,52,0.374,60,0.062,61,0.58,65,1.293,79,0.992,88,2.145,98,1.69,100,0.721,109,1.312,112,1.304,113,1.304,114,1.218,146,1.215,154,1.57,161,0.002,162,0.003,163,0.002,185,1.468,189,0.842,192,1.924,229,2.345,244,1.031,325,1.389,354,1.511,453,1.521,455,2.279,458,1.746,463,1.623,464,1.086,465,1.058,466,1.191,467,1.191,468,1.622,470,1.175,471,1.293,481,3.174,482,3.302,483,1.943,487,2.025,488,2.485,489,1.293,490,1.276,491,1.983,492,1.905,493,1.799,494,3.237,495,4.775,496,3.174,497,1.905,498,3.057,499,3.302,500,1.983,501,1.545,502,3.237,503,3.174,504,1.293,505,3.057,506,3.284,507,1.799,508,3.174,509,1.943,510,3.174,511,3.174,512,1.983,513,1.983,514,3.174,515,3.115,516,3.174,517,1.767,518,1.833,519,3.174,520,1.452,521,3.174,522,1.983,523,3.174,524,1.943,525,3.174,526,1.736,527,1.649,528,2.025,529,2.025,530,2.025,531,1.799,532,2.929,533,2.025,534,2.025,535,1.677,536,2.025,537,2.025,538,2.025,539,2.025,540,1.595,541,2.025,542,2.025,543,2.025,544,2.025,545,2.025,546,2.025,547,2.025,548,2.025,549,2.025,550,2.025,551,1.943,3502,6.054]],["title/classes/LoadLightCardsFailure.html",[0,0.276,502,2.281]],["body/classes/LoadLightCardsFailure.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.516,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,2.89,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,1.988,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,3503,5.973,3504,4.109]],["title/classes/LoadLightCardsSuccess.html",[0,0.276,498,2.155]],["body/classes/LoadLightCardsSuccess.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.321,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,2.89,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,1.988,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,3505,5.973,3506,4.109]],["title/classes/LoadMenu.html",[0,0.276,3066,2.874]],["body/classes/LoadMenu.html",[0,0.522,2,0.625,3,0.027,4,0.027,5,0.032,8,1.064,14,2.435,16,2.297,17,1.227,32,0.188,33,0.961,34,0.201,35,0.424,37,1.644,38,1.212,39,0.345,42,0.209,44,0.541,45,0.005,49,0.565,50,0.492,51,0.085,52,0.469,60,0.06,61,0.727,79,1.68,98,1.662,100,0.872,112,1.294,113,1.294,114,1.209,146,1.316,152,2.435,161,0.002,162,0.003,163,0.002,192,1.667,212,2.616,213,3.047,214,2.423,215,2.341,244,1.292,325,1.741,413,3.04,455,2.348,458,1.513,463,1.832,464,1.36,465,1.326,470,1.473,471,1.621,504,2.481,520,2.786,818,3.191,1229,3.853,1235,3.007,1545,3.296,1550,3.191,2245,2.85,2314,3.414,2337,5.227,2344,5.227,2345,3.414,2346,5.151,2348,4.604,2349,3.191,2350,3.414,2351,4.886,3061,3.296,3064,3.546,3065,3.095,3066,4.931,3067,4.48,3068,4.739,3069,4.739,3070,4.739,3071,4.793,3072,3.546,3073,3.546,3074,3.546,3075,3.546,3076,3.414,3077,3.414,3078,5.429,3079,5.429,3080,4.793,3081,3.546,3082,3.546,3083,3.546,3084,3.546,3085,3.414,3507,7.088]],["title/classes/LoadMenuFailure.html",[0,0.276,3068,2.958]],["body/classes/LoadMenuFailure.html",[0,0.519,2,0.611,3,0.027,4,0.027,5,0.032,8,1.06,14,2.381,16,2.247,17,1.201,32,0.194,33,0.957,34,0.197,35,0.417,36,0.774,37,1.683,38,1.207,39,0.3,40,1.331,42,0.235,44,0.575,45,0.005,46,0.339,47,0.346,49,0.552,50,0.481,51,0.084,52,0.459,60,0.06,61,0.711,79,1.655,98,1.652,100,0.864,112,1.287,113,1.287,114,1.202,146,1.309,152,2.381,161,0.002,162,0.003,163,0.002,192,1.631,212,2.577,213,3.002,214,2.387,215,2.29,244,1.264,325,1.703,413,3.034,455,2.322,458,1.48,463,1.811,464,1.331,465,1.297,470,1.44,471,1.585,484,2.087,504,2.453,520,2.755,818,3.121,1229,3.795,1235,2.941,1545,3.224,1550,3.121,2245,2.788,2314,3.339,2337,5.168,2344,5.168,2345,3.339,2346,5.112,2348,4.552,2349,3.121,2350,3.339,2351,4.831,3061,3.224,3064,3.468,3065,3.027,3066,4.552,3067,4.429,3068,5.03,3069,4.685,3070,4.685,3071,3.468,3072,4.722,3073,3.468,3074,3.468,3075,3.468,3076,3.339,3077,3.339,3078,5.368,3079,5.368,3080,4.722,3081,3.468,3082,3.468,3083,3.468,3084,3.468,3085,3.339,3508,6.983,3509,5.13]],["title/classes/LoadMenuSuccess.html",[0,0.276,3067,2.796]],["body/classes/LoadMenuSuccess.html",[0,0.519,2,0.611,3,0.027,4,0.027,5,0.032,8,1.06,14,2.381,16,2.247,17,1.201,32,0.194,33,0.957,34,0.197,35,0.417,36,0.774,37,1.683,38,1.207,39,0.3,40,1.331,42,0.235,44,0.575,45,0.005,46,0.339,47,0.346,49,0.552,50,0.481,51,0.084,52,0.459,60,0.06,61,0.711,79,1.655,98,1.652,100,0.864,112,1.287,113,1.287,114,1.202,146,1.309,152,2.381,161,0.002,162,0.003,163,0.002,192,1.631,212,2.577,213,3.002,214,2.387,215,2.29,244,1.264,325,1.703,413,3.034,455,2.322,458,1.48,463,1.811,464,1.331,465,1.297,470,1.44,471,1.585,484,2.087,504,2.453,520,2.755,818,3.121,1229,3.795,1235,2.941,1545,3.224,1550,3.121,2245,2.788,2314,3.339,2337,5.168,2344,5.168,2345,3.339,2346,5.112,2348,4.552,2349,3.121,2350,3.339,2351,4.831,3061,3.224,3064,3.468,3065,3.027,3066,4.552,3067,4.755,3068,4.685,3069,4.685,3070,4.685,3071,3.468,3072,3.468,3073,4.722,3074,3.468,3075,3.468,3076,3.339,3077,3.339,3078,5.368,3079,5.368,3080,4.722,3081,3.468,3082,3.468,3083,3.468,3084,3.468,3085,3.339,3510,6.983,3511,5.13]],["title/classes/LoadSettings.html",[0,0.276,3090,2.958]],["body/classes/LoadSettings.html",[0,0.536,2,0.696,3,0.03,4,0.03,5,0.036,8,1.057,32,0.191,33,0.985,34,0.224,35,0.455,37,1.609,38,1.238,42,0.173,45,0.005,49,0.629,50,0.548,51,0.07,52,0.522,60,0.061,61,0.809,69,1.884,79,1.805,98,1.714,112,1.305,113,1.305,114,1.219,146,1.329,161,0.003,162,0.004,163,0.003,244,1.439,455,2.478,458,2.197,463,1.933,464,1.516,465,1.477,466,1.663,467,1.663,470,1.641,471,1.806,741,5.127,1626,4.858,2876,4.858,2877,3.555,3086,3.673,3089,3.951,3090,5.298,3091,5,3092,5.516,3093,5,3094,5,3095,5.149,3096,3.951,3097,3.951,3098,3.951,3099,3.803,3100,3.951,3101,3.951,3102,3.803,3512,5.843]],["title/classes/LoadSettingsFailure.html",[0,0.276,3091,2.958]],["body/classes/LoadSettingsFailure.html",[0,0.533,2,0.676,3,0.029,4,0.029,5,0.035,8,1.051,32,0.196,33,0.978,34,0.218,35,0.446,36,0.828,37,1.67,38,1.231,39,0.244,40,1.472,42,0.247,44,0.383,45,0.005,46,0.375,47,0.383,49,0.611,50,0.532,51,0.068,52,0.507,60,0.061,61,0.786,69,1.829,79,1.771,98,1.7,112,1.295,113,1.295,114,1.209,146,1.32,161,0.003,162,0.003,163,0.003,244,1.398,455,2.442,458,2.155,463,1.906,464,1.472,465,1.434,466,1.615,467,1.615,470,1.593,471,1.753,484,2.195,741,5.11,1626,4.789,2876,4.789,2877,3.452,3086,3.566,3089,3.836,3090,4.929,3091,5.238,3092,5.437,3093,4.929,3094,4.929,3095,3.836,3096,5.051,3097,3.836,3098,3.836,3099,3.693,3100,3.836,3101,3.836,3102,3.693,3513,7.471,3514,5.674]],["title/classes/LoadSettingsSuccess.html",[0,0.276,2876,2.874]],["body/classes/LoadSettingsSuccess.html",[0,0.533,2,0.676,3,0.029,4,0.029,5,0.035,8,1.051,32,0.196,33,0.978,34,0.218,35,0.446,36,0.828,37,1.67,38,1.231,39,0.244,40,1.472,42,0.247,44,0.383,45,0.005,46,0.375,47,0.383,49,0.611,50,0.532,51,0.068,52,0.507,60,0.061,61,0.786,69,1.829,79,1.771,98,1.7,112,1.295,113,1.295,114,1.209,146,1.32,161,0.003,162,0.003,163,0.003,244,1.398,455,2.442,458,2.155,463,1.906,464,1.472,465,1.434,466,1.615,467,1.615,470,1.593,471,1.753,484,2.195,741,5.11,1626,4.789,2876,5.089,2877,3.452,3086,3.566,3089,3.836,3090,4.929,3091,4.929,3092,5.437,3093,4.929,3094,4.929,3095,3.836,3096,3.836,3097,5.051,3098,3.836,3099,3.693,3100,3.836,3101,3.836,3102,3.693,3515,7.471,3516,5.674]],["title/components/LoginComponent.html",[121,1.407,288,1.008]],["body/components/LoginComponent.html",[0,0.254,3,0.024,4,0.024,5,0.028,17,1.078,19,2.278,28,1.567,32,0.178,33,0.647,34,0.177,35,0.387,39,0.198,42,0.284,44,0.311,45,0.005,46,0.567,47,0.311,51,0.118,52,0.412,55,2.768,56,2.097,58,2.097,60,0.028,64,1.277,90,3.939,99,2.139,112,0.63,113,0.63,114,0.588,120,2.954,121,2.286,122,4.424,125,2.95,130,3.437,132,1.311,137,2.005,161,0.002,162,0.003,163,0.002,172,2.38,185,0.998,189,0.927,204,1.537,209,1.674,274,1.366,275,1.922,288,1.509,289,1.575,290,2.152,291,1.623,292,3.225,293,1.648,294,1.648,296,2.768,297,1.552,298,3.622,301,2.319,303,1.211,305,1.517,306,3.102,321,1.881,322,2.637,324,0.838,356,1.424,357,2.319,358,2.284,359,1.486,360,2.912,361,1.648,362,1.648,363,1.575,364,1.648,365,1.575,366,2.351,367,2.319,368,1.575,369,2.319,370,1.575,371,1.648,372,1.552,373,1.648,374,1.575,375,1.648,376,2.912,377,1.575,378,1.648,379,1.529,380,2.319,381,1.575,382,1.552,383,1.529,384,1.623,385,1.648,386,1.575,387,2.284,388,1.648,389,1.599,390,1.507,391,2.319,392,1.575,393,1.648,394,2.912,395,1.529,396,1.648,397,1.575,398,1.575,399,1.648,400,1.552,401,1.648,402,1.575,403,1.575,404,1.648,405,1.552,406,1.648,407,1.575,408,1.648,409,1.599,410,1.575,411,1.648,412,1.575,413,1.347,414,1.648,415,1.575,416,2.284,417,1.575,418,2.683,419,1.648,420,1.575,421,1.648,422,1.575,423,1.648,424,1.552,425,1.575,426,1.575,427,1.575,428,1.575,429,1.773,430,1.575,431,1.648,432,1.575,433,1.575,434,1.575,435,1.639,436,1.552,437,1.552,438,1.648,439,1.552,440,1.648,441,1.552,442,1.623,443,1.648,565,1.623,568,4.541,593,1.294,594,1.294,595,1.329,599,3.589,602,2.23,605,2.442,608,1.294,627,2.139,637,5.288,638,5.843,639,6.73,680,2.33,715,2.999,716,2.999,915,1.623,940,4.541,948,4.715,969,2.057,1124,2.999,1136,3.248,1142,2.719,1486,3.822,1553,3.403,3224,5.378,3517,4.608,3518,7.501,3519,7.501,3520,6.483,3521,7.501,3522,7.501,3523,7.501,3524,7.501,3525,7.501,3526,8.14,3527,8.14,3528,6.483,3529,4.608,3530,4.608,3531,4.608,3532,4.608,3533,4.608,3534,4.608,3535,4.608,3536,4.608,3537,4.608,3538,4.608,3539,4.608,3540,4.608,3541,4.608,3542,4.608,3543,4.608,3544,4.608,3545,4.608,3546,4.608,3547,4.608,3548,4.608,3549,4.608,3550,4.608,3551,4.608,3552,4.608,3553,4.608,3554,4.608,3555,4.608,3556,6.483,3557,6.483,3558,6.483,3559,6.483,3560,6.483,3561,6.483]],["title/classes/Map.html",[0,0.276,189,1.008]],["body/classes/Map.html",[0,0.443,2,0.957,3,0.042,4,0.042,5,0.049,42,0.237,45,0.005,60,0.049,100,0.939,161,0.004,162,0.004,163,0.004,182,5.168,189,1.863,3562,8.037,3563,8.037,3564,7.216,3565,8.037]],["title/injectables/MenuEffects.html",[822,4.157,877,1.389]],["body/injectables/MenuEffects.html",[0,0.302,3,0.028,4,0.028,5,0.034,8,0.967,17,2.24,28,1.828,32,0.174,34,0.35,35,0.436,37,1.475,39,0.235,42,0.242,44,0.369,45,0.005,46,0.483,47,0.369,49,0.786,50,0.685,51,0.118,52,0.49,60,0.034,88,2.483,112,0.749,113,0.749,114,0.699,120,3.233,127,3.567,137,2.112,146,1.196,161,0.004,162,0.003,163,0.003,189,1.101,208,1.851,212,2.693,247,4.069,303,2.157,324,0.996,413,2.559,455,2.4,565,1.929,593,1.538,594,1.538,595,1.58,608,1.538,627,3.388,730,3.14,765,6.016,822,6.053,877,2.022,878,2.398,895,5.018,897,3.966,909,2.976,910,2.834,912,2.398,913,2.595,915,1.929,1039,5.144,1054,4.75,1205,5.144,1263,3.695,1404,4.934,1451,6.547,1465,6.053,1472,5.018,1494,4.934,1498,7.853,1847,6.053,1881,5.231,1888,3.702,1913,6.17,1917,5.144,2346,4.184,2347,7.853,2348,3.14,2354,4.044,2554,4.913,3065,3.232,3066,3.14,3067,3.055,3068,3.232,3069,4.843,3070,4.843,3077,4.75,3566,5.476,3567,8.753,3568,5.476,3569,7.297,3570,7.297,3571,7.297,3572,7.297,3573,7.297,3574,5.476,3575,7.297,3576,7.297,3577,7.297,3578,7.297,3579,7.297,3580,7.297,3581,7.297,3582,5.476,3583,7.297,3584,7.297]],["title/components/MenuLinkComponent.html",[288,1.008,412,1.713]],["body/components/MenuLinkComponent.html",[0,0.261,3,0.025,4,0.034,5,0.041,32,0.179,33,0.659,34,0.181,35,0.394,36,0.843,39,0.203,42,0.272,44,0.319,45,0.005,46,0.544,47,0.319,49,0.509,50,0.444,51,0.104,52,0.423,60,0.029,64,1.31,91,1.383,121,1.328,128,1.276,132,1.346,137,2.021,161,0.002,162,0.003,163,0.002,172,2.623,175,2.738,176,3.154,185,1.016,210,4.361,213,3.27,274,2.44,275,1.957,288,1.53,289,1.616,290,2.191,291,1.666,292,2.033,293,1.691,294,1.691,296,2.807,297,1.592,298,3.627,299,3.004,301,2.362,305,1.545,306,3.137,321,1.093,322,1.364,324,0.86,325,1.569,338,1.894,339,1.832,340,1.894,341,1.894,342,1.894,343,1.894,344,1.616,345,1.894,346,1.894,347,1.894,348,3.137,349,1.894,350,1.862,351,1.894,352,1.894,353,1.894,354,1.18,355,1.894,356,1.461,357,2.362,358,2.326,359,1.525,360,2.945,361,1.691,362,1.691,363,1.616,364,1.691,365,1.616,366,2.384,367,2.362,368,1.616,369,2.362,370,1.616,371,1.691,372,1.592,373,1.691,374,1.616,375,1.691,376,2.945,377,1.616,378,1.691,379,1.569,380,2.362,381,1.616,382,1.592,383,1.569,384,1.666,385,1.691,386,1.616,387,2.326,388,1.691,389,1.641,390,1.547,391,2.362,392,1.616,393,1.691,394,2.945,395,1.569,396,1.691,397,1.616,398,1.616,399,1.691,400,1.592,401,1.691,402,1.616,403,1.616,404,1.691,405,1.592,406,1.691,407,1.616,408,1.691,409,1.641,410,1.616,411,1.691,412,2.814,413,2.856,414,1.691,415,1.616,416,2.326,417,1.616,418,2.721,419,1.691,420,1.616,421,1.691,422,1.616,423,1.691,424,1.592,425,1.616,426,1.616,427,1.616,428,1.616,429,1.805,430,1.616,431,1.691,432,1.616,433,1.616,434,1.616,435,1.195,436,1.592,437,1.592,438,1.691,439,1.592,440,1.691,441,1.592,442,1.666,443,1.691,465,1.195,565,1.666,594,1.328,595,1.364,602,2.288,605,2.506,608,1.328,648,3.683,709,8.427,969,3.395,1773,4.297,2346,4.72,2501,4.242,2658,4.242,2882,3.922,2935,6.824,3270,4.242,3585,9.393,3586,4.728,3587,7.606,3588,6.601,3589,7.606,3590,7.606,3591,7.606,3592,7.606,3593,6.601,3594,4.728,3595,4.728,3596,4.728,3597,4.728,3598,4.728,3599,4.728,3600,4.728,3601,4.728,3602,4.728,3603,4.728,3604,4.728,3605,4.728,3606,4.728,3607,4.728,3608,4.728,3609,8.971,3610,5.923,3611,6.601,3612,6.601,3613,4.728]],["title/interfaces/MenuState.html",[761,1.974,772,4.157]],["body/interfaces/MenuState.html",[3,0.039,4,0.039,5,0.046,32,0.187,34,0.287,35,0.531,45,0.005,51,0.09,60,0.055,100,1.015,146,1.295,161,0.003,162,0.004,163,0.003,172,2.77,204,1.772,209,2.716,213,4.213,223,2.445,325,2.481,413,2.927,633,6.291,761,2.945,762,4.063,772,7.858,3614,7.476,3615,10.008,3616,6.707,3617,7.476,3618,6.707]],["title/classes/Message.html",[0,0.276,55,1.85]],["body/classes/Message.html",[0,0.416,2,0.899,3,0.046,4,0.039,5,0.046,32,0.144,38,1.182,39,0.383,42,0.223,44,0.509,45,0.005,46,0.499,47,0.509,51,0.091,55,3.629,60,0.055,61,1.046,100,0.964,112,1.032,113,1.032,114,0.964,146,1.032,161,0.004,162,0.004,163,0.004,170,3.792,184,3.906,188,3.504,1553,5.574,3619,6.772,3620,7.548,3621,8.534,3622,7.548,3623,7.548,3624,6.772]],["title/directives/MouseWheelDirective.html",[359,1.616,441,1.688]],["body/directives/MouseWheelDirective.html",[0,0.344,3,0.032,4,0.032,5,0.038,7,2.637,28,1.66,32,0.166,34,0.24,42,0.287,44,0.421,45,0.005,46,0.413,47,0.421,51,0.075,60,0.049,161,0.003,162,0.004,163,0.003,297,2.104,298,2.718,305,1.861,321,1.443,322,2.742,324,1.136,359,2.969,436,2.104,441,2.678,442,2.801,607,3.484,644,5.604,1042,2.9,1068,3.131,1468,6.193,1682,5.604,1694,4.865,1772,6.193,2079,6.921,2670,7.692,2675,7.133,2682,8.529,2686,7.255,2698,7.847,2921,8.86,3076,4.066,3625,6.246,3626,9.206,3627,7.95,3628,7.95,3629,7.95,3630,8.746,3631,8.746,3632,7.95,3633,7.95,3634,6.246,3635,6.246,3636,6.246,3637,6.246,3638,6.246,3639,6.246,3640,6.246,3641,6.246,3642,7.95,3643,6.246,3644,7.95,3645,7.95,3646,6.246,3647,6.246,3648,8.746,3649,6.246,3650,6.246,3651,6.246,3652,6.246,3653,7.95,3654,9.206,3655,6.246,3656,6.246,3657,6.246,3658,6.246,3659,6.246]],["title/components/MultiFilterComponent.html",[288,1.008,415,1.713]],["body/components/MultiFilterComponent.html",[0,0.266,3,0.025,4,0.025,5,0.03,17,1.567,28,1.398,32,0.182,33,0.669,34,0.185,35,0.4,39,0.207,42,0.267,44,0.325,45,0.005,46,0.549,47,0.325,50,0.721,51,0.105,60,0.03,64,1.337,100,0.972,121,1.355,132,1.373,161,0.002,162,0.003,163,0.002,169,5.002,170,2.471,175,2.777,176,3.444,185,1.031,188,2.24,204,1.144,274,1.43,275,1.985,284,4.289,288,1.546,289,1.649,290,2.222,291,1.7,292,2.074,293,1.726,294,1.726,296,2.838,297,1.625,298,3.631,299,3.047,301,2.395,305,1.567,306,3.165,321,1.115,322,1.392,324,0.877,348,2.93,356,1.491,357,2.395,358,2.359,359,1.556,360,2.971,361,1.726,362,1.726,363,1.649,364,1.726,365,1.649,366,2.41,367,2.395,368,1.649,369,2.395,370,1.649,371,1.726,372,1.625,373,1.726,374,1.649,375,1.726,376,2.971,377,1.649,378,1.726,379,1.601,380,2.395,381,1.649,382,1.625,383,1.601,384,1.7,385,1.726,386,1.649,387,2.359,388,1.726,389,1.674,390,1.578,391,2.395,392,1.649,393,1.726,394,2.971,395,1.601,396,1.726,397,1.649,398,1.649,399,1.726,400,1.625,401,1.726,402,1.649,403,1.649,404,1.726,405,1.625,406,1.726,407,1.649,408,1.726,409,1.674,410,1.649,411,1.726,412,1.649,413,1.411,414,1.726,415,2.839,416,3.377,417,1.649,418,2.751,419,1.726,420,1.649,421,1.726,422,1.649,423,1.726,424,1.625,425,1.649,426,1.649,427,1.649,428,1.649,429,1.831,430,1.649,431,1.726,432,1.649,433,1.649,434,1.649,435,1.943,436,1.625,437,1.625,438,1.726,439,1.625,440,1.726,441,1.625,442,1.7,443,1.726,484,1.76,593,1.355,608,1.355,680,2.44,690,2.497,691,2.497,925,6.527,940,4.633,948,4.209,967,4.72,1092,8.307,1093,8.307,1791,5.877,2440,3.563,2447,6.898,2448,4.945,2458,6.898,2498,6.007,3449,6.898,3461,4.329,3462,6.007,3463,6.007,3464,4.329,3465,4.329,3466,6.007,3467,4.329,3468,4.329,3469,4.329,3470,4.329,3483,6.007,3660,7.689,3661,4.825,3662,6.695,3663,4.825,3664,4.825,3665,4.825,3666,4.825,3667,4.825,3668,4.825]],["title/components/MultiSettingsComponent.html",[288,1.008,417,1.713]],["body/components/MultiSettingsComponent.html",[0,0.237,3,0.022,4,0.022,5,0.026,28,1.509,32,0.183,33,0.617,34,0.165,35,0.369,39,0.185,42,0.3,44,0.587,45,0.005,46,0.617,47,0.587,49,0.665,50,0.816,51,0.1,52,0.385,60,0.026,64,1.193,100,0.626,121,1.209,128,1.667,132,1.225,137,1.96,161,0.002,162,0.003,163,0.002,172,1.806,175,2.562,185,0.951,208,1.306,242,2.083,274,1.276,275,1.831,288,1.453,289,1.471,290,2.05,291,1.516,293,1.54,294,1.54,296,2.667,297,1.45,298,3.609,301,2.21,303,2.287,305,1.446,306,2.753,321,2.216,322,2.51,324,0.783,344,1.471,356,1.33,357,2.21,358,2.176,359,1.388,360,2.824,361,1.54,362,1.54,363,1.471,364,1.54,365,1.471,366,2.264,367,2.21,368,1.471,369,2.21,370,1.471,371,1.54,372,1.45,373,1.54,374,3.47,375,2.21,376,2.824,377,1.471,378,1.54,379,1.429,380,2.21,381,1.471,382,1.45,383,1.429,384,1.516,385,1.54,386,1.471,387,2.176,388,1.54,389,1.494,390,1.408,391,2.21,392,1.471,393,1.54,394,2.824,395,1.429,396,1.54,397,1.471,398,1.471,399,1.54,400,1.45,401,1.54,402,1.471,403,1.471,404,1.54,405,1.45,406,1.54,407,1.471,408,1.54,409,1.494,410,1.471,411,1.54,412,1.471,413,1.259,414,1.54,415,1.471,416,3.23,417,2.699,418,2.585,419,1.54,420,1.471,421,1.54,422,1.471,423,1.54,424,1.45,425,1.471,426,1.471,427,1.471,428,1.471,429,1.689,430,1.471,431,1.54,432,1.471,433,1.471,434,1.471,435,1.088,436,1.45,437,1.45,438,1.54,439,1.45,440,1.54,441,1.45,442,1.516,443,1.54,565,1.516,594,1.209,595,1.242,680,2.177,741,3.903,869,2.468,940,4.404,948,2.706,1282,3.645,1394,3.274,1587,3.179,1589,4.264,1590,5.093,1592,4.354,1593,3.758,1594,6.779,1595,4.354,1596,6.318,1597,4.354,1598,4.264,1599,5.093,1600,5.565,1601,4.354,1602,4.354,1603,4.354,1608,3.034,1610,3.034,1613,3.034,1614,3.883,1616,3.034,1620,5.093,1635,3.034,1674,4.811,1941,3.758,1973,6.744,2483,5.83,2726,3.179,2727,3.179,2728,3.179,2733,3.179,2734,3.179,2735,3.179,2736,3.179,2737,3.179,2738,3.179,2739,3.179,2740,3.179,2741,3.179,2742,3.179,2743,3.179,2744,3.179,2745,3.179,2747,3.179,2748,3.179,3474,3.179,3475,3.57,3476,3.57,3669,8.359,3670,6.934,3671,3.862,3672,5.124,3673,7.083,3674,3.862,3675,4.304,3676,4.304,3677,4.304,3678,4.304,3679,4.304,3680,4.304]],["title/components/NavbarComponent.html",[132,1.426,288,1.008]],["body/components/NavbarComponent.html",[0,0.23,3,0.022,4,0.031,5,0.037,17,1.663,32,0.181,33,0.604,34,0.232,35,0.361,36,0.463,39,0.179,42,0.293,44,0.408,45,0.005,46,0.546,47,0.408,49,0.838,50,0.775,51,0.117,52,0.374,60,0.026,64,1.158,75,2.99,85,1.94,91,1.222,100,0.789,121,1.173,128,1.127,131,4.127,132,2.216,134,3.129,137,1.94,161,0.002,162,0.003,163,0.002,172,2.416,185,0.931,208,0.884,213,1.796,223,1.367,234,1.764,274,1.239,275,1.792,282,2.859,288,1.429,289,1.428,290,2.007,291,1.472,292,1.796,293,1.495,294,1.495,296,2.622,297,1.407,298,3.602,299,2.752,301,2.163,303,1.867,305,1.415,306,2.967,321,1.799,322,2.246,324,0.76,325,1.387,338,1.674,339,1.619,340,1.674,341,1.674,342,1.674,343,1.674,344,1.428,345,1.674,346,1.674,347,1.674,348,1.592,349,1.674,350,1.646,351,1.674,352,1.674,353,1.674,354,1.043,355,1.674,356,1.291,357,2.163,358,2.13,359,1.347,360,2.786,361,1.495,362,1.495,363,1.428,364,1.495,365,1.428,366,2.227,367,2.163,368,1.428,369,2.163,370,1.428,371,1.495,372,1.407,373,1.495,374,1.428,375,1.495,376,2.786,377,1.428,378,1.495,379,1.387,380,2.163,381,1.428,382,1.407,383,1.387,384,1.472,385,1.495,386,1.428,387,2.13,388,1.495,389,1.45,390,1.367,391,2.163,392,1.428,393,1.495,394,2.786,395,1.387,396,1.495,397,1.428,398,1.428,399,1.495,400,1.407,401,1.495,402,1.428,403,1.428,404,1.495,405,1.407,406,1.495,407,1.428,408,1.495,409,1.45,410,1.428,411,1.495,412,1.428,413,1.222,414,1.495,415,1.428,416,2.13,417,1.428,418,2.542,419,1.495,420,1.428,421,1.495,422,1.428,423,1.495,424,1.407,425,1.428,426,1.428,427,1.428,428,1.428,429,1.653,430,1.428,431,1.495,432,1.428,433,1.428,434,1.428,435,1.056,436,1.407,437,1.407,438,1.495,439,1.407,440,1.495,441,1.407,442,1.472,443,1.495,501,2.232,559,5.534,565,1.472,576,3.466,593,1.173,594,1.173,595,1.205,596,3.086,598,3.749,602,2.022,608,1.173,616,3.255,627,2.807,641,5.083,684,2.945,748,7.727,915,1.472,969,2.699,1013,2.331,1035,3.086,1042,3.998,1124,2.72,1130,2.162,1788,3.8,1790,3.373,1820,3.255,1822,3.255,1862,6.361,2270,6.986,2296,3.086,2300,3.749,2301,3.749,2302,3.749,2306,6.374,2354,3.086,2659,2.271,3066,3.467,3326,3.749,3681,4.178,3682,7.105,3683,6.046,3684,7.105,3685,6.046,3686,6.046,3687,7.105,3688,6.046,3689,7.786,3690,7.105,3691,6.046,3692,4.178,3693,4.178,3694,4.178,3695,4.178,3696,4.178,3697,4.178,3698,4.178,3699,4.178,3700,4.178,3701,4.178,3702,4.178,3703,4.178,3704,4.178,3705,4.178,3706,4.178,3707,4.178,3708,4.178,3709,4.178,3710,4.178,3711,4.178,3712,4.178,3713,4.178,3714,4.178,3715,4.178,3716,4.178,3717,4.178,3718,4.178,3719,4.178,3720,4.178,3721,4.178,3722,4.178,3723,4.178,3724,4.178,3725,4.178,3726,4.178,3727,4.178,3728,4.178,3729,4.178,3730,4.178,3731,4.178,3732,4.178,3733,4.178,3734,4.178,3735,4.178,3736,4.178,3737,6.046,3738,6.046,3739,6.046,3740,6.046,3741,6.046,3742,6.046,3743,4.178,3744,4.178,3745,4.178]],["title/components/NoSelectionComponent.html",[288,1.008,420,1.713]],["body/components/NoSelectionComponent.html",[0,0.323,3,0.03,4,0.03,5,0.036,32,0.145,33,0.762,34,0.225,39,0.364,42,0.226,45,0.005,46,0.561,51,0.07,60,0.036,64,1.625,121,1.647,132,1.669,161,0.003,162,0.004,163,0.003,185,1.175,274,1.739,275,2.263,288,1.707,289,2.005,290,2.534,291,2.066,293,2.098,294,2.098,296,3.133,297,1.975,298,3.664,301,2.731,305,1.787,306,3.426,321,1.355,322,1.692,324,1.066,356,1.812,357,2.731,358,2.69,359,1.891,360,3.216,361,2.098,362,2.098,363,2.005,364,2.098,365,2.005,366,2.66,367,2.731,368,2.005,369,2.731,370,2.005,371,2.098,372,1.975,373,2.098,374,2.005,375,2.098,376,3.216,377,2.005,378,2.098,379,1.947,380,2.731,381,2.005,382,1.975,383,1.947,384,2.066,385,2.098,386,2.005,387,2.69,388,2.098,389,2.035,390,1.918,391,2.731,392,2.005,393,2.098,394,3.216,395,1.947,396,2.098,397,2.005,398,2.005,399,2.098,400,1.975,401,2.098,402,2.005,403,2.005,404,2.098,405,1.975,406,2.098,407,2.005,408,2.098,409,2.035,410,2.005,411,2.098,412,2.005,413,1.715,414,2.098,415,2.005,416,2.69,417,2.005,418,3.037,419,2.098,420,3.074,421,2.098,422,2.005,423,2.098,424,1.975,425,2.005,426,2.005,427,2.005,428,2.005,429,2.087,430,2.005,431,2.098,432,2.005,433,2.005,434,2.005,435,1.482,436,1.975,437,1.975,438,2.098,439,1.975,440,2.098,441,1.975,442,2.066,443,2.098,507,3.865,1674,5.947,2899,7.616,3746,8.488,3747,5.865,3748,7.634,3749,5.865,3750,5.865]],["title/injectables/NotifyService.html",[877,1.389,2058,3.533]],["body/injectables/NotifyService.html",[0,0.386,3,0.036,4,0.036,5,0.043,28,1.462,32,0.162,34,0.269,35,0.51,39,0.395,42,0.29,44,0.575,45,0.005,46,0.564,47,0.575,51,0.084,60,0.043,65,2.163,100,0.996,161,0.003,162,0.004,163,0.003,172,2.495,208,1.805,305,1.997,321,2.128,322,2.462,324,1.272,563,4.732,877,2.365,878,3.065,1748,7.079,2058,6.016,3004,4.933,3751,6.998,3752,9.207,3753,8.534,3754,8.534,3755,9.586,3756,8.534,3757,8.534,3758,6.998,3759,8.534,3760,6.998,3761,6.998,3762,8.534,3763,6.998,3764,8.534,3765,6.998,3766,6.998]],["title/classes/Page.html",[0,0.276,127,2.043]],["body/classes/Page.html",[0,0.418,2,0.902,3,0.039,4,0.039,5,0.047,32,0.144,38,1.183,39,0.384,42,0.224,44,0.511,45,0.005,46,0.501,47,0.511,51,0.107,60,0.047,112,1.035,113,1.035,114,0.967,127,3.646,161,0.004,162,0.004,163,0.004,170,2.795,188,3.515,282,3.379,489,2.34,490,2.307,640,5.795,1763,4.929,3564,7.419,3767,7.572,3768,7.572,3769,9.524,3770,7.572,3771,8.947]],["title/classes/ParameterListItem.html",[0,0.276,285,3.049]],["body/classes/ParameterListItem.html",[0,0.524,2,0.553,3,0.024,4,0.024,5,0.029,8,0.493,11,1.189,23,1.893,24,1.588,28,1.706,32,0.156,36,0.515,38,1.324,39,0.413,42,0.137,44,0.313,45,0.005,46,0.431,47,0.313,50,0.766,51,0.09,60,0.061,61,0.903,100,1.027,112,1.278,113,1.278,114,1.194,123,1.996,161,0.004,162,0.003,163,0.002,166,2.741,168,3.967,169,5.521,170,3.508,171,2.663,172,2.915,173,4.098,174,4.098,175,2.704,176,3.124,177,4.098,178,4.098,179,4.098,180,4.098,181,4.098,185,0.715,186,2.403,187,1.893,188,2.156,189,0.934,190,2.919,191,2.156,192,1.476,193,2.919,194,2.663,195,2.919,196,2.919,197,2.919,198,2.919,199,2.919,200,2.919,201,2.919,202,2.919,203,4.098,204,2.114,205,3.224,206,2.919,207,4.098,208,1.593,209,1.687,210,3.738,211,2.919,212,1.714,213,1.996,214,1.588,215,2.073,216,2.826,217,2.919,218,2.919,219,2.919,220,2.919,221,2.919,222,2.919,223,3.214,224,2.919,225,2.919,226,2.919,227,2.826,228,2.826,229,2.525,230,2.919,231,2.919,232,2.919,233,2.919,234,1.961,235,2.919,236,2.663,237,2.919,238,2.919,239,2.919,240,2.919,241,2.741,242,2.247,243,2.919,244,1.144,245,2.663,246,2.826,247,2.073,248,2.826,249,2.524,250,2.919,251,2.919,252,2.919,253,2.919,254,1.893,255,2.919,256,2.919,257,2.919,258,2.919,259,2.919,260,2.919,261,2.919,262,2.919,263,2.919,264,2.348,265,2.919,266,2.919,267,2.591,268,2.919,269,2.919,270,2.919,271,2.919,272,2.919,273,3.967,274,1.377,275,1.377,276,2.826,277,2.826,278,2.826,279,2.2,280,2.919,281,2.919,282,2.164,283,2.919,284,2.591,285,4.583,286,2.919,287,2.919,444,4.167,3772,4.644]],["title/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.276,1416,3.533]],["body/classes/PasswordOrCodeAuthenticationHandler.html",[0,0.418,1,1.054,2,0.287,3,0.012,4,0.012,5,0.015,8,0.255,9,1.832,12,2.731,13,1.796,17,1.774,23,2.043,24,1.349,27,1.016,28,1.89,32,0.131,33,0.501,34,0.092,36,1.067,37,0.665,39,0.249,41,3.797,42,0.189,44,0.338,45,0.005,46,0.383,47,0.266,49,0.259,51,0.109,52,0.215,53,2.282,54,1.095,55,1.456,58,1.796,60,0.048,61,0.333,63,1.118,67,1.796,69,1.272,74,1.728,82,3.192,83,1.832,85,1.118,87,1.118,90,3.097,91,2.01,93,1.832,94,1.165,95,1.832,99,2.971,100,0.98,101,3.989,102,4.253,103,3.718,104,2.284,117,1.19,119,2.867,120,2.86,125,2.282,128,1.353,137,1.966,146,0.685,161,0.001,162,0.002,163,0.001,172,2.294,189,0.484,204,2.258,208,2.1,209,2.107,212,1.851,214,1.349,223,1.64,234,1.016,254,1.608,282,2.515,303,2.422,305,0.923,321,1.34,322,2.68,324,0.438,354,1.447,383,0.799,429,1.75,435,0.608,453,0.875,470,0.676,501,0.888,504,0.744,520,0.835,561,4.512,568,4.228,573,1.141,593,0.676,594,0.676,595,0.694,602,1.165,605,1.276,607,4.614,608,1.408,619,2.781,627,1.832,640,2.401,673,1.276,715,2.569,716,2.569,744,1.567,757,3.422,761,0.948,787,1.246,788,1.276,877,1.093,912,1.728,913,1.141,915,0.848,969,2.238,1013,1.343,1042,1.832,1043,2.781,1068,0.948,1110,4.088,1111,1.697,1112,4.727,1113,2.914,1114,1.778,1121,3.325,1122,1.697,1123,1.628,1124,1.567,1125,3.645,1126,1.628,1127,1.778,1128,5.951,1129,1.697,1130,1.246,1131,1.343,1132,4.283,1133,2.914,1134,2.914,1135,2.914,1136,4.088,1137,2.914,1138,1.778,1139,1.778,1140,1.778,1141,1.778,1142,1.421,1143,1.697,1144,2.914,1145,1.697,1146,1.778,1147,1.778,1148,3.703,1149,1.778,1150,1.778,1151,1.778,1152,1.778,1153,1.778,1154,1.778,1155,1.778,1156,1.778,1157,1.778,1158,1.778,1159,4.088,1160,1.778,1161,4.512,1162,1.778,1163,1.697,1164,1.778,1165,1.778,1166,1.778,1167,1.778,1168,1.778,1169,3.703,1170,1.778,1171,1.778,1172,1.778,1173,1.778,1174,5.362,1175,5.597,1176,2.914,1177,4.727,1178,1.778,1179,3.703,1180,1.778,1181,2.914,1182,1.778,1183,4.283,1184,2.914,1185,1.778,1186,1.778,1187,1.778,1188,1.778,1189,1.778,1190,1.778,1191,2.914,1192,1.778,1193,2.914,1194,2.914,1195,1.778,1196,1.778,1197,2.781,1198,1.778,1199,2.914,1200,1.778,1201,1.778,1202,1.697,1203,2.569,1204,1.778,1205,2.781,1206,1.628,1207,1.778,1208,1.778,1209,1.778,1210,2.914,1211,1.778,1212,3.703,1213,1.778,1214,5.342,1215,3.703,1216,3.703,1217,3.703,1218,3.703,1219,3.703,1220,3.534,1221,1.778,1222,1.778,1223,1.778,1224,1.778,1225,2.914,1226,2.781,1227,2.914,1228,1.697,1229,2.725,1230,2.914,1231,2.914,1232,2.144,1233,1.778,1234,2.914,1235,2.262,1236,2.914,1237,1.778,1238,2.914,1239,1.778,1240,2.781,1241,1.778,1242,2.914,1243,1.778,1244,1.778,1245,2.914,1246,2.914,1247,1.778,1248,1.778,1249,1.778,1250,1.778,1251,1.778,1252,1.778,1253,1.778,1254,1.778,1255,2.914,1256,1.778,1257,1.778,1258,1.778,1259,1.778,1260,1.778,1261,1.778,1262,1.778,1263,1.016,1264,1.778,1265,1.778,1266,1.778,1267,1.778,1268,1.778,1269,1.778,1270,1.778,1271,2.569,1272,4.727,1273,5.362,1274,1.778,1275,1.778,1276,4.088,1277,3.534,1278,1.778,1279,1.697,1280,1.778,1281,1.778,1282,2.959,1283,1.778,1284,2.914,1285,1.778,1286,2.914,1287,1.778,1288,1.628,1289,1.778,1290,1.778,1291,1.778,1292,1.778,1293,1.778,1294,1.778,1295,1.628,1296,1.778,1297,2.48,1298,1.778,1299,1.778,1300,1.778,1301,1.778,1302,1.778,1303,1.778,1304,1.778,1305,1.778,1306,1.778,1307,1.778,1308,1.778,1309,1.778,1310,1.778,1311,1.778,1312,2.914,1313,1.778,1314,1.778,1315,3.703,1316,2.914,1317,1.778,1318,1.778,1319,2.914,1320,2.914,1321,1.778,1322,1.778,1323,1.778,1324,1.778,1325,1.778,1326,1.778,1327,1.778,1328,4.283,1329,2.914,1330,1.697,1331,1.778,1332,1.778,1333,1.778,1334,1.628,1335,1.778,1336,1.778,1337,1.778,1338,1.778,1339,1.778,1340,2.781,1341,1.778,1342,1.778,1343,1.778,1344,2.914,1345,2.914,1346,1.778,1347,1.778,1348,1.778,1349,1.778,1350,1.778,1351,1.778,1352,1.778,1353,1.778,1354,1.778,1355,1.778,1356,1.778,1357,1.513,1358,1.778,1359,1.778,1360,1.778,1361,2.914,1362,1.778,1363,1.778,1364,1.778,1365,1.778,1366,1.778,1367,1.778,1368,1.778,1369,1.778,1370,1.778,1371,1.778,1372,1.697,1373,1.778,1374,1.778,1375,1.778,1376,1.778,1377,1.778,1378,1.778,1379,1.778,1380,1.778,1381,1.778,1382,1.778,1383,1.778,1384,1.778,1385,1.778,1386,1.308,1387,1.995,1388,3.703,1389,2.262,1390,1.778,1391,1.778,1392,1.778,1393,1.778,1394,1.276,1395,1.778,1396,1.778,1397,1.778,1398,4.727,1399,1.778,1400,5.118,1401,1.778,1402,1.778,1403,1.778,1404,3.39,1405,1.697,1406,1.778,1407,1.697,1408,1.778,1409,2.914,1410,2.781,1411,1.796,1412,1.778,1413,1.697,1414,1.778,1415,5.078,1416,2.781,1417,1.778,1418,2.914,1419,1.778,1420,1.567,1421,1.778,1422,1.778,1423,1.778,1424,1.778,1425,1.778,1426,1.778,1427,1.778,1428,1.778,1429,1.778,1430,1.778,1431,1.778,1432,1.778,1580,3.273,1584,1.997,3331,2.16,3773,2.407,3774,2.407,3775,2.407,3776,2.407,3777,2.407]],["title/classes/PatchSettings.html",[0,0.276,1626,2.874]],["body/classes/PatchSettings.html",[0,0.533,2,0.676,3,0.029,4,0.029,5,0.035,8,1.051,32,0.196,33,0.978,34,0.218,35,0.446,36,0.828,37,1.67,38,1.231,39,0.244,40,1.472,42,0.247,44,0.383,45,0.005,46,0.375,47,0.383,49,0.611,50,0.532,51,0.068,52,0.507,60,0.061,61,0.786,69,1.829,79,1.771,98,1.7,112,1.295,113,1.295,114,1.209,146,1.32,161,0.003,162,0.003,163,0.003,244,1.398,455,2.442,458,2.155,463,1.906,464,1.472,465,1.434,466,1.615,467,1.615,470,1.593,471,1.753,484,2.195,741,5.11,1626,5.089,2876,4.789,2877,3.452,3086,3.566,3089,3.836,3090,4.929,3091,4.929,3092,5.437,3093,4.929,3094,4.929,3095,3.836,3096,3.836,3097,3.836,3098,5.051,3099,3.693,3100,3.836,3101,3.836,3102,3.693,3778,7.471,3779,5.674]],["title/classes/PatchSettingsFailure.html",[0,0.276,3094,2.958]],["body/classes/PatchSettingsFailure.html",[0,0.533,2,0.676,3,0.029,4,0.029,5,0.035,8,1.051,32,0.196,33,0.978,34,0.218,35,0.446,36,0.828,37,1.67,38,1.231,39,0.244,40,1.472,42,0.247,44,0.383,45,0.005,46,0.375,47,0.383,49,0.611,50,0.532,51,0.068,52,0.507,60,0.061,61,0.786,69,1.829,79,1.771,98,1.7,112,1.295,113,1.295,114,1.209,146,1.32,161,0.003,162,0.003,163,0.003,244,1.398,455,2.442,458,2.155,463,1.906,464,1.472,465,1.434,466,1.615,467,1.615,470,1.593,471,1.753,484,2.195,741,5.11,1626,4.789,2876,4.789,2877,3.452,3086,3.566,3089,3.836,3090,4.929,3091,4.929,3092,5.437,3093,4.929,3094,5.238,3095,3.836,3096,3.836,3097,3.836,3098,3.836,3099,3.693,3100,5.051,3101,3.836,3102,3.693,3780,7.471,3781,5.674]],["title/classes/PatchSettingsSuccess.html",[0,0.276,3093,2.958]],["body/classes/PatchSettingsSuccess.html",[0,0.533,2,0.676,3,0.029,4,0.029,5,0.035,8,1.051,32,0.196,33,0.978,34,0.218,35,0.446,36,0.828,37,1.67,38,1.231,39,0.244,40,1.472,42,0.247,44,0.383,45,0.005,46,0.375,47,0.383,49,0.611,50,0.532,51,0.068,52,0.507,60,0.061,61,0.786,69,1.829,79,1.771,98,1.7,112,1.295,113,1.295,114,1.209,146,1.32,161,0.003,162,0.003,163,0.003,244,1.398,455,2.442,458,2.155,463,1.906,464,1.472,465,1.434,466,1.615,467,1.615,470,1.593,471,1.753,484,2.195,741,5.11,1626,4.789,2876,4.789,2877,3.452,3086,3.566,3089,3.836,3090,4.929,3091,4.929,3092,5.437,3093,5.238,3094,4.929,3095,3.836,3096,3.836,3097,3.836,3098,3.836,3099,3.693,3100,3.836,3101,5.051,3102,3.693,3782,7.471,3783,5.674]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.276,41,2.425]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.525,1,2.911,2,0.444,3,0.019,4,0.019,5,0.045,6,1.975,7,1.573,8,1.057,9,4.178,10,0.992,11,1.887,12,3.258,13,3.762,14,3.66,15,1.928,16,3.227,17,1.935,18,3.708,19,3.898,20,3.02,21,2.078,22,2.025,23,3.003,24,2.272,25,3.612,26,3.708,27,2.806,28,1.388,29,3.02,30,3.523,31,3.1,32,0.192,33,0.94,34,0.143,35,0.332,36,1.088,37,1.328,38,1.17,39,0.239,41,3.216,42,0.253,44,0.251,45,0.005,46,0.246,47,0.531,51,0.088,52,0.333,53,3.762,54,1.695,55,2.453,56,1.695,57,2.078,58,2.529,59,2.078,60,0.06,61,0.516,62,1.928,63,3.086,64,1.032,65,2.054,66,3.361,67,2.529,68,3.612,69,3.036,70,4.656,71,3.906,72,3.361,73,2.025,74,2.434,75,3.644,76,3.168,77,3.986,78,3.361,79,1.576,80,3.361,81,2.025,82,3.086,83,3.421,84,3.44,85,1.729,86,2.025,87,1.729,88,0.966,89,2.078,90,2.689,91,1.089,92,2.025,93,3.086,94,1.803,95,3.086,96,2.025,97,2.025,98,1.415,99,3.421,100,0.995,101,3.66,102,3.519,103,3.735,104,2.903,105,2.078,106,2.078,107,3.1,108,3.02,109,1.742,110,3.02,111,2.078,112,1.203,113,1.203,114,1.124,115,2.078,116,2.025,117,1.842,118,2.078,119,1.842,120,1.467,121,1.046,122,2.025,123,2.857,124,3.1,125,3.025,126,2.876,127,1.518,128,1.005,129,2.025,130,1.975,131,3.906,132,1.06,133,2.078,134,1.928,135,2.025,136,2.81,137,1.252,138,2.078,139,2.078,140,4.111,141,2.025,142,2.078,143,3.02,144,2.078,145,3.02,146,0.509,147,2.078,148,2.025,149,2.078,150,2.025,151,2.078,152,2.58,153,3.02,154,1.397,155,2.078,156,2.078,157,2.078,158,2.078,159,2.078,160,1.975,161,0.002,162,0.003,163,0.002,184,2.876,1434,5.74,1436,5.74,3784,3.725,3785,3.725,3786,3.725,3787,3.725,3788,3.725,3789,3.725,3790,3.725,3791,3.725]],["title/classes/Process.html",[0,0.276,205,2.478]],["body/classes/Process.html",[0,0.525,2,0.555,3,0.024,4,0.024,5,0.029,8,0.494,11,1.193,23,1.898,24,1.592,28,1.708,32,0.156,36,0.516,38,1.325,39,0.414,42,0.138,44,0.314,45,0.005,46,0.432,47,0.314,50,0.613,51,0.091,60,0.061,61,0.905,100,1.017,112,1.279,113,1.279,114,1.195,123,2.002,161,0.004,162,0.003,163,0.002,166,2.749,168,3.975,169,5.453,170,3.384,171,2.671,172,2.917,173,4.106,174,4.106,175,2.709,176,3.129,177,4.106,178,4.106,179,4.106,180,4.106,181,4.106,184,2.41,185,0.717,186,2.41,187,1.898,188,2.162,189,0.937,190,4.743,191,2.162,192,1.481,193,2.928,194,2.671,195,2.928,196,2.928,197,2.928,198,2.928,199,2.928,200,2.928,201,2.928,202,2.928,203,4.106,204,2.116,205,3.731,206,2.928,207,4.106,208,1.596,209,1.692,210,3.746,211,2.928,212,1.719,213,2.002,214,1.592,215,2.079,216,2.834,217,2.928,218,2.928,219,2.928,220,2.928,221,2.928,222,2.928,223,3.216,224,2.928,225,2.928,226,2.928,227,2.834,228,2.834,229,2.531,230,2.928,231,2.928,232,2.928,233,2.928,234,1.966,235,2.928,236,2.671,237,2.928,238,2.928,239,2.928,240,2.928,241,2.749,242,2.254,243,2.928,244,1.147,245,2.671,246,2.834,247,2.079,248,2.834,249,2.532,250,2.928,251,2.928,252,2.928,253,2.928,254,1.898,255,2.928,256,2.928,257,2.928,258,2.928,259,2.928,260,2.928,261,2.928,262,2.928,263,2.928,264,2.355,265,2.928,266,2.928,267,2.598,268,2.928,269,2.928,270,2.928,271,2.928,272,2.928,273,3.975,274,1.381,275,1.381,276,2.834,277,2.834,278,2.834,279,2.207,280,2.928,281,2.928,282,2.168,283,2.928,284,2.598,285,3.975,286,2.928,287,2.928,3792,4.658,3793,4.658,3794,4.658]],["title/classes/RefreshTranslation.html",[0,0.276,3795,3.049]],["body/classes/RefreshTranslation.html",[0,0.532,2,0.779,3,0.034,4,0.034,5,0.04,8,1.058,10,2.18,32,0.192,33,0.982,34,0.251,35,0.489,37,1.505,38,1.239,42,0.193,45,0.005,49,0.704,50,0.614,51,0.098,52,0.585,60,0.061,61,0.906,98,1.604,100,0.663,146,1.119,161,0.003,162,0.004,163,0.003,170,3.558,189,1.646,191,3.037,264,3.307,526,2.713,527,2.576,623,3.86,766,5.885,1790,3.649,2883,4.423,3795,5.696,3796,4.423,3797,6.045,3798,6.541,3799,4.258,3800,5.436,3801,5.436,3802,4.611,3803,5.436,3804,4.611,3805,5.436,3806,4.611,3807,4.611,3808,4.831,3809,4.423,3810,4.831,3811,4.831,3812,4.831,3813,4.831,3814,4.258]],["title/classes/RejectLogIn.html",[0,0.276,72,2.534]],["body/classes/RejectLogIn.html",[0,0.527,1,2.943,2,0.452,3,0.02,4,0.02,5,0.049,6,2.011,7,1.602,8,1.068,9,4.334,10,1.01,11,2.034,12,3.27,13,3.922,14,3.688,15,1.964,16,3.479,17,2.072,18,4.148,19,4.116,20,3.652,21,2.117,22,2.062,23,3.238,24,2.542,25,4.041,26,4.148,27,3.139,28,1.553,29,3.652,30,3.942,31,3.143,32,0.193,33,0.954,34,0.146,35,0.337,36,0.955,37,1.452,38,1.197,39,0.242,40,0.984,41,2.726,42,0.199,44,0.256,45,0.005,46,0.251,47,0.256,49,0.408,50,0.356,51,0.089,52,0.339,53,3.058,54,1.727,55,2.745,56,1.727,57,2.117,58,2.564,59,2.117,60,0.06,61,0.526,62,1.964,63,3.119,64,1.051,65,2.076,66,3.398,67,2.564,68,3.652,69,3.048,70,4.684,71,3.942,72,3.76,73,2.062,74,2.467,75,3.677,76,3.197,77,4.017,78,3.398,79,1.335,80,3.398,81,2.062,82,3.119,83,3.452,84,3.477,85,1.762,86,2.062,87,1.762,88,0.984,89,2.117,90,2.726,91,1.11,92,2.062,93,3.119,94,1.836,95,3.119,96,2.062,97,2.062,98,1.426,99,1.762,100,0.805,101,1.762,102,1.694,103,1.798,104,1.495,105,2.117,106,2.117,107,3.143,108,3.062,109,1.766,110,3.062,111,2.117,112,1.21,113,1.21,114,1.13,115,2.117,116,2.062,117,1.876,118,2.117,119,1.876,120,1.495,121,1.065,122,2.062,123,3.197,124,3.143,125,3.384,126,2.915,127,1.546,128,1.024,129,2.062,130,2.011,131,3.942,132,1.08,133,2.117,134,1.964,135,2.062,136,3.398,137,1.514,138,3.143,139,3.143,140,4.432,141,3.062,142,3.143,143,3.652,144,3.143,145,4.041,146,0.519,147,2.117,148,2.062,149,2.117,150,2.062,151,2.117,152,2.615,153,3.062,154,1.423,155,2.117,156,2.117,157,2.117,158,2.117,159,2.117,160,2.011,161,0.002,162,0.003,163,0.002,484,1.766,3815,5.634,3816,3.794]],["title/classes/RemoveLightCard.html",[0,0.276,510,2.237]],["body/classes/RemoveLightCard.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.448,511,3.141,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,2.89,540,1.566,541,1.988,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,3817,5.973,3818,4.109]],["title/components/ResizableComponent.html",[288,1.008,422,1.713]],["body/components/ResizableComponent.html",[0,0.296,3,0.028,4,0.028,5,0.033,24,1.834,32,0.155,33,0.719,34,0.206,35,0.43,39,0.349,42,0.256,45,0.005,46,0.537,51,0.064,60,0.033,64,1.486,121,1.506,132,1.527,161,0.003,162,0.003,163,0.003,172,2.104,185,1.108,204,1.271,223,1.755,274,1.59,275,2.133,288,1.633,289,1.834,290,2.389,291,1.89,292,2.306,293,1.919,294,1.919,297,1.807,298,3.65,299,3.275,301,2.575,305,1.684,321,1.239,322,1.547,324,0.975,356,1.657,357,2.575,358,2.535,359,1.729,360,3.105,361,1.919,362,1.919,363,1.834,364,1.919,365,1.834,366,2.545,367,2.575,368,1.834,369,2.575,370,1.834,371,1.919,372,1.807,373,1.919,374,1.834,375,1.919,376,3.105,377,1.834,378,1.919,379,1.78,380,2.575,381,1.834,382,1.807,383,1.78,384,1.89,385,1.919,386,1.834,387,2.535,388,1.919,389,1.861,390,1.755,391,2.575,392,1.834,393,1.919,394,3.105,395,1.78,396,1.919,397,1.834,398,1.834,399,1.919,400,1.807,401,1.919,402,1.834,403,1.834,404,1.919,405,1.807,406,1.919,407,1.834,408,1.919,409,1.861,410,1.834,411,1.919,412,1.834,413,1.568,414,1.919,415,1.834,416,2.535,417,1.834,418,2.906,419,1.919,420,1.834,421,1.919,422,2.967,423,1.919,424,1.807,425,1.834,426,1.834,427,1.834,428,1.834,429,1.968,430,1.834,431,1.919,432,1.834,433,1.834,434,1.834,435,1.356,436,1.807,437,1.807,438,1.919,439,1.807,440,1.919,441,1.807,442,1.89,443,1.919,517,2.264,572,4.178,578,4.178,641,4.247,969,3.212,1068,2.113,1674,5.606,1682,5.073,1683,6.327,1694,4.178,1703,4.812,1704,4.812,1706,4.812,1724,4.812,1748,4.449,1970,6.737,1971,6.761,2079,3.627,2614,4.812,2634,6.737,3819,5.363,3820,8.68,3821,8.122,3822,7.197,3823,7.197,3824,5.363,3825,5.363,3826,5.363,3827,5.363,3828,5.363,3829,5.363,3830,5.363,3831,5.363,3832,5.363,3833,7.197,3834,8.122,3835,5.363,3836,5.363,3837,5.363,3838,5.363,3839,5.363,3840,5.363,3841,5.363,3842,5.363,3843,5.363,3844,5.363,3845,5.363]],["title/classes/RouterStateUrl.html",[0,0.276,781,3.904]],["body/classes/RouterStateUrl.html",[0,0.429,2,0.718,3,0.031,4,0.045,5,0.037,7,2.546,11,2.203,13,4.135,28,1.259,32,0.115,33,0.602,38,1.069,39,0.334,42,0.178,44,0.634,45,0.005,46,0.399,47,0.407,51,0.093,60,0.053,100,0.872,109,2.436,112,0.824,113,0.824,114,0.77,137,1.938,161,0.003,162,0.004,163,0.003,204,2.154,208,1.644,212,3.554,244,2.238,254,4.273,264,3.931,279,3.683,303,1.585,321,1.796,429,2.125,501,2.869,520,2.697,730,3.457,765,4.886,780,4.251,781,6.7,1053,4.886,1068,2.375,1229,4.225,1297,4.886,1387,3.931,2349,5.529,2355,4.697,2356,5.41,2357,7.537,2360,5.41,2361,6.974,2363,5.41,2364,7.537,2366,5.41,2367,5.41,2368,5.41,2369,8.639,2370,5.41,2371,6.448,2372,6.974,2373,7.987,2374,6.974,2375,6.974,2376,7.537,2377,6.974,2378,6.974,2379,6.974,2380,6.974,2381,6.974,2382,5.41,2383,5.41,2384,5.41,2385,5.41,2386,5.41,2387,5.41,2388,5.41,3846,6.03,3847,6.03]],["title/classes/SelectArchivedLightCard.html",[0,0.276,1055,3.049]],["body/classes/SelectArchivedLightCard.html",[0,0.526,2,0.691,3,0.03,4,0.03,5,0.036,8,1.044,10,2.018,32,0.196,33,0.969,34,0.223,35,0.453,36,0.84,37,1.677,38,1.223,39,0.249,40,1.505,42,0.249,44,0.391,45,0.005,46,0.383,47,0.391,49,0.624,50,0.544,51,0.101,52,0.519,60,0.061,61,0.803,98,1.711,100,0.588,112,1.327,113,1.327,114,1.24,127,3.648,146,1.154,161,0.004,162,0.004,163,0.003,185,1.167,189,1.524,254,2.364,282,1.925,354,1.447,366,2.986,435,1.466,460,3.922,463,1.926,464,1.505,465,1.466,466,1.651,467,1.651,484,2.219,488,1.743,489,1.792,490,1.767,504,1.792,506,2.21,535,2.323,581,3.325,887,4.982,902,3.152,916,3.775,917,5.137,918,4.982,922,3.646,923,5.137,1049,3.775,1052,4.088,1053,5.307,1054,3.775,1055,5.447,1056,4.088,1057,4.088,1058,4.088,1059,3.921,1060,4.088,1061,5.343,1062,3.921,3848,7.579,3849,5.8]],["title/classes/SelectLightCard.html",[0,0.276,503,2.237]],["body/classes/SelectLightCard.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.448,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.141,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,2.89,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,1.988,542,1.988,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,3850,5.973,3851,4.109]],["title/classes/SelectMenuLink.html",[0,0.276,2348,2.874]],["body/classes/SelectMenuLink.html",[0,0.514,2,0.59,3,0.026,4,0.026,5,0.03,7,2.093,8,1.061,14,3.167,16,2.987,17,1.596,32,0.193,33,0.949,34,0.19,35,0.408,36,0.756,37,1.686,38,1.198,39,0.293,40,1.286,42,0.23,44,0.594,45,0.005,46,0.328,47,0.334,49,0.534,50,0.465,51,0.082,52,0.443,60,0.059,61,0.687,79,1.617,98,1.635,100,0.852,112,1.275,113,1.275,114,1.191,146,1.299,152,3.167,161,0.002,162,0.003,163,0.002,192,2.168,212,2.518,213,2.933,214,2.872,215,3.045,244,1.221,325,1.645,413,3.056,455,2.281,458,1.43,463,1.779,464,1.286,465,1.253,470,1.392,471,1.532,484,2.05,504,2.41,520,2.915,818,4.15,1229,3.707,1235,2.842,1545,4.288,1550,4.15,2245,2.694,2314,4.44,2337,5.077,2344,5.469,2345,4.44,2346,5.22,2348,4.817,2349,4.15,2350,4.44,2351,5.36,3061,3.116,3064,3.352,3065,2.925,3066,4.472,3067,4.351,3068,4.603,3069,4.603,3070,4.603,3071,3.352,3072,3.352,3073,3.352,3074,4.612,3075,4.612,3076,4.44,3077,4.44,3078,5.273,3079,5.273,3080,4.612,3081,3.352,3082,3.352,3083,3.352,3084,3.352,3085,3.227,3852,6.821,3853,4.957]],["title/classes/SelectMenuLinkFailure.html",[0,0.276,3070,2.958]],["body/classes/SelectMenuLinkFailure.html",[0,0.517,2,0.602,3,0.026,4,0.026,5,0.031,7,2.133,8,1.064,14,2.346,16,2.213,17,1.183,32,0.193,33,0.953,34,0.194,35,0.413,36,0.766,37,1.691,38,1.203,39,0.297,40,1.311,42,0.233,44,0.598,45,0.005,46,0.334,47,0.341,49,0.544,50,0.474,51,0.083,52,0.452,60,0.06,61,0.7,79,1.638,98,1.644,100,0.859,112,1.281,113,1.281,114,1.197,146,1.323,152,2.346,161,0.002,162,0.003,163,0.002,192,1.606,212,2.551,213,2.971,214,2.363,215,2.255,244,1.245,325,1.677,413,3.037,455,2.304,458,1.458,463,1.797,464,1.311,465,1.277,470,1.419,471,1.561,484,2.07,504,2.434,520,2.939,818,3.074,1229,4.281,1235,2.897,1545,3.176,1550,3.074,2245,2.746,2314,3.289,2337,5.513,2344,5.513,2345,3.289,2346,5.085,2348,4.517,2349,3.074,2350,3.289,2351,5.153,3061,3.176,3064,3.416,3065,2.982,3066,4.517,3067,4.395,3068,4.649,3069,4.649,3070,4.998,3071,3.416,3072,3.416,3073,3.416,3074,3.416,3075,3.416,3076,3.289,3077,3.289,3078,5.726,3079,5.726,3080,4.673,3081,3.416,3082,3.416,3083,4.673,3084,4.673,3085,3.289,3854,6.911,3855,5.053]],["title/classes/SelectMenuLinkSuccess.html",[0,0.276,3069,2.958]],["body/classes/SelectMenuLinkSuccess.html",[0,0.517,2,0.6,3,0.026,4,0.026,5,0.031,7,2.126,8,1.064,14,2.338,16,2.206,17,1.179,32,0.193,33,0.952,34,0.193,35,0.412,36,0.765,37,1.69,38,1.202,39,0.296,40,1.307,42,0.232,44,0.597,45,0.005,46,0.333,47,0.34,49,0.542,50,0.473,51,0.083,52,0.45,60,0.059,61,0.698,79,1.635,98,1.642,100,0.858,112,1.28,113,1.28,114,1.196,146,1.304,152,2.338,161,0.002,162,0.003,163,0.002,192,1.601,212,3.122,213,2.965,214,2.358,215,2.248,244,1.241,325,1.672,413,3.036,455,2.3,458,1.453,463,1.794,464,1.307,465,1.273,470,1.414,471,1.556,484,2.067,504,2.43,520,2.935,818,3.064,1229,4.274,1235,3.954,1545,3.166,1550,3.064,2245,2.737,2314,3.279,2337,5.506,2344,5.506,2345,3.279,2346,5.245,2348,4.509,2349,3.064,2350,3.279,2351,4.785,3061,3.166,3064,3.405,3065,2.972,3066,4.509,3067,4.387,3068,4.641,3069,4.991,3070,4.641,3071,3.405,3072,3.405,3073,3.405,3074,3.405,3075,3.405,3076,3.279,3077,3.279,3078,5.719,3079,5.719,3080,5.719,3081,4.663,3082,3.405,3083,3.405,3084,3.405,3085,3.279,3856,6.896,3857,5.036]],["title/classes/SendArchiveQuery.html",[0,0.276,887,2.958]],["body/classes/SendArchiveQuery.html",[0,0.526,2,0.691,3,0.03,4,0.03,5,0.036,8,1.044,10,2.018,32,0.196,33,0.969,34,0.223,35,0.453,36,0.84,37,1.677,38,1.223,39,0.249,40,1.505,42,0.249,44,0.391,45,0.005,46,0.383,47,0.391,49,0.624,50,0.544,51,0.101,52,0.519,60,0.061,61,0.803,98,1.711,100,0.588,112,1.327,113,1.327,114,1.24,127,3.648,146,1.154,161,0.004,162,0.004,163,0.003,185,1.167,189,1.524,254,2.364,282,1.925,354,1.447,366,2.986,435,1.466,460,3.922,463,1.926,464,1.505,465,1.466,466,1.651,467,1.651,484,2.219,488,1.743,489,1.792,490,1.767,504,1.792,506,2.21,535,2.323,581,3.325,887,5.283,902,3.152,916,3.775,917,5.137,918,4.982,922,3.646,923,5.137,1049,3.775,1052,4.088,1053,5.307,1054,3.775,1055,5.137,1056,4.088,1057,5.343,1058,4.088,1059,3.921,1060,4.088,1061,4.088,1062,3.921,3858,7.579,3859,5.8]],["title/modules/ServicesModule.html",[649,2.195,661,3.702]],["body/modules/ServicesModule.html",[0,0.313,3,0.029,4,0.039,5,0.046,28,1.184,36,0.628,39,0.243,42,0.167,45,0.005,47,0.503,51,0.124,60,0.035,76,2.436,91,1.657,128,1.529,146,0.775,161,0.003,162,0.003,163,0.003,208,1.199,249,5.145,279,3.537,305,1.326,321,1.31,324,1.03,328,2.933,329,5.084,330,5.084,338,2.27,339,2.195,340,2.27,341,2.27,342,2.27,343,2.27,344,1.937,345,2.27,346,2.27,347,2.27,348,2.16,349,2.27,350,2.232,351,2.27,352,2.27,353,2.27,354,1.414,355,2.27,356,1.751,416,1.997,526,2.35,566,6.992,568,5.282,606,5.084,623,3.344,649,2.482,650,4.185,651,2.866,652,3.249,653,3.448,654,4.926,655,3.004,661,7.84,664,4.405,665,3.448,667,3.08,669,4.537,673,3.004,674,4.692,677,3.344,723,4.185,724,4.414,867,3.562,882,6.163,936,5.587,955,3.448,969,2.529,1125,4.692,1126,3.832,1639,5.084,1881,5.282,1888,3.832,2058,6.674,2080,4.701,2082,4.701,2147,6.924,2149,6.924,2173,6.992,2189,5.084,2828,6.992,3860,5.084,3861,5.084,3862,6.992,3863,7.374,3864,6.992,3865,5.667,3866,5.667,3867,7.465,3868,7.465,3869,5.667,3870,5.667,3871,5.084,3872,5.667,3873,7.465]],["title/classes/SetCardDataTimeline.html",[0,0.276,3381,3.533]],["body/classes/SetCardDataTimeline.html",[0,0.475,2,0.846,3,0.037,4,0.037,5,0.044,8,1.022,32,0.198,33,0.925,34,0.273,35,0.515,36,0.955,37,1.561,38,1.197,39,0.305,40,1.843,42,0.274,44,0.479,45,0.005,46,0.47,47,0.479,49,0.765,50,0.666,51,0.085,52,0.635,60,0.059,61,0.984,64,1.968,98,1.546,161,0.003,162,0.004,163,0.003,185,1.094,390,3.032,484,2.436,501,2.622,2659,3.861,3375,6.533,3376,5.533,3379,6.373,3380,5.892,3381,6.792,3382,6.373,3383,7.727,3384,6.373,3385,5.892,3874,8.612,3875,7.103]],["title/components/SettingsComponent.html",[288,1.008,424,1.688]],["body/components/SettingsComponent.html",[0,0.3,3,0.028,4,0.028,5,0.033,17,2.3,32,0.182,33,0.725,34,0.208,35,0.434,39,0.233,42,0.276,44,0.366,45,0.005,46,0.577,47,0.366,51,0.109,52,0.486,60,0.033,64,1.505,121,1.525,132,1.546,137,2.107,161,0.003,162,0.003,163,0.003,185,1.117,274,1.61,275,2.152,288,1.644,289,1.857,290,2.409,291,1.914,293,1.943,294,1.943,296,3.017,297,1.829,298,3.652,301,2.596,305,1.699,306,3.325,321,1.255,322,1.567,324,0.988,356,1.679,357,2.596,358,2.557,359,1.751,360,3.121,361,1.943,362,1.943,363,1.857,364,1.943,365,1.857,366,2.562,367,2.596,368,1.857,369,2.596,370,1.857,371,1.943,372,1.829,373,1.943,374,1.857,375,1.943,376,3.121,377,1.857,378,1.943,379,1.803,380,2.596,381,1.857,382,1.829,383,1.803,384,1.914,385,1.943,386,1.857,387,2.557,388,1.943,389,1.885,390,1.777,391,2.596,392,1.857,393,1.943,394,3.121,395,1.803,396,1.943,397,1.857,398,1.857,399,1.943,400,1.829,401,1.943,402,1.857,403,1.857,404,1.943,405,1.829,406,1.943,407,1.857,408,1.943,409,1.885,410,1.857,411,1.943,412,1.857,413,1.588,414,1.943,415,1.857,416,2.557,417,1.857,418,2.924,419,1.943,420,1.857,421,1.943,422,1.857,423,1.943,424,2.939,425,1.857,426,1.857,427,1.857,428,1.857,429,1.984,430,1.857,431,1.943,432,1.857,433,1.857,434,1.857,435,1.373,436,1.829,437,1.829,438,1.943,439,1.829,440,1.943,441,1.829,442,1.914,443,1.943,565,1.914,593,1.525,594,1.525,595,1.567,602,2.628,605,2.879,608,1.525,741,3.589,3031,7.334,3034,4.873,3035,4.873,3672,6.02,3876,5.432,3877,8.174,3878,6.367,3879,8.174,3880,7.258,3881,5.432,3882,5.432,3883,5.432,3884,5.432,3885,5.432,3886,5.432,3887,5.432,3888,5.432,3889,5.432,3890,5.432,3891,5.432]],["title/injectables/SettingsEffects.html",[834,4.157,877,1.389]],["body/injectables/SettingsEffects.html",[0,0.319,1,2.531,3,0.03,4,0.03,5,0.036,8,0.613,17,2.27,28,1.867,32,0.17,34,0.222,35,0.452,39,0.248,42,0.264,44,0.39,45,0.005,46,0.382,47,0.39,49,0.907,50,0.791,51,0.12,52,0.517,60,0.036,88,2.516,112,0.79,113,0.79,114,0.738,120,3.654,137,2.144,161,0.003,162,0.004,163,0.003,189,1.162,208,1.599,247,4.329,303,1.987,324,1.051,455,2.211,565,2.036,593,1.623,594,1.623,595,1.667,608,1.623,741,4.421,834,6.272,877,2.095,878,2.531,884,6.602,895,5.126,897,4.58,909,3.14,910,2.99,912,2.531,913,2.738,915,2.036,1263,3.192,1411,2.63,1450,5.112,1472,4.335,1494,6.045,1626,5.126,1627,4.793,1913,5.33,1917,6.302,1925,4.793,1926,4.793,1927,4.793,2018,5.889,2045,3.313,2046,4.268,2182,6.784,2183,6.784,2876,3.313,2877,3.516,3090,5.617,3091,3.41,3093,3.41,3094,3.41,3862,6.602,3871,5.184,3892,5.778,3893,8.427,3894,5.778,3895,7.561,3896,7.561,3897,7.561,3898,7.561,3899,7.561,3900,5.778,3901,7.561,3902,5.778,3903,7.561,3904,7.561,3905,7.561,3906,7.561,3907,7.561,3908,5.778,3909,5.184]],["title/modules/SettingsModule.html",[649,2.195,3910,3.904]],["body/modules/SettingsModule.html",[0,0.343,3,0.032,4,0.041,5,0.049,32,0.118,36,0.69,45,0.005,51,0.124,60,0.038,76,2.675,91,1.819,128,1.679,161,0.003,162,0.004,163,0.003,324,1.131,328,3.219,338,2.492,339,2.41,340,2.492,341,2.492,342,2.492,343,2.492,344,2.127,345,2.492,346,2.492,347,2.492,348,2.371,349,2.492,350,2.45,351,2.492,352,2.492,353,2.492,354,1.552,355,2.492,356,1.922,374,3.319,398,3.319,410,3.319,417,3.319,424,3.27,427,3.319,432,3.319,433,2.984,649,2.725,651,3.146,652,3.567,653,5.311,654,3.671,655,3.298,664,4.68,665,3.785,667,4.31,669,4.31,674,4.985,677,3.671,678,6.177,679,6.177,680,3.146,684,4.386,689,5.857,690,4.104,691,3.219,741,3.076,1587,4.595,2720,5.582,2746,5.16,2747,6.789,2928,7.115,3448,5.582,3670,5.16,3910,8.206,3911,5.582,3912,5.582,3913,5.582,3914,7.17,3915,6.221,3916,5.582,3917,6.221,3918,6.221,3919,6.221,3920,6.221,3921,6.221,3922,7.115,3923,6.221,3924,5.582]],["title/modules/SettingsRoutingModule.html",[649,2.195,3914,3.702]],["body/modules/SettingsRoutingModule.html",[0,0.407,3,0.038,4,0.046,5,0.054,36,0.818,45,0.005,51,0.113,60,0.045,91,2.159,128,1.992,161,0.003,162,0.004,163,0.003,204,1.75,288,1.485,324,1.342,338,2.957,339,2.86,340,2.957,341,2.957,342,2.957,343,2.957,344,2.524,345,2.957,346,2.957,347,2.957,348,2.813,349,2.957,350,2.908,351,2.957,352,2.957,353,2.957,354,1.842,355,2.957,424,2.969,651,3.733,655,3.913,667,4.012,669,4.79,726,5.452,728,6.509,729,6.134,730,4.233,731,5.452,735,5.75,736,5.75,1109,5.75,3914,6.509,3916,6.623,3925,7.382]],["title/injectables/SettingsService.html",[877,1.389,3862,3.702]],["body/injectables/SettingsService.html",[0,0.376,3,0.035,4,0.035,5,0.042,17,2.283,32,0.181,34,0.262,35,0.502,39,0.293,42,0.288,44,0.566,45,0.005,46,0.555,47,0.566,51,0.121,52,0.609,60,0.042,100,0.963,137,2.268,161,0.003,162,0.004,163,0.003,208,1.776,303,2.645,305,1.965,321,1.94,324,1.239,593,1.914,594,1.914,595,1.966,608,1.914,673,3.613,741,4.152,787,3.527,788,3.613,877,2.327,878,2.985,1121,5.695,1142,4.022,1634,6.115,2057,4.805,3862,6.202,3926,6.815,3927,9.101,3928,9.101,3929,9.499,3930,8.397,3931,8.397,3932,6.815,3933,6.815,3934,6.815,3935,6.815,3936,6.815,3937,6.115,3938,6.815,3939,6.815,3940,6.815,3941,6.815]],["title/interfaces/SettingsState.html",[761,1.974,774,4.157]],["body/interfaces/SettingsState.html",[3,0.039,4,0.039,5,0.046,32,0.187,34,0.289,35,0.533,45,0.005,60,0.055,100,0.963,146,1.37,161,0.004,162,0.004,163,0.004,172,2.973,204,1.783,209,2.734,223,2.916,623,5.916,633,6.302,741,4.856,761,2.963,762,4.089,774,7.879,3099,4.898,3942,7.523,3943,7.523]],["title/classes/State.html",[0,0.276,11,1.283]],["body/classes/State.html",[0,0.524,2,0.552,3,0.024,4,0.024,5,0.028,8,0.492,11,1.667,23,1.889,24,1.584,28,1.704,32,0.155,36,0.514,38,1.324,39,0.413,42,0.137,44,0.312,45,0.005,46,0.43,47,0.312,50,0.611,51,0.09,60,0.061,61,0.902,88,1.689,100,1.016,112,1.278,113,1.278,114,1.194,123,1.993,161,0.004,162,0.003,163,0.002,166,2.735,168,3.961,169,5.447,170,3.379,171,2.657,172,2.914,173,4.092,174,4.092,175,2.7,176,3.121,177,4.092,178,4.092,179,4.092,180,4.092,181,4.092,184,3.369,185,0.714,186,3.894,187,1.889,188,2.152,189,0.932,190,4.73,191,2.152,192,1.473,193,2.913,194,2.657,195,2.913,196,2.913,197,2.913,198,2.913,199,2.913,200,2.913,201,2.913,202,2.913,203,4.092,204,2.113,205,3.219,206,2.913,207,4.092,208,1.592,209,1.684,210,3.733,211,2.913,212,1.711,213,1.993,214,1.584,215,2.069,216,2.82,217,2.913,218,2.913,219,2.913,220,2.913,221,2.913,222,2.913,223,3.213,224,2.913,225,2.913,226,2.913,227,2.82,228,2.82,229,2.522,230,2.913,231,2.913,232,2.913,233,2.913,234,1.957,235,2.913,236,2.657,237,2.913,238,2.913,239,2.913,240,2.913,241,2.735,242,2.243,243,2.913,244,1.142,245,2.657,246,2.82,247,2.069,248,2.82,249,2.519,250,2.913,251,2.913,252,2.913,253,2.913,254,1.889,255,2.913,256,2.913,257,2.913,258,2.913,259,2.913,260,2.913,261,2.913,262,2.913,263,2.913,264,2.344,265,2.913,266,2.913,267,2.586,268,2.913,269,2.913,270,2.913,271,2.913,272,2.913,273,3.961,274,1.374,275,1.374,276,2.82,277,2.82,278,2.82,279,2.196,280,2.913,281,2.913,282,2.161,283,2.913,284,2.586,285,3.961,286,2.913,287,2.913,1768,3.423,3944,4.635,3945,4.635]],["title/modules/StateModule.html",[649,2.195,662,3.702]],["body/modules/StateModule.html",[0,0.353,3,0.033,4,0.042,5,0.05,9,2.971,34,0.246,36,0.709,42,0.189,45,0.005,51,0.122,52,0.722,60,0.039,76,2.751,91,1.871,128,1.727,137,1.819,161,0.003,162,0.004,163,0.003,208,1.353,279,3.825,305,1.498,321,1.479,324,1.163,328,3.311,338,2.563,339,2.479,340,2.563,341,2.563,342,2.563,343,2.563,344,2.187,345,2.563,346,2.563,347,2.563,348,2.439,349,2.563,350,2.52,351,2.563,352,2.563,353,2.563,354,1.597,355,2.563,356,1.977,387,2.254,649,2.802,651,3.236,652,3.669,653,4.912,654,4.764,655,3.392,662,7.333,664,4.764,665,3.893,667,4.388,669,4.807,674,5.075,677,3.776,723,4.726,724,4.984,765,4.022,780,5.691,782,5.741,787,4.956,788,3.392,852,5.741,853,5.741,856,5.741,857,7.243,910,3.311,1709,7.243,2147,7.336,2149,7.336,2355,6.889,2357,7.336,2364,6.696,2373,5.308,2376,5.308,2395,5.741,3946,5.741,3947,5.741,3948,6.399,3949,6.399,3950,6.399,3951,6.399,3952,6.399,3953,5.741,3954,8.073,3955,6.399,3956,6.399,3957,6.399,3958,6.399,3959,6.399,3960,6.399,3961,6.399,3962,6.399,3963,6.399,3964,6.399,3965,6.399,3966,6.399,3967,6.399]],["title/components/TagsFilterComponent.html",[288,1.008,425,1.713]],["body/components/TagsFilterComponent.html",[0,0.254,3,0.024,4,0.024,5,0.028,17,1.756,28,1.567,32,0.163,33,0.648,34,0.177,35,0.388,39,0.198,42,0.27,44,0.311,45,0.005,46,0.567,47,0.311,49,0.497,50,0.433,51,0.117,52,0.412,60,0.028,64,1.278,65,1.425,114,0.589,121,1.295,128,1.245,132,1.313,137,2.06,161,0.002,162,0.003,163,0.002,185,0.999,208,1.372,223,2.122,234,1.947,274,1.367,275,1.923,288,1.509,289,1.577,290,2.153,291,1.625,292,1.983,293,1.65,294,1.65,296,2.77,297,1.553,298,3.622,299,2.952,301,2.321,303,2.494,305,1.518,306,3.103,321,1.734,322,1.872,324,0.839,344,2.566,356,1.425,357,2.321,358,2.286,359,1.487,360,2.913,361,1.65,362,1.65,363,1.577,364,1.65,365,1.577,366,2.352,367,2.321,368,1.577,369,2.321,370,1.577,371,1.65,372,1.553,373,1.65,374,1.577,375,1.65,376,2.913,377,1.577,378,1.65,379,1.531,380,2.321,381,1.577,382,1.553,383,1.531,384,1.625,385,1.65,386,1.577,387,2.286,388,1.65,389,1.6,390,1.509,391,2.321,392,1.577,393,1.65,394,2.913,395,1.531,396,1.65,397,1.577,398,1.577,399,1.65,400,1.553,401,1.65,402,1.577,403,1.577,404,1.65,405,1.553,406,1.65,407,1.577,408,1.65,409,1.6,410,1.577,411,1.65,412,1.577,413,1.349,414,1.65,415,1.577,416,2.286,417,1.577,418,2.685,419,1.65,420,1.577,421,1.65,422,1.577,423,1.65,424,1.553,425,2.784,426,3.287,427,1.577,428,1.577,429,1.774,430,1.577,431,1.65,432,1.577,433,1.577,434,1.577,435,2.169,436,1.553,437,1.553,438,1.65,439,1.553,440,1.65,441,1.553,442,1.625,443,1.65,593,1.295,594,1.295,595,1.33,608,1.295,680,2.332,859,3.829,864,3.118,865,3.002,866,2.806,867,2.899,872,2.899,915,1.625,932,2.806,940,4.187,1130,2.387,1263,1.947,1420,3.002,1511,2.899,1589,4.429,1593,4.566,1598,4.806,1614,2.899,1630,3.593,1631,5.053,1632,3.406,1633,3.251,1649,3.593,1651,3.593,1653,3.593,1661,3.593,1662,3.593,1773,3.002,1968,6.894,2040,3.406,2440,3.406,2448,4.791,2460,5.821,2462,4.138,2480,3.593,2482,3.593,2486,4.573,2802,3.118,2879,3.593,2926,8.375,2927,8.375,3968,6.733,3969,6.225,3970,7.505,3971,6.755,3972,4.612,3973,8.581,3974,4.612,3975,4.612,3976,4.612,3977,6.488,3978,3.826,3979,3.826,3980,4.612,3981,3.826,3982,4.612,3983,4.612,3984,4.138,3985,3.826,3986,4.612,3987,4.612,3988,3.826,3989,4.612,3990,4.612,3991,4.612,3992,4.138,3993,3.826,3994,4.138,3995,4.138]],["title/components/TextSettingComponent.html",[288,1.008,427,1.713]],["body/components/TextSettingComponent.html",[0,0.223,3,0.021,4,0.021,5,0.025,28,1.457,32,0.184,33,0.59,34,0.155,35,0.353,39,0.174,42,0.301,44,0.593,45,0.005,46,0.618,47,0.593,49,0.636,50,0.799,51,0.098,52,0.362,60,0.025,64,1.121,100,0.778,121,1.136,123,1.739,128,1.594,132,1.151,137,1.919,161,0.002,162,0.003,163,0.002,172,2.49,175,2.449,176,2.893,185,0.909,204,1.4,208,1.475,223,1.323,242,1.958,274,2.418,275,1.751,288,1.403,289,1.383,290,1.96,291,1.425,293,1.447,294,1.447,296,2.574,297,1.363,298,3.595,301,2.113,303,2.238,305,1.382,306,2.658,307,3.356,321,2.213,322,2.457,324,0.736,344,1.383,356,1.25,357,2.113,358,2.081,359,1.304,360,2.744,361,1.447,362,1.447,363,1.383,364,1.447,365,1.383,366,2.186,367,2.113,368,1.383,369,2.113,370,1.383,371,1.447,372,1.363,373,1.447,374,3.444,375,2.113,376,2.744,377,1.383,378,1.447,379,1.343,380,2.113,381,1.383,382,1.363,383,1.343,384,1.425,385,1.447,386,1.383,387,2.081,388,1.447,389,1.404,390,1.323,391,2.113,392,1.383,393,1.447,394,2.744,395,1.343,396,1.447,397,1.383,398,1.383,399,1.447,400,1.363,401,1.447,402,1.383,403,1.383,404,1.447,405,1.363,406,1.447,407,1.383,408,1.447,409,1.404,410,1.383,411,1.447,412,1.383,413,1.183,414,1.447,415,1.383,416,2.081,417,1.383,418,2.495,419,1.447,420,1.383,421,1.447,422,1.383,423,1.447,424,1.363,425,1.383,426,1.383,427,2.622,428,1.383,429,1.615,430,1.383,431,1.447,432,1.383,433,1.383,434,1.383,435,1.023,436,1.363,437,1.363,438,1.447,439,1.363,440,1.447,441,1.363,442,1.425,443,1.447,565,1.425,594,1.136,595,1.167,680,2.046,940,4.278,948,2.543,1282,3.485,1394,3.131,1587,2.988,1588,3.151,1589,4.116,1590,5.75,1591,4.6,1592,4.163,1593,3.593,1594,6.813,1595,4.163,1596,6.2,1597,5.406,1598,4.116,1599,4.917,1600,5.406,1601,4.163,1602,4.163,1603,4.163,1606,3.63,1608,2.852,1610,2.852,1613,4.917,1614,5.127,1616,4.163,1620,4.917,1635,2.852,1941,3.593,1973,6.682,2450,5.786,2483,6.024,2486,2.852,2721,6.881,2722,6.258,2726,2.988,2727,2.988,2728,2.988,2733,2.988,2734,2.988,2735,2.988,2736,2.988,2737,2.988,2738,2.988,2739,2.988,2740,2.988,2741,2.988,2742,2.988,2743,2.988,2744,2.988,2745,2.988,2746,7.478,2747,2.988,2748,2.988,2752,4.6,2753,4.899,2754,4.899,3474,2.988,3475,3.356,3476,3.356,3479,3.63,3480,3.63,3996,9.015,3997,5.906,3998,4.045,3999,4.045,4000,4.045,4001,4.045,4002,4.045,4003,4.045,4004,4.045,4005,4.045,4006,4.045,4007,4.045]],["title/classes/Third.html",[0,0.276,192,1.593]],["body/classes/Third.html",[0,0.518,2,0.527,3,0.023,4,0.023,5,0.027,8,0.469,11,1.613,23,1.804,24,1.513,28,1.67,32,0.161,34,0.17,36,0.813,38,1.322,39,0.409,42,0.186,44,0.425,45,0.005,46,0.529,47,0.425,50,0.591,51,0.088,60,0.061,61,0.873,100,1.051,112,1.263,113,1.263,114,1.18,123,1.903,161,0.003,162,0.003,163,0.002,166,2.612,168,3.834,169,5.389,170,3.335,171,2.538,172,2.893,173,3.961,174,3.961,175,2.613,176,3.043,177,3.961,178,3.961,179,3.961,180,3.961,181,3.961,184,4.372,185,1.231,186,2.29,187,1.804,188,2.055,189,0.89,190,4.612,191,2.055,192,2.003,193,2.782,194,2.538,195,4.612,196,2.782,197,2.782,198,2.782,199,2.782,200,2.782,201,2.782,202,2.782,203,3.961,204,2.082,205,3.116,206,2.782,207,3.961,208,1.552,209,1.608,210,4.584,211,2.782,212,1.633,213,1.903,214,1.513,215,3.275,216,2.693,217,2.782,218,2.782,219,2.782,220,2.782,221,2.782,222,2.782,223,3.186,224,2.782,225,2.782,226,2.782,227,2.693,228,2.693,229,2.441,230,2.782,231,2.782,232,2.782,233,2.782,234,1.868,235,2.782,236,2.538,237,2.782,238,2.782,239,2.782,240,2.782,241,2.612,242,2.142,243,2.782,244,1.09,245,2.538,246,2.693,247,1.975,248,2.693,249,2.405,250,2.782,251,2.782,252,2.782,253,2.782,254,1.804,255,2.782,256,2.782,257,2.782,258,2.782,259,2.782,260,2.782,261,2.782,262,2.782,263,2.782,264,2.238,265,2.782,266,2.782,267,2.469,268,2.782,269,2.782,270,2.782,271,2.782,272,2.782,273,3.834,274,1.312,275,1.312,276,2.693,277,2.693,278,2.693,279,2.097,280,2.782,281,2.782,282,2.091,283,2.782,284,2.469,285,3.834,286,2.782,287,2.782,305,1.475,321,1.023,933,5.653,3878,4.908,4008,6.301,4009,4.426,4010,6.301,4011,6.301,4012,6.301,4013,4.426,4014,4.426,4015,4.426]],["title/classes/ThirdActionAlreadyLoaded.html",[0,0.276,519,2.237]],["body/classes/ThirdActionAlreadyLoaded.html",[0,0.556,2,0.499,3,0.022,4,0.022,5,0.026,8,1.087,10,2.202,11,1.072,12,1.331,32,0.194,33,1.01,34,0.161,35,0.362,37,1.562,38,1.261,39,0.398,42,0.179,45,0.005,49,0.451,50,0.393,51,0.093,52,0.374,60,0.062,61,0.58,65,1.293,79,0.992,88,2.145,98,1.69,100,0.721,109,1.312,112,1.304,113,1.304,114,1.218,146,1.215,154,1.57,161,0.002,162,0.003,163,0.002,185,1.468,189,0.842,192,1.924,229,2.345,244,1.031,325,1.389,354,1.511,453,1.521,455,2.279,458,1.746,463,1.623,464,1.086,465,1.058,466,1.191,467,1.191,468,1.622,470,1.175,471,1.293,481,3.174,482,3.302,483,1.943,487,2.025,488,2.485,489,1.293,490,1.276,491,1.983,492,1.905,493,1.799,494,3.237,495,4.775,496,3.174,497,1.905,498,3.057,499,2.81,500,1.983,501,1.545,502,3.237,503,3.174,504,1.293,505,3.057,506,3.284,507,1.799,508,3.174,509,1.943,510,3.174,511,3.174,512,1.983,513,1.983,514,3.174,515,3.115,516,3.174,517,1.767,518,1.833,519,3.478,520,1.452,521,3.174,522,1.983,523,3.174,524,1.943,525,3.174,526,1.736,527,1.649,528,2.025,529,2.025,530,2.025,531,1.799,532,2.025,533,2.025,534,2.025,535,1.677,536,2.025,537,2.025,538,2.025,539,2.025,540,1.595,541,2.025,542,2.025,543,2.025,544,2.025,545,2.025,546,2.929,547,2.025,548,2.025,549,2.025,550,2.025,551,1.943,4016,6.054]],["title/classes/ThirdActionAlreadyUpdated.html",[0,0.276,521,2.237]],["body/classes/ThirdActionAlreadyUpdated.html",[0,0.556,2,0.499,3,0.022,4,0.022,5,0.026,8,1.087,10,2.202,11,1.072,12,1.331,32,0.194,33,1.01,34,0.161,35,0.362,37,1.562,38,1.261,39,0.398,42,0.179,45,0.005,49,0.451,50,0.393,51,0.093,52,0.374,60,0.062,61,0.58,65,1.293,79,0.992,88,2.145,98,1.69,100,0.721,109,1.312,112,1.304,113,1.304,114,1.218,146,1.215,154,1.57,161,0.002,162,0.003,163,0.002,185,1.468,189,0.842,192,1.924,229,2.345,244,1.031,325,1.389,354,1.511,453,1.521,455,2.279,458,1.746,463,1.623,464,1.086,465,1.058,466,1.191,467,1.191,468,1.622,470,1.175,471,1.293,481,3.174,482,3.302,483,1.943,487,2.025,488,2.485,489,1.293,490,1.276,491,1.983,492,1.905,493,1.799,494,3.237,495,4.775,496,3.174,497,1.905,498,3.057,499,2.81,500,1.983,501,1.545,502,3.237,503,3.174,504,1.293,505,3.057,506,3.284,507,1.799,508,3.174,509,1.943,510,3.174,511,3.174,512,1.983,513,1.983,514,3.174,515,3.115,516,3.174,517,1.767,518,1.833,519,3.174,520,1.452,521,3.478,522,1.983,523,3.174,524,1.943,525,3.174,526,1.736,527,1.649,528,2.025,529,2.025,530,2.025,531,1.799,532,2.025,533,2.025,534,2.025,535,1.677,536,2.025,537,2.025,538,2.025,539,2.025,540,1.595,541,2.025,542,2.025,543,2.025,544,2.025,545,2.025,546,2.025,547,2.929,548,2.025,549,2.025,550,2.025,551,1.943,4017,6.054]],["title/injectables/ThirdActionService.html",[249,2.724,877,1.389]],["body/injectables/ThirdActionService.html",[0,0.256,3,0.024,4,0.024,5,0.029,8,1.074,10,1.235,17,2.143,28,1.572,32,0.178,34,0.178,35,0.389,38,0.935,39,0.199,42,0.276,44,0.618,45,0.005,46,0.606,47,0.618,49,0.499,51,0.118,52,0.415,60,0.029,65,2.756,100,1.038,112,0.634,113,0.634,114,0.593,137,2.063,146,1.029,161,0.003,162,0.003,163,0.002,172,1.905,189,0.933,204,2.114,208,1.727,229,3.548,234,1.959,248,3.964,249,3.541,303,1.219,304,8.217,305,1.525,307,5.404,310,7.134,312,8.638,321,2.061,322,2.172,324,0.844,325,1.54,326,2.738,327,2.823,328,2.401,382,1.563,384,1.635,515,4.161,593,1.303,594,1.303,595,1.338,608,1.303,673,2.459,787,2.401,788,2.459,877,1.805,878,2.032,915,1.635,1121,5.113,1130,2.401,1295,3.137,1357,2.916,1386,2.522,1387,3.294,1389,3.735,1554,3.137,1555,2.916,2057,3.271,2159,3.614,2160,4.162,2229,3.848,2761,4.811,3446,4.162,4018,9.501,4019,4.639,4020,7.529,4021,6.514,4022,6.514,4023,6.514,4024,6.514,4025,6.514,4026,6.514,4027,9.501,4028,8.917,4029,4.639,4030,9.501,4031,6.514,4032,8.917,4033,4.639,4034,6.514,4035,4.639,4036,4.639,4037,6.514,4038,4.639,4039,6.514,4040,4.639,4041,6.514,4042,4.639,4043,4.639,4044,4.639,4045,4.639,4046,4.639,4047,4.639,4048,6.514,4049,4.639,4050,8.164,4051,4.639,4052,8.6,4053,4.639,4054,4.639,4055,6.514,4056,6.514,4057,4.639,4058,6.514,4059,6.514,4060,4.639,4061,4.639,4062,7.529,4063,4.639,4064,4.639,4065,4.639,4066,4.639,4067,4.639,4068,4.639,4069,4.639,4070,4.639,4071,4.639,4072,4.639,4073,4.639,4074,4.639,4075,4.639,4076,4.639,4077,4.639,4078,4.639]],["title/classes/ThirdMenu.html",[0,0.276,213,2.155]],["body/classes/ThirdMenu.html",[0,0.523,2,0.549,3,0.024,4,0.024,5,0.028,8,0.489,11,1.18,23,1.878,24,1.575,28,1.7,32,0.155,36,0.511,38,1.324,39,0.413,42,0.136,44,0.311,45,0.005,46,0.429,47,0.311,50,0.608,51,0.09,60,0.061,61,0.898,100,1.041,112,1.276,113,1.276,114,1.192,123,1.981,161,0.003,162,0.003,163,0.002,166,2.719,168,3.945,169,5.573,170,3.374,171,2.642,172,2.912,173,4.075,174,4.075,175,2.689,176,3.111,177,4.075,178,4.075,179,4.075,180,4.075,181,4.075,185,0.709,186,2.384,187,1.878,188,2.139,189,0.927,190,2.896,191,2.139,192,1.465,193,2.896,194,2.642,195,2.896,196,2.896,197,2.896,198,2.896,199,2.896,200,2.896,201,2.896,202,2.896,203,4.075,204,2.109,205,3.206,206,2.896,207,4.075,208,1.586,209,1.674,210,4.667,211,2.896,212,1.701,213,2.787,214,2.216,215,3.348,216,4.564,217,2.896,218,2.896,219,2.896,220,2.896,221,2.896,222,2.896,223,3.209,224,2.896,225,2.896,226,2.896,227,2.803,228,2.803,229,2.512,230,2.896,231,2.896,232,2.896,233,2.896,234,1.945,235,2.896,236,2.642,237,2.896,238,2.896,239,2.896,240,2.896,241,2.719,242,2.23,243,2.896,244,1.135,245,2.642,246,2.803,247,2.057,248,2.803,249,2.504,250,2.896,251,2.896,252,2.896,253,2.896,254,1.878,255,2.896,256,2.896,257,2.896,258,2.896,259,2.896,260,2.896,261,2.896,262,2.896,263,2.896,264,2.33,265,2.896,266,2.896,267,2.57,268,2.896,269,2.896,270,2.896,271,2.896,272,2.896,273,3.945,274,1.366,275,1.366,276,2.803,277,2.803,278,2.803,279,2.183,280,2.896,281,2.896,282,2.152,283,2.896,284,2.57,285,3.945,286,2.896,287,2.896,4079,4.134,4080,4.608]],["title/classes/ThirdMenuEntry.html",[0,0.276,210,2.874]],["body/classes/ThirdMenuEntry.html",[0,0.524,2,0.551,3,0.024,4,0.024,5,0.028,8,0.491,11,1.185,23,1.885,24,1.581,28,1.703,32,0.155,36,0.513,38,1.324,39,0.413,42,0.137,44,0.312,45,0.005,46,0.43,47,0.312,50,0.61,51,0.09,60,0.061,61,0.901,100,1.041,112,1.277,113,1.277,114,1.193,123,1.989,161,0.004,162,0.003,163,0.002,166,2.73,168,3.956,169,5.578,170,3.378,171,2.652,172,2.913,173,4.086,174,4.086,175,2.696,176,3.117,177,4.086,178,4.086,179,4.086,180,4.086,181,4.086,185,0.712,186,2.394,187,1.885,188,2.147,189,0.93,190,2.908,191,2.147,192,1.47,193,2.908,194,2.652,195,2.908,196,2.908,197,2.908,198,2.908,199,2.908,200,2.908,201,2.908,202,2.908,203,4.086,204,2.112,205,3.215,206,2.908,207,4.086,208,1.59,209,1.681,210,4.31,211,2.908,212,2.774,213,1.989,214,2.222,215,2.065,216,2.815,217,2.908,218,2.908,219,2.908,220,2.908,221,2.908,222,2.908,223,3.212,224,2.908,225,2.908,226,2.908,227,2.815,228,2.815,229,2.518,230,2.908,231,2.908,232,2.908,233,2.908,234,1.953,235,2.908,236,2.652,237,2.908,238,2.908,239,2.908,240,2.908,241,2.73,242,2.238,243,2.908,244,1.139,245,2.652,246,2.815,247,2.065,248,2.815,249,2.514,250,2.908,251,2.908,252,2.908,253,2.908,254,1.885,255,2.908,256,2.908,257,2.908,258,2.908,259,2.908,260,2.908,261,2.908,262,2.908,263,2.908,264,2.339,265,2.908,266,2.908,267,2.581,268,2.908,269,2.908,270,2.908,271,2.908,272,2.908,273,3.956,274,1.371,275,1.371,276,2.815,277,2.815,278,2.815,279,2.192,280,2.908,281,2.908,282,2.158,283,2.908,284,2.581,285,3.956,286,2.908,287,2.908,4079,4.15,4081,4.626]],["title/modules/ThirdpartyModule.html",[649,2.195,4082,3.904]],["body/modules/ThirdpartyModule.html",[0,0.394,3,0.037,4,0.045,5,0.053,36,0.791,45,0.005,51,0.116,60,0.044,76,3.068,91,2.087,128,1.925,161,0.003,162,0.004,163,0.003,324,1.297,328,3.693,338,2.859,339,2.764,340,2.859,341,2.859,342,2.859,343,2.859,344,2.439,345,2.859,346,2.859,347,2.859,348,2.719,349,2.859,350,2.811,351,2.859,352,2.859,353,2.859,354,1.781,355,2.859,356,2.205,405,3.383,649,3.125,651,3.608,652,4.091,653,5.65,654,4.211,655,3.783,664,5.096,665,4.342,667,4.693,669,4.693,674,5.428,677,4.211,684,5.03,739,5.919,4082,7.985,4083,6.402,4084,6.402,4085,6.402,4086,7.417,4087,7.136,4088,6.402]],["title/modules/ThirdpartyRoutingModule.html",[649,2.195,4086,3.702]],["body/modules/ThirdpartyRoutingModule.html",[0,0.409,3,0.038,4,0.046,5,0.054,36,0.822,45,0.005,51,0.113,60,0.046,91,2.169,128,2.001,161,0.003,162,0.004,163,0.003,204,1.758,288,1.492,324,1.349,338,2.971,339,2.873,340,2.971,341,2.971,342,2.971,343,2.971,344,2.535,345,2.971,346,2.971,347,2.971,348,2.827,349,2.971,350,2.921,351,2.971,352,2.971,353,2.971,354,1.851,355,2.971,405,2.977,651,3.75,655,3.932,667,4.031,669,4.804,726,5.478,728,6.528,729,6.146,730,4.253,731,5.478,1109,5.777,4086,6.528,4088,6.654,4089,7.417,4090,7.417]],["title/classes/ThirdsI18nLoader.html",[0,0.276,4091,4.157]],["body/classes/ThirdsI18nLoader.html",[0,0.355,2,0.543,3,0.024,4,0.024,5,0.028,8,0.484,11,1.167,17,2.245,24,1.558,28,2.026,32,0.122,33,0.643,34,0.175,38,0.566,39,0.196,42,0.19,44,0.434,45,0.005,46,0.493,47,0.434,51,0.114,60,0.046,100,1.056,146,0.623,161,0.002,162,0.003,163,0.002,170,1.683,182,2.543,185,0.991,187,1.858,189,1.294,192,2.575,204,2.206,205,2.254,208,2.168,212,1.683,213,3.206,215,4.406,242,3.114,244,1.123,254,3.953,274,1.907,303,2.129,305,1.506,321,1.053,324,0.829,325,1.513,413,1.882,435,1.152,488,1.934,489,1.409,490,1.389,593,1.28,608,1.28,673,2.416,690,2.359,691,2.359,744,2.967,757,2.69,787,2.359,788,2.416,877,1.783,895,2.614,912,1.996,913,2.16,915,1.606,1013,2.543,1042,2.116,1121,4.276,1123,3.082,1263,2.716,1297,2.865,1450,3.082,1505,3.781,1640,3.214,1758,4.401,1825,3.214,1881,4.947,1901,3.781,1917,3.214,2081,7.355,2118,3.781,2351,4.537,2659,2.478,3130,6.424,3194,3.551,3564,5.809,4091,5.337,4092,4.09,4093,7.269,4094,6.434,4095,5.773,4096,4.558,4097,5.773,4098,4.558,4099,4.558,4100,6.691,4101,4.09,4102,4.09,4103,4.09,4104,4.09,4105,4.09,4106,4.09,4107,4.09,4108,4.09,4109,4.09,4110,5.773,4111,4.09,4112,4.09,4113,4.09,4114,4.09,4115,4.09,4116,5.773,4117,4.09,4118,4.09,4119,4.09,4120,4.09,4121,5.773,4122,4.09,4123,4.09,4124,4.09,4125,5.773,4126,4.09,4127,4.09,4128,4.09,4129,4.09,4130,4.09,4131,4.09,4132,4.09,4133,4.09,4134,4.09,4135,4.09,4136,4.09,4137,4.09,4138,4.09,4139,4.09,4140,4.09,4141,5.773,4142,4.09,4143,4.09,4144,4.09,4145,4.09,4146,4.09,4147,4.09,4148,4.09,4149,4.09,4150,4.09,4151,4.09,4152,5.773,4153,4.09,4154,4.09,4155,4.09,4156,4.09,4157,4.09,4158,4.09,4159,4.09,4160,4.09,4161,4.09,4162,4.09,4163,4.09,4164,4.09,4165,4.09,4166,3.367,4167,4.09,4168,3.781,4169,4.09,4170,4.09,4171,4.09,4172,4.09,4173,5.773,4174,4.09,4175,4.09,4176,4.09,4177,4.09,4178,4.09,4179,4.09,4180,3.781,4181,4.09,4182,4.09,4183,4.09,4184,4.09,4185,4.09,4186,6.691,4187,4.09,4188,4.09,4189,4.09,4190,4.09,4191,4.09,4192,4.09,4193,4.09]],["title/injectables/ThirdsService.html",[877,1.389,1881,2.796]],["body/injectables/ThirdsService.html",[0,0.303,3,0.019,4,0.019,5,0.023,8,0.39,11,1.688,17,2.278,24,1.256,28,1.961,32,0.181,33,0.367,34,0.141,35,0.329,38,0.819,39,0.158,42,0.285,44,0.625,45,0.005,46,0.634,47,0.625,49,0.395,50,0.345,51,0.108,60,0.041,100,1.08,146,0.502,161,0.002,162,0.003,163,0.002,170,1.356,182,2.049,184,2.846,185,1.266,187,1.497,189,1.326,192,2.326,204,2.078,205,3.259,208,2.114,212,1.356,213,2.833,215,4.523,242,2.661,244,0.905,254,3.777,274,1.63,303,2.467,305,1.287,321,2.142,324,0.668,325,1.219,413,1.608,435,0.928,488,2.199,489,1.135,490,1.119,593,1.031,608,1.031,673,1.947,690,1.901,691,1.901,744,2.391,757,2.168,787,1.901,788,1.947,877,1.524,878,1.609,895,2.106,912,1.609,913,1.74,915,1.294,1013,2.049,1042,1.705,1121,4.715,1123,2.483,1263,2.321,1297,2.309,1450,2.483,1505,3.047,1640,2.589,1758,5.387,1825,2.589,1881,4.082,1901,3.047,1917,2.589,2057,2.589,2081,6.822,2118,3.047,2351,4.01,2659,1.996,3130,6.618,3194,2.861,3564,5.134,4091,3.047,4092,3.295,4093,5.913,4095,3.295,4097,3.295,4100,6.565,4101,3.295,4102,5.913,4103,5.913,4104,5.913,4105,3.295,4106,3.295,4107,3.295,4108,4.934,4109,3.295,4110,4.934,4111,4.934,4112,3.295,4113,3.295,4114,3.295,4115,3.295,4116,4.934,4117,3.295,4118,3.295,4119,3.295,4120,4.934,4121,4.934,4122,3.295,4123,4.934,4124,5.913,4125,6.565,4126,3.295,4127,3.295,4128,3.295,4129,3.295,4130,3.295,4131,3.295,4132,3.295,4133,3.295,4134,3.295,4135,3.295,4136,3.295,4137,3.295,4138,4.934,4139,3.295,4140,3.295,4141,4.934,4142,4.934,4143,5.913,4144,3.295,4145,3.295,4146,3.295,4147,3.295,4148,3.295,4149,3.295,4150,3.295,4151,4.934,4152,5.913,4153,3.295,4154,3.295,4155,4.934,4156,3.295,4157,3.295,4158,3.295,4159,3.295,4160,3.295,4161,3.295,4162,3.295,4163,3.295,4164,3.295,4165,3.295,4166,2.713,4167,3.295,4168,6.07,4169,3.295,4170,3.295,4171,3.295,4172,3.295,4173,4.934,4174,3.295,4175,3.295,4176,3.295,4177,3.295,4178,3.295,4179,3.295,4180,3.047,4181,4.934,4182,3.295,4183,3.295,4184,3.295,4185,4.934,4186,7.03,4187,3.295,4188,3.295,4189,3.295,4190,3.295,4191,3.295,4192,3.295,4193,3.295,4194,5.499,4195,5.499,4196,5.499,4197,5.499,4198,5.499,4199,5.499,4200,5.499,4201,5.499,4202,5.499,4203,5.499,4204,5.499,4205,3.673,4206,3.673,4207,3.673,4208,3.673,4209,3.673,4210,3.673,4211,3.673,4212,3.673,4213,3.673,4214,3.673,4215,3.673,4216,3.673,4217,3.673,4218,3.673,4219,3.673]],["title/classes/ThirdsServiceMock.html",[0,0.276,4220,4.497]],["body/classes/ThirdsServiceMock.html",[0,0.411,2,0.888,3,0.039,4,0.039,5,0.046,17,2.214,28,2.045,34,0.286,42,0.262,45,0.005,51,0.106,60,0.046,161,0.003,162,0.004,163,0.003,208,1.576,210,4.273,213,3.204,305,2.074,321,2.048,325,2.473,593,2.093,1042,4.115,4168,8.121,4220,7.952,4221,7.452,4222,9.46,4223,7.452,4224,7.452,4225,7.452,4226,7.452,4227,7.452,4228,7.452,4229,7.452,4230,7.452,4231,7.452,4232,7.452,4233,7.452,4234,7.452,4235,7.452,4236,7.452,4237,7.452,4238,7.452,4239,7.452,4240,7.452]],["title/classes/Tick.html",[0,0.276,2771,2.958]],["body/classes/Tick.html",[0,0.504,2,0.728,3,0.032,4,0.032,5,0.038,7,2.579,8,1.025,10,2.305,16,3.433,32,0.184,33,0.912,34,0.234,35,0.468,36,0.959,37,1.591,38,1.173,39,0.262,40,1.585,42,0.256,44,0.412,45,0.005,46,0.404,47,0.412,49,0.658,50,0.573,51,0.11,52,0.546,55,2.893,56,2.78,60,0.059,61,0.846,74,2.675,98,1.639,104,3.087,109,2.712,136,3.089,146,1.071,161,0.003,162,0.004,163,0.003,282,2.027,290,2.601,429,2.642,458,1.762,520,2.72,573,4.101,580,4.511,869,4.494,1394,3.238,1411,3.567,1452,5.299,1533,3.976,1900,4.306,2756,5.102,2757,4.306,2758,4.306,2759,4.758,2760,7.112,2761,4.511,2762,4.758,2765,4.758,2766,3.976,2767,4.306,2768,3.976,2769,4.306,2770,4.758,2771,5.572,2772,4.758,2773,5.525,2774,4.758,2775,6.973,2776,6.973,2777,6.105,2778,6.105,2779,6.741,2780,5.789,2781,5.299,2782,4.758,2783,4.758,2784,6.743,2785,4.758,2786,4.13,2787,4.511,2788,5.102,2789,4.758,2790,4.758,2791,4.511,4241,7.838,4242,6.108,4243,6.108]],["title/classes/TickPayload.html",[0,0.276,2784,3.702]],["body/classes/TickPayload.html",[0,0.507,2,0.74,3,0.032,4,0.032,5,0.038,7,2.623,8,1.007,10,2.323,16,2.721,32,0.181,33,0.871,34,0.238,35,0.473,36,1.052,37,1.47,38,1.084,39,0.267,42,0.258,44,0.419,45,0.005,46,0.411,47,0.419,51,0.11,52,0.556,55,2.924,56,2.827,60,0.06,61,0.861,74,2.721,98,1.65,104,2.447,109,2.483,136,3.142,146,1.083,161,0.003,162,0.004,163,0.003,282,3.05,290,2.062,429,2.595,458,1.792,520,2.156,573,3.754,580,4.589,869,3.562,1394,3.293,1411,3.606,1452,4.201,1533,4.044,1900,4.38,2756,5.158,2757,4.38,2758,4.38,2759,4.839,2760,6.795,2761,4.589,2762,4.839,2765,4.839,2766,4.044,2767,4.38,2768,4.044,2769,4.38,2770,4.839,2771,5.601,2772,4.839,2773,5.586,2774,4.839,2775,6.786,2776,6.786,2777,4.839,2778,4.839,2779,6.795,2780,4.589,2781,4.201,2782,4.839,2783,4.839,2784,5.852,2785,7.157,2786,6.213,2787,7.01,2788,5.158,2789,4.839,2790,4.839,2791,4.589,4244,6.213,4245,6.213,4246,6.213,4247,6.213]],["title/injectables/TimeEffects.html",[837,4.157,877,1.389]],["body/injectables/TimeEffects.html",[0,0.296,3,0.028,4,0.028,5,0.033,8,0.569,10,2.312,17,2.294,28,2.069,32,0.165,34,0.206,35,0.43,39,0.23,42,0.256,44,0.362,45,0.005,46,0.355,47,0.362,49,0.775,50,0.675,51,0.122,52,0.48,55,2.998,56,2.441,60,0.033,88,2.47,120,3.566,137,2.1,146,1.187,161,0.003,162,0.003,163,0.003,170,1.98,188,2.49,189,1.746,191,2.49,204,1.706,208,1.836,247,4.041,303,2.38,324,0.975,429,2.548,565,1.89,573,4.113,581,4.126,593,1.506,594,1.506,595,1.547,608,1.506,837,5.97,877,1.994,878,2.349,897,3.911,909,2.915,910,2.776,912,2.349,913,4.29,915,1.89,936,5.122,955,3.263,1226,5.073,1263,3.664,1404,4.866,1472,4.977,1486,5.97,1494,4.866,1533,4.685,1553,3.961,1900,5.073,1937,5.97,2018,6.761,2045,3.075,2046,3.961,2756,5.287,2758,5.073,2766,5.287,2767,3.781,2771,4.793,2773,5.073,2775,5.315,2776,5.315,2788,3.491,2878,4.812,3356,4.812,4166,5.315,4248,5.363,4249,8.122,4250,8.122,4251,8.122,4252,7.197,4253,7.197,4254,7.197,4255,7.197,4256,5.363,4257,7.197,4258,7.197,4259,7.197,4260,8.68,4261,8.68,4262,7.197,4263,7.197,4264,5.363,4265,7.197,4266,7.197,4267,5.363,4268,5.363,4269,5.363]],["title/components/TimeFilterComponent.html",[288,1.008,428,1.713]],["body/components/TimeFilterComponent.html",[0,0.236,3,0.022,4,0.022,5,0.026,8,0.453,10,1.636,11,1.094,17,1.841,28,1.813,32,0.159,33,0.614,34,0.164,35,0.367,39,0.183,42,0.27,44,0.288,45,0.005,46,0.551,47,0.288,49,0.46,50,0.401,51,0.117,52,0.382,60,0.026,64,1.184,65,1.32,114,0.546,121,1.2,128,1.153,132,1.216,137,1.955,161,0.002,162,0.003,163,0.002,185,0.946,208,1.522,209,2.233,223,2.727,234,1.804,274,1.267,275,1.822,284,2.384,288,1.447,289,1.461,290,2.04,291,1.505,293,1.529,294,1.529,296,2.656,297,1.439,298,3.607,301,2.198,303,2.486,305,1.438,306,2.998,321,1.663,322,1.773,324,0.777,344,2.46,356,1.32,357,2.198,358,2.165,359,1.378,360,2.815,361,1.529,362,1.529,363,1.461,364,1.529,365,1.461,366,2.255,367,2.198,368,1.461,369,2.198,370,1.461,371,1.529,372,1.439,373,1.529,374,1.461,375,1.529,376,2.815,377,1.461,378,1.529,379,1.418,380,2.198,381,1.461,382,1.439,383,1.418,384,1.505,385,1.529,386,1.461,387,2.165,388,1.529,389,1.483,390,2.01,391,2.198,392,1.461,393,1.529,394,2.815,395,1.418,396,1.529,397,1.461,398,1.461,399,1.529,400,1.439,401,1.529,402,1.461,403,1.461,404,1.529,405,1.439,406,1.529,407,1.461,408,1.529,409,1.483,410,1.461,411,1.529,412,1.461,413,1.25,414,1.529,415,1.461,416,2.165,417,1.461,418,2.574,419,1.529,420,1.461,421,1.529,422,1.461,423,1.529,424,1.439,425,1.461,426,1.461,427,1.461,428,2.69,429,2.373,430,1.461,431,1.529,432,1.461,433,1.461,434,1.461,435,2.391,436,1.439,437,1.439,438,1.529,439,1.439,440,1.529,441,1.439,442,1.505,443,1.529,565,1.505,572,3.328,593,1.2,594,1.2,595,1.233,608,1.2,680,2.161,859,4.246,864,2.889,865,2.782,866,2.6,867,2.686,869,2.45,872,2.686,915,1.505,932,2.6,936,5.277,940,4.389,948,4.523,955,2.6,1130,2.211,1263,1.804,1411,2.796,1420,2.782,1589,4.246,1593,4.378,1598,4.643,1614,3.862,1630,3.328,1631,4.786,1632,3.156,1633,3.012,1649,3.328,1651,3.328,1653,3.328,1661,3.328,1662,3.328,1672,3.834,1788,3.862,1968,6.883,2035,3.545,2040,3.156,2231,3.834,2440,3.156,2448,4.538,2479,3.545,2480,3.328,2482,3.328,2486,5.876,2691,4.332,2696,4.332,2802,2.889,2823,3.545,2879,3.328,2907,8.362,2908,8.362,3474,3.156,3969,5.968,3971,6.526,3978,3.545,3979,5.097,3981,3.545,3985,5.097,3988,3.545,4270,7.195,4271,5.513,4272,4.273,4273,4.273,4274,4.273,4275,3.834,4276,6.145,4277,4.273,4278,4.273,4279,4.273,4280,6.145,4281,4.273,4282,4.273,4283,4.273,4284,4.273,4285,4.273,4286,4.273,4287,6.145,4288,4.273,4289,4.273,4290,4.273,4291,4.273,4292,6.145,4293,4.273,4294,4.273,4295,4.273,4296,4.273,4297,6.145,4298,6.145,4299,4.273,4300,4.273,4301,6.145,4302,6.145,4303,6.145]],["title/components/TimeLineComponent.html",[288,1.008,430,1.713]],["body/components/TimeLineComponent.html",[0,0.148,3,0.014,4,0.014,5,0.016,11,1.582,17,1.263,24,1.472,28,0.56,32,0.159,33,0.43,34,0.103,35,0.257,36,0.903,39,0.115,42,0.247,44,0.364,45,0.005,46,0.478,47,0.364,49,0.289,50,0.251,51,0.102,52,0.24,60,0.016,64,1.193,85,1.244,104,2.665,121,0.753,132,0.763,137,1.628,161,0.001,162,0.002,163,0.001,172,1.578,182,3.01,184,2.228,185,0.951,204,2.382,208,1.307,209,2.458,223,2.892,234,1.131,241,2.54,242,2.083,274,0.794,275,1.831,288,1.085,289,0.916,290,1.429,291,0.944,293,0.959,294,0.959,296,1.991,297,0.903,298,3.488,301,1.54,305,1.007,306,2.354,321,1.427,322,1.242,324,0.487,356,0.828,357,1.54,358,1.517,359,0.864,360,2.21,361,0.959,362,0.959,363,0.916,364,0.959,365,0.916,366,1.691,367,1.54,368,0.916,369,1.54,370,0.916,371,0.959,372,0.903,373,0.959,374,0.916,375,0.959,376,2.21,377,0.916,378,0.959,379,0.889,380,1.54,381,0.916,382,0.903,383,0.889,384,0.944,385,0.959,386,0.916,387,1.517,388,0.959,389,0.93,390,2.021,391,1.54,392,0.916,393,0.959,394,2.21,395,0.889,396,0.959,397,0.916,398,0.916,399,0.959,400,0.903,401,0.959,402,0.916,403,0.916,404,0.959,405,0.903,406,0.959,407,0.916,408,0.959,409,0.93,410,0.916,411,0.959,412,0.916,413,0.784,414,0.959,415,0.916,416,1.517,417,0.916,418,1.93,419,0.959,420,0.916,421,0.959,422,0.916,423,0.959,424,0.903,425,0.916,426,0.916,427,0.916,428,0.916,429,2.286,430,2.112,431,0.959,432,0.916,433,0.916,434,0.916,435,0.677,436,0.903,437,0.903,438,0.959,439,0.903,440,0.959,441,0.903,442,0.944,443,0.959,468,2.09,488,0.805,489,0.828,490,0.817,501,1.589,504,1.33,531,2.319,565,0.944,579,6.482,593,0.753,594,0.753,595,0.773,602,1.297,607,2.401,608,0.753,627,2.505,732,3.01,750,2.706,912,1.885,915,0.944,969,4.345,1019,3.353,1035,1.979,1039,1.889,1042,3.966,1068,4.179,1076,2.223,1130,1.387,1220,1.889,1411,3.707,1413,5.742,1589,3.184,1598,3.645,1632,1.979,1695,2.404,1727,2.404,1758,2.54,1759,3.035,1760,3.179,1761,3.179,1762,3.179,1763,2.802,1767,3.179,1825,3.035,2132,3.862,2415,2.087,2417,2.404,2418,2.223,2478,2.404,2548,6.345,2670,6.654,2691,4.77,2696,5.353,2713,2.404,2786,2.911,2801,2.404,2802,1.812,2808,2.404,2823,5.124,2845,2.223,2902,7.664,2939,2.404,2948,3.862,3060,2.223,3194,3.353,3224,3.571,3369,3.035,3375,3.035,3381,1.889,4304,2.68,4305,4.305,4306,7.894,4307,5.395,4308,6.177,4309,4.305,4310,4.305,4311,4.305,4312,4.305,4313,7.894,4314,2.68,4315,2.68,4316,2.68,4317,2.68,4318,4.305,4319,2.68,4320,4.305,4321,4.305,4322,6.177,4323,4.305,4324,5.395,4325,4.305,4326,4.305,4327,2.68,4328,2.68,4329,2.68,4330,2.68,4331,2.68,4332,2.68,4333,9.169,4334,2.68,4335,2.68,4336,2.68,4337,5.395,4338,2.68,4339,2.68,4340,2.68,4341,2.68,4342,2.68,4343,2.68,4344,2.68,4345,2.68,4346,2.68,4347,2.68,4348,2.68,4349,2.68,4350,2.68,4351,2.68,4352,2.68,4353,2.68,4354,2.68,4355,2.68,4356,2.68,4357,2.68,4358,2.68,4359,2.68,4360,2.68,4361,2.68,4362,2.68,4363,2.68,4364,2.68,4365,2.68,4366,2.68,4367,4.305,4368,4.305,4369,2.68,4370,2.68,4371,2.68,4372,2.68,4373,4.305,4374,4.305,4375,5.395,4376,6.177,4377,5.395,4378,5.395,4379,4.305,4380,4.305,4381,2.68,4382,4.305,4383,2.404,4384,4.305,4385,2.68,4386,2.68,4387,2.68,4388,2.68,4389,2.68,4390,2.68,4391,2.68,4392,2.68,4393,4.305,4394,7.225,4395,2.68,4396,7.225,4397,2.68,4398,7.225,4399,7.225,4400,7.225,4401,7.225,4402,5.395,4403,7.225,4404,5.395,4405,4.84,4406,4.305,4407,4.305,4408,2.68,4409,2.68,4410,4.305,4411,2.68,4412,2.68,4413,6.177,4414,6.177,4415,4.305,4416,2.68,4417,2.68,4418,2.68,4419,2.68,4420,2.68,4421,2.68,4422,2.68,4423,2.68,4424,2.68,4425,2.68,4426,2.68,4427,2.68,4428,2.68,4429,2.68,4430,2.68,4431,2.68,4432,4.305,4433,2.68,4434,2.68,4435,2.68,4436,2.68,4437,4.305,4438,2.68,4439,2.68,4440,2.68,4441,2.68,4442,4.305,4443,5.395,4444,7.225,4445,2.68,4446,5.395,4447,4.305,4448,4.305,4449,4.305,4450,2.68,4451,4.305,4452,5.395,4453,2.68,4454,2.68,4455,2.68,4456,2.68,4457,2.68,4458,2.68,4459,2.68,4460,2.68,4461,2.68,4462,2.68,4463,2.68,4464,2.68,4465,2.68,4466,2.68,4467,2.68,4468,2.68,4469,2.68,4470,2.68,4471,2.68,4472,2.68,4473,2.68,4474,2.68,4475,2.68,4476,4.305,4477,2.68,4478,2.68,4479,2.68,4480,2.68,4481,2.68,4482,2.68,4483,2.68,4484,2.68]],["title/classes/TimeReference.html",[0,0.276,2766,3.263]],["body/classes/TimeReference.html",[0,0.302,2,0.652,3,0.028,4,0.028,5,0.034,32,0.179,34,0.21,38,1.02,39,0.235,42,0.283,44,0.632,45,0.005,46,0.62,47,0.632,50,0.821,51,0.088,60,0.05,61,0.759,100,0.951,161,0.004,162,0.003,163,0.003,172,1.601,182,4.071,204,2.223,208,2.024,209,2.982,279,3.889,282,3.371,303,2.464,305,1.708,321,2.167,429,1.497,750,3.442,967,5.144,1042,2.542,1411,3.735,2094,4.542,2135,4.044,2296,5.389,2409,4.542,2624,4.913,2625,4.913,2766,4.75,2768,3.565,2786,6.723,4485,4.913,4486,9.376,4487,7.297,4488,7.297,4489,8.753,4490,5.476,4491,8.753,4492,8.207,4493,9.116,4494,7.853,4495,5.476,4496,8.207,4497,5.476,4498,5.476,4499,5.476,4500,5.476,4501,5.476,4502,5.476,4503,5.476,4504,5.476,4505,5.476,4506,7.297,4507,5.476,4508,8.753,4509,7.297,4510,5.476,4511,5.476,4512,5.476,4513,5.476,4514,5.476,4515,5.476,4516,5.476,4517,5.476,4518,5.476,4519,5.476,4520,5.476,4521,5.476,4522,5.476,4523,5.476,4524,7.297,4525,5.476,4526,5.476,4527,5.476,4528,5.476,4529,5.476,4530,5.476,4531,5.476,4532,5.476,4533,5.476,4534,5.476,4535,5.476,4536,5.476,4537,5.476,4538,5.476,4539,5.476,4540,5.476,4541,7.297,4542,4.913,4543,4.913,4544,4.913,4545,4.913,4546,4.913,4547,4.913,4548,4.913,4549,4.913,4550,5.476,4551,5.476]],["title/classes/TimeSpan.html",[0,0.276,2781,3.389]],["body/classes/TimeSpan.html",[0,0.439,2,0.746,3,0.033,4,0.033,5,0.039,8,0.929,11,1.604,24,2.141,32,0.119,38,1.312,39,0.376,42,0.185,44,0.422,45,0.005,46,0.414,47,0.422,51,0.096,60,0.06,61,1.213,100,1.024,112,0.856,113,0.856,114,0.8,161,0.005,162,0.004,163,0.003,170,3.232,184,3.241,188,2.907,205,3.097,208,1.325,214,2.141,282,3.377,325,2.079,426,2.141,488,1.882,563,4.234,750,3.937,1042,2.907,1068,2.467,1386,3.404,1387,4.66,1389,5.284,1511,5.793,1758,3.696,1759,4.415,1760,4.625,1761,4.625,1762,4.625,1763,6.194,1764,4.878,1765,4.878,1766,4.625,1767,4.625,1770,4.878,2421,4.415,2691,5.614,2696,6.173,2781,5.921,2999,5.882,3000,5.195,3001,5.195,3002,6.467,3003,5.195,3004,6.173,3005,5.195,3369,4.415,3387,6.606,3388,5.195,3389,5.619,3391,5.619,3392,5.619,3393,5.195,3394,5.195,3395,5.619,4552,6.262,4553,6.262]],["title/interfaces/TimeState.html",[761,1.974,775,4.157]],["body/interfaces/TimeState.html",[3,0.039,4,0.039,5,0.046,32,0.18,34,0.286,35,0.53,45,0.005,51,0.114,55,3.615,56,3.397,60,0.055,146,1.367,161,0.003,162,0.004,163,0.003,204,1.769,209,2.712,761,2.94,762,4.057,775,7.853,1411,4.308,2766,6.727,2767,5.262,2768,4.859,2786,6.401,4554,7.464,4555,10.003,4556,7.464,4557,7.464,4558,7.464]],["title/interfaces/TimelineState.html",[761,1.974,776,4.157]],["body/interfaces/TimelineState.html",[3,0.032,4,0.032,5,0.038,7,2.626,11,2.486,13,3.609,32,0.181,34,0.239,35,0.474,45,0.005,51,0.105,55,2.927,60,0.049,100,0.984,146,1.379,161,0.003,162,0.004,163,0.003,172,2.553,185,1.495,204,1.475,209,2.26,214,2.711,223,2.035,282,2.632,390,2.594,488,3.002,489,1.922,490,1.896,492,2.831,501,3.722,518,3.473,527,3.124,535,3.952,540,3.022,633,6.202,732,4.424,761,2.45,762,3.381,776,7.241,798,5.582,1511,4.985,1564,6.177,1825,5.59,1929,7.115,1930,8.519,1931,8.852,1932,8.248,1933,6.578,1935,7.115,1936,7.115,1937,6.578,1938,7.115,1941,4.825,1964,5.582,1967,5.582,2548,6.177,4559,6.221,4560,7.93,4561,7.93,4562,7.93,4563,7.93,4564,7.93,4565,6.221]],["title/interceptors/TokenInjector.html",[2102,4.497,3863,3.904]],["body/interceptors/TokenInjector.html",[0,0.372,3,0.035,4,0.035,5,0.041,10,1.794,17,2.119,32,0.172,33,0.673,34,0.259,39,0.289,42,0.268,44,0.61,45,0.005,46,0.599,47,0.61,51,0.113,60,0.041,112,0.921,113,0.921,114,1.208,161,0.003,162,0.004,163,0.003,204,2.243,208,1.763,212,2.487,305,1.951,321,1.927,324,1.225,568,5.278,593,1.892,608,1.892,673,3.571,877,2.31,1444,6.494,1450,6.397,2080,5.589,2105,6.045,3863,6.494,4566,6.737,4567,6.737,4568,8.337,4569,8.337,4570,6.737,4571,6.737,4572,8.337,4573,10.226,4574,6.737,4575,8.337,4576,9.461,4577,6.737,4578,6.737,4579,8.337,4580,6.737,4581,6.737,4582,8.337,4583,6.737,4584,6.737,4585,6.737,4586,8.337,4587,6.737,4588,6.737]],["title/classes/TransitionalThirdWithItSVersion.html",[0,0.276,4589,4.157]],["body/classes/TransitionalThirdWithItSVersion.html",[0,0.339,2,0.509,3,0.022,4,0.022,5,0.026,8,0.454,10,1.139,17,2.093,28,1.976,32,0.137,34,0.164,35,0.367,36,0.873,39,0.184,42,0.213,44,0.288,45,0.005,46,0.283,47,0.288,51,0.12,52,0.382,60,0.026,88,1.868,98,0.768,100,0.945,137,1.622,146,0.84,161,0.003,162,0.003,163,0.002,170,1.579,189,1.992,191,1.986,192,2.502,194,2.452,204,2.362,208,2.166,209,1.554,213,1.839,215,3.875,234,1.806,247,3.722,279,3.951,303,2.192,324,0.778,325,1.42,488,2.164,489,1.322,490,1.303,493,1.839,498,2.643,527,1.685,540,1.63,581,2.452,593,1.201,594,1.201,595,1.234,608,1.201,690,2.213,691,2.213,766,2.688,849,3.331,877,1.704,894,3.015,895,3.525,909,2.325,910,2.213,912,1.873,913,2.027,915,1.507,969,2.744,1068,2.836,1130,2.213,1263,3.323,1271,4.686,1288,4.868,1452,2.892,1472,4.513,1494,2.892,1554,2.892,1555,2.688,1640,3.015,1758,2.524,1790,2.386,1791,4.003,1881,3.43,1888,2.892,2002,3.548,2298,3.548,2354,3.159,2525,4.789,2659,2.325,2850,3.159,3065,2.524,3067,2.386,3130,3.015,3402,3.548,3795,3.741,3799,2.784,3800,3.741,3801,3.741,3803,2.602,3805,3.741,3809,5.322,3814,4.003,3878,3.331,4166,3.159,4589,5.1,4590,3.837,4591,4.277,4592,4.277,4593,6.149,4594,3.837,4595,5.517,4596,3.837,4597,3.837,4598,3.837,4599,3.837,4600,3.837,4601,3.837,4602,3.837,4603,3.837,4604,3.837,4605,3.837,4606,3.837,4607,3.837,4608,3.837,4609,3.837,4610,3.837,4611,6.459,4612,3.837,4613,3.837,4614,3.837,4615,3.837,4616,3.837,4617,6.459,4618,5.517,4619,3.837,4620,3.837,4621,3.837,4622,3.837,4623,3.837,4624,3.837,4625,3.837,4626,3.837,4627,3.837,4628,3.837,4629,3.837,4630,3.837,4631,3.837,4632,3.837,4633,3.837,4634,3.837,4635,3.837,4636,3.837,4637,3.837,4638,3.837,4639,3.837,4640,5.517,4641,3.837,4642,3.837,4643,3.837,4644,3.837,4645,3.837,4646,3.837,4647,3.837,4648,3.837,4649,3.837,4650,3.837,4651,3.837,4652,5.517,4653,3.837,4654,3.837,4655,3.837,4656,3.837,4657,3.837,4658,3.837,4659,3.837,4660,3.837,4661,3.837,4662,3.837,4663,3.837,4664,3.837,4665,5.517,4666,3.837,4667,3.837,4668,3.837,4669,3.837,4670,6.459,4671,3.837,4672,5.517,4673,3.837,4674,5.517,4675,3.837,4676,5.517,4677,3.837,4678,5.517,4679,3.837,4680,3.837,4681,5.517,4682,3.837,4683,3.837,4684,3.837,4685,3.837,4686,3.837,4687,3.837,4688,3.837,4689,5.517,4690,3.837,4691,3.837,4692,3.837,4693,3.837,4694,3.837,4695,5.517,4696,3.837,4697,3.837,4698,5.517,4699,3.837,4700,3.837]],["title/injectables/TranslateEffects.html",[849,3.904,877,1.389]],["body/injectables/TranslateEffects.html",[0,0.279,3,0.017,4,0.017,5,0.02,8,0.536,10,1.346,17,2.194,28,1.913,32,0.178,34,0.126,35,0.302,39,0.141,42,0.277,44,0.598,45,0.005,46,0.586,47,0.598,49,0.744,50,0.649,51,0.114,52,0.294,60,0.02,88,2.129,98,0.59,100,0.881,137,1.775,146,0.945,161,0.003,162,0.002,163,0.002,170,1.213,189,2.05,191,1.525,192,1.044,194,1.884,204,2.28,208,2.141,209,1.194,213,2.647,215,2.748,234,1.387,247,3.877,279,4.485,303,2.283,305,1.183,321,2.007,324,0.597,325,1.091,488,2.368,489,1.015,490,1.001,493,1.413,498,2.647,527,1.99,540,2.346,565,1.158,581,2.897,593,0.923,594,0.923,595,0.948,608,0.923,690,1.7,691,1.7,766,3.176,849,3.936,877,1.4,878,1.439,894,3.562,895,3.963,897,3.757,909,1.786,910,1.7,912,1.439,913,1.557,915,1.158,969,2.255,1068,2.425,1130,1.7,1263,3.576,1271,5.128,1288,4.163,1452,3.417,1472,4.856,1494,3.417,1554,2.222,1555,2.065,1640,3.562,1758,3.633,1790,3.435,1791,4.499,1881,3.856,1888,2.222,2002,4.192,2298,2.726,2354,2.427,2525,3.936,2659,3.346,2850,3.732,3065,1.939,3067,1.833,3130,4.34,3402,5.107,3795,3.746,3799,2.139,3800,3.746,3801,3.746,3803,1.999,3805,3.075,3809,5.548,3814,4.008,3878,2.559,4166,3.732,4180,2.726,4589,5.107,4590,2.948,4594,2.948,4595,5.524,4596,2.948,4597,2.948,4598,2.948,4599,2.948,4600,5.524,4601,4.534,4602,4.534,4603,4.534,4604,4.534,4605,4.534,4606,4.534,4607,4.534,4608,4.534,4609,4.534,4610,4.534,4611,5.524,4612,2.948,4613,4.534,4614,2.948,4615,2.948,4616,2.948,4617,6.694,4618,4.534,4619,4.534,4620,5.524,4621,2.948,4622,2.948,4623,2.948,4624,2.948,4625,4.534,4626,2.948,4627,2.948,4628,2.948,4629,2.948,4630,5.524,4631,4.534,4632,4.534,4633,5.524,4634,4.534,4635,4.534,4636,4.534,4637,4.534,4638,4.534,4639,4.534,4640,6.201,4641,4.534,4642,4.534,4643,4.534,4644,4.534,4645,2.948,4646,2.948,4647,2.948,4648,2.948,4649,4.534,4650,2.948,4651,2.948,4652,4.534,4653,2.948,4654,4.534,4655,4.534,4656,4.534,4657,4.534,4658,4.534,4659,4.534,4660,2.948,4661,2.948,4662,2.948,4663,2.948,4664,2.948,4665,4.534,4666,2.948,4667,2.948,4668,4.534,4669,5.524,4670,5.524,4671,2.948,4672,4.534,4673,2.948,4674,4.534,4675,2.948,4676,4.534,4677,2.948,4678,4.534,4679,2.948,4680,2.948,4681,4.534,4682,2.948,4683,2.948,4684,2.948,4685,2.948,4686,2.948,4687,2.948,4688,2.948,4689,4.534,4690,2.948,4691,2.948,4692,2.948,4693,2.948,4694,2.948,4695,4.534,4696,2.948,4697,4.534,4698,5.524,4699,2.948,4700,2.948,4701,5.053,4702,5.053,4703,5.053,4704,5.053,4705,5.053,4706,5.053,4707,5.053,4708,5.053,4709,5.053,4710,5.053,4711,3.286,4712,3.286,4713,3.286,4714,3.286,4715,3.286,4716,3.286,4717,3.286,4718,3.286,4719,3.286,4720,3.286,4721,3.286,4722,3.286,4723,3.286,4724,3.286,4725,3.286,4726,3.286]],["title/interfaces/TranslationState.html",[761,1.974,777,4.157]],["body/interfaces/TranslationState.html",[3,0.039,4,0.039,5,0.047,32,0.182,34,0.292,35,0.536,45,0.005,51,0.091,60,0.055,100,0.91,146,1.305,161,0.004,162,0.004,163,0.004,172,2.624,189,2.022,191,3.532,204,1.804,633,5.999,761,2.997,762,4.135,777,7.916,3616,6.826,3618,6.826,4727,7.608,4728,9.857,4729,7.608,4730,7.608,4731,7.608,4732,7.608]],["title/classes/TranslationUpToDate.html",[0,0.276,3805,3.049]],["body/classes/TranslationUpToDate.html",[0,0.532,2,0.779,3,0.034,4,0.034,5,0.04,8,1.058,10,2.18,32,0.192,33,0.982,34,0.251,35,0.489,37,1.505,38,1.239,42,0.193,45,0.005,49,0.704,50,0.614,51,0.098,52,0.585,60,0.061,61,0.906,98,1.604,100,0.663,146,1.119,161,0.003,162,0.004,163,0.003,170,3.558,189,1.646,191,3.037,264,3.307,526,2.713,527,2.576,623,3.86,766,5.885,1790,3.649,2883,4.423,3795,5.436,3796,4.423,3797,4.831,3799,4.258,3800,5.436,3801,5.436,3802,4.611,3803,5.436,3804,4.611,3805,5.696,3806,4.611,3807,4.611,3808,4.831,3809,4.423,3810,6.045,3811,4.831,3812,4.831,3813,4.831,3814,4.258,4733,6.541]],["title/classes/TryToLogIn.html",[0,0.276,19,2.478]],["body/classes/TryToLogIn.html",[0,0.528,1,2.967,2,0.458,3,0.02,4,0.02,5,0.046,6,2.039,7,1.624,8,1.07,9,4.286,10,1.024,11,1.917,12,3.268,13,3.807,14,3.884,15,1.991,16,3.279,17,1.958,18,3.779,19,4.137,20,3.093,21,2.146,22,2.091,23,3.256,24,2.316,25,3.682,26,3.779,27,2.86,28,1.415,29,3.093,30,3.591,31,3.175,32,0.193,33,0.956,34,0.148,35,0.34,36,0.96,37,1.458,38,1.2,39,0.244,40,0.998,41,2.754,42,0.2,44,0.259,45,0.005,46,0.254,47,0.259,49,0.414,50,0.361,51,0.09,52,0.344,53,3.083,54,1.751,55,2.5,56,1.751,57,2.146,58,2.59,59,2.146,60,0.06,61,0.533,62,1.991,63,3.145,64,1.066,65,2.093,66,3.425,67,2.59,68,3.682,69,3.088,70,4.704,71,3.968,72,3.425,73,2.091,74,2.493,75,3.702,76,3.218,77,4.04,78,3.425,79,1.349,80,3.425,81,2.091,82,3.145,83,3.475,84,3.506,85,1.786,86,2.091,87,1.786,88,0.998,89,2.146,90,2.754,91,1.125,92,2.091,93,3.145,94,1.862,95,3.145,96,2.091,97,2.091,98,1.435,99,1.786,100,0.81,101,1.786,102,1.717,103,1.823,104,1.515,105,2.146,106,2.146,107,3.175,108,3.093,109,1.784,110,3.093,111,2.146,112,1.215,113,1.215,114,1.135,115,2.146,116,2.091,117,2.814,118,3.175,119,2.814,120,2.242,121,1.598,122,3.093,123,3.218,124,3.779,125,3.636,126,3.506,127,2.319,128,1.536,129,3.093,130,2.039,131,3.968,132,1.095,133,2.146,134,1.991,135,2.091,136,2.878,137,1.282,138,2.146,139,2.146,140,4.176,141,2.091,142,2.146,143,3.093,144,2.146,145,3.093,146,0.526,147,2.146,148,2.091,149,2.146,150,2.091,151,2.146,152,2.642,153,3.093,154,1.443,155,2.146,156,2.146,157,2.146,158,2.146,159,2.146,160,2.039,161,0.002,162,0.003,163,0.002,484,1.78,4734,5.691,4735,3.847]],["title/classes/TryToLogOut.html",[0,0.276,75,2.478]],["body/classes/TryToLogOut.html",[0,0.531,1,3.007,2,0.469,3,0.02,4,0.02,5,0.047,6,2.087,7,1.662,8,1.073,9,4.31,10,1.048,11,1.939,12,3.268,13,3.839,14,3.916,15,2.037,16,3.316,17,1.974,18,3.831,19,3.989,20,3.147,21,2.196,22,2.14,23,3.287,24,2.347,25,3.732,26,3.831,27,2.899,28,1.434,29,3.147,30,3.64,31,3.23,32,0.189,33,0.96,34,0.151,35,0.346,36,0.894,37,1.275,38,1.205,39,0.169,41,2.801,42,0.116,45,0.005,49,0.424,50,0.369,51,0.091,52,0.352,53,3.125,54,1.792,55,2.534,56,1.792,57,2.196,58,2.635,59,2.196,60,0.06,61,0.545,62,2.037,63,3.188,64,1.091,65,2.122,66,3.472,67,2.635,68,3.732,69,3.128,70,4.739,71,4.013,72,3.472,73,2.14,74,2.536,75,3.989,76,3.255,77,4.079,78,3.472,79,1.372,80,3.472,81,2.14,82,3.188,83,3.515,84,3.553,85,1.828,86,2.14,87,1.828,88,1.021,89,2.196,90,2.801,91,1.151,92,2.14,93,3.188,94,1.905,95,3.188,96,2.14,97,2.14,98,1.448,99,1.828,100,0.818,101,1.828,102,1.757,103,1.866,104,1.551,105,2.196,106,2.196,107,3.23,108,3.147,109,1.814,110,3.147,111,2.196,112,1.223,113,1.223,114,1.143,115,2.196,116,2.14,117,1.947,118,2.196,119,1.947,120,1.551,121,1.106,122,2.14,123,3.255,124,3.831,125,3.125,126,3.553,127,1.605,128,1.062,129,2.14,130,2.087,131,4.622,132,1.648,133,3.23,134,2.996,135,3.147,136,2.928,137,1.304,138,2.196,139,2.196,140,4.223,141,2.14,142,2.196,143,3.147,144,2.196,145,3.147,146,0.538,147,2.196,148,2.14,149,2.196,150,2.14,151,2.196,152,2.688,153,3.147,154,1.476,155,2.196,156,2.196,157,2.196,158,2.196,159,2.196,160,2.087,161,0.002,162,0.003,163,0.002,4736,3.937]],["title/components/TypeAheadSettingsComponent.html",[288,1.008,432,1.713]],["body/components/TypeAheadSettingsComponent.html",[0,0.202,3,0.019,4,0.019,5,0.023,28,1.146,32,0.193,33,0.548,34,0.141,35,0.328,39,0.157,42,0.306,44,0.615,45,0.005,46,0.627,47,0.615,49,0.787,50,0.869,51,0.088,52,0.328,60,0.023,64,1.015,100,0.741,121,1.029,128,1.972,132,1.043,137,1.851,161,0.002,162,0.003,163,0.002,172,2.137,175,2.276,185,0.845,242,2.656,274,1.086,275,1.627,288,1.324,289,1.253,290,1.822,291,1.291,292,1.575,293,1.311,294,1.311,296,2.429,297,1.234,298,3.573,299,2.498,301,1.964,303,2.466,305,1.285,306,3.132,321,2.288,322,2.672,324,0.666,344,1.876,356,1.132,357,1.964,358,1.934,359,1.182,360,2.615,361,1.311,362,1.311,363,1.253,364,1.311,365,1.253,366,2.063,367,1.964,368,1.253,369,1.964,370,1.253,371,1.311,372,1.234,373,1.311,374,3.347,375,1.311,376,2.615,377,1.253,378,1.311,379,1.216,380,1.964,381,1.253,382,1.234,383,1.216,384,1.291,385,1.311,386,1.253,387,1.934,388,1.311,389,1.272,390,1.199,391,1.964,392,1.253,393,1.311,394,2.615,395,1.216,396,1.311,397,1.253,398,1.253,399,1.311,400,1.234,401,1.311,402,1.253,403,1.253,404,1.311,405,1.234,406,1.311,407,1.253,408,1.311,409,1.272,410,1.253,411,1.311,412,1.253,413,1.072,414,1.311,415,1.253,416,2.319,417,3.441,418,2.355,419,1.311,420,1.253,421,1.311,422,1.253,423,1.311,424,1.234,425,1.253,426,1.876,427,1.253,428,1.253,429,1.501,430,1.253,431,1.311,432,2.499,433,3.208,434,1.253,435,0.926,436,1.234,437,1.234,438,1.311,439,1.234,440,1.311,441,1.234,442,1.291,443,1.311,565,1.291,594,1.029,595,1.057,741,2.714,940,4.078,1282,4.313,1394,3.874,1511,2.303,1589,3.884,1590,5.152,1592,5.152,1593,4.447,1594,6.934,1595,5.152,1596,6.316,1597,5.152,1598,4.849,1599,5.792,1600,5.792,1601,5.152,1602,5.152,1603,5.152,1608,3.87,1610,3.87,1613,3.87,1614,4.594,1616,3.87,1620,4.64,1635,2.583,1773,2.385,1941,3.34,1973,6.996,2726,2.706,2727,2.706,2728,2.706,2733,2.706,2734,2.706,2735,2.706,2736,2.706,2737,2.706,2738,2.706,2739,2.706,2740,2.706,2741,2.706,2742,2.706,2743,2.706,2744,2.706,2745,2.706,2748,2.706,2752,4.276,3670,3.04,3671,3.288,3672,4.553,3673,5.905,3674,3.288,3922,3.288,3924,4.925,3992,3.288,3993,3.04,3994,3.288,3995,3.288,4737,5.489,4738,6.582,4739,3.664,4740,3.664,4741,3.664,4742,5.489,4743,3.664,4744,3.664,4745,3.664,4746,3.664,4747,3.664,4748,3.664,4749,3.664,4750,3.664,4751,3.664,4752,3.664,4753,3.664,4754,3.664,4755,3.664,4756,3.664]],["title/components/TypeFilterComponent.html",[288,1.008,434,1.713]],["body/components/TypeFilterComponent.html",[0,0.221,3,0.021,4,0.03,5,0.036,8,0.425,17,1.901,28,1.877,32,0.187,33,0.585,34,0.154,35,0.35,36,0.444,39,0.172,42,0.266,44,0.27,45,0.005,46,0.537,47,0.27,49,0.431,50,0.376,51,0.115,52,0.358,60,0.025,64,1.109,65,1.237,91,1.171,114,0.511,121,1.124,128,1.582,132,1.14,137,1.912,161,0.002,162,0.003,163,0.002,185,0.902,208,1.467,223,2.941,234,1.69,274,1.187,275,1.738,288,1.394,289,1.369,290,1.946,291,1.411,292,1.721,293,1.432,294,1.432,296,2.559,297,1.349,298,3.593,299,2.668,301,2.097,303,2.41,305,1.372,306,2.909,321,1.602,322,1.691,324,0.728,338,1.604,339,1.551,340,1.604,341,1.604,342,1.604,343,1.604,344,2.609,345,1.604,346,1.604,347,1.604,348,1.526,349,1.604,350,1.577,351,1.604,352,1.604,353,1.604,354,0.999,355,1.604,356,1.237,357,2.097,358,2.065,359,1.291,360,2.73,361,1.432,362,1.432,363,1.369,364,1.432,365,1.369,366,2.173,367,2.097,368,1.369,369,2.097,370,1.369,371,1.432,372,1.349,373,1.432,374,1.369,375,1.432,376,2.73,377,1.369,378,1.432,379,1.329,380,2.097,381,1.369,382,1.349,383,1.329,384,1.411,385,1.432,386,1.369,387,2.065,388,1.432,389,1.389,390,1.31,391,2.097,392,1.369,393,1.432,394,2.73,395,1.329,396,1.432,397,1.369,398,1.369,399,1.432,400,1.349,401,1.432,402,1.369,403,1.369,404,1.432,405,1.349,406,1.432,407,1.369,408,1.432,409,1.389,410,1.369,411,1.432,412,1.369,413,1.171,414,1.432,415,1.369,416,2.065,417,1.369,418,2.481,419,1.432,420,1.369,421,1.432,422,1.369,423,1.432,424,1.349,425,1.369,426,1.369,427,1.369,428,1.369,429,1.603,430,1.369,431,1.432,432,1.369,433,1.369,434,2.609,435,2.318,436,1.349,437,1.349,438,1.432,439,1.349,440,1.432,441,1.349,442,1.411,443,1.432,506,2.234,565,1.411,593,1.124,594,1.124,595,1.155,608,1.124,637,2.823,638,4.566,641,2.363,646,3.593,680,2.025,859,3.459,864,2.707,865,2.607,866,2.436,867,2.517,869,2.296,872,2.517,915,1.411,932,2.436,940,4.258,948,5.106,1004,3.119,1130,2.072,1263,1.69,1334,2.707,1420,2.607,1511,4.358,1589,4.092,1593,4.219,1598,4.504,1614,2.517,1630,3.119,1631,4.566,1632,2.957,1633,2.823,1649,3.119,1651,3.119,1653,3.119,1661,3.119,1662,3.119,1788,3.685,1862,5.637,1968,6.773,2040,2.957,2135,2.957,2440,2.957,2448,4.329,2465,3.593,2479,3.321,2480,3.119,2482,3.119,2486,5.38,2613,3.593,2615,5.752,2659,2.176,2802,2.707,2879,3.119,2905,8.228,2906,8.228,2999,2.957,3002,2.957,3004,2.823,3313,3.593,3474,2.957,3610,7.287,3968,6.221,3969,5.752,3971,6.331,3978,3.321,3979,5.752,3981,3.321,3984,3.593,3985,3.321,3988,3.321,3993,3.321,4271,3.593,4275,3.593,4757,6.934,4758,4.004,4759,4.004,4760,4.004,4761,4.004,4762,5.862,4763,4.004,4764,4.004,4765,4.004,4766,4.004,4767,4.004,4768,4.004,4769,4.004,4770,4.004,4771,4.004,4772,4.004,4773,4.004,4774,4.004,4775,4.004,4776,4.004,4777,4.004,4778,4.004,4779,4.004,4780,4.004,4781,4.004,4782,5.862,4783,5.862,4784,5.862,4785,5.862,4786,5.862,4787,8.122,4788,4.004,4789,6.934,4790,5.862,4791,4.004,4792,4.004,4793,5.862,4794,6.934,4795,5.862,4796,4.004]],["title/classes/UnAuthenticationFromImplicitFlow.html",[0,0.276,95,2.327]],["body/classes/UnAuthenticationFromImplicitFlow.html",[0,0.532,1,3.031,2,0.475,3,0.021,4,0.021,5,0.047,6,2.115,8,1.071,9,4.254,10,1.063,11,1.951,12,3.272,13,3.857,14,3.766,15,2.065,16,3.337,17,1.984,18,3.861,19,4.011,20,3.178,21,2.226,22,2.169,23,3.105,24,2.366,25,3.761,26,3.861,27,2.922,28,1.445,29,3.178,30,3.668,31,3.262,32,0.19,33,0.963,34,0.153,35,0.349,36,0.899,37,1.284,38,1.208,39,0.171,41,2.829,42,0.118,45,0.005,49,0.43,50,0.374,51,0.091,52,0.357,53,3.149,54,1.816,55,2.554,56,1.816,57,2.226,58,2.661,59,2.226,60,0.06,61,0.553,62,2.065,63,3.213,64,1.106,65,2.139,66,3.499,67,2.661,68,3.761,69,3.079,70,4.759,71,4.039,72,3.499,73,2.169,74,2.561,75,3.768,76,3.276,77,4.102,78,3.499,79,1.386,80,3.499,81,2.169,82,3.213,83,3.537,84,3.581,85,1.853,86,2.169,87,1.853,88,1.035,89,2.226,90,2.829,91,1.167,92,2.169,93,3.213,94,1.931,95,3.537,96,2.169,97,2.169,98,1.456,99,1.853,100,0.822,101,1.853,102,1.781,103,1.891,104,1.572,105,2.226,106,2.226,107,3.262,108,3.178,109,1.832,110,3.178,111,2.226,112,1.228,113,1.228,114,1.147,115,2.226,116,2.169,117,1.973,118,2.226,119,1.973,120,1.572,121,1.121,122,2.169,123,2.975,124,3.262,125,3.149,126,3.026,127,1.626,128,1.077,129,2.169,130,2.115,131,4.039,132,1.136,133,2.226,134,2.065,135,2.169,136,2.957,137,1.317,138,2.226,139,2.226,140,4.251,141,2.169,142,2.226,143,3.178,144,2.226,145,3.178,146,0.545,147,2.226,148,2.169,149,2.226,150,2.169,151,2.226,152,2.714,153,3.178,154,1.496,155,2.226,156,2.226,157,2.226,158,2.226,159,3.262,160,2.115,161,0.002,162,0.003,163,0.002,4797,3.99]],["title/classes/UpdateALightCard.html",[0,0.276,514,2.237]],["body/classes/UpdateALightCard.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.448,515,3.082,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,1.988,542,2.89,543,1.988,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,4798,5.973,4799,4.109]],["title/classes/UpdateAnAction.html",[0,0.276,515,2.195]],["body/classes/UpdateAnAction.html",[0,0.555,2,0.489,3,0.021,4,0.021,5,0.025,8,1.085,10,2.186,11,1.052,12,1.306,32,0.196,33,1.008,34,0.158,35,0.357,36,0.662,37,1.618,38,1.259,39,0.389,40,1.066,42,0.208,44,0.277,45,0.005,46,0.272,47,0.277,49,0.442,50,0.386,51,0.093,52,0.367,60,0.062,61,0.569,65,1.27,79,0.974,88,2.129,98,1.683,100,0.714,109,1.288,112,1.299,113,1.299,114,1.213,146,1.208,154,1.541,161,0.002,162,0.003,163,0.002,185,1.462,189,0.826,192,1.899,229,2.314,244,1.012,325,1.364,354,1.49,453,1.493,455,2.259,458,1.723,463,1.606,464,1.066,465,1.039,466,1.169,467,1.169,468,1.592,470,1.154,471,1.27,481,3.141,482,3.587,483,1.908,484,1.85,487,1.988,488,2.467,489,1.27,490,1.252,491,1.947,492,1.87,493,1.766,494,3.203,495,4.764,496,3.141,497,1.87,498,3.025,499,2.773,500,1.947,501,1.517,502,3.203,503,3.141,504,1.27,505,3.025,506,3.263,507,1.766,508,3.141,509,1.908,510,3.141,511,3.141,512,1.947,513,1.947,514,3.141,515,3.384,516,3.141,517,1.735,518,1.8,519,3.141,520,1.426,521,3.141,522,1.947,523,3.141,524,1.908,525,3.141,526,1.704,527,1.618,528,1.988,529,1.988,530,1.988,531,1.766,532,1.988,533,1.988,534,1.988,535,1.646,536,1.988,537,1.988,538,1.988,539,1.988,540,1.566,541,1.988,542,1.988,543,2.89,544,1.988,545,1.988,546,1.988,547,1.988,548,1.988,549,1.988,550,1.988,551,1.908,4800,5.973,4801,4.109]],["title/classes/UpdateAnActionFailure.html",[0,0.276,516,2.237]],["body/classes/UpdateAnActionFailure.html",[0,0.556,2,0.499,3,0.022,4,0.022,5,0.026,8,1.087,10,2.202,11,1.072,12,1.331,32,0.194,33,1.01,34,0.161,35,0.362,37,1.562,38,1.261,39,0.398,42,0.179,45,0.005,49,0.451,50,0.393,51,0.093,52,0.374,60,0.062,61,0.58,65,1.293,79,0.992,88,2.145,98,1.69,100,0.721,109,1.312,112,1.304,113,1.304,114,1.218,146,1.215,154,1.57,161,0.002,162,0.003,163,0.002,185,1.468,189,0.842,192,1.924,229,2.345,244,1.031,325,1.389,354,1.511,453,1.521,455,2.279,458,1.746,463,1.623,464,1.086,465,1.058,466,1.191,467,1.191,468,1.622,470,1.175,471,1.293,481,3.174,482,3.302,483,1.943,487,2.025,488,2.485,489,1.293,490,1.276,491,1.983,492,1.905,493,1.799,494,3.237,495,4.775,496,3.174,497,1.905,498,3.057,499,2.81,500,1.983,501,1.545,502,3.237,503,3.174,504,1.293,505,3.057,506,3.284,507,1.799,508,3.174,509,1.943,510,3.174,511,3.174,512,1.983,513,1.983,514,3.174,515,3.115,516,3.478,517,1.767,518,1.833,519,3.174,520,1.452,521,3.174,522,1.983,523,3.174,524,1.943,525,3.174,526,1.736,527,1.649,528,2.025,529,2.025,530,2.025,531,1.799,532,2.025,533,2.025,534,2.025,535,1.677,536,2.025,537,2.025,538,2.025,539,2.025,540,1.595,541,2.025,542,2.025,543,2.025,544,2.025,545,2.929,546,2.025,547,2.025,548,2.025,549,2.025,550,2.025,551,1.943,4802,6.054]],["title/classes/UpdateArchiveFilter.html",[0,0.276,923,3.049]],["body/classes/UpdateArchiveFilter.html",[0,0.526,2,0.691,3,0.03,4,0.03,5,0.036,8,1.044,10,2.018,32,0.196,33,0.969,34,0.223,35,0.453,36,0.84,37,1.677,38,1.223,39,0.249,40,1.505,42,0.249,44,0.391,45,0.005,46,0.383,47,0.391,49,0.624,50,0.544,51,0.101,52,0.519,60,0.061,61,0.803,98,1.711,100,0.588,112,1.327,113,1.327,114,1.24,127,3.648,146,1.154,161,0.004,162,0.004,163,0.003,185,1.167,189,1.524,254,2.364,282,1.925,354,1.447,366,2.986,435,1.466,460,3.922,463,1.926,464,1.505,465,1.466,466,1.651,467,1.651,484,2.219,488,1.743,489,1.792,490,1.767,504,1.792,506,2.21,535,2.323,581,3.325,887,4.982,902,3.152,916,3.775,917,5.137,918,4.982,922,3.646,923,5.447,1049,3.775,1052,4.088,1053,5.307,1054,3.775,1055,5.137,1056,5.343,1057,4.088,1058,4.088,1059,3.921,1060,4.088,1061,4.088,1062,3.921,4803,7.579,4804,5.8]],["title/classes/UpdateArchivePage.html",[0,0.276,918,2.958]],["body/classes/UpdateArchivePage.html",[0,0.526,2,0.691,3,0.03,4,0.03,5,0.036,8,1.044,10,2.018,32,0.196,33,0.969,34,0.223,35,0.453,36,0.84,37,1.677,38,1.223,39,0.249,40,1.505,42,0.249,44,0.391,45,0.005,46,0.383,47,0.391,49,0.624,50,0.544,51,0.101,52,0.519,60,0.061,61,0.803,98,1.711,100,0.588,112,1.327,113,1.327,114,1.24,127,3.648,146,1.154,161,0.004,162,0.004,163,0.003,185,1.167,189,1.524,254,2.364,282,1.925,354,1.447,366,2.986,435,1.466,460,3.922,463,1.926,464,1.505,465,1.466,466,1.651,467,1.651,484,2.219,488,1.743,489,1.792,490,1.767,504,1.792,506,2.21,535,2.323,581,3.325,887,4.982,902,3.152,916,3.775,917,5.137,918,5.283,922,3.646,923,5.137,1049,3.775,1052,4.088,1053,5.307,1054,3.775,1055,5.137,1056,4.088,1057,4.088,1058,4.088,1059,3.921,1060,5.343,1061,4.088,1062,3.921,4805,7.579,4806,5.8]],["title/classes/UpdateTimeReference.html",[0,0.276,2788,3.263]],["body/classes/UpdateTimeReference.html",[0,0.506,2,0.736,3,0.032,4,0.032,5,0.038,7,2.609,8,1.045,10,2.442,16,2.707,32,0.192,33,0.916,34,0.237,35,0.472,36,0.965,37,1.597,38,1.177,39,0.265,40,1.603,42,0.257,44,0.417,45,0.005,46,0.409,47,0.417,49,0.665,50,0.58,51,0.11,52,0.553,55,2.915,56,2.813,60,0.06,61,0.856,74,2.707,98,1.646,104,2.434,109,2.727,136,3.125,146,1.079,161,0.003,162,0.004,163,0.003,282,2.051,290,2.051,429,2.65,458,1.783,484,2.287,520,2.145,573,4.124,580,4.564,869,3.544,1394,4.186,1411,3.594,1452,4.179,1533,4.023,1900,4.357,2756,5.141,2757,4.357,2758,4.357,2759,4.814,2760,7.143,2761,4.564,2762,4.814,2765,4.814,2766,4.023,2767,4.357,2768,4.023,2769,4.357,2770,4.814,2771,5.412,2772,4.814,2773,5.567,2774,4.814,2775,6.427,2776,6.427,2777,4.814,2778,4.814,2779,6.151,2780,4.564,2781,4.179,2782,4.814,2783,4.814,2784,4.564,2785,4.814,2786,4.179,2787,4.564,2788,5.665,2789,4.814,2790,4.814,2791,4.564,4807,7.897,4808,6.18,4809,6.18]],["title/classes/UpdateTranslation.html",[0,0.276,3800,3.049]],["body/classes/UpdateTranslation.html",[0,0.526,2,0.754,3,0.033,4,0.033,5,0.039,8,1.051,10,2.135,32,0.197,33,0.974,34,0.243,35,0.479,36,0.889,37,1.643,38,1.23,39,0.272,40,1.642,42,0.26,44,0.427,45,0.005,46,0.419,47,0.427,49,0.681,50,0.594,51,0.096,52,0.566,60,0.061,61,0.877,98,1.58,100,0.642,146,1.096,161,0.003,162,0.004,163,0.003,170,3.523,189,1.613,191,2.939,264,3.201,484,2.313,526,2.625,527,2.493,623,3.736,766,5.815,1790,3.531,2883,4.28,3795,5.354,3796,4.28,3797,4.675,3799,4.121,3800,5.629,3801,5.354,3802,4.462,3803,5.354,3804,4.462,3805,5.354,3806,4.462,3807,4.462,3808,5.922,3809,4.28,3810,4.675,3811,4.675,3812,4.675,3813,4.675,3814,4.121,4810,8.018,4811,6.33]],["title/classes/UpdateTranslationFailed.html",[0,0.276,3803,3.049]],["body/classes/UpdateTranslationFailed.html",[0,0.526,2,0.754,3,0.033,4,0.033,5,0.039,8,1.051,10,2.135,32,0.197,33,0.974,34,0.243,35,0.479,36,0.889,37,1.643,38,1.23,39,0.272,40,1.642,42,0.26,44,0.427,45,0.005,46,0.419,47,0.427,49,0.681,50,0.594,51,0.096,52,0.566,60,0.061,61,0.877,98,1.58,100,0.642,146,1.096,161,0.003,162,0.004,163,0.003,170,3.523,189,1.613,191,2.939,264,3.201,484,2.313,526,2.625,527,2.493,623,3.736,766,5.815,1790,3.531,2883,4.28,3795,5.354,3796,4.28,3797,4.675,3799,4.121,3800,5.354,3801,5.354,3802,4.462,3803,5.629,3804,4.462,3805,5.354,3806,4.462,3807,4.462,3808,4.675,3809,4.28,3810,4.675,3811,4.675,3812,4.675,3813,5.922,3814,4.121,4812,8.018,4813,6.33]],["title/classes/UpdateTranslationSuccessful.html",[0,0.276,3801,3.049]],["body/classes/UpdateTranslationSuccessful.html",[0,0.526,2,0.754,3,0.033,4,0.033,5,0.039,8,1.051,10,2.135,32,0.197,33,0.974,34,0.243,35,0.479,36,0.889,37,1.643,38,1.23,39,0.272,40,1.642,42,0.26,44,0.427,45,0.005,46,0.419,47,0.427,49,0.681,50,0.594,51,0.096,52,0.566,60,0.061,61,0.877,98,1.58,100,0.642,146,1.096,161,0.003,162,0.004,163,0.003,170,3.523,189,1.613,191,2.939,264,3.201,484,2.313,526,2.625,527,2.493,623,3.736,766,5.815,1790,3.531,2883,4.28,3795,5.354,3796,4.28,3797,4.675,3799,4.121,3800,5.354,3801,5.629,3802,4.462,3803,5.354,3804,4.462,3805,5.354,3806,4.462,3807,4.462,3808,4.675,3809,4.28,3810,4.675,3811,5.922,3812,4.675,3813,4.675,3814,4.121,4814,8.018,4815,6.33]],["title/classes/UpdatedSubscription.html",[0,0.276,508,2.237]],["body/classes/UpdatedSubscription.html",[0,0.556,2,0.499,3,0.022,4,0.022,5,0.026,8,1.087,10,2.202,11,1.072,12,1.331,32,0.194,33,1.01,34,0.161,35,0.362,37,1.562,38,1.261,39,0.398,42,0.179,45,0.005,49,0.451,50,0.393,51,0.093,52,0.374,60,0.062,61,0.58,65,1.293,79,0.992,88,2.145,98,1.69,100,0.721,109,1.312,112,1.304,113,1.304,114,1.218,146,1.215,154,1.57,161,0.002,162,0.003,163,0.002,185,1.468,189,0.842,192,1.924,229,2.345,244,1.031,325,1.389,354,1.511,453,1.521,455,2.279,458,1.746,463,1.623,464,1.086,465,1.058,466,1.191,467,1.191,468,1.622,470,1.175,471,1.293,481,3.174,482,3.302,483,1.943,487,2.025,488,2.485,489,1.293,490,1.276,491,1.983,492,1.905,493,1.799,494,3.237,495,4.775,496,3.174,497,1.905,498,3.057,499,2.81,500,1.983,501,1.545,502,3.237,503,3.174,504,1.293,505,3.057,506,3.284,507,1.799,508,3.478,509,1.943,510,3.174,511,3.174,512,1.983,513,1.983,514,3.174,515,3.115,516,3.174,517,1.767,518,1.833,519,3.174,520,1.452,521,3.174,522,1.983,523,3.174,524,1.943,525,3.174,526,1.736,527,1.649,528,2.025,529,2.025,530,2.025,531,1.799,532,2.025,533,2.025,534,2.025,535,1.677,536,2.025,537,2.929,538,2.025,539,2.025,540,1.595,541,2.025,542,2.025,543,2.025,544,2.025,545,2.025,546,2.025,547,2.025,548,2.025,549,2.025,550,2.025,551,1.943,4816,6.054]],["title/classes/UselessAuthAction.html",[0,0.276,84,2.594]],["body/classes/UselessAuthAction.html",[0,0.532,1,3.031,2,0.475,3,0.021,4,0.021,5,0.047,6,2.115,8,1.071,9,4.254,10,1.063,11,1.951,12,3.272,13,3.857,14,3.766,15,2.065,16,3.337,17,1.984,18,3.861,19,4.011,20,3.178,21,2.226,22,2.169,23,3.105,24,2.366,25,3.761,26,3.861,27,2.922,28,1.445,29,3.178,30,3.668,31,3.262,32,0.19,33,0.963,34,0.153,35,0.349,36,0.899,37,1.284,38,1.208,39,0.171,41,2.829,42,0.118,45,0.005,49,0.43,50,0.374,51,0.091,52,0.357,53,3.149,54,1.816,55,2.554,56,1.816,57,2.226,58,2.661,59,2.226,60,0.06,61,0.553,62,2.065,63,3.213,64,1.106,65,2.139,66,3.499,67,2.661,68,3.761,69,3.079,70,4.759,71,4.039,72,3.499,73,2.169,74,2.561,75,3.768,76,3.276,77,4.102,78,3.499,79,1.386,80,3.499,81,2.169,82,3.213,83,3.537,84,3.943,85,1.853,86,2.169,87,1.853,88,1.035,89,2.226,90,2.829,91,1.167,92,2.169,93,3.213,94,1.931,95,3.213,96,2.169,97,2.169,98,1.456,99,1.853,100,0.822,101,1.853,102,1.781,103,1.891,104,1.572,105,2.226,106,2.226,107,3.262,108,3.178,109,1.832,110,3.178,111,2.226,112,1.228,113,1.228,114,1.147,115,2.226,116,2.169,117,1.973,118,2.226,119,1.973,120,1.572,121,1.121,122,2.169,123,2.975,124,3.262,125,3.149,126,3.026,127,1.626,128,1.077,129,2.169,130,2.115,131,4.039,132,1.136,133,2.226,134,2.065,135,2.169,136,2.957,137,1.317,138,2.226,139,2.226,140,4.251,141,2.169,142,2.226,143,3.178,144,2.226,145,3.178,146,0.545,147,2.226,148,2.169,149,2.226,150,2.169,151,2.226,152,2.714,153,3.178,154,1.496,155,2.226,156,2.226,157,3.262,158,2.226,159,2.226,160,2.115,161,0.002,162,0.003,163,0.002,4817,3.99]],["title/classes/User.html",[0,0.276,69,1.616]],["body/classes/User.html",[0,0.428,2,0.924,3,0.04,4,0.04,5,0.048,32,0.148,36,1.006,38,1.195,39,0.39,42,0.229,44,0.523,45,0.005,46,0.513,47,0.523,60,0.048,69,2.927,100,1.038,125,3.531,161,0.004,162,0.004,163,0.004,1434,7.07,1436,7.07,4818,7.759,4819,6.961,4820,7.759,4821,6.961,4822,6.961,4823,6.961]],["title/classes/UserApplicationNotRegistered.html",[0,0.276,2242,3.049]],["body/classes/UserApplicationNotRegistered.html",[0,0.524,2,0.684,3,0.03,4,0.03,5,0.035,8,1.042,27,3.547,32,0.196,33,0.967,34,0.22,35,0.45,36,0.835,37,1.674,38,1.22,39,0.247,40,1.49,42,0.248,44,0.387,45,0.005,46,0.38,47,0.387,49,0.618,50,0.539,51,0.09,52,0.514,60,0.06,61,0.796,69,3.38,79,1.361,98,1.706,112,1.299,113,1.299,114,1.214,146,1.324,161,0.003,162,0.004,163,0.003,463,1.917,464,1.49,465,1.452,466,1.635,467,1.635,484,2.208,573,4.388,1131,3.204,1232,4.093,2045,3.293,2236,5.112,2237,3.738,2240,4.048,2241,5.112,2242,5.426,2243,5.112,2244,5.112,2245,3.121,2246,3.738,2247,4.048,2248,5.309,2249,4.048,2250,4.048,2251,4.048,2252,3.738,4824,7.53,4825,5.743]],["title/classes/UserApplicationRegistered.html",[0,0.276,2241,3.049]],["body/classes/UserApplicationRegistered.html",[0,0.524,2,0.684,3,0.03,4,0.03,5,0.035,8,1.042,27,3.547,32,0.196,33,0.967,34,0.22,35,0.45,36,0.835,37,1.674,38,1.22,39,0.247,40,1.49,42,0.248,44,0.387,45,0.005,46,0.38,47,0.387,49,0.618,50,0.539,51,0.09,52,0.514,60,0.06,61,0.796,69,3.38,79,1.361,98,1.706,112,1.299,113,1.299,114,1.214,146,1.324,161,0.003,162,0.004,163,0.003,463,1.917,464,1.49,465,1.452,466,1.635,467,1.635,484,2.208,573,4.388,1131,3.204,1232,4.093,2045,3.293,2236,5.112,2237,3.738,2240,4.048,2241,5.426,2242,5.112,2243,5.112,2244,5.112,2245,3.121,2246,3.738,2247,5.309,2248,4.048,2249,4.048,2250,4.048,2251,4.048,2252,3.738,4826,7.53,4827,5.743]],["title/classes/UserContext.html",[0,0.276,2515,3.904]],["body/classes/UserContext.html",[0,0.424,2,0.917,3,0.04,4,0.04,5,0.047,32,0.147,38,1.229,39,0.388,42,0.227,44,0.519,45,0.005,46,0.509,47,0.519,60,0.047,100,1.053,102,4.032,125,3.502,161,0.004,162,0.004,163,0.004,1434,7.036,1436,7.036,2515,7.036,2629,6.905,4819,6.905,4821,6.905,4822,6.905,4823,6.905,4828,9.033,4829,7.696,4830,7.696]],["title/injectables/UserEffects.html",[845,4.157,877,1.389]],["body/injectables/UserEffects.html",[0,0.238,1,3.166,3,0.022,4,0.022,5,0.026,8,1.005,17,2.185,27,2.609,28,1.979,32,0.159,34,0.165,35,0.369,39,0.185,42,0.247,44,0.29,45,0.005,46,0.285,47,0.29,49,0.85,50,0.741,51,0.115,52,0.385,60,0.026,62,2.23,69,3.321,88,2.326,102,2.759,137,1.961,146,1.19,161,0.002,162,0.003,163,0.002,189,0.866,204,2.246,208,2.084,247,4.168,303,1.9,324,0.783,429,1.69,526,2.563,565,1.518,568,4.406,573,4.49,593,1.21,594,1.21,595,1.243,599,3.356,608,1.21,627,3.666,845,5.127,877,1.713,878,1.887,886,6.152,888,5.127,894,5.567,895,5.433,897,4.292,909,2.342,910,2.23,912,1.887,913,2.041,915,1.518,932,3.761,1131,2.403,1232,3.359,1263,4.092,1444,5.63,1472,5.258,1531,5.546,2045,2.47,2046,3.182,2236,5.295,2241,5.088,2242,4.398,2243,5.454,2244,4.398,2246,5.97,2252,2.805,2659,3.359,2850,5.833,3443,5.546,3864,6.621,3909,3.865,4831,4.308,4832,7.228,4833,7.228,4834,7.228,4835,4.308,4836,6.181,4837,7.897,4838,6.181,4839,6.181,4840,7.897,4841,7.086,4842,6.181,4843,6.181,4844,6.181,4845,6.181,4846,4.308,4847,6.181,4848,6.181,4849,6.181,4850,7.897,4851,7.897,4852,6.181,4853,8.703,4854,6.181,4855,6.181,4856,6.181,4857,6.181,4858,6.181,4859,6.181,4860,6.181,4861,4.308,4862,6.181,4863,9.476,4864,6.181,4865,6.181,4866,4.308,4867,7.897,4868,6.181,4869,4.308,4870,4.308]],["title/injectables/UserService.html",[877,1.389,3864,3.702]],["body/injectables/UserService.html",[0,0.361,3,0.034,4,0.034,5,0.04,7,2.761,17,2.256,32,0.178,34,0.251,35,0.489,38,1.11,39,0.351,42,0.277,44,0.602,45,0.005,46,0.591,47,0.602,51,0.116,58,3.725,60,0.04,69,3.171,100,0.977,120,3.224,161,0.003,162,0.004,163,0.003,208,1.731,305,1.916,321,1.891,324,1.189,593,1.837,607,3.649,608,1.837,673,3.467,787,3.385,788,3.467,877,2.268,878,2.865,1121,5.72,1122,4.611,1131,3.649,1163,5.77,2057,4.611,3864,6.045,3937,5.869,4841,7.344,4871,6.541,4872,8.934,4873,8.934,4874,8.934,4875,8.185,4876,8.185,4877,6.541,4878,8.185,4879,6.541,4880,6.541,4881,8.185,4882,6.541,4883,6.541,4884,6.541]],["title/interfaces/UserState.html",[761,1.974,778,4.157]],["body/interfaces/UserState.html",[3,0.04,4,0.04,5,0.047,32,0.172,34,0.294,35,0.539,45,0.005,60,0.055,100,0.971,161,0.004,162,0.004,163,0.004,172,2.8,204,1.818,209,2.787,223,2.509,761,3.021,762,4.169,778,7.943,1232,5.477,4885,7.67,4886,10.076,4887,7.67]],["title/modules/UtilitiesModule.html",[649,2.195,663,3.389]],["body/modules/UtilitiesModule.html",[0,0.375,3,0.035,4,0.044,5,0.052,36,0.753,45,0.005,51,0.114,60,0.042,76,3.603,87,3.155,91,1.987,128,1.834,161,0.003,162,0.004,163,0.003,324,1.236,328,3.517,338,2.722,339,2.633,340,2.722,341,2.722,342,2.722,343,2.722,344,2.323,345,2.722,346,2.722,347,2.722,348,2.59,349,2.722,350,2.677,351,2.722,352,2.722,353,2.722,354,1.696,355,2.722,356,2.1,359,2.191,422,3.557,437,3.505,649,2.976,651,3.436,652,3.896,653,5.53,654,4.011,655,4.818,663,6.969,664,4.947,665,4.135,667,3.694,669,4.556,674,5.269,677,4.011,1016,5.294,1330,4.791,4888,6.097,4889,6.097,4890,6.097,4891,6.796,4892,6.796,4893,6.796,4894,6.796,4895,6.796]],["title/pipes/XAxisTickFormatPipe.html",[1263,2.116,2894,3.904]],["body/pipes/XAxisTickFormatPipe.html",[0,0.238,3,0.022,4,0.022,5,0.027,9,2.871,24,2.114,32,0.138,33,0.431,42,0.214,44,0.488,45,0.005,46,0.553,47,0.488,49,0.666,50,0.936,51,0.087,60,0.027,100,1.049,104,3.112,161,0.002,162,0.003,163,0.002,204,1.873,208,2.229,297,1.452,305,1.009,321,1.671,324,0.784,354,1.543,497,3.596,607,4.857,608,1.211,936,4.268,955,2.624,967,4.36,1068,3.429,1263,2.611,1386,3.362,1387,5.094,1411,2.815,2392,7.221,2415,4.818,2429,3.869,2670,6.154,2771,4.663,2894,4.818,2917,7.089,2918,7.089,2919,7.089,3369,4.36,3621,7.811,4405,3.869,4896,4.312,4897,4.312,4898,6.185,4899,6.185,4900,10.189,4901,4.312,4902,8.706,4903,7.901,4904,8.706,4905,4.312,4906,6.185,4907,4.312,4908,6.185,4909,6.185,4910,6.185,4911,6.185,4912,6.185,4913,4.312,4914,6.185,4915,4.312,4916,6.185,4917,7.232,4918,7.232,4919,7.232,4920,10.276,4921,6.185,4922,8.365,4923,7.232,4924,7.232,4925,6.185,4926,6.185,4927,6.185,4928,6.185,4929,7.232,4930,6.185,4931,6.185,4932,7.901,4933,4.312,4934,4.312,4935,4.312,4936,4.312,4937,7.232,4938,7.232,4939,4.312,4940,4.312,4941,4.312,4942,4.312,4943,7.901,4944,6.185,4945,6.185,4946,4.312,4947,4.312,4948,4.312,4949,4.312,4950,4.312,4951,4.312,4952,6.185]],["title/dependencies.html",[652,3.461,4953,4.169]],["body/dependencies.html",[4,0.034,32,0.125,45,0.005,52,0.735,53,2.998,54,2.998,58,2.998,137,1.484,161,0.003,162,0.004,163,0.003,234,2.781,324,1.198,326,4.852,327,4.008,328,4.254,433,2.252,470,1.85,492,2.998,591,5.795,592,5.559,593,1.85,652,3.777,664,3.887,677,3.887,680,3.331,690,4.638,691,3.409,695,5.464,696,5.464,698,5.464,699,6.981,700,6.819,703,5.464,704,5.464,705,5.464,715,4.288,716,4.288,730,3.777,765,4.14,780,4.643,910,3.409,1128,4.643,1129,5.795,1411,3.741,2079,4.454,2526,5.464,2768,4.288,2912,5.91,2913,5.91,3953,5.91,4954,6.587,4955,10.187,4956,6.587,4957,6.587,4958,6.587,4959,6.587,4960,6.587,4961,6.587,4962,6.587,4963,6.587,4964,8.221,4965,9.659,4966,6.587,4967,6.587,4968,6.587,4969,6.587,4970,6.587,4971,6.587,4972,6.587,4973,6.587,4974,6.587,4975,6.587,4976,6.587,4977,6.587,4978,6.587,4979,6.587,4980,6.587,4981,6.587,4982,6.587,4983,8.221,4984,6.587,4985,6.587,4986,6.587,4987,6.587,4988,6.587,4989,6.587,4990,6.587]],["title/miscellaneous/enumerations.html",[4991,3.248,4992,5.416]],["body/miscellaneous/enumerations.html",[1,1.468,3,0.017,6,1.777,8,0.798,10,2.415,11,0.858,12,3.067,19,1.657,27,2.631,34,0.129,45,0.005,50,1.004,62,2.655,63,1.556,64,1.727,65,2.158,66,1.695,67,2.335,68,3.388,69,3.183,70,4.491,71,3.702,72,1.695,73,1.821,74,2.73,75,1.657,76,3.002,77,1.695,78,1.695,79,2.114,80,1.695,81,1.821,82,2.894,83,2.894,84,1.734,85,1.556,86,1.821,88,1.953,93,1.556,94,1.622,95,1.556,96,1.821,97,1.821,99,2.382,101,2.382,102,2.29,103,2.431,109,1.05,127,1.366,146,1.165,154,1.257,161,0.002,162,0.002,163,0.002,166,1.978,168,3.121,170,2.778,172,0.98,185,1.557,192,1.631,212,1.894,264,1.695,273,3.121,274,0.994,275,0.994,276,2.039,277,2.039,278,2.039,279,1.588,354,1.555,366,2.488,390,2.039,413,2.723,429,2.058,435,1.576,446,1.821,447,1.978,451,2.942,452,1.821,453,1.864,454,1.695,455,2.857,456,1.87,457,1.87,458,2.521,459,1.777,460,3.896,461,1.87,462,1.87,463,1.885,464,2.144,465,2.089,466,2.26,467,2.26,468,2.415,469,1.978,481,1.496,482,1.556,483,2.382,488,1.007,493,2.206,494,1.525,495,4.629,496,1.496,497,1.525,498,1.441,499,1.556,500,1.588,501,1.894,502,1.525,503,1.496,504,2.326,505,1.441,506,3.149,507,1.441,508,1.496,509,1.556,510,1.496,511,1.496,512,1.588,513,1.588,514,1.496,515,1.468,516,1.496,517,1.415,518,1.468,519,1.496,520,1.163,521,1.496,522,1.588,523,1.496,524,1.556,525,1.496,526,2.128,527,2.021,573,3.567,581,1.922,600,2.107,623,1.978,644,2.363,732,2.862,741,4.654,750,2.107,764,5.028,766,4.39,859,1.978,860,2.611,866,3.121,868,3.996,869,1.922,870,2.78,887,1.978,916,3.34,917,2.039,918,1.978,923,2.039,925,2.363,926,2.78,927,4.603,956,4.603,957,3.007,958,3.007,959,3.007,960,3.007,961,3.007,962,3.007,963,3.007,964,3.007,1042,1.556,1049,2.182,1053,3.918,1054,2.182,1055,2.039,1111,2.363,1143,3.617,1232,2.788,1506,2.475,1511,3.225,1514,2.107,1551,3.469,1553,3.789,1626,1.922,1756,2.78,1763,3.34,1771,4.256,1772,2.611,1773,2.182,1790,1.87,1826,2.266,1983,3.007,1984,4.603,1988,4.256,1997,2.78,2045,2.942,2094,2.78,2135,2.475,2159,2.611,2190,2.182,2213,3.007,2214,4.603,2216,3.007,2217,3.007,2229,4.256,2236,2.039,2237,2.182,2241,2.039,2242,2.039,2243,2.039,2244,2.039,2245,2.788,2246,2.182,2346,3.574,2348,1.922,2659,1.821,2756,2.182,2757,2.363,2769,3.617,2771,3.028,2773,3.617,2788,2.182,2876,1.922,2877,3.121,2883,2.266,2982,3.007,2999,3.789,3002,4.603,3004,4.394,3025,3.007,3026,3.007,3027,3.007,3028,3.007,3029,3.007,3050,2.363,3061,2.107,3065,3.028,3066,1.922,3067,1.87,3068,1.978,3069,1.978,3070,1.978,3086,2.107,3090,1.978,3091,1.978,3092,4.058,3093,1.978,3094,1.978,3369,2.363,3375,2.363,3376,2.611,3380,4.256,3381,2.363,3387,2.78,3388,5.793,3393,4.256,3394,2.78,3619,3.007,3624,3.007,3795,2.039,3796,2.266,3799,3.34,3800,2.039,3801,2.039,3802,2.363,3803,2.039,3804,2.363,3805,2.039,3806,2.363,3807,2.363,4485,3.007,4494,4.603,4542,3.007,4543,3.007,4544,3.007,4545,3.007,4546,3.007,4547,3.007,4548,3.007,4549,3.007,4991,2.611,4992,3.007,4993,4.603,4994,3.007,4995,3.007,4996,3.007,4997,3.351,4998,3.007,4999,6.266,5000,3.007,5001,3.351,5002,3.351,5003,3.351,5004,3.007,5005,3.351,5006,3.007,5007,3.351,5008,3.007,5009,3.007,5010,3.351,5011,3.351,5012,3.007,5013,3.007,5014,5.13,5015,5.13]],["title/index.html",[34,0.192,5016,4.497]],["body/index.html",[2,0.516,45,0.005,76,1.861,121,2.035,132,2.063,161,0.002,162,0.003,163,0.002,249,3.939,289,2.477,290,1.437,328,2.24,356,1.337,363,3.069,365,2.477,368,2.477,370,2.477,372,2.441,374,2.477,377,3.069,379,2.979,381,2.477,382,3.024,386,2.477,389,2.515,392,2.477,395,2.979,397,3.069,398,2.477,400,3.024,402,2.477,403,2.477,405,2.441,407,2.477,409,2.515,410,2.477,412,2.477,415,2.477,417,2.477,420,2.477,422,3.069,424,2.441,425,2.477,427,2.477,428,2.477,430,2.477,432,2.477,434,2.477,436,1.458,437,3.024,439,2.441,441,2.441,566,5.352,568,4.043,649,1.896,650,7.611,651,2.189,652,2.482,653,2.633,654,2.554,655,2.294,656,3.883,657,3.883,658,3.883,659,3.883,660,5.352,661,7.643,662,6.187,663,6.492,664,3.66,665,2.633,729,2.817,762,2.352,787,3.75,878,1.896,882,4.717,936,4.277,1042,2.009,1080,7.851,1081,3.883,1082,3.883,1083,3.883,1084,5.352,1085,7.264,1263,1.827,1881,4.043,2058,5.109,2139,3.883,2140,3.883,2142,3.883,2143,3.883,2144,5.352,2173,5.352,2421,3.051,2828,5.352,2889,8.161,2890,3.883,2891,3.883,2892,3.883,2893,3.883,2894,5.645,2895,5.352,3860,3.883,3861,3.883,3862,5.352,3863,5.645,3864,5.352,3910,7.851,3911,3.883,3912,3.883,3913,3.883,3914,5.352,3946,3.883,3947,3.883,4082,6.79,4083,3.883,4084,3.883,4085,3.883,4086,5.352,4383,3.883,4888,3.883,4889,3.883,4890,3.883,5016,3.883,5017,4.328,5018,4.328,5019,4.328,5020,4.328,5021,4.328]],["title/modules.html",[651,3.476]],["body/modules.html",[45,0.004,161,0.003,162,0.004,163,0.003,517,4.221,592,7.028,650,5.504,651,3.768,660,5.504,661,5.504,662,5.504,663,5.039,699,8.096,1080,5.805,1084,5.504,1085,5.253,2889,5.805,2895,5.504,3910,5.805,3914,5.504,4082,5.805,4086,5.504,5022,10.394,5023,10.58,5024,9.999]],["title/routes.html",[729,4.474]],["body/routes.html",[45,0.004,161,0.004,162,0.004,163,0.004,729,5.407]],["title/miscellaneous/typealiases.html",[4991,3.248,5025,6.037]],["body/miscellaneous/typealiases.html",[1,2.661,6,3.221,19,3.005,32,0.116,34,0.233,45,0.005,63,2.821,66,3.073,72,3.073,75,3.005,77,3.073,78,3.073,80,3.073,84,3.145,93,2.821,95,2.821,160,4.141,161,0.003,162,0.004,163,0.003,166,3.586,227,4.753,228,3.697,446,3.303,447,3.586,452,3.303,454,3.073,456,3.39,457,3.39,459,3.221,461,3.39,462,3.39,463,2.239,480,4.753,481,2.712,482,2.821,483,3.627,494,2.765,496,2.712,498,2.612,502,2.765,503,2.712,505,2.612,508,2.712,510,2.712,511,2.712,514,2.712,515,2.661,516,2.712,519,2.712,521,2.712,523,2.712,525,2.712,551,3.627,600,3.82,859,3.586,860,4.733,873,4.284,876,6.48,887,3.586,917,3.697,918,3.586,923,3.697,1049,3.956,1055,3.697,1062,5.282,1514,3.82,1626,3.484,2190,3.956,2236,3.697,2237,3.956,2241,3.697,2242,3.697,2243,3.697,2244,3.697,2252,5.085,2348,3.484,2756,3.956,2757,4.284,2771,3.586,2788,3.956,2791,5.769,2876,3.484,3050,4.284,3057,5.769,3061,3.82,3066,3.484,3067,3.39,3068,3.586,3069,3.586,3070,3.586,3085,5.085,3086,3.82,3090,3.586,3091,3.586,3093,3.586,3094,3.586,3102,5.085,3375,4.284,3376,4.733,3381,4.284,3385,6.48,3795,3.697,3796,4.109,3800,3.697,3801,3.697,3803,3.697,3805,3.697,3814,5.085,4991,4.733,4993,5.452,4994,5.452,4995,5.452,4996,5.452,4998,5.452,4999,5.452,5000,5.452,5004,5.452,5006,5.452,5008,5.452,5009,5.452,5012,5.452,5013,5.452,5026,6.077]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1068,"title":{},"body":{"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0${value}`.slice",{"_index":2405,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["0.3.0",{"_index":4961,"title":{},"body":{"dependencies.html":{}}}],["0.3rem",{"_index":4792,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["0.5",{"_index":4549,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.25",{"_index":4981,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":3613,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["0.8.29",{"_index":4990,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":1042,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1.0.14",{"_index":4982,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":4976,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":4962,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":4988,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2135,"title":{},"body":{"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["10.1.0",{"_index":4969,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":642,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["1000",{"_index":1145,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["11.0.1",{"_index":4966,"title":{},"body":{"dependencies.html":{}}}],["118",{"_index":5020,"title":{},"body":{"index.html":{}}}],["12",{"_index":2813,"title":{},"body":{"components/FeedComponent.html":{}}}],["13",{"_index":5021,"title":{},"body":{"index.html":{}}}],["14",{"_index":5017,"title":{},"body":{"index.html":{}}}],["150",{"_index":2289,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["16",{"_index":4381,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":3308,"title":{},"body":{"components/IconComponent.html":{}}}],["1m",{"_index":2885,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["2",{"_index":750,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["2.0",{"_index":349,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["2.0.1",{"_index":4983,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":4978,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":4971,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":4980,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":4975,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":2292,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["2018",{"_index":340,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["25",{"_index":5019,"title":{},"body":{"index.html":{}}}],["2px",{"_index":4790,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2421,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"classes/DateTimeNgb.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"index.html":{}}}],["3.6.0",{"_index":4986,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4383,"title":{},"body":{"components/TimeLineComponent.html":{},"index.html":{}}}],["30px",{"_index":1874,"title":{},"body":{"components/CardComponent.html":{}}}],["32",{"_index":2287,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["32px",{"_index":3307,"title":{},"body":{"components/IconComponent.html":{}}}],["3600",{"_index":4547,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["362",{"_index":3831,"title":{},"body":{"components/ResizableComponent.html":{}}}],["38",{"_index":5018,"title":{},"body":{"index.html":{}}}],["4",{"_index":3060,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":4964,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":4977,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":4979,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":4973,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1863,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1561,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["404",{"_index":3442,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["48",{"_index":2097,"title":{},"body":{"injectables/CardService.html":{}}}],["5",{"_index":2210,"title":{"classes/HandleUnexpectedError-5.html":{}},"body":{"interfaces/ConfigState.html":{}}}],["5.8.1",{"_index":4963,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1563,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":2194,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["5px",{"_index":1865,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":2810,"title":{"classes/HandleUnexpectedError-6.html":{}},"body":{"components/FeedComponent.html":{}}}],["6.3.3",{"_index":4984,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2094,"title":{},"body":{"injectables/CardService.html":{},"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["60000",{"_index":2853,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["600000",{"_index":2107,"title":{},"body":{"injectables/CardService.html":{}}}],["64px",{"_index":3305,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":2816,"title":{},"body":{"components/FeedComponent.html":{}}}],["7.1.0",{"_index":4965,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":4955,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":4957,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":4410,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["8",{"_index":1220,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["8.0.4",{"_index":4972,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":639,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["90",{"_index":3370,"title":{},"body":{"components/InfoComponent.html":{}}}],["9999px",{"_index":2502,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["_",{"_index":1130,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(tmpmoment",{"_index":4477,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":4435,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(array.from(currentinputversions",{"_index":4690,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":3986,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":3987,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(inputpublishers",{"_index":4675,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(uncachedpublishers",{"_index":4683,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":3716,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":1175,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":3011,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1672,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":4776,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.isequal(status",{"_index":4051,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["_.isequal(thirdactionstatus",{"_index":3425,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["_defaultfilters",{"_index":2983,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":3341,"title":{},"body":{"components/InfoComponent.html":{}}}],["_filter",{"_index":3969,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":2512,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1779,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":3106,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["_locale:string",{"_index":3259,"title":{},"body":{"injectables/I18nService.html":{}}}],["_modalservice",{"_index":315,"title":{},"body":{"components/ActionComponent.html":{}}}],["_resizesubject",{"_index":1677,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["_selectediframeurl",{"_index":3319,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":3684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":3342,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":3250,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":3260,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":3343,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":2004,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":3243,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["above",{"_index":2864,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["abstractcontrol",{"_index":2473,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["accept",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(auth",{"_index":1493,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authenticationinfo",{"_index":1481,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":1495,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(this.authservice.providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1528,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":77,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":78,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":1469,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":1113,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["accessors",{"_index":1788,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":4903,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":1452,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["account",{"_index":240,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["accumulated",{"_index":2884,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["accumulation",{"_index":2863,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["action'},{'name",{"_index":362,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["action(null,null",{"_index":226,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["action).pipe",{"_index":4054,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.buttonstyle",{"_index":2606,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":2607,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.component.html",{"_index":302,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.component.scss",{"_index":300,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.contentstyle",{"_index":2609,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":2610,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.key",{"_index":4059,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.label.key",{"_index":337,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.payload",{"_index":888,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["action.payload.actionkey",{"_index":3416,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.actions",{"_index":3432,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.card",{"_index":3406,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.cardid",{"_index":3414,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.event.url.indexof(\"/archives/cards/\")>=0",{"_index":2324,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":2320,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":2331,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":2334,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.id",{"_index":3434,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":3578,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":3577,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":2326,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":2319,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":2839,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":2838,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.user",{"_index":4853,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload.versions",{"_index":4604,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["action.service",{"_index":330,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["action.service.ts",{"_index":4019,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:115",{"_index":4038,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:26",{"_index":4025,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:33",{"_index":4035,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:42",{"_index":4040,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:58",{"_index":4033,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:73",{"_index":4029,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:97",{"_index":4042,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.updatestatebeforeaction",{"_index":4075,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actioncomponent",{"_index":289,"title":{"components/ActionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["actionid",{"_index":2533,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionkey",{"_index":4032,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actionreducermap",{"_index":785,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["actions/archive.actions",{"_index":924,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["actions?:map",{"_index":3391,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["actions?:ofmap",{"_index":219,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actionsappear",{"_index":1780,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardState.html":{}}}],["actionservice",{"_index":313,"title":{},"body":{"components/ActionComponent.html":{}}}],["actionstatus",{"_index":229,"title":{"classes/ActionStatus.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionstatus(null",{"_index":232,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actionsurlpath",{"_index":1781,"title":{},"body":{"components/CardComponent.html":{}}}],["actiontype",{"_index":168,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["actionurl",{"_index":4020,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actionurlpath",{"_index":308,"title":{},"body":{"components/ActionComponent.html":{}}}],["activate",{"_index":2660,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":2361,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":872,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":2970,"title":{},"body":{"classes/Filter.html":{}}}],["active_from_param",{"_index":961,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["active_to_param",{"_index":963,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activedetail",{"_index":2655,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":2661,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activefrom",{"_index":962,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activeto",{"_index":964,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":443,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["actualizedaction",{"_index":3426,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["add",{"_index":468,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CardOperation.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addactionsappear",{"_index":446,"title":{"classes/AddActionsAppear.html":{}},"body":{"classes/AddActionsAppear.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addactionsappear(this.lightcard.id",{"_index":1846,"title":{},"body":{"components/CardComponent.html":{}}}],["addactionsappear(urlparts[3",{"_index":1981,"title":{},"body":{"components/CardListComponent.html":{}}}],["addauthheadersifnecessary",{"_index":4568,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":4572,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["added",{"_index":1933,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["adding",{"_index":4359,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["addlightcardfailure",{"_index":481,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":2030,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["adds",{"_index":512,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addthirdactions",{"_index":511,"title":{"classes/AddThirdActions.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addthirdactions({card",{"_index":3440,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["administrator",{"_index":2293,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["af.payload.name",{"_index":2034,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.status.end",{"_index":2038,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":2634,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ahead",{"_index":433,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["alarm",{"_index":2999,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1673,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":2619,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":5026,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1875,"title":{},"body":{"components/CardComponent.html":{}}}],["allowed",{"_index":1717,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["allows",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":526,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":2377,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":4954,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4956,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":677,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":4958,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":324,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":680,"title":{},"body":{"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":4959,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":591,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":730,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":1731,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ConfirmModalComponent.html":{}}}],["anyway",{"_index":2235,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["api",{"_index":4162,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["apiversion",{"_index":4186,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["app",{"_index":576,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":685,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["app/modules/utilities/components/resizable/resizable.component",{"_index":1978,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["appcomponent",{"_index":363,"title":{"components/AppComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":2673,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":440,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":469,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"directives/DraggableDirective.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["appeffects",{"_index":852,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["application/x",{"_index":1216,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["applied",{"_index":3607,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["applies",{"_index":2967,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":1510,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{}}}],["applyfilter",{"_index":859,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":2956,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":2847,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":855,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":650,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":442,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":853,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":1331,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["approutingmodule",{"_index":660,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":594,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["archive",{"_index":366,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archive.filters.{{filterpath",{"_index":2498,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["archive.search",{"_index":997,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveactions",{"_index":1062,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/typealiases.html":{}}}],["archiveactiontypes",{"_index":916,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveactiontypes.archivequerysuccess",{"_index":1052,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.handleunexpectederror",{"_index":1058,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.selectarchivedlightcard",{"_index":1061,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.sendarchivequery",{"_index":1057,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivefilter",{"_index":1056,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivepage",{"_index":1060,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archived",{"_index":460,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveeffects",{"_index":840,"title":{"injectables/ArchiveEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{}}}],["archivefilterscomponent",{"_index":365,"title":{"components/ArchiveFiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archiveform",{"_index":930,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveinitialstate",{"_index":1066,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["archivelistcomponent",{"_index":368,"title":{"components/ArchiveListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivelistpagecomponent",{"_index":370,"title":{"components/ArchiveListPageComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivequerysuccess",{"_index":917,"title":{"classes/ArchiveQuerySuccess.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["archivequerysuccess({resultpage",{"_index":893,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["archivereducer",{"_index":814,"title":{},"body":{"interfaces/AppState.html":{}}}],["archives",{"_index":737,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":373,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":1089,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":1071,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":1070,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":372,"title":{"components/ArchivesComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivesmodule",{"_index":1080,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":1084,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["archivestate",{"_index":767,"title":{"interfaces/ArchiveState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{}}}],["archivesurl",{"_index":2048,"title":{},"body":{"injectables/CardService.html":{}}}],["args",{"_index":3204,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1",{"_index":3206,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1])[args[2",{"_index":3207,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":3216,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":2686,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["array",{"_index":2548,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":3715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array.from(actions.entries",{"_index":1855,"title":{},"body":{"components/CardComponent.html":{}}}],["array.from(calcelements",{"_index":1752,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(currentcachedversions",{"_index":4691,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["array.from(fixedelements",{"_index":1740,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(versions.values()).map(version",{"_index":4626,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["arrow::after",{"_index":4796,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["ask",{"_index":1148,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askcreateuser",{"_index":4873,"title":{},"body":{"injectables/UserService.html":{}}}],["askcreateuser(userdata",{"_index":4876,"title":{},"body":{"injectables/UserService.html":{}}}],["askfori18njson",{"_index":4194,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["askfori18njson(publisher",{"_index":4155,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["askforoauthaccesstoken",{"_index":1376,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfromcode(code",{"_index":1233,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenfrompassword(login",{"_index":1247,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["asktokenurl",{"_index":1149,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["askuserapplicationregistered",{"_index":4874,"title":{},"body":{"injectables/UserService.html":{}}}],["askuserapplicationregistered(user",{"_index":4878,"title":{},"body":{"injectables/UserService.html":{}}}],["assets/styles/_variables.scss",{"_index":3313,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":1173,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["async",{"_index":1043,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["attachaction",{"_index":2516,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":2531,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["attribute",{"_index":237,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["auth",{"_index":1269,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.firstname",{"_index":1265,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["auth.lastname",{"_index":1267,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticate",{"_index":1537,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":1527,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["authentication.reducer.ts",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authentication/authentication.service",{"_index":2080,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":160,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":153,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":155,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":156,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.implicitallyauthenticated",{"_index":158,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":145,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologin",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.trytologout",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.unauthenticationfromimplicitflow",{"_index":159,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationactiontypes.uselessauthaction",{"_index":157,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationeffect",{"_index":140,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["authenticationguard",{"_index":736,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationmodehandler",{"_index":1161,"title":{"interfaces/AuthenticationModeHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authenticationreducer",{"_index":783,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":568,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{},"index.html":{}}}],["authentificated",{"_index":4847,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authinfo",{"_index":1489,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":1437,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authmodehandler",{"_index":1160,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authobject",{"_index":1110,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization",{"_index":1336,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authorization_code",{"_index":1239,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["authservice",{"_index":1444,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserEffects.html":{}}}],["authstate",{"_index":768,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authstate.firstname",{"_index":2566,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.identifier",{"_index":2564,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.lastname",{"_index":2567,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.token",{"_index":2565,"title":{},"body":{"components/DetailComponent.html":{}}}],["auto",{"_index":1020,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["autoscale",{"_index":4389,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":517,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["availableheight",{"_index":1749,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["availableheight}px",{"_index":1755,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["await",{"_index":1328,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["axis",{"_index":2919,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":3244,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":1205,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["background",{"_index":4795,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["backwardconf",{"_index":4402,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["badge",{"_index":1873,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":375,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["base64",{"_index":2269,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["based",{"_index":1719,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["basehref",{"_index":3297,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":3300,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":4540,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":4537,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":4539,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":374,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:26",{"_index":2728,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:27",{"_index":2726,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":2727,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":2743,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":2745,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":2744,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":2742,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":2741,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:39",{"_index":2738,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:69",{"_index":2737,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:74",{"_index":2740,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:78",{"_index":2735,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:82",{"_index":2733,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:87",{"_index":2734,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:93",{"_index":2736,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:97",{"_index":2739,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1592,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basically",{"_index":4159,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["bearer",{"_index":1337,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["bearing",{"_index":1726,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["beat",{"_index":2776,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":4561,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["behaviour",{"_index":2936,"title":{},"body":{"classes/Filter.html":{}}}],["being",{"_index":2112,"title":{},"body":{"injectables/CardService.html":{}}}],["best",{"_index":4895,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["beware",{"_index":1240,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["big",{"_index":3304,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":2517,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":2535,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":2712,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":646,"title":{},"body":{"components/AppComponent.html":{},"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"components/TypeAheadSettingsComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":328,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":327,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["border",{"_index":1004,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":2935,"title":{},"body":{"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["bottom",{"_index":1864,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1389,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{}}}],["breaks",{"_index":758,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["bright",{"_index":3277,"title":{},"body":{"components/IconComponent.html":{}}}],["bright:string",{"_index":3293,"title":{},"body":{"components/IconComponent.html":{}}}],["browse",{"_index":5023,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":592,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":670,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":668,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":3834,"title":{},"body":{"components/ResizableComponent.html":{}}}],["btn",{"_index":3518,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3394,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["bug",{"_index":4474,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["build",{"_index":1163,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["buildconfigselector",{"_index":602,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"components/TimeLineComponent.html":{}}}],["buildfilterselector",{"_index":2879,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":3153,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["buildsettingsselector",{"_index":1628,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":1448,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1842,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["button.addeventlistener('click",{"_index":2618,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":2601,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":2612,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":2611,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].textcontent",{"_index":2616,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":2605,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":2608,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1850,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["buttontitle",{"_index":4400,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["c",{"_index":339,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["cachedpublishers",{"_index":4672,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification",{"_index":4681,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification.foreach(third",{"_index":4684,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions",{"_index":4669,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions[third",{"_index":4688,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["calc",{"_index":1016,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"modules/UtilitiesModule.html":{}}}],["calcelements",{"_index":1735,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight",{"_index":1678,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight(parentid",{"_index":1692,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightclass",{"_index":1679,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightdirective",{"_index":437,"title":{"directives/CalcHeightDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["calcheightdirective]'},{'name",{"_index":438,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["calculate",{"_index":1745,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calculated",{"_index":1724,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["calculation",{"_index":1721,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["call",{"_index":1201,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["call.pipe",{"_index":1253,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["called",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["calling",{"_index":1508,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{}}}],["callmodalandhandleresponse",{"_index":4021,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalandhandleresponse(modalservice",{"_index":4026,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary",{"_index":4022,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary(lightcardid",{"_index":4031,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["canactivate",{"_index":735,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["cancel",{"_index":2216,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cancel,ok,dismiss",{"_index":2230,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["caps",{"_index":1870,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":185,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":378,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card.actions",{"_index":1555,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["card.actions.ts",{"_index":483,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:106",{"_index":3058,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:109",{"_index":3059,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:114",{"_index":3817,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:116",{"_index":3818,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:121",{"_index":552,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:123",{"_index":553,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:128",{"_index":4798,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:129",{"_index":4799,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:134",{"_index":4800,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:136",{"_index":4801,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:141",{"_index":4802,"title":{},"body":{"classes/UpdateAnActionFailure.html":{}}}],["card.actions.ts:147",{"_index":4016,"title":{},"body":{"classes/ThirdActionAlreadyLoaded.html":{}}}],["card.actions.ts:152",{"_index":4017,"title":{},"body":{"classes/ThirdActionAlreadyUpdated.html":{}}}],["card.actions.ts:157",{"_index":2506,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:158",{"_index":2507,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:162",{"_index":3396,"title":{},"body":{"classes/LightCardAlreadyUpdated.html":{}}}],["card.actions.ts:38",{"_index":3501,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:43",{"_index":2755,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:47",{"_index":3505,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:50",{"_index":3506,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:55",{"_index":3502,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:63",{"_index":3503,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:66",{"_index":3504,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:72",{"_index":3850,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:75",{"_index":3851,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:82",{"_index":2169,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:89",{"_index":485,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:92",{"_index":486,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:97",{"_index":4816,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.component.html",{"_index":1778,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1777,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1893,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":825,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":3398,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:117",{"_index":3412,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:33",{"_index":3403,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:43",{"_index":3433,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:56",{"_index":3430,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:91",{"_index":3444,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":3015,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id",{"_index":1836,"title":{},"body":{"components/CardComponent.html":{},"injectables/LightCardEffects.html":{}}}],["card.id.indexof(selectedcardid",{"_index":2009,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":490,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3388,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:11",{"_index":3390,"title":{},"body":{"classes/LightCard.html":{}}}],["card.model.ts:67",{"_index":4553,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.process",{"_index":4183,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":4110,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisher}.${card.publisherversion",{"_index":1819,"title":{},"body":{"components/CardComponent.html":{}}}],["card.reducer",{"_index":803,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":3870,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":3007,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":3016,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.state",{"_index":4184,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card1.lttd",{"_index":1953,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1956,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1947,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2",{"_index":1946,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.lttd",{"_index":1954,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1957,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1948,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card:card",{"_index":2632,"title":{},"body":{"classes/DetailContext.html":{}}}],["card:lightcard",{"_index":3012,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":480,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":451,"title":{},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.addactionsappear",{"_index":450,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.clearcard",{"_index":472,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":479,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcard",{"_index":476,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardfailure",{"_index":477,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardsuccess",{"_index":478,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":473,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":474,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":475,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":377,"title":{"components/CardComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":379,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":791,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":771,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardid",{"_index":4058,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["cardid:string,actionkey",{"_index":544,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cardids",{"_index":1989,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardinitialstate",{"_index":2138,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":381,"title":{"components/CardListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":1982,"title":{"classes/CardOperation.html":{}},"body":{"classes/CardOperation.html":{},"injectables/CardService.html":{}}}],["cardoperation.converttypeintoenum",{"_index":2116,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":793,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":2049,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":1988,"title":{},"body":{"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"miscellaneous/enumerations.html":{}}}],["cardoperationtype.add",{"_index":2023,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype.delete",{"_index":2026,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype[value",{"_index":1996,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardreducer",{"_index":804,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":540,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cards'},{'name",{"_index":401,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards.map(card",{"_index":4650,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cards/cards.module",{"_index":1097,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1100,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1103,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1887,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":882,"title":{"injectables/CardService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":1085,"title":{"modules/CardsModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":769,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardsurl",{"_index":2050,"title":{},"body":{"injectables/CardService.html":{}}}],["care",{"_index":2942,"title":{},"body":{"classes/Filter.html":{}}}],["careful",{"_index":3724,"title":{},"body":{"components/NavbarComponent.html":{}}}],["case",{"_index":1387,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["case('logout",{"_index":1392,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["case('token_refresh_error",{"_index":1391,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch",{"_index":1372,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["catch(error",{"_index":4066,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["catcherror",{"_index":912,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror((err",{"_index":1917,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((error",{"_index":894,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":1039,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":4166,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["catcherror(errorresponse",{"_index":1482,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["catcherror(function",{"_index":1225,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["category",{"_index":1455,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":895,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["causes",{"_index":3839,"title":{},"body":{"components/ResizableComponent.html":{}}}],["cell",{"_index":4787,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1876,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":4398,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["chain",{"_index":2961,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":2949,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":2959,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":869,"title":{},"body":{"classes/ApplyFilter.html":{},"components/CustomLogoComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changed",{"_index":2231,"title":{},"body":{"components/ConfirmModalComponent.html":{},"components/TimeFilterComponent.html":{}}}],["changelocale",{"_index":3108,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":3128,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":3173,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["changes",{"_index":2643,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":2668,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changing",{"_index":2759,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":4144,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":1219,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["chart",{"_index":4563,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":391,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":2916,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":2915,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":2925,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":2910,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":2913,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["checauthentication",{"_index":142,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["check",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["checkauthentication(token",{"_index":1209,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkauthenticationstatus",{"_index":66,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":1440,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkelement",{"_index":965,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkelement(filterdatetypes",{"_index":984,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone",{"_index":248,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone(formerstatus",{"_index":4034,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["checkimplicitflowauthentication",{"_index":1441,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkimplicitflowauthenticationstatus",{"_index":80,"title":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checking",{"_index":1406,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checks",{"_index":1202,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenresponse",{"_index":1407,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checktokenurl",{"_index":1146,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["checkuserapplication",{"_index":4832,"title":{},"body":{"injectables/UserEffects.html":{}}}],["child",{"_index":2386,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1104,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cid",{"_index":1107,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["circle",{"_index":4791,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["claim",{"_index":1183,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":3737,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"index.html":{}}}],["clear",{"_index":453,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":1291,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clearcard",{"_index":452,"title":{"classes/ClearCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearcardselection",{"_index":1906,"title":{},"body":{"injectables/CardEffects.html":{}}}],["clearlightcardselection",{"_index":505,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["clicked",{"_index":1550,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1545,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":1153,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["clock",{"_index":2779,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["clone",{"_index":2950,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":2971,"title":{},"body":{"classes/Filter.html":{}}}],["closedetails",{"_index":1880,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cluster",{"_index":4904,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":656,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":657,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":1081,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":1082,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":1083,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":2139,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":2140,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":2142,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_imports",{"_index":2141,"title":{},"body":{"modules/CardsModule.html":{}}}],["cluster_cardsmodule_providers",{"_index":2143,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":2890,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":2891,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":2893,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":2892,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":3860,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":3861,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":3911,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3912,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":3913,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":3946,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":3947,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":4083,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":4084,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":4085,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule",{"_index":4888,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_declarations",{"_index":4889,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":4890,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":4900,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":4399,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["codeflow",{"_index":3526,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":3521,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1939,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["collectionsize",{"_index":1025,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["collectionsize]=\"collectionsize",{"_index":1044,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["color",{"_index":3610,"title":{},"body":{"components/MenuLinkComponent.html":{},"components/TypeFilterComponent.html":{}}}],["combinelatest",{"_index":947,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["common",{"_index":3175,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["commonmodule",{"_index":674,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{}}}],["comparebylttd(card1",{"_index":1952,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1961,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1955,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1963,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1949,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1959,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1958,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1945,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["complex",{"_index":2376,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["component",{"_index":288,"title":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component'},{'name",{"_index":385,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":361,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":290,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"index.html":{}}}],["components/action/action.component",{"_index":2157,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/action/confirm",{"_index":2158,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/archive",{"_index":1087,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["components/card",{"_index":2151,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":2150,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/detail/detail.component",{"_index":2153,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":2152,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/login/login.component",{"_index":687,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/custom",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/icon/icon.component",{"_index":688,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/info/info.component",{"_index":706,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/menus/menu",{"_index":708,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":686,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":2898,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/resizable/resizable.component",{"_index":4893,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["components/settings/base",{"_index":3917,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":3919,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":3920,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":3921,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":3916,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":3918,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":3923,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":2901,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":4521,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":241,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{}}}],["computed",{"_index":3080,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computeddate",{"_index":1831,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates",{"_index":1783,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1795,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":4492,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":4535,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":4532,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":3450,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":3673,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":4486,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":4500,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":4515,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":4503,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":4516,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":4497,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":4514,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":4487,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":4506,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":1363,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["computetextvalidators",{"_index":2721,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":4195,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":4142,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":4168,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["concatall",{"_index":4595,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["conf",{"_index":4306,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key",{"_index":4481,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key].foreach(value",{"_index":4479,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":764,"title":{},"body":{"interfaces/AppState.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["config:any",{"_index":2211,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":2192,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":3057,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1551,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":3053,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":3054,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":3055,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":3056,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":830,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":2212,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":806,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":2173,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":770,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":2840,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":2841,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configue",{"_index":4321,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["configuration",{"_index":1826,"title":{},"body":{"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configured",{"_index":2298,"title":{},"body":{"components/CustomLogoComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["configurl",{"_index":2202,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":383,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["confirmmodalcomponent",{"_index":382,"title":{"components/ConfirmModalComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["confzoom",{"_index":4307,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connect/logout?redirect_uri=${redirect",{"_index":1578,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["connection",{"_index":1230,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["consequence",{"_index":1470,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1929,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error(\"no",{"_index":2297,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["console.error('an",{"_index":2122,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error('error",{"_index":4606,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["console.error(`error",{"_index":2118,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(err",{"_index":1498,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":1226,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1570,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(\"calcheightdirective",{"_index":1751,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["console.log(\"menulinkcomponent",{"_index":3605,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["console.log(\"ok",{"_index":4856,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"transitioncreateuserapplication",{"_index":4864,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"user",{"_index":4881,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('card",{"_index":2622,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log('listsettingcomponent.isequal",{"_index":3478,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["console.log('no",{"_index":1393,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":4007,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["console.log('unknown",{"_index":4073,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["console.log('your",{"_index":1358,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["console.log(`card",{"_index":2623,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(`location",{"_index":612,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`no",{"_index":3429,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.log(`something",{"_index":1899,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["console.log(`this",{"_index":2581,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":4134,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.log(error",{"_index":3443,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["console.log(this.disabled",{"_index":2749,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["consolidatethirdandversions",{"_index":4702,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions",{"_index":4712,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions:transitionalthirdwithitsversion",{"_index":4663,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["const",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constants",{"_index":2880,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["constructmomentobj",{"_index":4309,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructmomentobj(mommentojb",{"_index":4312,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(_modalservice",{"_index":311,"title":{},"body":{"components/ActionComponent.html":{}}}],["constructor(access_token",{"_index":1115,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":3331,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["constructor(authservice",{"_index":4570,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(card",{"_index":2630,"title":{},"body":{"classes/DetailContext.html":{}}}],["constructor(currenttime",{"_index":4244,"title":{},"body":{"classes/TickPayload.html":{}}}],["constructor(date",{"_index":2396,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["constructor(details",{"_index":3944,"title":{},"body":{"classes/State.html":{}}}],["constructor(domsanitizationservice",{"_index":2271,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["constructor(el",{"_index":1684,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["constructor(element",{"_index":2524,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":3972,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":2951,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":2057,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["constructor(id",{"_index":4079,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":3784,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":3247,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":444,"title":{},"body":{"classes/ActionStatus.html":{},"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":4819,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["constructor(message",{"_index":3620,"title":{},"body":{"classes/Message.html":{}}}],["constructor(modal",{"_index":2218,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["constructor(name",{"_index":4009,"title":{},"body":{"classes/Third.html":{}}}],["constructor(number",{"_index":1986,"title":{},"body":{"classes/CardOperation.html":{}}}],["constructor(payload",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(platformlocation",{"_index":3279,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":608,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor(protected",{"_index":1635,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(readonly",{"_index":2409,"title":{},"body":{"classes/DateTimeNgb.html":{},"classes/DetailContext.html":{},"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":4490,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1789,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(start",{"_index":4552,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":3792,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["constructor(sub",{"_index":2163,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(third",{"_index":4591,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["constructor(thirdsservice",{"_index":4095,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":3126,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":2508,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(totalpages",{"_index":3768,"title":{},"body":{"classes/Page.html":{}}}],["constructor(translate",{"_index":3251,"title":{},"body":{"injectables/I18nService.html":{}}}],["constructor(translateservice",{"_index":3661,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["constructor(type",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1757,"title":{},"body":{"classes/Card.html":{},"classes/LightCard.html":{}}}],["constructor(url",{"_index":3846,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["constructorcheckimplicitflowauthenticationstatus",{"_index":1557,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consume",{"_index":151,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["contain",{"_index":2814,"title":{},"body":{"components/FeedComponent.html":{}}}],["containing",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["contains",{"_index":520,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["content",{"_index":640,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Page.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["contentchildren",{"_index":2651,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":2648,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["context",{"_index":3132,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["context.model",{"_index":2557,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["context.model.ts",{"_index":2629,"title":{},"body":{"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["context.model.ts:11",{"_index":2631,"title":{},"body":{"classes/DetailContext.html":{}}}],["context.model.ts:8",{"_index":4829,"title":{},"body":{"classes/UserContext.html":{}}}],["control",{"_index":3459,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["controlvalueaccessor",{"_index":2441,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["convert",{"_index":1282,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":1317,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["convert(value",{"_index":1608,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1665,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["convertjsontoi18nobject",{"_index":4196,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["convertjsontoi18nobject(locale",{"_index":4151,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["convertspeedintoenum",{"_index":4488,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":4509,"title":{},"body":{"classes/TimeReference.html":{}}}],["converttypeintoenum",{"_index":1985,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key",{"_index":1991,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key:string",{"_index":1993,"title":{},"body":{"classes/CardOperation.html":{}}}],["copy",{"_index":350,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["copyright",{"_index":338,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["core",{"_index":700,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correct",{"_index":4912,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["correctly",{"_index":1235,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":1404,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["createentityadapter",{"_index":1942,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["createformgroup",{"_index":3971,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["createnotification",{"_index":3753,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createnotification(title",{"_index":3757,"title":{},"body":{"injectables/NotifyService.html":{}}}],["createuserapplication",{"_index":2236,"title":{"classes/CreateUserApplication.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplication({user",{"_index":4865,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonfailure",{"_index":2244,"title":{"classes/CreateUserApplicationOnFailure.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonfailure({error",{"_index":4860,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonsuccess",{"_index":2243,"title":{"classes/CreateUserApplicationOnSuccess.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonsuccess({user",{"_index":4858,"title":{},"body":{"injectables/UserEffects.html":{}}}],["creation",{"_index":2246,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["css",{"_index":2576,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":4011,"title":{},"body":{"classes/Third.html":{}}}],["csses?:string",{"_index":197,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":2571,"title":{},"body":{"components/DetailComponent.html":{}}}],["curr",{"_index":1743,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["current",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["currentactionpath",{"_index":304,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["currentauthmodehandler",{"_index":1274,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentauthmodehandler.extracttoken",{"_index":1275,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["currentcachedversions",{"_index":4687,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentcard",{"_index":2513,"title":{},"body":{"components/DetailComponent.html":{}}}],["currentdate",{"_index":4555,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currentinputversions",{"_index":4685,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currently",{"_index":1564,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentmoment",{"_index":4338,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["currentpage",{"_index":1031,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["currentpath",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["currentselected",{"_index":1835,"title":{},"body":{"components/CardComponent.html":{}}}],["currentstatus",{"_index":4052,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["currenttime",{"_index":2785,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["currenttimefilter",{"_index":2868,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.active",{"_index":2869,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.end",{"_index":2871,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.start",{"_index":2870,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimereference",{"_index":4249,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["currentuser",{"_index":4859,"title":{},"body":{"injectables/UserEffects.html":{}}}],["custom",{"_index":387,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customlogo",{"_index":2306,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["customlogocomponent",{"_index":386,"title":{"components/CustomLogoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["customroutereffects",{"_index":818,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":2355,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":389,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["d",{"_index":4426,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.end",{"_index":4445,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.includes(currentselected",{"_index":1837,"title":{},"body":{"components/CardComponent.html":{}}}],["d.map(domain",{"_index":4427,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.start",{"_index":4443,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dark",{"_index":2615,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dat",{"_index":4925,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["data",{"_index":501,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["data:image/svg+xml;base64,${data",{"_index":3719,"title":{},"body":{"components/NavbarComponent.html":{}}}],["date",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date().valueof",{"_index":2093,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1314,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(0",{"_index":1438,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":1325,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(minus2hour.valueof",{"_index":2096,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":2092,"title":{},"body":{"injectables/CardService.html":{}}}],["date(this.oauthservice.getaccesstokenexpiration",{"_index":1382,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date(value",{"_index":3226,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.format",{"_index":4939,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format(clusterlevel",{"_index":4931,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hour",{"_index":4945,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":4942,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes",{"_index":4944,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.now",{"_index":1320,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["date.seconds",{"_index":4946,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.valueof",{"_index":4937,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.year",{"_index":2424,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateinsidetooltipsmonth",{"_index":4930,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateinsidetooltipsweek",{"_index":4921,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonday",{"_index":4943,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateondaynewyear",{"_index":4947,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonmonth",{"_index":4951,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonweek",{"_index":4950,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonyear",{"_index":4952,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateparts",{"_index":2410,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateparts.length",{"_index":2413,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["datesimplifliedonday",{"_index":4949,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datesimplifliedondaynewyear",{"_index":4948,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datestring",{"_index":985,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetime",{"_index":393,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["datetimefiltercomponent",{"_index":392,"title":{"components/DatetimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["datetimeform",{"_index":2449,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["datetimengb",{"_index":950,"title":{"classes/DateTimeNgb.html":{}},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["datetimengb(date",{"_index":971,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetodisplay",{"_index":1782,"title":{},"body":{"components/CardComponent.html":{}}}],["day",{"_index":2415,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["days",{"_index":4368,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dd",{"_index":4405,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["dd/mm",{"_index":4421,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deactivate",{"_index":2663,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1631,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":1695,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["debouncetime(300",{"_index":1698,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["debug",{"_index":3624,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declaration",{"_index":239,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["declarations",{"_index":653,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["decode",{"_index":1129,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":1370,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["decoration",{"_index":3612,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["decorators",{"_index":897,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["deep",{"_index":3993,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["default_height",{"_index":2262,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["default_width",{"_index":2263,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["defaultfilters",{"_index":2984,"title":{},"body":{"injectables/FilterService.html":{}}}],["defaultpublisher').set('size",{"_index":2134,"title":{},"body":{"injectables/CardService.html":{}}}],["define",{"_index":1718,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":1241,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delay",{"_index":2188,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["delay(500",{"_index":3411,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delay(this.retrydelay",{"_index":2200,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delayedlightcardupdate",{"_index":523,"title":{"classes/DelayedLightCardUpdate.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["delayupdatelightcard",{"_index":3399,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delegateurl",{"_index":1156,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["delete",{"_index":1997,"title":{},"body":{"classes/CardOperation.html":{},"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":3654,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["demand",{"_index":1559,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["dentifier",{"_index":1308,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dependencies",{"_index":652,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":4320,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deprecation",{"_index":3840,"title":{},"body":{"components/ResizableComponent.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserService.html":{}}}],["description$|async",{"_index":3366,"title":{},"body":{"components/InfoComponent.html":{}}}],["deserializable",{"_index":1207,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["desired",{"_index":3966,"title":{},"body":{"modules/StateModule.html":{}}}],["detail",{"_index":186,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":396,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":2666,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":2511,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":2652,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":395,"title":{"components/DetailComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detailcontext",{"_index":2555,"title":{"classes/DetailContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["detailcontext(this.card,null",{"_index":2589,"title":{},"body":{"components/DetailComponent.html":{}}}],["detailcontext):observable",{"_index":3181,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["details",{"_index":1768,"title":{},"body":{"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/State.html":{}}}],["details'},{'name",{"_index":380,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1102,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1879,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":2635,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1878,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1885,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1886,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":1882,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1884,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:61",{"_index":1883,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1108,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1101,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details?:detail",{"_index":218,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detailscomponent",{"_index":397,"title":{"components/DetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detect",{"_index":4849,"title":{},"body":{"injectables/UserEffects.html":{}}}],["devkit/build",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["devtools",{"_index":3953,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["didn't",{"_index":1711,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["directive",{"_index":359,"title":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["directives",{"_index":436,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["disabled",{"_index":2450,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["disableinfos",{"_index":3877,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dismiss",{"_index":2217,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dispatch",{"_index":1394,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1610,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1666,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["dispatchappstateactionfromoauth2events(event",{"_index":1384,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatchauthactionfromoauthevents",{"_index":1373,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["dispatched",{"_index":4282,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["dispatchupdatethirdaction",{"_index":4023,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["dispatchupdatethirdaction(updatethirdaction",{"_index":4037,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["display",{"_index":1511,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3395,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["displaydate",{"_index":4442,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["displays",{"_index":2886,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["distinctuntilchanged",{"_index":1632,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1651,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged()).subscribe(value",{"_index":4434,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["distributed",{"_index":352,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["divide",{"_index":1733,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":3220,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["document.getelementbyid(this.parentid",{"_index":1708,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["doesn't",{"_index":2624,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["dom",{"_index":293,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":4322,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domain7dayconf",{"_index":4332,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainmonthconf",{"_index":4335,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domains",{"_index":4308,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainweekconf",{"_index":4334,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainyearconf",{"_index":4336,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":3632,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":3636,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizationservice",{"_index":2264,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["domsanitizer",{"_index":2272,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":2809,"title":{},"body":{"components/FeedComponent.html":{}}}],["down",{"_index":1772,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":2812,"title":{},"body":{"components/FeedComponent.html":{}}}],["drag",{"_index":2690,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":2676,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":2718,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":2923,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":2672,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:11",{"_index":2697,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":2689,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:28",{"_index":2693,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:40",{"_index":2695,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:7",{"_index":2685,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:8",{"_index":2684,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:9",{"_index":2683,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":439,"title":{"directives/DraggableDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":2674,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":2677,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":2678,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":3994,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":3738,"title":{},"body":{"components/NavbarComponent.html":{}}}],["due",{"_index":1524,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["duration",{"_index":4530,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":4533,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1937,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":4960,"title":{},"body":{"dependencies.html":{}}}],["e.type",{"_index":1355,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["each",{"_index":4324,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["effect",{"_index":247,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["effects",{"_index":1926,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":3951,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":3960,"title":{},"body":{"modules/StateModule.html":{}}}],["el",{"_index":1687,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["elapsed",{"_index":2777,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsincelast",{"_index":2787,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsofar",{"_index":2822,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["element",{"_index":358,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["element.length",{"_index":989,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["elementref",{"_index":1685,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/DetailComponent.html":{}}}],["elements",{"_index":1716,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["email",{"_index":399,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":398,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emit",{"_index":1468,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2486,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emitevent:false",{"_index":4280,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["emits",{"_index":1541,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["emittedby",{"_index":1507,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":139,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["empty",{"_index":497,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptyaction=new",{"_index":225,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptyactionstatus",{"_index":231,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptylightcards",{"_index":496,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":3178,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["enable",{"_index":756,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enabledrag",{"_index":4386,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":752,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":4387,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":4145,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":2696,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/LightCard.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddate",{"_index":1762,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":4396,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day",{"_index":4342,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain7day.valueof",{"_index":4412,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj",{"_index":4371,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainj.valueof",{"_index":4397,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth",{"_index":4352,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainmonth.valueof",{"_index":4419,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr",{"_index":4366,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomaintr.valueof",{"_index":4409,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek",{"_index":4347,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainweek.valueof",{"_index":4417,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear",{"_index":4357,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainyear.valueof",{"_index":4423,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":2375,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":471,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1943,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["entitystate",{"_index":1930,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":216,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entries.map(([key",{"_index":1856,"title":{},"body":{"components/CardComponent.html":{}}}],["entry",{"_index":2351,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":4130,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.length",{"_index":4131,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entrycomponents",{"_index":2146,"title":{},"body":{"modules/CardsModule.html":{}}}],["enum",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["enumeration",{"_index":966,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["enumerations",{"_index":4992,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":788,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":787,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["environment.production",{"_index":856,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.urls.actions",{"_index":4045,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["environment.urls.auth}/check_token",{"_index":1147,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/code/redirect_uri=${this.computeredirecturi",{"_index":1341,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.auth}/realms/${realm}/protocol/openid",{"_index":1577,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["environment.urls.auth}/token",{"_index":1150,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["environment.urls.cards}/archives",{"_index":2089,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cards",{"_index":2087,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":2085,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":2207,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":4107,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":3937,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UserService.html":{}}}],["environment.urls.users}/users",{"_index":1152,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["equality",{"_index":243,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["equally",{"_index":1734,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["equals",{"_index":235,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["err",{"_index":1500,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":146,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["error('no",{"_index":4133,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":2029,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.status",{"_index":3441,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["error.tostring",{"_index":2121,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":3618,"title":{},"body":{"interfaces/MenuState.html":{},"interfaces/TranslationState.html":{}}}],["error:string",{"_index":3616,"title":{},"body":{"interfaces/MenuState.html":{},"interfaces/TranslationState.html":{}}}],["errormsg",{"_index":1460,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":1457,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1569,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1560,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":2120,"title":{},"body":{"injectables/CardService.html":{}}}],["etc",{"_index":4279,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["evaluate",{"_index":2940,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":2079,"title":{},"body":{"injectables/CardService.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{},"dependencies.html":{}}}],["event('resize",{"_index":3836,"title":{},"body":{"components/ResizableComponent.html":{}}}],["event.detail",{"_index":3658,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.target.value",{"_index":2497,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["event.type",{"_index":1385,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["event.wheeldelta",{"_index":3657,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":2682,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":2065,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":2126,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":2125,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":2117,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":2110,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":2124,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":2063,"title":{},"body":{"injectables/CardService.html":{}}}],["eventtype",{"_index":1132,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["evt",{"_index":3841,"title":{},"body":{"components/ResizableComponent.html":{}}}],["evt.inituievent('resize",{"_index":3843,"title":{},"body":{"components/ResizableComponent.html":{}}}],["example",{"_index":3076,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":3628,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":3109,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":3131,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":2625,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["existing",{"_index":513,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["exists",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["exp",{"_index":1193,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expandedmenu",{"_index":3685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":3709,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":3686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":3710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":1276,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expirationdate",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["expireclaim",{"_index":1155,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["expired",{"_index":1496,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":1114,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["explicit",{"_index":1525,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["explicitly",{"_index":2294,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["export",{"_index":60,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["extended",{"_index":500,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1941,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":5014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["external='external",{"_index":220,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extract",{"_index":1271,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus",{"_index":3446,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(action.payload.status",{"_index":3418,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus(currentstatus",{"_index":4049,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(formerstatus",{"_index":4046,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(taction:object):actionstatus",{"_index":250,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractactionstatusfrompseudoactionstatus(thirdactiontoupdate",{"_index":3424,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extracti18nbuilderoptions",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["extracti18ntoupdate",{"_index":4703,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extracti18ntoupdate(versions",{"_index":4644,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractidentificationinformation",{"_index":1309,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["extractparams",{"_index":2358,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":2360,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom",{"_index":4704,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4659,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards",{"_index":4705,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4649,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractstate",{"_index":4008,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":4014,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card:card):state",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractthirdtoupdate",{"_index":4706,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractthirdtoupdate(versioninput",{"_index":4668,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extracttoken",{"_index":1273,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["f5",{"_index":636,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":2613,"title":{},"body":{"components/DetailComponent.html":{},"components/TypeFilterComponent.html":{}}}],["faclock",{"_index":2909,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":701,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":458,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":3804,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["failtoupdatetimereference",{"_index":2756,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":2774,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2245,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["fallback",{"_index":1713,"title":{},"body":{"directives/CalcHeightDirective.html":{},"injectables/HandlebarsService.html":{}}}],["false",{"_index":223,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeFilterComponent.html":{},"interfaces/UserState.html":{}}}],["family_name",{"_index":1190,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["familynameclaim",{"_index":1158,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["fasignoutalt",{"_index":702,"title":{},"body":{"modules/AppModule.html":{}}}],["fctargs[fctargs.length",{"_index":3219,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":732,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":2897,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":2794,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":2793,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":4302,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":4301,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":4303,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":4783,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":4782,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.notification.label",{"_index":4785,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.question.label",{"_index":4784,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":4786,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.timefilter.followclocktick",{"_index":2881,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["feedactions",{"_index":876,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":868,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":863,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":874,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":400,"title":{"components/FeedComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":826,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":1966,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":2889,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":2895,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":2801,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1901,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmap",{"_index":4197,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmap(publisher",{"_index":4185,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard",{"_index":4198,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard(card",{"_index":4181,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetcharchivedcards",{"_index":2052,"title":{},"body":{"injectables/CardService.html":{}}}],["fetcharchivedcards(filters",{"_index":2060,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation",{"_index":2053,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":2062,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":2203,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":4199,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":4138,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchlightcard",{"_index":3445,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["fetchthird",{"_index":4200,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":4120,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":3929,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":3992,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["fields",{"_index":2494,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":3314,"title":{},"body":{"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["filter",{"_index":435,"title":{"classes/Filter.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":4761,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":394,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1650,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":2199,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter(([elapsedsincelast",{"_index":2867,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter((action",{"_index":2317,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af",{"_index":2033,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t",{"_index":4172,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(time",{"_index":2862,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(v=>!!v",{"_index":2844,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(x",{"_index":2854,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":1094,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["filter.component.css",{"_index":2447,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filter.component.html",{"_index":2448,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":3968,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2440,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":3666,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":3664,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:16",{"_index":3663,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:18",{"_index":3662,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:25",{"_index":3665,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":2480,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":2482,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":2460,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":2479,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":4760,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":2459,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":4271,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:35",{"_index":3975,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:38",{"_index":2481,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2477,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:41",{"_index":4273,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":2465,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:46",{"_index":4274,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:48",{"_index":2468,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:52",{"_index":2470,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":4758,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:56",{"_index":2474,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":4759,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:60",{"_index":2463,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":3974,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:68",{"_index":2462,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{}}}],["filter.component.ts:96",{"_index":4272,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":865,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":2933,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:22",{"_index":2953,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:27",{"_index":2954,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":2955,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:32",{"_index":2968,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:43",{"_index":2957,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:56",{"_index":2960,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:67",{"_index":2965,"title":{},"body":{"classes/Filter.html":{}}}],["filter/datetime",{"_index":1096,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filter/multi",{"_index":1093,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filter/tags",{"_index":2927,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":2908,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":2906,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filterdatetypes",{"_index":956,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtered",{"_index":2845,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["filterpath",{"_index":2458,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filters",{"_index":902,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["filters'},{'name",{"_index":367,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component",{"_index":1091,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["filters.component.css",{"_index":928,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.html",{"_index":929,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/FiltersComponent.html":{}}}],["filters.component.ts",{"_index":927,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filters.component.ts:46",{"_index":946,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:47",{"_index":944,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:48",{"_index":945,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:49",{"_index":943,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:51",{"_index":937,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:65",{"_index":938,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:75",{"_index":941,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:97",{"_index":939,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.effects",{"_index":828,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":2821,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:25",{"_index":2831,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:28",{"_index":2830,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:31",{"_index":2829,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:44",{"_index":2852,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:54",{"_index":2848,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:75",{"_index":2875,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.foreach((values",{"_index":2129,"title":{},"body":{"injectables/CardService.html":{}}}],["filters.set('page",{"_index":905,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["filters.set(filtertype.recipient_filter",{"_index":3019,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":3023,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":3021,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":3017,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters/archive",{"_index":926,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"miscellaneous/enumerations.html":{}}}],["filters/datetime",{"_index":1095,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filters/multi",{"_index":1092,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filters[key",{"_index":983,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filterscomponent",{"_index":402,"title":{"components/FiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":2828,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filterstomap",{"_index":931,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filtertype",{"_index":866,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":3989,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":2035,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":4777,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["find",{"_index":4894,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["fires",{"_index":2347,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":2014,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":932,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["first.tostring",{"_index":996,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["firstmovestartofunit",{"_index":4413,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["firstname",{"_index":1434,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname:string",{"_index":4822,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname?:string",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["fixed",{"_index":1720,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedelements",{"_index":1722,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedheightclass",{"_index":1680,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["flatmap",{"_index":1521,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["flow",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["flow.config",{"_index":1139,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["flowmode",{"_index":1515,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["fluent",{"_index":4161,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fn",{"_index":2466,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["followclocktick",{"_index":2823,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["font",{"_index":1867,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":696,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":694,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["foreach((x",{"_index":1753,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["forkjoin",{"_index":4594,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.maplanguages(thirdswiththeirversions)).pipe",{"_index":4605,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapthirds(locale",{"_index":4616,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapversions(locale",{"_index":4623,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["form",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["form.action",{"_index":4779,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":4778,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":4298,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.notification",{"_index":4781,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.question",{"_index":4780,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":4297,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":3990,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1616,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.setting",{"_index":3479,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":2392,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":2920,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":4897,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:16",{"_index":4915,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:55",{"_index":4907,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:79",{"_index":4901,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatdatetime",{"_index":2393,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formatted",{"_index":4902,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":3230,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":3233,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatticks",{"_index":4404,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formattime",{"_index":2394,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formattooltipsdate",{"_index":4420,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formb",{"_index":1614,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1671,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["formb.setting",{"_index":3480,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":3973,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":3976,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":948,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":3679,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null",{"_index":4003,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":1211,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["former",{"_index":4071,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formerstatus",{"_index":4036,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formgroup",{"_index":940,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":2381,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":678,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":2147,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":695,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":698,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forward",{"_index":4372,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardconf",{"_index":4401,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwarddayconf",{"_index":4376,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardmonthconf",{"_index":4374,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardref",{"_index":2445,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["forwardtrconf",{"_index":4377,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardweekconf",{"_index":4375,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardyearconf",{"_index":4373,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":3083,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["foundindex",{"_index":1418,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["france.com",{"_index":343,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["freeze",{"_index":790,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(this.authservice.initandloadauth()).pipe",{"_index":1522,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["from(ts",{"_index":4171,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":779,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":854,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":1106,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["function",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":3241,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":3209,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":2938,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":1408,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["future",{"_index":1413,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{}}}],["g",{"_index":3238,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":2934,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":1231,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gently",{"_index":747,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getactions",{"_index":1784,"title":{},"body":{"components/CardComponent.html":{}}}],["getauthenticationmode",{"_index":1395,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getcardoperation",{"_index":2054,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":3037,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":3038,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring():string",{"_index":3044,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":3350,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":4275,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":2550,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1811,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getimage",{"_index":2267,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["getitem",{"_index":1313,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getlocale",{"_index":3255,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":1335,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["getselectediframeurl",{"_index":3323,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":3706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":3352,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":3257,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":4094,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":4097,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":3348,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":1229,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["given_name",{"_index":1187,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["givennameclaim",{"_index":1157,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["gives",{"_index":1204,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["granted",{"_index":3765,"title":{},"body":{"injectables/NotifyService.html":{}}}],["graph",{"_index":5024,"title":{},"body":{"modules.html":{}}}],["group",{"_index":4886,"title":{},"body":{"interfaces/UserState.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["guid.create",{"_index":3043,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":1311,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["guidservice",{"_index":1125,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["h",{"_index":4922,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["h:mm",{"_index":4406,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["half",{"_index":4548,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handelactionbuttontext",{"_index":2518,"title":{},"body":{"components/DetailComponent.html":{}}}],["handelactionbuttontext(label",{"_index":2537,"title":{},"body":{"components/DetailComponent.html":{}}}],["handle",{"_index":464,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":2526,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":3208,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":3236,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":3222,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":3213,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":3201,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":3196,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":3223,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('json",{"_index":3193,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":3234,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":3229,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":3215,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":3218,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":3203,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.safestring(json.stringify(obj",{"_index":3195,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":3152,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":2144,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1785,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1798,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerrorontokengeneration",{"_index":1442,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":1454,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["handlenewtoken(call",{"_index":1252,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["handler",{"_index":3807,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["handlerejectedlogin",{"_index":141,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["handlerejectedlogin(errormsg",{"_index":1458,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":463,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{}},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":896,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":267,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["haschanged",{"_index":4050,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["hashlocationstrategy",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["header",{"_index":1334,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":1214,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["headers}).pipe",{"_index":1223,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["heart",{"_index":2775,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":4250,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":2106,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":641,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TypeFilterComponent.html":{}}}],["height.directive",{"_index":4892,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["height.directive.ts",{"_index":1676,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:21",{"_index":1690,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:24",{"_index":1689,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:27",{"_index":1688,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:29",{"_index":1686,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:41",{"_index":1691,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:45",{"_index":1693,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height:auto",{"_index":2504,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["heights",{"_index":1738,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["helper",{"_index":1315,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["here",{"_index":2099,"title":{},"body":{"injectables/CardService.html":{}}}],["hidden",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hidden:boolean=false",{"_index":230,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":3522,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetags",{"_index":3031,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{}}}],["hidetimeline",{"_index":2795,"title":{},"body":{"components/FeedComponent.html":{}}}],["homedomainextraticks",{"_index":4414,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["horizontal",{"_index":4911,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hostlistener",{"_index":1694,"title":{},"body":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlistener('document:dragstart",{"_index":2716,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":3649,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":3646,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":3651,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":2699,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":2703,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":2706,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('window:resize",{"_index":1703,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlisteners",{"_index":1682,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hou",{"_index":4924,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hour",{"_index":2436,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["hours",{"_index":4365,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hoursonly",{"_index":4932,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":2575,"title":{},"body":{"components/DetailComponent.html":{}}}],["href=\"javascript:void(0",{"_index":3739,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hrefsofcsslink",{"_index":2514,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":357,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":2532,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":2523,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlelement",{"_index":1707,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["http",{"_index":1333,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":355,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http://www.rte",{"_index":342,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http_interceptors",{"_index":3868,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpclient",{"_index":1121,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":672,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":4578,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":4576,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":1122,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":1215,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["httpinterceptor",{"_index":4579,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":2081,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set(\"apiversion",{"_index":4187,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('locale",{"_index":4156,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('publisher",{"_index":2133,"title":{},"body":{"injectables/CardService.html":{}}}],["httpparams().set('version",{"_index":4149,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams.set",{"_index":4158,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":4573,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":2380,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":3627,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":4100,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":170,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["i18n('login.error.token.expiration",{"_index":1497,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":1487,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":1502,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":4263,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(i18n['key",{"_index":259,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18n(i18n['key'],params",{"_index":258,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18n(key",{"_index":1573,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n['parameters",{"_index":255,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nbundleversionloaded",{"_index":4728,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["i18nbundleversionloaded:new",{"_index":4731,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["i18nlabelkey",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":4261,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":4262,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nprefix",{"_index":309,"title":{},"body":{"components/ActionComponent.html":{},"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":2669,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nservice",{"_index":566,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["iarchivefilter",{"_index":1064,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["icon",{"_index":3270,"title":{},"body":{"components/IconComponent.html":{},"components/MenuLinkComponent.html":{}}}],["icon'},{'name",{"_index":404,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":3272,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":3271,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":3291,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":403,"title":{"components/IconComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":3273,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":3296,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":705,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":214,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":2602,"title":{},"body":{"components/DetailComponent.html":{}}}],["id:string",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["identifier",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":2350,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["identityclaims",{"_index":1379,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["identityclaims['sub",{"_index":1381,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ie",{"_index":3837,"title":{},"body":{"components/ResizableComponent.html":{}}}],["if(!!control.value",{"_index":3481,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":4290,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":4285,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!parent",{"_index":1714,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["if(!this.form",{"_index":1638,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":3245,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":2837,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(args.length",{"_index":3205,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(card.process",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(card.state",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(changes['card'].currentvalue",{"_index":2667,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(i18n",{"_index":253,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(ismoment(realnow",{"_index":4517,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(key",{"_index":1995,"title":{},"body":{"classes/CardOperation.html":{}}}],["if(locale",{"_index":3176,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["if(newelapsedsofar>=this.refreshthreshold",{"_index":2859,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(params",{"_index":256,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(result",{"_index":1962,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1960,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":3188,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(this.active",{"_index":2976,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":2978,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.expandedmenu[index",{"_index":3731,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":3734,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":4538,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":4525,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":3265,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":3242,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":3711,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(v",{"_index":3601,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe",{"_index":3603,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["iframe_url",{"_index":3082,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":3316,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":406,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":4088,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":3318,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":3317,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":405,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":3328,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["implementation",{"_index":2944,"title":{},"body":{"classes/Filter.html":{}}}],["implemented",{"_index":2621,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":1447,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["implicit",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["implicitallyauthenticated",{"_index":93,"title":{"classes/ImplicitallyAuthenticated.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["implicitauthenticationconfigfallback",{"_index":1137,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler",{"_index":1197,"title":{"classes/ImplicitAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitauthenticationhandler(this",{"_index":1170,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["implicitconf",{"_index":1162,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["imports",{"_index":667,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["include",{"_index":3965,"title":{},"body":{"modules/StateModule.html":{}}}],["incorrect",{"_index":2753,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":3563,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":408,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":3340,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":3339,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":407,"title":{"components/InfoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["informatios",{"_index":1296,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["inherit",{"_index":3611,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["inheritance",{"_index":2946,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":1973,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["init",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["initandloadauth",{"_index":1348,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initauthstatus",{"_index":63,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code",{"_index":1421,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initchartcomponent",{"_index":409,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":870,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":873,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":2851,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1596,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1664,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["initializeauthentication",{"_index":1415,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initialized",{"_index":1236,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["initializehandlebarstemplates",{"_index":2519,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":2520,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialnavigation",{"_index":755,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":2367,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["initrecipientfilter",{"_index":2985,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilter",{"_index":2986,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":2824,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":2987,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":3375,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittimeline({data",{"_index":4436,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["inittypefilter",{"_index":2988,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":2187,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":2193,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":877,"title":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["injectables",{"_index":878,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/NotifyService.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injected",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["inline",{"_index":3368,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":176,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["inputpublishers",{"_index":4670,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["inputs",{"_index":175,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":273,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":2711,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":1316,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["instanciate",{"_index":1641,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":2945,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":2574,"title":{},"body":{"components/DetailComponent.html":{}}}],["instantiateimplicitflowconfiguration",{"_index":1198,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["intercept",{"_index":4569,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":4575,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":2101,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":2102,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":4566,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":3869,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":761,"title":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/ImplicitAuthenticationHandler.html":{},"interfaces/MenuState.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{}}}],["interfaces",{"_index":762,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["internal",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["intializeauthentication",{"_index":1396,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":3267,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this._locale",{"_index":3231,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":1206,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["invalidform",{"_index":2493,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isauthenticated",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isauthmodecodeorimplicitflow",{"_index":1402,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isdisabled",{"_index":2471,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isequal",{"_index":1597,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1613,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":1289,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isimplicitlyauthenticated",{"_index":1435,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isinthefuture(expirationdate",{"_index":1287,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isinthefuture(time",{"_index":1414,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ismoment",{"_index":4512,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":1285,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnan(tointeger(value",{"_index":2408,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnotanumber",{"_index":1284,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["isnumber(date.day",{"_index":2427,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(date.month",{"_index":2425,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[0",{"_index":2414,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[1",{"_index":2419,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[2",{"_index":2422,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.hour",{"_index":2431,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.minute",{"_index":2433,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(value",{"_index":2404,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["issue",{"_index":467,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["issuer",{"_index":1200,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["issupported",{"_index":3754,"title":{},"body":{"injectables/NotifyService.html":{}}}],["issupported(window",{"_index":3759,"title":{},"body":{"injectables/NotifyService.html":{}}}],["istanbul",{"_index":112,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["isvirtualtimeundefine",{"_index":4489,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":1505,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["items",{"_index":2378,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["iterate",{"_index":4611,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["j",{"_index":4393,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["january",{"_index":2815,"title":{},"body":{"components/FeedComponent.html":{}}}],["jnlp",{"_index":5015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["jnlp='jnlp",{"_index":221,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["js",{"_index":4974,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json",{"_index":4190,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["jwksvalidationhandler",{"_index":1134,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt",{"_index":1128,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":1192,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.family",{"_index":1189,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.given",{"_index":1186,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt.login",{"_index":1182,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.expireclaim",{"_index":1321,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.familynameclaim",{"_index":1327,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt[this.givennameclaim",{"_index":1326,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode",{"_index":1127,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["jwt_decode(token",{"_index":1371,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["keep",{"_index":2010,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":182,"title":{},"body":{"classes/Action.html":{},"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Map.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{}}}],["key?:string",{"_index":224,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["know",{"_index":3725,"title":{},"body":{"components/NavbarComponent.html":{}}}],["label",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label.parameters",{"_index":2627,"title":{},"body":{"components/DetailComponent.html":{}}}],["label1",{"_index":4229,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":4232,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":4237,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label=new",{"_index":251,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lang",{"_index":4099,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["language",{"_index":3812,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["languages",{"_index":4612,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["large",{"_index":3963,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1871,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1932,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1931,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastname",{"_index":1436,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname:string",{"_index":4823,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname?:string",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["later",{"_index":524,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["latest",{"_index":2835,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":495,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["leaves",{"_index":4070,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["left",{"_index":2501,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["left:0",{"_index":999,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["legend",{"_index":356,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["legend.accessibility",{"_index":2499,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["less",{"_index":4562,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":3621,"title":{},"body":{"classes/Message.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":697,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["library.add(faclock",{"_index":2929,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":717,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":718,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":347,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["light",{"_index":506,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard",{"_index":488,"title":{"classes/LightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard):boolean",{"_index":2975,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":2969,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.actions",{"_index":3437,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["lightcard.id",{"_index":2013,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcard.summary.key",{"_index":1860,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.title.key",{"_index":1859,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcardactions",{"_index":551,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":493,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":487,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.addthirdactions",{"_index":541,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":536,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.delayedlightcardupdate",{"_index":548,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":529,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":538,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.lightcardalreadyupdated",{"_index":550,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":528,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":532,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":533,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":530,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.removelightcard",{"_index":539,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":534,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyloaded",{"_index":546,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyupdated",{"_index":547,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatealightcard",{"_index":542,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanaction",{"_index":543,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanactionfailure",{"_index":545,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":537,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1964,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1967,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardalreadyupdated",{"_index":525,"title":{"classes/LightCardAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardeffects",{"_index":245,"title":{"injectables/LightCardEffects.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/AppState.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lightcardid",{"_index":310,"title":{},"body":{"components/ActionComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["lightcardreducer",{"_index":801,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":531,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter(card",{"_index":2008,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["limit",{"_index":2305,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limited",{"_index":2307,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["limitsize",{"_index":2270,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["limitsize!=undefined",{"_index":3726,"title":{},"body":{"components/NavbarComponent.html":{}}}],["limitsize:boolean",{"_index":3723,"title":{},"body":{"components/NavbarComponent.html":{}}}],["line",{"_index":3369,"title":{},"body":{"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":431,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":2903,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":4305,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":4304,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:226",{"_index":4314,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:25",{"_index":4329,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:251",{"_index":4319,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:26",{"_index":4330,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:272",{"_index":4316,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":4327,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:29",{"_index":4328,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:30",{"_index":4311,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:33",{"_index":4317,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/custom",{"_index":2914,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/directives/app",{"_index":2671,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/directives/mouse",{"_index":2921,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/init",{"_index":2924,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/tick",{"_index":2917,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["line/time",{"_index":2902,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["link",{"_index":2346,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link'},{'name",{"_index":414,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["link.component",{"_index":710,"title":{},"body":{"modules/AppModule.html":{}}}],["link.component.html",{"_index":3588,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.scss",{"_index":3587,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts",{"_index":3586,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:14",{"_index":3594,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:15",{"_index":3595,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:16",{"_index":3598,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:17",{"_index":3597,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:18",{"_index":3593,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link.component.ts:23",{"_index":3596,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["link/button",{"_index":1549,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link/menu",{"_index":709,"title":{},"body":{"modules/AppModule.html":{},"components/MenuLinkComponent.html":{}}}],["link1",{"_index":4230,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":4233,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":4238,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["linkauthenticationstatus",{"_index":1580,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linkauthenticationstatus(linker",{"_index":1398,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["linker",{"_index":1584,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["list",{"_index":275,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":369,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1090,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["list.component.html",{"_index":1009,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.scss",{"_index":1008,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":1007,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:23",{"_index":1011,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:24",{"_index":1010,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:25",{"_index":1972,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:28",{"_index":1012,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:31",{"_index":1975,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/archive",{"_index":1006,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["list/card",{"_index":1969,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/filters.component",{"_index":2904,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":3030,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:20",{"_index":3032,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:24",{"_index":3033,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/tags",{"_index":2926,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":2907,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":2905,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":276,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1539,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":1465,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listsettingcomponent",{"_index":410,"title":{"components/ListSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":484,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiFilterComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["little",{"_index":2715,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":455,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadarchivedbyid",{"_index":1907,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcard",{"_index":459,"title":{"classes/LoadArchivedCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcard(id",{"_index":2067,"title":{},"body":{"injectables/CardService.html":{}}}],["loadarchivedcard({id",{"_index":2327,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadarchivedcardfailure",{"_index":462,"title":{"classes/LoadArchivedCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardfailure(err",{"_index":1918,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcardsuccess",{"_index":461,"title":{"classes/LoadArchivedCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardsuccess({card",{"_index":1916,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadbyid",{"_index":1908,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcard",{"_index":454,"title":{"classes/LoadCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":2069,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":2012,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":457,"title":{"classes/LoadCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1923,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":456,"title":{"classes/LoadCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1922,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":733,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":600,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":2190,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":2180,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1514,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":2179,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess.payload.config.security.oauth2.flow.mode",{"_index":1516,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["loadconfiguration",{"_index":2171,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":623,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/RefreshTranslation.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["loadedcardaction.payload.lightcards",{"_index":4635,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["loader",{"_index":4968,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":2825,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nformenuentries",{"_index":4222,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":4239,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loading",{"_index":633,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{}}}],["loading:boolean",{"_index":4729,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["loading:false",{"_index":4732,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["loadlightcards",{"_index":494,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":499,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":502,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":498,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":2024,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadmenu",{"_index":3066,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":3068,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":3573,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":3067,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":3572,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":2016,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":3090,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":3091,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":3899,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":3893,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":2876,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":3898,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth",{"_index":1261,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["local",{"_index":2585,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":3130,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales",{"_index":3878,"title":{},"body":{"components/SettingsComponent.html":{},"classes/Third.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales.map(locale",{"_index":4615,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales?:string",{"_index":198,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["localestorage",{"_index":1278,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage",{"_index":1272,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.clear",{"_index":1292,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1283,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":1310,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":1312,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":1305,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":1303,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":1299,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":1301,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["localstorageauthcontent",{"_index":1143,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":1365,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname",{"_index":1368,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["location.pathname.length",{"_index":1367,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["locationstrategy",{"_index":676,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":177,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":178,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":234,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["login'},{'name",{"_index":411,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":3520,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1562,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1566,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1567,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":3556,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":3557,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":3559,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":3560,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":3558,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["login:id",{"_index":1659,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":4821,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["loginclaim",{"_index":1154,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["logincomponent",{"_index":121,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"index.html":{}}}],["loginmessage",{"_index":3523,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":3561,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":2259,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo'},{'name",{"_index":388,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["logo.component",{"_index":713,"title":{},"body":{"modules/AppModule.html":{}}}],["logo.component.css",{"_index":2260,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.html",{"_index":2261,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts",{"_index":2258,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:11",{"_index":2274,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:13",{"_index":2276,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:14",{"_index":2275,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:15",{"_index":2277,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:17",{"_index":2282,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:18",{"_index":2283,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:20",{"_index":2285,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:21",{"_index":2273,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:23",{"_index":2284,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:31",{"_index":2280,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:46",{"_index":2281,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo.component.ts:56",{"_index":2278,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["logo/custom",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"components/CustomLogoComponent.html":{}}}],["logout",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["longtext",{"_index":278,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["lttd",{"_index":1766,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":3212,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":3224,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/TimeLineComponent.html":{}}}],["m.format(options.hash.format",{"_index":3228,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level",{"_index":3541,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this._locale",{"_index":3227,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":1764,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":3827,"title":{},"body":{"components/ResizableComponent.html":{}}}],["makes",{"_index":1728,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["manage",{"_index":744,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":4266,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["manager",{"_index":1446,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":2182,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["managment",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["mandatory",{"_index":280,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":189,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{}}}],["map(([action",{"_index":901,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(([action,configtags",{"_index":2836,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([elapsedsincelast",{"_index":2874,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([haschanged",{"_index":4056,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map((a",{"_index":2003,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":2850,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["map((auth",{"_index":1256,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map((card",{"_index":1915,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["map((cards",{"_index":4637,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((config",{"_index":2178,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((loadconfigsuccess",{"_index":1513,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map((loadedcardaction",{"_index":4634,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((loadedmenusaction:loadmenusuccess)=>loadedmenusaction.payload.menu",{"_index":4655,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((menus:thirdmenu[])=>translateeffects.extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4656,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversion",{"_index":4642,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversions:map>)=>translateeffects.sendtranslateaction(publisherandversions",{"_index":4658,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((referencedtranslation",{"_index":4646,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((resultpage",{"_index":892,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map((settings",{"_index":3897,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map((storedcard",{"_index":3408,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["map((user",{"_index":4839,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(a=>new",{"_index":3901,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(auth",{"_index":1492,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(authenticationinfo",{"_index":1480,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(check",{"_index":1224,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(currentstatus",{"_index":4047,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map(currentuser",{"_index":4855,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(data",{"_index":1254,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(elem",{"_index":4607,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map(id=>{return",{"_index":1658,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":1425,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(lightcard",{"_index":2011,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(menu",{"_index":3571,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(menuentry",{"_index":4136,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(object.entries(obj",{"_index":4191,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":2021,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(params",{"_index":891,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(s=>handlebars.compile(s",{"_index":3191,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":3905,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":4174,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(context",{"_index":3183,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(this.convertjsontoi18nobject(locale",{"_index":4165,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(timeref",{"_index":4258,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":1264,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["map(url",{"_index":3579,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(v=>new",{"_index":2846,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":3363,"title":{},"body":{"components/InfoComponent.html":{}}}],["map(x",{"_index":1741,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["map>)=>this.extracti18ntoupdate(versions",{"_index":4657,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["maplanguages",{"_index":4707,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["maplanguages(thirdsandversions",{"_index":4613,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapped",{"_index":2842,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["mapthirds",{"_index":4708,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapthirds(locale",{"_index":4619,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapversions",{"_index":4709,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapversions(locale",{"_index":4625,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["margin",{"_index":637,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["matching",{"_index":162,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["materials",{"_index":3806,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["math.max",{"_index":3655,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":3656,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1861,"title":{},"body":{"components/CardComponent.html":{}}}],["max_height",{"_index":2265,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["max_width",{"_index":2266,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["maxedretries",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":281,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["maxsize]=\"3",{"_index":1047,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["means",{"_index":4278,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["medium",{"_index":3306,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":152,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["menu",{"_index":413,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":3736,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":3744,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id}}.{{menu.version}}.{{menuentry.label",{"_index":3609,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menu.logout",{"_index":3745,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":3743,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":3742,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu_entry_id",{"_index":3079,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":3078,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":4090,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":2337,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":3085,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":3065,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":3064,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":3071,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":3072,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":3073,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":3077,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":3084,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":3081,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":822,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":4012,"title":{},"body":{"classes/Third.html":{}}}],["menuentries?:thirdmenuentry",{"_index":199,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry",{"_index":3592,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menuentry.url",{"_index":4137,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":3617,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menulinkcomponent",{"_index":412,"title":{"components/MenuLinkComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["menureducer",{"_index":810,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":4180,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TranslateEffects.html":{}}}],["menus.map(menu",{"_index":4661,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["menus.push(menu",{"_index":4179,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menusopeninboth",{"_index":3589,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopeniniframes",{"_index":3590,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menusopenintabs",{"_index":3591,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["menustate",{"_index":772,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["merge",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["mergemap",{"_index":4596,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mergemap((action",{"_index":4602,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["message('the",{"_index":1485,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":1501,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1572,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1553,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":3623,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":1486,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceholder",{"_index":1601,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":297,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":786,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":858,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["methods",{"_index":305,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["min",{"_index":4918,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["minus",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["minus2hour",{"_index":2091,"title":{},"body":{"injectables/CardService.html":{}}}],["minute",{"_index":2437,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["minutes",{"_index":2887,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["minutesonly",{"_index":4923,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["miscellaneous",{"_index":4991,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmm",{"_index":4940,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["modal",{"_index":384,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["modal.component",{"_index":2160,"title":{},"body":{"modules/CardsModule.html":{},"injectables/ThirdActionService.html":{}}}],["modal.component.html",{"_index":2215,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts",{"_index":2214,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["modal.component.ts:10",{"_index":2222,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:14",{"_index":2223,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:18",{"_index":2221,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:8",{"_index":2220,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:9",{"_index":2224,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal/confirm",{"_index":2159,"title":{},"body":{"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["modalservice",{"_index":4030,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["mode",{"_index":1159,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["modern",{"_index":3833,"title":{},"body":{"components/ResizableComponent.html":{}}}],["modification",{"_index":1936,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["modify",{"_index":904,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["module",{"_index":649,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["modules",{"_index":651,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":738,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/cards/components/action/confirm",{"_index":4043,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":734,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/settings/settings.module#settingsmodule",{"_index":742,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":740,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/utilities/utilities.module",{"_index":707,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":2149,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":1411,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0",{"_index":4370,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().hours(0).minutes(0).second(0).millisecond(0).add(1",{"_index":4367,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment().minutes(0).second(0).millisecond(0).subtract(2",{"_index":4364,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment",{"_index":4340,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('month",{"_index":4350,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('week",{"_index":4345,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(currentmoment.startof('year",{"_index":4355,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(date).startof('year",{"_index":4936,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":3225,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(this.referencetime",{"_index":4529,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":4917,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":4536,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":4531,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(this._locale",{"_index":3179,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["moment.moment",{"_index":2786,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["moment.tz.setdefault(timezone",{"_index":3268,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":2807,"title":{},"body":{"components/FeedComponent.html":{}}}],["momentnow",{"_index":4502,"title":{},"body":{"classes/TimeReference.html":{}}}],["mommentojb",{"_index":4315,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[0",{"_index":4458,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[1",{"_index":4460,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[2",{"_index":4462,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[3",{"_index":4464,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[4",{"_index":4466,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[5",{"_index":4468,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mommentojb[6",{"_index":4470,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mon",{"_index":4927,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["mono.svg",{"_index":3311,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":2417,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/TimeLineComponent.html":{}}}],["more",{"_index":746,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":3644,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":3626,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":3638,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":441,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":3630,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":3629,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":3642,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":3631,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":1400,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movement",{"_index":2713,"title":{},"body":{"directives/DraggableDirective.html":{},"components/TimeLineComponent.html":{}}}],["movetocodeflowloginpage",{"_index":1339,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["movetoimplicitflowloginpage",{"_index":1343,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["mozilla",{"_index":346,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["mpl",{"_index":351,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["multi",{"_index":416,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multifiltercomponent",{"_index":415,"title":{"components/MultiFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent",{"_index":417,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:24",{"_index":4743,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:26",{"_index":4741,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":4739,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":4740,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":4755,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":4756,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":4742,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":4754,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":4753,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:38",{"_index":4744,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":4750,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:69",{"_index":4749,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:74",{"_index":4752,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:78",{"_index":4747,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:82",{"_index":4745,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:87",{"_index":4746,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:93",{"_index":4748,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:97",{"_index":4751,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":4437,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":4455,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimelinetimespans",{"_index":4450,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":4453,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimelinetimespans",{"_index":4441,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["name:string",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["navbar",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["navbar'},{'name",{"_index":419,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":3683,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":3682,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.thirdmenus.type",{"_index":3606,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["navbarcollapsed",{"_index":3687,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":132,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"index.html":{}}}],["navigate",{"_index":1467,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":2311,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":3584,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetoarchivedcard",{"_index":2312,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetocard",{"_index":2313,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":2314,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":2342,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":3074,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":3954,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":3958,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":2370,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":748,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["nbofpublishers",{"_index":4695,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["nbw",{"_index":4929,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["necessary",{"_index":1849,"title":{},"body":{"components/CardComponent.html":{}}}],["need",{"_index":264,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["needed",{"_index":244,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["needing",{"_index":4639,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["needsconfirm",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["neutraltimereference",{"_index":4556,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":4550,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{}}}],["newdate",{"_index":4476,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.add(conf[key",{"_index":4482,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.startof(value",{"_index":4480,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.subtract(conf[key",{"_index":4483,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newelapsedsofar",{"_index":2857,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["newtitle",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["next",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":4580,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":2979,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":4767,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":4765,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":4289,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.notification",{"_index":4771,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.question",{"_index":4769,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":4284,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":2980,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":2981,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":326,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["ng_validators",{"_index":2446,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ng_value_accessor",{"_index":2443,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ngafterviewinit",{"_index":1971,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ngb.model",{"_index":952,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ngb.model.ts",{"_index":2390,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:16",{"_index":2397,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:22",{"_index":2402,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:35",{"_index":2398,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:43",{"_index":2400,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:49",{"_index":2399,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbactivemodal",{"_index":2219,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":3741,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbdateparserformatter",{"_index":2391,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbdatestruct",{"_index":953,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngbmodal",{"_index":312,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["ngbmodule",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":2930,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngbtimestruct",{"_index":954,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngmodule",{"_index":669,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["ngonchanges",{"_index":2521,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":2641,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1598,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":306,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":470,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":910,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":492,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":780,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1593,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":690,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":2911,"title":{},"body":{"modules/FeedModule.html":{}}}],["nomarginrow",{"_index":998,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["none",{"_index":1773,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nopaddingrow",{"_index":1001,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["normal",{"_index":4523,"title":{},"body":{"classes/TimeReference.html":{}}}],["normalizedcurrentstatus",{"_index":4048,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["noselectioncomponent",{"_index":420,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":4582,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":2761,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["notif",{"_index":2818,"title":{},"body":{"components/FeedComponent.html":{}}}],["notification",{"_index":3004,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"injectables/NotifyService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notification(title",{"_index":3766,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notification.requestpermission(status",{"_index":3763,"title":{},"body":{"injectables/NotifyService.html":{}}}],["notify",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["notifyservice",{"_index":2058,"title":{"injectables/NotifyService.html":{}},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/NotifyService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["now",{"_index":1725,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["null",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/UserState.html":{}}}],["number",{"_index":282,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/DateTimeNgb.html":{},"classes/Detail.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/NavbarComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{}}}],["oauth",{"_index":1250,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2",{"_index":715,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["oauth2.client",{"_index":1176,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.delagate",{"_index":1180,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauth2.flow.mode",{"_index":1195,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthevent",{"_index":1135,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthmodule",{"_index":714,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthmodule.forroot",{"_index":719,"title":{},"body":{"modules/AppModule.html":{}}}],["oauthservice",{"_index":1136,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["oauthtype",{"_index":1133,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["obj",{"_index":3194,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["obj.date",{"_index":4472,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.day",{"_index":4463,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.hour",{"_index":4465,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.minute",{"_index":4467,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.month",{"_index":4459,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.second",{"_index":4469,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.startof",{"_index":4471,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.week",{"_index":4461,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["obj.year",{"_index":4457,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object",{"_index":242,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object.keys(cachedversions",{"_index":4673,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(conf).foreach(key",{"_index":4478,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(filters).foreach(key",{"_index":982,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object.keys(thirdsandversion",{"_index":4621,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(this.domains).includes(domain",{"_index":4428,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(translationreferencestoupdate).length",{"_index":4696,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(untrackedversions).length",{"_index":4692,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(versioninput",{"_index":4671,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.setprototypeof(params,ofmap.prototype",{"_index":257,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["object.setprototypeof(t",{"_index":4117,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object.values(enumeration).includes(value",{"_index":968,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object[publisher",{"_index":4153,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[publisher][version",{"_index":4154,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["observable.create(observer",{"_index":2109,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":2123,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":2114,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data",{"_index":2115,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":353,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["oc",{"_index":3830,"title":{},"body":{"components/ResizableComponent.html":{}}}],["occurred",{"_index":2119,"title":{},"body":{"injectables/CardService.html":{}}}],["of(0",{"_index":1040,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["of([]))).subscribe(d",{"_index":4425,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["of([new",{"_index":4225,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(auth",{"_index":1270,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(error",{"_index":1523,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(new",{"_index":1494,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["of(null",{"_index":1228,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["of(template",{"_index":3189,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":4114,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":1484,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":4240,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":3464,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["of(v.label",{"_index":3467,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["ofactions/archive.actions",{"_index":919,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/authentication.actions",{"_index":1124,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofactions/card.actions",{"_index":1556,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/config.actions",{"_index":601,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":2040,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1554,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/menu.actions",{"_index":2354,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/settings.actions",{"_index":1627,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":2878,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":4331,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofactions/translate.actions",{"_index":4597,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofeffects/archive.effects",{"_index":841,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/authentication.effects",{"_index":796,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":794,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":792,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":831,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":819,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":827,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":824,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":823,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":835,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":838,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/translate.effects",{"_index":850,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/user.effects",{"_index":846,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/archive",{"_index":1065,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["ofmodel/card",{"_index":2043,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":187,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofmodel/datetime",{"_index":951,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofmodel/detail",{"_index":2556,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["ofmodel/feed",{"_index":864,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":188,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":489,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{}}}],["ofmodel/page.model",{"_index":922,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/CardService.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["ofmodel/thirds.model",{"_index":325,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/time.model",{"_index":2767,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user",{"_index":2559,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{}}}],["ofmodel/user.model",{"_index":1131,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["ofselectors/archive.selectors",{"_index":921,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchivesComponent.html":{}}}],["ofselectors/authentication.selectors",{"_index":1142,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":2042,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":605,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{}}}],["ofselectors/feed.selectors",{"_index":2802,"title":{},"body":{"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":3326,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":598,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1629,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":3154,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["ofselectors/time.selectors",{"_index":3356,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofselectors/translation.selectors",{"_index":4599,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/authentication/auth",{"_index":1138,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ofservices/authentication/authentication.service",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["ofservices/card.service",{"_index":911,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":2189,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":867,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":1099,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":1126,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":606,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/notify.service",{"_index":2082,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":683,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":3871,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/third",{"_index":329,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/thirds.service",{"_index":1888,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/time.service",{"_index":955,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ofservices/user.service",{"_index":4870,"title":{},"body":{"injectables/UserEffects.html":{}}}],["ofstates/archive.state",{"_index":839,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/authentication.state",{"_index":816,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":817,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":829,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":798,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":821,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":833,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":836,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":832,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/translation.state",{"_index":851,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/user.state",{"_index":844,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/actions/archive.actions",{"_index":949,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofstore/actions/authentication.actions",{"_index":3909,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/actions/card.actions",{"_index":1814,"title":{},"body":{"components/CardComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/actions/light",{"_index":1889,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{}}}],["ofstore/actions/user.actions",{"_index":2046,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/index",{"_index":595,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["ofstore/reducers/archive.reducer",{"_index":815,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":784,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":805,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":807,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":802,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":811,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":809,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":813,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":800,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/translation.reducer",{"_index":848,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/user.reducer",{"_index":843,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/archive.selectors",{"_index":1015,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1816,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/config.selectors",{"_index":1035,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/FiltersComponent.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1813,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/state.module",{"_index":681,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":782,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":909,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(archiveactiontypes.sendarchivequery",{"_index":885,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(archiveactiontypes.updatearchivepage",{"_index":899,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":4836,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":1462,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":1473,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":1534,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1546,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadarchivedcard",{"_index":1912,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1920,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":2176,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":2197,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":1512,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":2032,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.addthirdactions",{"_index":3431,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.clearlightcardselection",{"_index":1910,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(lightcardactiontypes.delayedlightcardupdate",{"_index":3404,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":2002,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(lightcardactiontypes.updateanaction",{"_index":3413,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":3569,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.loadmenusuccess",{"_index":4654,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":3575,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":2322,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":2316,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":3895,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":2833,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":3903,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(timeactiontypes.tick",{"_index":2856,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(translateactionstypes.updatetranslation",{"_index":4601,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(translateactionstypes.updatetranslationsuccessful",{"_index":4631,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(useractionstypes.createuserapplication",{"_index":4852,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.createuserapplicationonsuccess",{"_index":4868,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationnotregistered",{"_index":4862,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationregistered",{"_index":2018,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oidc",{"_index":716,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"dependencies.html":{}}}],["ok",{"_index":1506,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/FeedFiltersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":3838,"title":{},"body":{"components/ResizableComponent.html":{}}}],["omit",{"_index":227,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/ResizableComponent.html":{}}}],["onchange",{"_index":2452,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchange(event",{"_index":2461,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchanges",{"_index":2453,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1589,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":2717,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":354,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"components/CustomLogoComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":1144,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["ongoing",{"_index":1935,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":296,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":3633,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":3640,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":3647,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":3650,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":3652,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":2700,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":2704,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":2707,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onresize",{"_index":1704,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["onsubmit",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["ontouched",{"_index":2451,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["open",{"_index":1787,"title":{},"body":{"components/CardComponent.html":{}}}],["open(confirmmodalcomponent",{"_index":4063,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["operation",{"_index":2233,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["operation.cardids",{"_index":2028,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.cards",{"_index":2025,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":795,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":1999,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:32",{"_index":2001,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:41",{"_index":2031,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:73",{"_index":2039,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:92",{"_index":2015,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":2044,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":1984,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["operation.model.ts:10",{"_index":1990,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.model.ts:21",{"_index":1992,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.type",{"_index":2022,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":2017,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":3198,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":1732,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":3200,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":3232,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["order",{"_index":238,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["otherwise",{"_index":757,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":2698,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":2675,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":1288,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["overflow",{"_index":1017,"title":{},"body":{"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["overflow:hidden",{"_index":2505,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["override",{"_index":4157,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["overview",{"_index":5016,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":4953,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":648,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MenuLinkComponent.html":{}}}],["padnumber(date.day",{"_index":2428,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(date.month",{"_index":2426,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.hour",{"_index":2432,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.minute",{"_index":2434,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(value",{"_index":2403,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["page",{"_index":127,"title":{"classes/Page.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/HandleUnexpectedError.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"injectables/MenuEffects.html":{},"classes/Page.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["page'},{'name",{"_index":371,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["page(1",{"_index":1067,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["page.component",{"_index":1088,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["page.component.html",{"_index":1024,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.scss",{"_index":1023,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts",{"_index":1022,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:24",{"_index":1032,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:25",{"_index":1033,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:26",{"_index":1027,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:28",{"_index":1028,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:37",{"_index":1030,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.tostring",{"_index":906,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["page/archive",{"_index":1021,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["page]=\"first",{"_index":1045,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pagechange)=\"updateresultpage($event",{"_index":1046,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pair",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["paload",{"_index":1543,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":4985,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"classes/ImplicitAuthenticationHandler.html":{},"directives/MouseWheelDirective.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":285,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":1499,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":2937,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":254,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["params.append('client_secret",{"_index":1251,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('clientid",{"_index":1242,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('code",{"_index":1237,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('grant_type",{"_index":1238,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('password",{"_index":1249,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('redirect_uri",{"_index":1243,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append('username",{"_index":1248,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params.append(key",{"_index":2131,"title":{},"body":{"injectables/CardService.html":{}}}],["params.set('page",{"_index":995,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('size",{"_index":992,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('version",{"_index":4163,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.set(key",{"_index":987,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.tostring",{"_index":1246,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["params['error",{"_index":1568,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parent",{"_index":1706,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["parent.clientheight",{"_index":1750,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(calcheightclass",{"_index":1736,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(fixedheightclass",{"_index":1723,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentform",{"_index":3660,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["parentid",{"_index":1681,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentmodule",{"_index":3873,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2395,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/StateModule.html":{}}}],["parse(value",{"_index":2401,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["parseint(`${value",{"_index":2407,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["part",{"_index":1196,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["party",{"_index":2345,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":2948,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["passes",{"_index":2958,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["passwordorcodeauthenticationhandler",{"_index":1416,"title":{"classes/PasswordOrCodeAuthenticationHandler.html":{}},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["passwordorcodeauthenticationhandler(this",{"_index":1172,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["patch",{"_index":3092,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1626,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1670,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":3094,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":3907,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":3093,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":3906,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":3930,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":3933,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":3940,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":731,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":1366,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pathmatch",{"_index":1105,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["pattern",{"_index":2722,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["payload",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["payload.access_token",{"_index":1324,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid",{"_index":1323,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.clientid.tostring",{"_index":1306,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":1304,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.expires_in",{"_index":1319,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.identifier",{"_index":1300,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload.password).pipe",{"_index":1536,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":1302,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payload:tickpayload",{"_index":2783,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{card:lightcard",{"_index":549,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["payload:{cardstimeline",{"_index":3384,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["payload:{data",{"_index":3382,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filters",{"_index":875,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":871,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{timereference:timereference",{"_index":2790,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":41,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["payloadforsuccessfulauthentication(identifier",{"_index":1383,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":1322,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["perform",{"_index":2232,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["performpost",{"_index":4065,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["periodstarttoend",{"_index":4310,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["periodstarttoend(conf",{"_index":4318,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["permission",{"_index":3752,"title":{},"body":{"injectables/NotifyService.html":{}}}],["pertinent",{"_index":2372,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pick",{"_index":228,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["picture",{"_index":2299,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["pieces",{"_index":3967,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":1263,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":1475,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(concatall",{"_index":4618,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(filter(e",{"_index":1354,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["pipe(first",{"_index":1647,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(map((actions",{"_index":3439,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["pipe(map((json",{"_index":4189,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(map(config",{"_index":1827,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(i18n",{"_index":4628,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(map(pulse",{"_index":4254,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(oftype(authenticationactiontypes.checkimplicitflowauthenticationstatus",{"_index":1520,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1644,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{}}}],["pipe(tap(menus",{"_index":3713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe/x",{"_index":2918,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["pipes",{"_index":4896,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":4916,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["placeholder",{"_index":1595,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":3280,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":3298,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":634,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":2095,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":2374,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":2679,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":2687,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":2688,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":2680,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":2692,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":2681,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":2694,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":4794,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["position:absolute",{"_index":2500,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["possible",{"_index":138,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["postaction",{"_index":4027,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postaction$.subscribe",{"_index":4062,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary",{"_index":4024,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary(lightcardid",{"_index":4039,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postdata",{"_index":1210,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.append('token",{"_index":1213,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["postdata.tostring",{"_index":1222,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["preloadallmodules",{"_index":727,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":753,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":3449,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["present",{"_index":1410,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["prev",{"_index":1744,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["previous",{"_index":2778,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["primary",{"_index":3519,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":303,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["process",{"_index":205,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["process.states[card.state",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":933,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/Third.html":{}}}],["processes?:ofmap",{"_index":200,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1765,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1938,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["promise.resolve",{"_index":1352,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["proper",{"_index":265,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["properties",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["property",{"_index":2882,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/MenuLinkComponent.html":{}}}],["protected",{"_index":1594,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["prototype",{"_index":266,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["provide",{"_index":723,"title":{},"body":{"modules/AppModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":1709,"title":{},"body":{"directives/CalcHeightDirective.html":{},"modules/StateModule.html":{}}}],["providedin",{"_index":2996,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providepayloadforsuccessfulauthenticationfromimplicitflow",{"_index":1378,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["provider",{"_index":3547,"title":{},"body":{"components/LoginComponent.html":{}}}],["providers",{"_index":654,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":3962,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"modules/UtilitiesModule.html":{}}}],["publication",{"_index":1840,"title":{},"body":{"components/CardComponent.html":{}}}],["publicationdate",{"_index":1987,"title":{},"body":{"classes/CardOperation.html":{}}}],["publish_date_from_param",{"_index":957,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publish_date_to_param",{"_index":959,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdate",{"_index":1760,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publishdatefrom",{"_index":958,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdateto",{"_index":960,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publisher",{"_index":1758,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["publisher/${card.publisher}/process/${card.processid}/states/${card.state}/actions",{"_index":1833,"title":{},"body":{"components/CardComponent.html":{}}}],["publisherversion",{"_index":1759,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":3186,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["purpose",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["push",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["pushed",{"_index":2113,"title":{},"body":{"injectables/CardService.html":{}}}],["put",{"_index":1330,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"modules/UtilitiesModule.html":{}}}],["query",{"_index":1053,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["queryarchivedcards",{"_index":880,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["queryarchivedcardspage",{"_index":881,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["querylist",{"_index":2647,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":4201,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":4123,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":2369,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":3110,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":3134,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":3184,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":4202,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":4111,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["querythirdfromcard",{"_index":4203,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythirdfromcard(card",{"_index":4108,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["question",{"_index":3002,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["r",{"_index":4152,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["radius",{"_index":1003,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["radius:5px",{"_index":1005,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["raise",{"_index":4850,"title":{},"body":{"injectables/UserEffects.html":{}}}],["rangeend",{"_index":2073,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":2075,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":679,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":1519,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":4522,"title":{},"body":{"classes/TimeReference.html":{}}}],["realm",{"_index":1575,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["realnow",{"_index":4505,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":4508,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":4519,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":4518,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":4391,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":2947,"title":{},"body":{"classes/Filter.html":{}}}],["reasons",{"_index":233,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["received",{"_index":4431,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["receivedcard",{"_index":3405,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["recipient_filter",{"_index":3026,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":2963,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":2962,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":1451,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":743,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["reduce",{"_index":4101,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus",{"_index":4178,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["ref",{"_index":4528,"title":{},"body":{"classes/TimeReference.html":{}}}],["refactor",{"_index":3174,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reference",{"_index":2773,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencedtranslation",{"_index":4648,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["referencetime",{"_index":4496,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":1852,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["refreshed",{"_index":2883,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["refreshifselectedcard",{"_index":2000,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshlanguageusedbytranslation",{"_index":4630,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["refreshthreshold",{"_index":2826,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["refreshtranslation",{"_index":3795,"title":{"classes/RefreshTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["regarding",{"_index":1409,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["registerarrayatindex",{"_index":3111,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":3112,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":3113,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":3114,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":3115,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":1232,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["registeri18n",{"_index":3116,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerjson",{"_index":3117,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":3118,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":3119,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":3120,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registeronchange",{"_index":2454,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registeronchange(fn",{"_index":2464,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched",{"_index":2455,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched(fn",{"_index":2467,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerpreservespace",{"_index":3121,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":3122,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":3123,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":3124,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":3125,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":2522,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":1509,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":144,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["rejectlogin",{"_index":72,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1571,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":150,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["related",{"_index":466,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":1307,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["reload",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":154,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["removelightcard",{"_index":510,"title":{"classes/RemoveLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["removelightcard({cards",{"_index":2027,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["removes",{"_index":147,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["rendered",{"_index":1940,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":2577,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":2941,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":2762,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1450,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":4588,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":4581,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requestpermission",{"_index":3755,"title":{},"body":{"injectables/NotifyService.html":{}}}],["required",{"_index":4360,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["requiredfield",{"_index":1602,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["rerouting",{"_index":1526,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reset",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resetform",{"_index":3527,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":1443,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resizable",{"_index":3820,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable'},{'name",{"_index":423,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["resizable.component.css",{"_index":3821,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable.component.html",{"_index":3822,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizablecomponent",{"_index":422,"title":{"components/ResizableComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resizablecomponent:10",{"_index":1977,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:12",{"_index":1976,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:27",{"_index":1974,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resize",{"_index":3826,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resized",{"_index":1970,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["resolvethirdpartylink",{"_index":3567,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":2583,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":4146,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":4150,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":1405,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["responsetype",{"_index":4141,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":161,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result[u.third",{"_index":4665,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["resultpage",{"_index":1059,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["results",{"_index":163,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":2005,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":2185,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":2172,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":2174,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":208,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":2379,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":321,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["reverse",{"_index":2412,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["right",{"_index":638,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["right:0",{"_index":1000,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["right:7px",{"_index":1002,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["root",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":364,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["rotate]=\"true",{"_index":1048,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["route",{"_index":2349,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":765,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":820,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":2310,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:27",{"_index":2315,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:34",{"_index":2333,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:49",{"_index":2330,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:71",{"_index":2340,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:85",{"_index":2321,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigated",{"_index":2352,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":2341,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":2353,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":797,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":728,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1109,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":751,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":2323,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":773,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":2318,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":2366,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":2328,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":2339,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":2336,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":2338,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":2383,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":2325,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":2357,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":2364,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":781,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":2384,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":729,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":749,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":684,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":726,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":4793,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":283,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":341,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["rules",{"_index":1449,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":1280,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["rvalue",{"_index":3210,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":915,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["safe",{"_index":2582,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":2578,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":2586,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":2584,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":2544,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":2553,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2279,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["same",{"_index":1727,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":2527,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":2811,"title":{},"body":{"components/FeedComponent.html":{}}}],["save",{"_index":1295,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["saveauthenticationinformation(payload",{"_index":1298,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["scope",{"_index":2943,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":2596,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":2599,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":2598,"title":{},"body":{"components/DetailComponent.html":{}}}],["sea",{"_index":4361,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["search",{"_index":1710,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["searchcodestring",{"_index":1417,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["searchcodestring.length",{"_index":1423,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sec",{"_index":4919,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["second",{"_index":2438,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["secondedsonly",{"_index":4933,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["secret",{"_index":1178,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["security",{"_index":2098,"title":{},"body":{"injectables/CardService.html":{}}}],["securityheader",{"_index":4586,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["see",{"_index":3829,"title":{},"body":{"components/ResizableComponent.html":{}}}],["select",{"_index":504,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":2803,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(selectarchivecount",{"_index":1038,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["select(selectarchivelightcards",{"_index":1077,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["select(selectconfigloaded",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["selectarchivecount",{"_index":1034,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["selectarchivedlightcard",{"_index":1055,"title":{"classes/SelectArchivedLightCard.html":{}},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectarchivedlightcard({selectedcardid",{"_index":2329,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectarchivefilters",{"_index":920,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["selectarchivelightcards",{"_index":1014,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{}}}],["selectarchivelightcardselection",{"_index":1075,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["selectauthenticationstate",{"_index":2558,"title":{},"body":{"components/DetailComponent.html":{}}}],["selectcardactionsappearstate",{"_index":1815,"title":{},"body":{"components/CardComponent.html":{}}}],["selectcardstateselectedid",{"_index":2041,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1552,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":2191,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":3355,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":2636,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":2644,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":518,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selected_iframe_url",{"_index":3615,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":535,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":3320,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":286,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":1140,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selecti18nuploaded",{"_index":4598,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["selectidentifier",{"_index":1634,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":507,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":421,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":2900,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":3748,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3747,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":3749,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":3750,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":2899,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":4788,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectisimplicitallyauthenticated",{"_index":1141,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["selectlightcard",{"_index":503,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":2332,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":2348,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":2335,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":3070,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":3581,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":3069,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":3580,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":3708,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":3325,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":3537,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":298,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selector:'confirm",{"_index":2225,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["selectrouterstate",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["selecttimereference",{"_index":4267,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectusernameoridentifier",{"_index":3354,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ConfirmModalComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["sendarchivequery",{"_index":887,"title":{"classes/SendArchiveQuery.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendarchivequery({params",{"_index":907,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{}}}],["sendquery",{"_index":935,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["sendtranslateaction",{"_index":4710,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["sendtranslateaction(versiontoupdate",{"_index":4697,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["sense",{"_index":1729,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sent",{"_index":2873,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["sequentially",{"_index":2966,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":2359,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":2363,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":3959,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserService.html":{}}}],["services/handlebars.service",{"_index":2155,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":2154,"title":{},"body":{"modules/CardsModule.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":661,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":721,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":1359,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["session_terminated",{"_index":1356,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.clear",{"_index":1293,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.getitem('access_token",{"_index":1431,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["sessionstorage.setitem('flow",{"_index":1346,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["set",{"_index":2659,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"components/IconComponent.html":{},"classes/InitTimeline.html":{},"components/NavbarComponent.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":4139,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":4121,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set([u.version",{"_index":4667,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["set(untrackedversions",{"_index":4694,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["setcarddatatimeline",{"_index":3381,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setcarddatatimeline({cardstimeline",{"_index":4456,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["setdisabledstate",{"_index":2456,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2469,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2489,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setheaders",{"_index":4587,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["setheightandwidth",{"_index":2268,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["sets",{"_index":754,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["setsize",{"_index":3275,"title":{},"body":{"components/IconComponent.html":{}}}],["setsprites",{"_index":3276,"title":{},"body":{"components/IconComponent.html":{}}}],["settimeout",{"_index":2592,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":3732,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":3735,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1590,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":376,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":2747,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1591,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1588,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:20",{"_index":2723,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:21",{"_index":3998,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:22",{"_index":3997,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:23",{"_index":3453,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":3452,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:26",{"_index":1607,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1605,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1606,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1623,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1625,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1624,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1622,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1604,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:35",{"_index":3999,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:39",{"_index":1618,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:46",{"_index":4001,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:49",{"_index":3455,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":4000,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:57",{"_index":3454,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:64",{"_index":3457,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:68",{"_index":3456,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:69",{"_index":1617,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:73",{"_index":3458,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:74",{"_index":1621,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:78",{"_index":1612,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:82",{"_index":1609,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:87",{"_index":1611,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:93",{"_index":1615,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:97",{"_index":1619,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1587,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":2720,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":3448,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":2746,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1603,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":741,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":418,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":3922,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.html",{"_index":3672,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":4738,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":3671,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":3674,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":3676,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:31",{"_index":3675,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:38",{"_index":3677,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":2752,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":3670,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":3924,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":3099,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1668,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":3102,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":2877,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":3089,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":3095,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":3096,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":3097,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":3098,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":3100,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":3101,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":424,"title":{"components/SettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":834,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":3943,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsmodule",{"_index":3910,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":808,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":3914,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":3862,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":774,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["settitle",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["settitle(newtitle",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["severity",{"_index":1763,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/Page.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":3001,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":3000,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.notification",{"_index":3005,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.question",{"_index":3003,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1944,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1950,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1951,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3392,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["shift",{"_index":2780,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["showgridlines",{"_index":4390,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":2552,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["size",{"_index":934,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size.tostring",{"_index":993,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["size:string",{"_index":3294,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon",{"_index":3278,"title":{},"body":{"components/IconComponent.html":{}}}],["sizeicon:string",{"_index":3292,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":3867,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1869,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["snapshot",{"_index":2373,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":704,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":2758,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["sortcomparer:comparebyseveritylttdpublishdate",{"_index":1965,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortonkey(key",{"_index":3240,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3393,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["space",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["special",{"_index":4908,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["specifically",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["speed",{"_index":4493,"title":{},"body":{"classes/TimeReference.html":{}}}],["sprites",{"_index":3274,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":3295,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../archive",{"_index":5001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../archive.actions.ts",{"_index":4994,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.actions.ts",{"_index":4995,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":5003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":4997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":4996,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":5011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":4998,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":5007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../feed.actions.ts",{"_index":5000,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":5002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":4999,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":5004,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":5005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":5006,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":4993,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.actions.ts",{"_index":5008,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":5010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":5009,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../translate.actions.ts",{"_index":5012,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user.actions.ts",{"_index":5013,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":725,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":588,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":666,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/login/login.component.ts",{"_index":3517,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":3533,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":3536,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":3535,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":3534,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":3528,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":3530,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":3531,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:60",{"_index":3532,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:64",{"_index":3529,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/custom",{"_index":2257,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts",{"_index":3269,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:18",{"_index":3283,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:19",{"_index":3284,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:20",{"_index":3282,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:22",{"_index":3288,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:23",{"_index":3289,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:24",{"_index":3281,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:31",{"_index":3285,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:36",{"_index":3286,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/icon/icon.component.ts:52",{"_index":3287,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":3338,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:26",{"_index":3347,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":3346,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":3344,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:33",{"_index":3345,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:44",{"_index":3349,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:48",{"_index":3351,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:52",{"_index":3353,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/menus/menu",{"_index":3585,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":3681,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":3703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":3704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":3698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":3697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":3700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:34",{"_index":3701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:36",{"_index":3699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:37",{"_index":3702,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":3705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:39",{"_index":3691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:44",{"_index":3693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:81",{"_index":3692,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:85",{"_index":3707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:89",{"_index":3695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:95",{"_index":3696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":1983,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1756,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:11",{"_index":1769,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:40",{"_index":2509,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/datetime",{"_index":2389,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["src/app/model/detail",{"_index":2628,"title":{},"body":{"classes/DetailContext.html":{}}}],["src/app/model/feed",{"_index":2932,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":3246,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:10",{"_index":3248,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3387,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":3562,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:8",{"_index":3565,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":3619,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:10",{"_index":3622,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/page.model.ts",{"_index":3767,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/page.model.ts:11",{"_index":3770,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/thirds.model.ts",{"_index":166,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/model/thirds.model.ts:100",{"_index":445,"title":{},"body":{"classes/ActionStatus.html":{}}}],["src/app/model/thirds.model.ts:12",{"_index":4013,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:160",{"_index":3386,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:177",{"_index":3772,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:25",{"_index":4015,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:36",{"_index":4081,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:45",{"_index":4080,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:54",{"_index":3793,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:61",{"_index":3945,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:76",{"_index":183,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":4485,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":4510,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:19",{"_index":4498,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:20",{"_index":4501,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:21",{"_index":4504,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:33",{"_index":4507,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:4",{"_index":4495,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:56",{"_index":4511,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user",{"_index":4828,"title":{},"body":{"classes/UserContext.html":{}}}],["src/app/model/user.model.ts",{"_index":4818,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:8",{"_index":4820,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":1098,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":1069,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:23",{"_index":1074,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:24",{"_index":1072,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:28",{"_index":1073,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":1086,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/archives/components/archive",{"_index":925,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":2145,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:45",{"_index":2148,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/action/action.component.ts",{"_index":295,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:21",{"_index":316,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:22",{"_index":318,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:23",{"_index":319,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:24",{"_index":317,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:25",{"_index":314,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:32",{"_index":320,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:36",{"_index":323,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/confirm",{"_index":2213,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/components/card",{"_index":1877,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1776,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:106",{"_index":1804,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:117",{"_index":1812,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:121",{"_index":1801,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:30",{"_index":1794,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:31",{"_index":1793,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":1809,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:33",{"_index":1805,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:34",{"_index":1810,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:35",{"_index":1808,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:36",{"_index":1806,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:37",{"_index":1807,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:39",{"_index":1792,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:49",{"_index":1802,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:74",{"_index":1796,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:89",{"_index":1799,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:93",{"_index":1803,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:99",{"_index":1797,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":2510,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:112",{"_index":2536,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:129",{"_index":2534,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:153",{"_index":2538,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:28",{"_index":2546,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:29",{"_index":2530,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:30",{"_index":2529,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:31",{"_index":2547,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:32",{"_index":2549,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":2545,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:34",{"_index":2528,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:44",{"_index":2542,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:56",{"_index":2541,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:61",{"_index":2540,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:77",{"_index":2539,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:93",{"_index":2551,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:97",{"_index":2543,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":2633,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:20",{"_index":2649,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:21",{"_index":2639,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:22",{"_index":2638,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:28",{"_index":2640,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:37",{"_index":2646,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:47",{"_index":2645,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:56",{"_index":2650,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:60",{"_index":2642,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":3105,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:115",{"_index":3137,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:121",{"_index":3149,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:130",{"_index":3143,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:144",{"_index":3136,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:150",{"_index":3147,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:167",{"_index":3148,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:209",{"_index":3141,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:235",{"_index":3150,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:253",{"_index":3139,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:267",{"_index":3140,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:27",{"_index":3151,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:275",{"_index":3145,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:28",{"_index":3127,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:282",{"_index":3144,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:289",{"_index":3146,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:52",{"_index":3129,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:62",{"_index":3133,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:67",{"_index":3135,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:80",{"_index":3142,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:86",{"_index":3138,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1968,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":3746,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":2670,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":2931,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":2792,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:26",{"_index":2799,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:27",{"_index":2800,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:28",{"_index":2796,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:33",{"_index":2798,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:54",{"_index":2797,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":2896,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1586,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":2719,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":3447,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":3669,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":3876,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:19",{"_index":3883,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":3884,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:21",{"_index":3882,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:22",{"_index":3880,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:26",{"_index":3881,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":3996,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":4737,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":3925,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":3915,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":3315,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:21",{"_index":3321,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:27",{"_index":3322,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:35",{"_index":3324,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":4089,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":4087,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/modules/utilities/calc",{"_index":1675,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts",{"_index":3819,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:10",{"_index":3823,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:12",{"_index":3825,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:27",{"_index":3824,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/utilities.module.ts",{"_index":4891,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["src/app/services/authentication/authentication.service.ts",{"_index":1111,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication/authentication.service.ts:408",{"_index":1116,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:411",{"_index":1117,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:412",{"_index":1119,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:413",{"_index":1118,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:414",{"_index":1120,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication/authentication.service.ts:424",{"_index":2164,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:426",{"_index":2167,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:427",{"_index":2166,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:428",{"_index":2165,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication/authentication.service.ts:444",{"_index":1582,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:446",{"_index":1583,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:448",{"_index":1581,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:450",{"_index":1585,"title":{},"body":{"interfaces/AuthenticationModeHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:453",{"_index":3773,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:459",{"_index":3775,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:468",{"_index":3776,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:473",{"_index":3774,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:477",{"_index":3777,"title":{},"body":{"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:482",{"_index":3332,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:486",{"_index":3334,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:493",{"_index":3335,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:497",{"_index":3333,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/authentication/authentication.service.ts:501",{"_index":3336,"title":{},"body":{"classes/ImplicitAuthenticationHandler.html":{}}}],["src/app/services/card.service.ts",{"_index":2047,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:24",{"_index":2078,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:25",{"_index":2076,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:26",{"_index":2077,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:27",{"_index":2059,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:41",{"_index":2070,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:45",{"_index":2066,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:58",{"_index":2071,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:62",{"_index":2064,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:88",{"_index":2074,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:94",{"_index":2068,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:98",{"_index":2061,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":2201,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:17",{"_index":2204,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:24",{"_index":2205,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":2982,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:18",{"_index":2989,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:24",{"_index":2990,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:29",{"_index":2995,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:53",{"_index":2993,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:61",{"_index":2992,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:69",{"_index":2994,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:91",{"_index":2991,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":3036,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:16",{"_index":3039,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:22",{"_index":3040,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:26",{"_index":3041,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":3249,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:19",{"_index":3254,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:20",{"_index":3252,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:30",{"_index":3253,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:46",{"_index":3256,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:50",{"_index":3258,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":4567,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:14",{"_index":4571,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:19",{"_index":4577,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:24",{"_index":4574,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/notify.service.ts",{"_index":3751,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:13",{"_index":3756,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:17",{"_index":3760,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:20",{"_index":3761,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/notify.service.ts:28",{"_index":3758,"title":{},"body":{"injectables/NotifyService.html":{}}}],["src/app/services/services.module.ts",{"_index":3865,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:50",{"_index":3866,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":3926,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:18",{"_index":3935,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":3931,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:27",{"_index":3932,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:31",{"_index":3934,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/third",{"_index":4018,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":4092,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:103",{"_index":4205,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:123",{"_index":4207,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:138",{"_index":4210,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:142",{"_index":4209,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:155",{"_index":4096,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:160",{"_index":4098,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:20",{"_index":4218,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:21",{"_index":4219,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:22",{"_index":4204,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:30",{"_index":4217,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:34",{"_index":4215,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:51",{"_index":4212,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:59",{"_index":4213,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:77",{"_index":4211,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:87",{"_index":4206,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:94",{"_index":4208,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/user.service.ts",{"_index":4871,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:12",{"_index":4875,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":4879,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":4877,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/store/actions/archive.actions.ts",{"_index":1049,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/archive.actions.ts:23",{"_index":4803,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:25",{"_index":4804,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:29",{"_index":3858,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:30",{"_index":3859,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:35",{"_index":3046,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:38",{"_index":3047,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:42",{"_index":1050,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:44",{"_index":1051,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:49",{"_index":4805,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:51",{"_index":4806,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:55",{"_index":3848,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/archive.actions.ts:57",{"_index":3849,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:100",{"_index":4736,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:117",{"_index":3815,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:120",{"_index":3816,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:134",{"_index":164,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:150",{"_index":165,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:154",{"_index":2162,"title":{},"body":{"classes/CheckImplicitFlowAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:158",{"_index":4817,"title":{},"body":{"classes/UselessAuthAction.html":{}}}],["src/app/store/actions/authentication.actions.ts:163",{"_index":3337,"title":{},"body":{"classes/ImplicitallyAuthenticated.html":{}}}],["src/app/store/actions/authentication.actions.ts:167",{"_index":4797,"title":{},"body":{"classes/UnAuthenticationFromImplicitFlow.html":{}}}],["src/app/store/actions/authentication.actions.ts:32",{"_index":3785,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:33",{"_index":3789,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:34",{"_index":3786,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:35",{"_index":3791,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:36",{"_index":3787,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:37",{"_index":3788,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:38",{"_index":3790,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:47",{"_index":3371,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:49",{"_index":3372,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:58",{"_index":2161,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:73",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:76",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:86",{"_index":4734,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:89",{"_index":4735,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":447,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:24",{"_index":2168,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:27",{"_index":3490,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:30",{"_index":3491,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:33",{"_index":3492,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:36",{"_index":3493,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:40",{"_index":3494,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:43",{"_index":3495,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:47",{"_index":3484,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:50",{"_index":3485,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:53",{"_index":3486,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:56",{"_index":3487,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:60",{"_index":3488,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:63",{"_index":3489,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:68",{"_index":3048,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:71",{"_index":3049,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:75",{"_index":448,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/card.actions.ts:77",{"_index":449,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":3050,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:18",{"_index":3496,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:21",{"_index":3497,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:24",{"_index":3498,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:29",{"_index":3499,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:32",{"_index":3500,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:38",{"_index":3051,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/config.actions.ts:40",{"_index":3052,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":860,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:18",{"_index":861,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":862,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:24",{"_index":3373,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:27",{"_index":3374,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":482,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":3061,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:22",{"_index":3507,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:29",{"_index":3508,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:32",{"_index":3509,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:37",{"_index":3510,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:40",{"_index":3511,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:45",{"_index":3062,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:48",{"_index":3063,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:59",{"_index":3852,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:62",{"_index":3853,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:70",{"_index":3856,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:73",{"_index":3857,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:81",{"_index":3854,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:84",{"_index":3855,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":3086,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:24",{"_index":3512,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:27",{"_index":3513,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:30",{"_index":3514,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:35",{"_index":3515,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:38",{"_index":3516,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:43",{"_index":3778,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":3779,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:47",{"_index":3780,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:50",{"_index":3781,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:55",{"_index":3782,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:58",{"_index":3783,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:64",{"_index":3087,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/settings.actions.ts:66",{"_index":3088,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":2757,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:18",{"_index":4241,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:19",{"_index":4242,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:25",{"_index":4245,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:26",{"_index":4246,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:27",{"_index":4247,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:36",{"_index":4807,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:37",{"_index":4808,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:46",{"_index":2763,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:47",{"_index":2764,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":3376,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:16",{"_index":3377,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":3378,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:21",{"_index":3874,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":3875,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/translate.actions.ts",{"_index":3796,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/translate.actions.ts:13",{"_index":4810,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:15",{"_index":4811,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:20",{"_index":4733,"title":{},"body":{"classes/TranslationUpToDate.html":{}}}],["src/app/store/actions/translate.actions.ts:24",{"_index":4814,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:26",{"_index":4815,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:31",{"_index":4812,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:33",{"_index":4813,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:39",{"_index":3798,"title":{},"body":{"classes/RefreshTranslation.html":{}}}],["src/app/store/actions/user.actions.ts",{"_index":2237,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/user.actions.ts:16",{"_index":4826,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:17",{"_index":4827,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:22",{"_index":4824,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:23",{"_index":4825,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:28",{"_index":2238,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:29",{"_index":2239,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:35",{"_index":2255,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:36",{"_index":2256,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:41",{"_index":2253,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:42",{"_index":2254,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:48",{"_index":3103,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/actions/user.actions.ts:49",{"_index":3104,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/effects/archive.effects.ts",{"_index":879,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:28",{"_index":883,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:35",{"_index":898,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:50",{"_index":908,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":1439,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:119",{"_index":1548,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:140",{"_index":1464,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:159",{"_index":1532,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:183",{"_index":1503,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:238",{"_index":1529,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:255",{"_index":1456,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:277",{"_index":1459,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:283",{"_index":1461,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:42",{"_index":1445,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:64",{"_index":1517,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:92",{"_index":1538,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":1998,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1905,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:27",{"_index":1909,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:35",{"_index":1924,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:48",{"_index":1919,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:61",{"_index":1911,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":2170,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:21",{"_index":2175,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:54",{"_index":2181,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:71",{"_index":2184,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":2309,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":2820,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":3397,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":3566,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:27",{"_index":3568,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:38",{"_index":3574,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:61",{"_index":3582,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":3892,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:29",{"_index":3894,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:42",{"_index":3900,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:54",{"_index":3902,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:60",{"_index":3908,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":4248,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:19",{"_index":4252,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:35",{"_index":4256,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:49",{"_index":4264,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/translate.effects.ts",{"_index":4590,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:100",{"_index":4725,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:117",{"_index":4714,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:124",{"_index":4716,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:132",{"_index":4726,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:144",{"_index":4715,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:153",{"_index":4713,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:166",{"_index":4717,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:194",{"_index":4722,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:200",{"_index":4592,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:201",{"_index":4593,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:27",{"_index":4711,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:37",{"_index":4724,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:59",{"_index":4719,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:68",{"_index":4720,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:78",{"_index":4721,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:90",{"_index":4723,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/user.effects.ts",{"_index":4831,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:23",{"_index":4835,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:38",{"_index":4846,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:59",{"_index":4866,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:74",{"_index":4861,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:99",{"_index":4869,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/index.ts",{"_index":763,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":3948,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:33",{"_index":3949,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/archive.state.ts",{"_index":1063,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":1433,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":2137,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":2209,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1928,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":3614,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":2356,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:37",{"_index":3847,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:48",{"_index":2365,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:55",{"_index":2362,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":3942,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":4554,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":4559,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/app/store/states/translation.state.ts",{"_index":4727,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["src/app/store/states/user.state.ts",{"_index":4885,"title":{},"body":{"interfaces/UserState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":4221,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:14",{"_index":4224,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:5",{"_index":4223,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":2100,"title":{},"body":{"injectables/CardService.html":{}}}],["st",{"_index":3423,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["start",{"_index":2691,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/LightCard.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdate",{"_index":1761,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":4394,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day",{"_index":4339,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.minutes(0).second(0).millisecond(0",{"_index":4341,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain7day.valueof",{"_index":4411,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj",{"_index":4369,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainj.valueof",{"_index":4395,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth",{"_index":4349,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.minutes(0).second(0).millisecond(0",{"_index":4351,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainmonth.valueof",{"_index":4418,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr",{"_index":4363,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomaintr.valueof",{"_index":4408,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek",{"_index":4344,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.minutes(0).second(0).millisecond(0",{"_index":4346,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainweek.valueof",{"_index":4416,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear",{"_index":4354,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.hour(0).minutes(0).second(0).millisecond(0",{"_index":4356,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainyear.valueof",{"_index":4422,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startof",{"_index":4313,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":4935,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":4938,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["state.actions[actionid",{"_index":2603,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":2387,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":2385,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":662,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":720,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":3794,"title":{},"body":{"classes/Process.html":{}}}],["states?:ofmap",{"_index":217,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":279,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/CardOperation.html":{},"modules/CardsModule.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/NotifyService.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":3008,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":3006,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":3014,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.notification",{"_index":3010,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.question",{"_index":3009,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":3013,"title":{},"body":{"injectables/FilterService.html":{}}}],["sticktovirtualtime",{"_index":4251,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":1279,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stillvalid",{"_index":1286,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["stitle",{"_index":628,"title":{},"body":{"components/AppComponent.html":{}}}],["stitle.subscribe(data",{"_index":631,"title":{},"body":{"components/AppComponent.html":{}}}],["stops",{"_index":2964,"title":{},"body":{"classes/Filter.html":{}}}],["store",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["store.select(buildconfigselector('security",{"_index":1165,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storeconfig",{"_index":857,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":1277,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["storedcard",{"_index":3409,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["storedevtoolsmodule",{"_index":3952,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":3961,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":789,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":3950,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":3956,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":3955,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":3957,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":100,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/NotifyService.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":3185,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":3964,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":2573,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":4143,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":292,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":299,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":1184,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subject",{"_index":344,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["submission",{"_index":2754,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":307,"title":{},"body":{"components/ActionComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{}}}],["submit(lightcardid",{"_index":4041,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["submitted",{"_index":1544,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1599,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1357,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{}}}],["subscribe(([locale,timezone",{"_index":3264,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe((maxedretries",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1891,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1829,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":3988,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(linker",{"_index":1426,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(loaded",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m",{"_index":3542,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1660,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1654,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":1166,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["subscribe(provider",{"_index":3545,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(v",{"_index":3600,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["subscribe(x",{"_index":1699,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["subscription",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1872,"title":{},"body":{"components/CardComponent.html":{}}}],["subtract",{"_index":4323,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subtracting",{"_index":1746,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["success",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":2183,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":1054,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":3802,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":1297,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["sum",{"_index":1737,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sumfixelemheights",{"_index":1739,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["summary",{"_index":1767,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super",{"_index":1979,"title":{},"body":{"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{}}}],["super(store",{"_index":2748,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":2750,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":3471,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["support",{"_index":5022,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":3828,"title":{},"body":{"components/ResizableComponent.html":{}}}],["svg",{"_index":699,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":3221,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":2912,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1386,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/LightCard.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":3211,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":277,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":913,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(([lightcards",{"_index":2007,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":1477,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":886,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":3904,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af",{"_index":2036,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth",{"_index":1259,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["switchmap((lightcard",{"_index":3436,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((versions",{"_index":4640,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["switchmap(action",{"_index":1913,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(third",{"_index":4128,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts",{"_index":4170,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":148,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["t",{"_index":3564,"title":{},"body":{"classes/Map.html":{},"classes/Page.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.i18nlabelkey",{"_index":4177,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":4173,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":4176,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":2658,"title":{},"body":{"components/DetailsComponent.html":{},"components/MenuLinkComponent.html":{}}}],["tab.active",{"_index":2657,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":4789,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":2664,"title":{},"body":{"components/DetailsComponent.html":{}}}],["taction['buttonstyle",{"_index":261,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['contentstyle",{"_index":262,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['hidden",{"_index":260,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['inputs']//todo",{"_index":263,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['label",{"_index":252,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockaction",{"_index":272,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockcard",{"_index":268,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['needsconfirm",{"_index":271,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestate",{"_index":269,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestatebeforeaction",{"_index":270,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["tag",{"_index":2843,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":3027,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":3970,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":426,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tagsfiltercomponent",{"_index":425,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":236,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["takes",{"_index":2371,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1633,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1649,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4296,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":2020,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":1013,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t",{"_index":4116,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":3192,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(this.saveauthenticationinformation",{"_index":1258,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":2832,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":2849,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["team",{"_index":4362,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tells",{"_index":1466,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":291,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":3107,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":3155,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1775,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":4010,"title":{},"body":{"classes/Third.html":{}}}],["templates?:string",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":301,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":3290,"title":{},"body":{"components/IconComponent.html":{}}}],["terminated",{"_index":1360,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["terms",{"_index":345,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["test",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["test_filter",{"_index":3029,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":274,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":427,"title":{"components/TextSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:21",{"_index":2725,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:22",{"_index":2724,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:28",{"_index":2730,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:35",{"_index":2729,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:46",{"_index":2732,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:50",{"_index":2731,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that's",{"_index":4160,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["that.time.currenttime().valueof",{"_index":3235,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["then(performpost",{"_index":4064,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["they're",{"_index":1730,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["third",{"_index":192,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["third.extractstate(this.card",{"_index":1897,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":4129,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third.prototype",{"_index":4118,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third:string,public",{"_index":4700,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdaction",{"_index":491,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["thirdactionalreadyloaded",{"_index":519,"title":{"classes/ThirdActionAlreadyLoaded.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactionalreadyupdated",{"_index":521,"title":{"classes/ThirdActionAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactioncomporentmodalreturn",{"_index":2229,"title":{},"body":{"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["thirdactioncomporentmodalreturn.cancel",{"_index":4067,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactioncomporentmodalreturn.dismiss",{"_index":4069,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactionkey",{"_index":3415,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions",{"_index":3420,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.get(thirdactionkey",{"_index":3422,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.set(thirdactionkey",{"_index":3427,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactionservice",{"_index":249,"title":{"injectables/ThirdActionService.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"index.html":{}}}],["thirdactionstatus",{"_index":3417,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactiontoupdate",{"_index":3421,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdcache",{"_index":4104,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":213,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenu('t1",{"_index":4226,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":4234,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":4175,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu[]):map",{"_index":4660,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenuentry",{"_index":210,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"components/MenuLinkComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":4228,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":4231,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":4236,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":4125,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":4214,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":3690,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":4124,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuversion).pipe",{"_index":4127,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":4216,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":4112,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":739,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":4082,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":4086,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":2525,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds+version",{"_index":4636,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds.map(third",{"_index":4622,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion",{"_index":4620,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion[third",{"_index":4624,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions",{"_index":4617,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions.foreach(u",{"_index":4664,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdservice",{"_index":3402,"title":{},"body":{"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsi18nloader",{"_index":4091,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":4193,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":4192,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1881,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":4220,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":4102,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdswiththeirversions",{"_index":4603,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirparty",{"_index":3075,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this._defaultfilters",{"_index":2997,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":3359,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":3979,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":4295,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":3984,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":3981,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":2590,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1818,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":3177,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this._modalservice",{"_index":336,"title":{},"body":{"components/ActionComponent.html":{}}}],["this._resizesubject",{"_index":1696,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.asobservable().pipe",{"_index":1697,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.next",{"_index":1705,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._selectediframeurl",{"_index":3329,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":3728,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":3712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":3361,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":3266,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":3357,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.action",{"_index":335,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actions",{"_index":1472,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":884,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":1530,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.actionsappear",{"_index":1838,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionservice.submit",{"_index":333,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionsurlpath",{"_index":1832,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionurl",{"_index":4044,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.actionurlpath}/${this.action.key",{"_index":332,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.active",{"_index":2973,"title":{},"body":{"classes/Filter.html":{}}}],["this.archiveform",{"_index":973,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.archivesurl",{"_index":2088,"title":{},"body":{"injectables/CardService.html":{}}}],["this.askforoauthaccesstoken",{"_index":1361,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":1167,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.attachaction(button",{"_index":2604,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authenticationservice.getauthenticationmode",{"_index":1428,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.initandloadauth",{"_index":1429,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.intializeauthentication",{"_index":614,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.linkauthenticationstatus",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authenticationservice.movetocodeflowloginpage",{"_index":1427,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authenticationservice.movetoimplicitflowloginpage",{"_index":1432,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler",{"_index":1169,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.initializeauthentication",{"_index":1397,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.linkauthenticationstatus(linker",{"_index":1399,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authmodehandler.move",{"_index":1401,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":1478,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":1535,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(this.authservice.extracttoken",{"_index":1474,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.clearauthenticationinformation",{"_index":1531,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["this.authservice.computeredirecturi",{"_index":1576,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1490,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.getsecurityheader",{"_index":2105,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["this.authservice.isexpirationdateover",{"_index":1488,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.loaduserdata(authinfo",{"_index":1491,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.base64",{"_index":2295,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.basesettings",{"_index":1667,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.bindactions(third",{"_index":2595,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.bright",{"_index":3309,"title":{},"body":{"components/IconComponent.html":{}}}],["this.calcheight(this.parentid",{"_index":1700,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.calcheightclass",{"_index":1702,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.callmodalandhandleresponse(modalservice",{"_index":4061,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.callmodalifnecessary(lightcardid",{"_index":4077,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.card",{"_index":1892,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1902,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1903,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion).subscribe(third",{"_index":1896,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.cardoperationsurl",{"_index":2084,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":2104,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1579,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":2086,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":3172,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.checkifreceivedstatusisdifferentfromcurrentone(action",{"_index":4055,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.clientid",{"_index":1174,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.clientsecret",{"_index":1177,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.codeprovider",{"_index":3546,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.collectionsize",{"_index":1036,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["this.computedisplayeddates(config",{"_index":1828,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":3472,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":3678,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":4520,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computeredirecturi",{"_index":1244,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.computetextvalidators",{"_index":4002,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":4385,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":2206,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom.push(this.domains[domain",{"_index":4429,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.consolidatethirdandversions(thirdsandversions",{"_index":4652,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.constructmomentobj([0",{"_index":4333,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.constructmomentobj([1",{"_index":4337,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":1257,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.createformgroup",{"_index":3978,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentactionpath",{"_index":331,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.currentpath",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":4269,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.customlogo",{"_index":3718,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.datetimeform.disable",{"_index":2490,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.enable",{"_index":2491,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.get('date').valuechanges.subscribe(val",{"_index":2495,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.setvalue(val",{"_index":2485,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valid",{"_index":2492,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valuechanges.subscribe(fn",{"_index":2487,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetodisplay",{"_index":1830,"title":{},"body":{"components/CardComponent.html":{}}}],["this.decodetoken(payload.access_token",{"_index":1318,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.default_height",{"_index":2286,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.default_width",{"_index":2288,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.delegateurl",{"_index":1179,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.delegateurl}&redirect_uri=${this.computeredirecturi",{"_index":1342,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.detail",{"_index":2568,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":2569,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":2570,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1894,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":2654,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":2656,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1898,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":2665,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.disabled",{"_index":2496,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.disableinfos",{"_index":3890,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.dispatchappstateactionfromoauth2events(e",{"_index":1375,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchauthactionfromoauthevents",{"_index":1362,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.dispatchupdatethirdaction(updatethirdaction",{"_index":4068,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.dispatchupdatethirdaction(updatethirdactionaction",{"_index":4060,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.domains",{"_index":4392,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.domsanitizationservice.bypasssecuritytrusturl(this.base64",{"_index":2308,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.dragend.emit(event",{"_index":2708,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":2701,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":2705,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":2702,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.el.nativeelement",{"_index":1715,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.elapsedsofar",{"_index":2860,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.elapsedsofar+tick.payload.elapsedsincelast",{"_index":2858,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":2600,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":2597,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":3714,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":3730,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":3733,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":1191,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.extracti18ntoupdate(versions",{"_index":4641,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.extractparams(child",{"_index":2388,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":2382,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extracttoken",{"_index":1338,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.familynameclaim",{"_index":1188,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.fetchactionmap(card.publisher",{"_index":4182,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchcardoperation(new",{"_index":2103,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchthird(thirdname",{"_index":4115,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.filterpath",{"_index":3668,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.filterstomap(value",{"_index":990,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.first",{"_index":980,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.first$.subscribe(first",{"_index":994,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.fixedheightclass",{"_index":1701,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.followclocktick",{"_index":2855,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.form",{"_index":1636,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value",{"_index":4006,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":3680,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":3477,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1648,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.format()}t${this.formattime",{"_index":2439,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["this.formbuilder.group",{"_index":3991,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":2972,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":2977,"title":{},"body":{"classes/Filter.html":{}}}],["this.getauthenticationmode",{"_index":1403,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.getcurrentguid().tostring",{"_index":3045,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["this.givennameclaim",{"_index":1185,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guid",{"_index":3042,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":1255,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":2083,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handelactionbuttontext(action.label",{"_index":2617,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":2588,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1844,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1839,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1841,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1843,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse",{"_index":1483,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":1245,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.height",{"_index":2300,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.hide",{"_index":3548,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidetags",{"_index":3034,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{}}}],["this.hidetimeline",{"_index":2806,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":2580,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.actionurl}${currentactionpath}`).pipe",{"_index":4076,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.get(`${this.archivesurl}/${id",{"_index":2128,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":2090,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":2208,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":4122,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/${process}/${state}/actions",{"_index":4188,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":4164,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":4140,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":4169,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":1262,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":3939,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.get(`${this.userurl}/users/${user",{"_index":4882,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get>(`${this.archivesurl",{"_index":2136,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":3941,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":2127,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(`${this.actionurl}${currentactionpath",{"_index":4053,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":1221,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.httpclient.put(`${this.userurl}/users/${userdata.login",{"_index":4884,"title":{},"body":{"injectables/UserService.html":{}}}],["this.iconpath",{"_index":3299,"title":{},"body":{"components/IconComponent.html":{}}}],["this.implicitconf",{"_index":1199,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.initfilters",{"_index":2998,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1637,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":2561,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":2560,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initrecipientfilter",{"_index":3020,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittagfilter",{"_index":3024,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":3022,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":3018,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.instantiateimplicitflowconfiguration",{"_index":1171,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.isauthenticated",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1652,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.issupported(window",{"_index":3762,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.isvirtualtimeundefine",{"_index":4527,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.lightcard",{"_index":1817,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.actions",{"_index":1854,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.id",{"_index":1848,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcardid",{"_index":334,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.lightcards",{"_index":1076,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":4433,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.limitsize",{"_index":2302,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["this.loaduserdata(auth",{"_index":1260,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.locales",{"_index":3885,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.loginclaim",{"_index":1181,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.loginmessage",{"_index":3543,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.max_height",{"_index":2290,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.max_width",{"_index":2291,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.maxedretries",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["this.menusopeninboth",{"_index":3608,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopeniniframes",{"_index":3604,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.menusopenintabs",{"_index":3602,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.modal.close(thirdactioncomporentmodalreturn.ok",{"_index":2227,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.cancel",{"_index":2228,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.dismiss",{"_index":2226,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.mode",{"_index":1194,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.mode.tolowercase",{"_index":1168,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.mousewheelfunc(event",{"_index":3648,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":3659,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1662,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1661,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe.complete",{"_index":1858,"title":{},"body":{"components/CardComponent.html":{}}}],["this.ngunsubscribe.next",{"_index":1857,"title":{},"body":{"components/CardComponent.html":{}}}],["this.notifyservice.createnotification(`new",{"_index":2111,"title":{},"body":{"injectables/CardService.html":{}}}],["this.notifyservice.requestpermission",{"_index":2819,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.oauthservice.configure(this.implicitconf",{"_index":1344,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events",{"_index":1353,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1374,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":1377,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":1380,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":1351,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.initimplicitflow",{"_index":1347,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.loaddiscoverydocument",{"_index":1345,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.logout",{"_index":1294,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh",{"_index":1349,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":1350,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.oauthservice.trylogin",{"_index":1329,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.onchanges",{"_index":2484,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.ontouched",{"_index":2488,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.parentform",{"_index":3667,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.pattern",{"_index":4004,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.periodstarttoend(domain7dayconf",{"_index":4343,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainmonthconf",{"_index":4353,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainweekconf",{"_index":4348,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainyearconf",{"_index":4358,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.permission",{"_index":3764,"title":{},"body":{"injectables/NotifyService.html":{}}}],["this.placeholder",{"_index":1655,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.postactionandupdateifnecessary(lightcardid",{"_index":4074,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.preparedlist",{"_index":3461,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":3482,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":3468,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.push({value",{"_index":3463,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.processes",{"_index":976,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.processes[card.process",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(context.card.publisher,context.card.publisherversion,templatename).pipe",{"_index":3182,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(card.publisher",{"_index":4109,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.querythird(thirdmenuid",{"_index":4126,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":4524,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.refreshthreshold",{"_index":2861,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.registerarrayatindex",{"_index":3164,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":3167,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":3168,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":3159,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":3158,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":3161,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerjson",{"_index":3170,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":3165,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":3169,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":3157,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":3156,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":3163,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":3162,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":3166,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":3160,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":2594,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":3475,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1547,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.resized",{"_index":3845,"title":{},"body":{"components/ResizableComponent.html":{}}}],["this.retryconfigurationloading",{"_index":2196,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":2195,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":1847,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/feed",{"_index":1479,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.router.navigate(['/login",{"_index":1463,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":2591,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":2579,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":3330,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":2662,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1078,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":3570,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetcharchivedcards(new",{"_index":890,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":2177,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":4257,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":3896,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":2019,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.isauthmodecodeorimplicitflow",{"_index":3539,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.loadarchivedcard(action.payload.id",{"_index":1914,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1921,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.move",{"_index":3555,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":4253,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":3576,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start",{"_index":2037,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setheightandwidth",{"_index":2303,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["this.setsize",{"_index":3301,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setsprites",{"_index":3302,"title":{},"body":{"components/IconComponent.html":{}}}],["this.setting",{"_index":1642,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1645,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.settitle(data",{"_index":632,"title":{},"body":{"components/AppComponent.html":{}}}],["this.size",{"_index":978,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/IconComponent.html":{}}}],["this.size$.subscribe(size",{"_index":991,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.sizeicon",{"_index":3303,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":4534,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":3310,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":3312,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":2974,"title":{},"body":{"classes/Filter.html":{}}}],["this.store",{"_index":619,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.dispatch",{"_index":1420,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":627,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/TimeLineComponent.html":{},"injectables/UserEffects.html":{}}}],["this.store.dispatch(updatethirdaction",{"_index":4078,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.store.pipe",{"_index":1037,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.store.pipe(select(buildconfigselector('feed.timeline.domains",{"_index":4424,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(feedselectors.selectfeed",{"_index":4430,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":1424,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectisimplicitallyauthenticated)).subscribe(linker",{"_index":1430,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.first",{"_index":981,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.size",{"_index":979,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.process.list",{"_index":977,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.tags.list",{"_index":975,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1824,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.notify')).subscribe",{"_index":2817,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timefilter.followclocktick')).subscribe(x",{"_index":2888,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide')).subscribe",{"_index":2805,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":3888,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":3886,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('keycloak.realm')).subscribe(realm",{"_index":1574,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.store.select(buildconfigselector('logo.base64')).subscribe",{"_index":3717,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.height')).subscribe",{"_index":3720,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.limitsize')).subscribe",{"_index":3722,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('logo.width')).subscribe",{"_index":3721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('navbar.thirdmenus.type",{"_index":3599,"title":{},"body":{"components/MenuLinkComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":3544,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('settings.infos.disable",{"_index":3891,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('settings.tags.hide",{"_index":3035,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('title",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1656,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":3980,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":4277,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":4763,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":3262,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale')).subscribe(locale",{"_index":3171,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":3263,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":3360,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1643,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1890,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":2804,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(fetchlightcard(lightcardid",{"_index":3435,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(lightcardid)).pipe",{"_index":3419,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(receivedcard.id)).pipe",{"_index":3407,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(selectarchivelightcardselection",{"_index":1079,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["this.store.select(selectauthenticationstate).subscribe(authstate",{"_index":2562,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.store.select(selectcardactionsappearstate).subscribe(d",{"_index":1834,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":3362,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1820,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selecti18nuploaded).pipe",{"_index":4645,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.store.select(selectidentifier",{"_index":1657,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":3938,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":3327,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m",{"_index":3540,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":4268,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":3358,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.subscription",{"_index":4432,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":4484,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":3977,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":3983,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":3982,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tags",{"_index":974,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.templatecache[key",{"_index":3187,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":4113,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirdcache.set(key",{"_index":4119,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":2572,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":3190,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.askfori18njson(publisher",{"_index":4627,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.thirdservice.fetchactionmapfromlightcard(lightcard",{"_index":3438,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1895,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":4106,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time",{"_index":2435,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1845,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":4276,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":4292,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":4291,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":4294,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":4287,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":4286,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":4293,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":3364,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":4300,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":4299,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":4288,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":4283,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.predefinedformat(date",{"_index":4920,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["this.timeservice.tongbtimestamp(datestring",{"_index":988,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.timezones",{"_index":3887,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.title",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["this.titleservice.settitle(newtitle",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transformactionmaptoarray",{"_index":1853,"title":{},"body":{"components/CardComponent.html":{}}}],["this.translate.currentlang",{"_index":4609,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.getlangs",{"_index":4614,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.instant(`${this.card.publisher}.${this.card.publisherversion}.${label.key",{"_index":2626,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.translate.settranslation(locale",{"_index":4629,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.use(action.payload.language",{"_index":4632,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.use(this._locale",{"_index":3180,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":3469,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.typefilterform",{"_index":4762,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":4766,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true,{emitevent",{"_index":4773,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":4764,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true,{emitevent",{"_index":4772,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(!next.active",{"_index":4770,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(true,{emitevent",{"_index":4775,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(!next.active",{"_index":4768,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(true,{emitevent",{"_index":4774,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":2108,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":2653,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1646,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":4105,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":4147,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeorimplicitflow",{"_index":3538,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usercontext",{"_index":2563,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.userform",{"_index":3549,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":3551,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":3552,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":3554,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":3550,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.askcreateuser(user",{"_index":4854,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.askuserapplicationregistered(userpayload.identifier",{"_index":4838,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.usersurl",{"_index":3936,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.userurl",{"_index":4880,"title":{},"body":{"injectables/UserService.html":{}}}],["this.values",{"_index":3462,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.verifyexpirationdate",{"_index":1290,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["this.virtualtime",{"_index":4541,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.width",{"_index":2301,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/NavbarComponent.html":{}}}],["those",{"_index":1925,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["threshold",{"_index":2865,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["throught",{"_index":4848,"title":{},"body":{"injectables/UserEffects.html":{}}}],["throw",{"_index":1639,"title":{},"body":{"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":1123,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":1234,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(err",{"_index":4135,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":1227,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["throwerror(new",{"_index":4132,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":1208,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["thus",{"_index":149,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["tick",{"_index":2771,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick(pulse",{"_index":4255,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick='[time",{"_index":2770,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["tickpayload",{"_index":2784,"title":{"classes/TickPayload.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":4910,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["ticks1hconf",{"_index":4384,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks30minconf",{"_index":4382,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticks4hoursconf",{"_index":4378,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksconf",{"_index":4403,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksdayconf",{"_index":4379,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tickshalfmonthconf",{"_index":4380,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time",{"_index":429,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["time$|async",{"_index":3367,"title":{},"body":{"components/InfoComponent.html":{}}}],["time's",{"_index":4325,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time).formatdatetime",{"_index":972,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["time_filter",{"_index":3028,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":2791,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":2769,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":2765,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":4243,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":4809,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":837,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":428,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":4270,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeinitialstate",{"_index":4557,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":390,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":3385,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":3380,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":3379,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":3383,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":430,"title":{"components/TimeLineComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":4565,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":799,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":776,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timer",{"_index":1630,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1653,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":812,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":4260,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":2766,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":4551,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":4558,"title":{},"body":{"interfaces/TimeState.html":{}}}],["times",{"_index":1904,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/ConfirmModalComponent.html":{}}}],["timescale",{"_index":4564,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":936,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["timespan",{"_index":2781,"title":{"classes/TimeSpan.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/LightCard.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeSpan.html":{},"classes/UpdateTimeReference.html":{}}}],["timespans",{"_index":3389,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["timespeed",{"_index":4494,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":4526,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":4513,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1800,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":4499,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":775,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timestruct",{"_index":2430,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["timezone",{"_index":2768,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":3879,"title":{},"body":{"components/SettingsComponent.html":{}}}],["title",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"injectables/NotifyService.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1771,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titleservice",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["titlestyle",{"_index":1774,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":4227,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":4235,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":3740,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":2132,"title":{},"body":{"injectables/CardService.html":{},"components/TimeLineComponent.html":{}}}],["tmpmoment",{"_index":4473,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tmpmoment.date(2",{"_index":4475,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"modules/UtilitiesModule.html":{}}}],["toggle",{"_index":3995,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["togglemenu",{"_index":3688,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":3694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":3729,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleusermenu",{"_index":3689,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tointeger(dateparts[0",{"_index":2416,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[1",{"_index":2420,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[2",{"_index":2423,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(value",{"_index":2406,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["token",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["token:string",{"_index":4830,"title":{},"body":{"classes/UserContext.html":{}}}],["token_error",{"_index":1390,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["token_received",{"_index":1388,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["tokeninjector",{"_index":3863,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["total",{"_index":1747,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["totalelements",{"_index":3769,"title":{},"body":{"classes/Page.html":{}}}],["totalpages",{"_index":3771,"title":{},"body":{"classes/Page.html":{}}}],["tr",{"_index":4407,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["trace",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":2429,"title":{},"body":{"classes/DateTimeNgb.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":4899,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformactionmaptoarray",{"_index":1786,"title":{},"body":{"components/CardComponent.html":{}}}],["transformadvanced",{"_index":4905,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":4906,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":4913,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":4914,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformtotimestamp",{"_index":970,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transformtotimestamp(date",{"_index":986,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transition",{"_index":4867,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2createuserapplication",{"_index":4833,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2userapplicationregistered",{"_index":4834,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transitionalthirdwithitsversion",{"_index":4589,"title":{"classes/TransitionalThirdWithItSVersion.html":{}},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(card.publisher,card.publisherversion",{"_index":4651,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(menu.id,menu.version",{"_index":4662,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translate",{"_index":1790,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translate.config",{"_index":693,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":691,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["translate/http",{"_index":4967,"title":{},"body":{"dependencies.html":{}}}],["translateactions",{"_index":3814,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/typealiases.html":{}}}],["translateactionstypes",{"_index":3799,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translateactionstypes.refreshtranslation",{"_index":3797,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.translationuptodate",{"_index":3810,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslation",{"_index":3808,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationfailed",{"_index":3813,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationsuccessful",{"_index":3811,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateconfig",{"_index":692,"title":{},"body":{"modules/AppModule.html":{}}}],["translateeffects",{"_index":849,"title":{"injectables/TranslateEffects.html":{}},"body":{"interfaces/AppState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4638,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractthirdtoupdate(versions",{"_index":4647,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.sendtranslateaction(publisherandversion",{"_index":4643,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateloader",{"_index":4093,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":689,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":722,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1791,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateservice,private",{"_index":3261,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":766,"title":{},"body":{"interfaces/AppState.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translationinitialstate",{"_index":4730,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["translationreducer",{"_index":847,"title":{},"body":{"interfaces/AppState.html":{}}}],["translationreferencestoupdate",{"_index":4676,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[publisher",{"_index":4680,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[third",{"_index":4693,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationstate",{"_index":777,"title":{"interfaces/TranslationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TranslationState.html":{}}}],["translationuptodate",{"_index":3805,"title":{"classes/TranslationUpToDate.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transorm",{"_index":942,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["tree",{"_index":294,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":3583,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ResizableComponent.html":{},"components/TimeFilterComponent.html":{}}}],["triggered",{"_index":2344,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":2620,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":1518,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":969,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/NavbarComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["try",{"_index":74,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateTimeReference.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1640,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["trylogout",{"_index":1471,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":19,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":3553,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":75,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":4987,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":2939,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":2782,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":2789,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":3025,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":2928,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":432,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":5025,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1558,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":434,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":4757,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":967,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["typeof(event",{"_index":3832,"title":{},"body":{"components/ResizableComponent.html":{}}}],["typeof(limitsize",{"_index":3727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["types/jwt",{"_index":4970,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"dependencies.html":{}}}],["typically",{"_index":2343,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":2714,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":1266,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u.lastname",{"_index":1268,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["u00a0",{"_index":3239,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["uid",{"_index":1770,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1542,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unauthenticationfromimplicitflow",{"_index":95,"title":{"classes/UnAuthenticationFromImplicitFlow.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["unavailable",{"_index":1565,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncachedpublishers",{"_index":4674,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.foreach(publisher",{"_index":4677,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.length",{"_index":4682,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unchanged",{"_index":522,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["uncomment",{"_index":2709,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2296,"title":{},"body":{"components/CustomLogoComponent.html":{},"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/NavbarComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":2952,"title":{},"body":{"classes/Filter.html":{}}}],["undone",{"_index":2234,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["unexpected",{"_index":465,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MenuLinkComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":1164,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["unit",{"_index":4326,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["unselectedvalues",{"_index":287,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":2710,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":2051,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":2055,"title":{},"body":{"injectables/CardService.html":{}}}],["untouched",{"_index":4072,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["untrackedversions",{"_index":4689,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unused",{"_index":1927,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":644,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["updatealightcard",{"_index":514,"title":{"classes/UpdateALightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatealightcard({card",{"_index":3410,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updateanaction",{"_index":515,"title":{"classes/UpdateAnAction.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateanactionfailure",{"_index":516,"title":{"classes/UpdateAnActionFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter",{"_index":923,"title":{"classes/UpdateArchiveFilter.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter({filters",{"_index":889,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updatearchivepage",{"_index":918,"title":{"classes/UpdateArchivePage.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivepage({page",{"_index":1041,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updatearchivepage).payload.page",{"_index":903,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updateasync",{"_index":2637,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updateathirdaction",{"_index":246,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatecard",{"_index":3428,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatecardsubscriptionwithdates",{"_index":2056,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":2072,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":527,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatedsubscription",{"_index":508,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatefilteronclocktick",{"_index":2827,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updateon",{"_index":3474,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updateresultpage",{"_index":1026,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updateresultpage(currentpage",{"_index":1029,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updates",{"_index":2872,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updatestate",{"_index":179,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":509,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatethirdaction",{"_index":4028,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactionaction",{"_index":4057,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactions",{"_index":3400,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatetimereference",{"_index":2788,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":4259,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":2772,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["updatetranslateservice",{"_index":4600,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslation",{"_index":3800,"title":{"classes/UpdateTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslation({versions",{"_index":4699,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationfailed",{"_index":3803,"title":{"classes/UpdateTranslationFailed.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationfailed({error",{"_index":4610,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationsuccessful",{"_index":3801,"title":{"classes/UpdateTranslationSuccessful.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationsuccessful({language",{"_index":4608,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatevalue",{"_index":1600,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1620,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1663,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["uploadactions",{"_index":3401,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["upon",{"_index":2186,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uribase",{"_index":1364,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["uribase}${pathend",{"_index":1369,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["url",{"_index":212,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/enumerations.html":{}}}],["url.endswith('/auth/check_token",{"_index":4583,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":4585,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":4584,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":1822,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["url='url",{"_index":222,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["urlcleaner",{"_index":4103,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":1218,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["urlparts",{"_index":1821,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["urlparts[1",{"_index":1823,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["urlparts[3",{"_index":1980,"title":{},"body":{"components/CardListComponent.html":{}}}],["urlsearchparams",{"_index":1212,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["usable",{"_index":1332,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["use",{"_index":1825,"title":{},"body":{"components/CardComponent.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":724,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeorimplicitflow",{"_index":3524,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["useexisting",{"_index":2444,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["useless",{"_index":4444,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["uselessauthaction",{"_index":84,"title":{"classes/UselessAuthAction.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["user",{"_index":69,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user(userpayload.identifier",{"_index":4842,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.login",{"_index":4857,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.service",{"_index":3872,"title":{},"body":{"modules/ServicesModule.html":{}}}],["useractions",{"_index":2252,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["useractionstypes",{"_index":2045,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["useractionstypes.createuserapplication",{"_index":2240,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonfailure",{"_index":2250,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonsuccess",{"_index":2249,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.handleunexpectederror",{"_index":2251,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationnotregistered",{"_index":2248,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationregistered",{"_index":2247,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["userapplicationnotregistered",{"_index":2242,"title":{"classes/UserApplicationNotRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationnotregistered({error",{"_index":4845,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userapplicationregistered",{"_index":2241,"title":{"classes/UserApplicationRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationregistered({user",{"_index":4840,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercontext",{"_index":2515,"title":{"classes/UserContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["userdata",{"_index":4841,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["userdata.login",{"_index":4883,"title":{},"body":{"injectables/UserService.html":{}}}],["userdatapayload",{"_index":4863,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userdataurl",{"_index":1151,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["usereffects",{"_index":845,"title":{"injectables/UserEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/UserEffects.html":{}}}],["userform",{"_index":3525,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":3927,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userinitialstate",{"_index":4887,"title":{},"body":{"interfaces/UserState.html":{}}}],["username",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["username$|async",{"_index":3365,"title":{},"body":{"components/InfoComponent.html":{}}}],["userpayload",{"_index":4837,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.firstname",{"_index":4843,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.lastname",{"_index":4844,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userreducer",{"_index":842,"title":{},"body":{"interfaces/AppState.html":{}}}],["userservice",{"_index":3864,"title":{"injectables/UserService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["userstate",{"_index":778,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/UserState.html":{}}}],["usersurl",{"_index":3928,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userurl",{"_index":4872,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1540,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{},"miscellaneous/enumerations.html":{}}}],["utc",{"_index":1412,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["utilities/utilities.module",{"_index":2156,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["utilitiesmodule",{"_index":663,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["v",{"_index":348,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/CustomLogoComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["v.label",{"_index":3465,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label.parameters",{"_index":3470,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label|async",{"_index":3483,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.value",{"_index":3466,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v1",{"_index":3197,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":3199,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2478,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":4451,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publishdate",{"_index":4454,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisher",{"_index":4447,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisherversion",{"_index":4448,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":4446,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":4452,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans",{"_index":4438,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.foreach(d",{"_index":4440,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.length",{"_index":4439,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.title",{"_index":4449,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":1203,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/ListSettingComponent.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["validate",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"components/DatetimeFilterComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["validate(c",{"_index":2472,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validationerrors",{"_index":2475,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validator",{"_index":2442,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validators",{"_index":2483,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":3473,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":2751,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":4005,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":3476,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":1504,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/CustomLogoComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UselessAuthAction.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace",{"_index":3237,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1669,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":3217,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.trim().split",{"_index":2411,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["value:string",{"_index":1994,"title":{},"body":{"classes/CardOperation.html":{}}}],["value[index",{"_index":3214,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":3202,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":3985,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":3460,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":3451,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["values",{"_index":284,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{}}}],["values.foreach(value",{"_index":2130,"title":{},"body":{"injectables/CardService.html":{}}}],["var",{"_index":360,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1868,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":1453,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":1281,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["verifytranslationneeded",{"_index":4633,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus",{"_index":4701,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus:observable",{"_index":4653,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version",{"_index":215,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version:'${version",{"_index":4167,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput",{"_index":4718,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["versioninput[publisher",{"_index":4679,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput[third",{"_index":4686,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versionparam",{"_index":4148,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versions",{"_index":3809,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["versions.add(u.version",{"_index":4666,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versions2update",{"_index":4678,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versiontoupdate",{"_index":4698,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["via",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["virtual",{"_index":2760,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":4491,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":745,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":322,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/CustomLogoComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/ImplicitAuthenticationHandler.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MenuLinkComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"injectables/NotifyService.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["w",{"_index":4415,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["wait",{"_index":2593,"title":{},"body":{"components/DetailComponent.html":{}}}],["want",{"_index":2304,"title":{},"body":{"components/CustomLogoComponent.html":{}}}],["warning",{"_index":2614,"title":{},"body":{"components/DetailComponent.html":{},"components/ResizableComponent.html":{}}}],["way",{"_index":4265,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["weather",{"_index":4560,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["web",{"_index":1112,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["wee",{"_index":4926,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["week",{"_index":2808,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["weeknumberonly",{"_index":4934,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["weirdly",{"_index":1851,"title":{},"body":{"components/CardComponent.html":{}}}],["went",{"_index":1900,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":3645,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":2922,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":3625,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:11",{"_index":3635,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:13",{"_index":3634,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:16",{"_index":3639,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:21",{"_index":3637,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:26",{"_index":3641,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:34",{"_index":3643,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["whether",{"_index":1934,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["width",{"_index":1862,"title":{},"body":{"components/CardComponent.html":{},"components/CustomLogoComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["width:100px",{"_index":2503,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["win",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["window",{"_index":1748,"title":{},"body":{"directives/CalcHeightDirective.html":{},"injectables/NotifyService.html":{},"components/ResizableComponent.html":{}}}],["window.dispatchevent(evt",{"_index":3844,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.dispatchevent(new",{"_index":3835,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.document.createevent('uievents",{"_index":3842,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.event",{"_index":3653,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location",{"_index":760,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["window.location.href",{"_index":1340,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["window.location.href.indexof(searchcodestring",{"_index":1419,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["window.location.href.substring(foundindex",{"_index":1422,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["window.location.pathname",{"_index":2368,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["window:resize",{"_index":1683,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["within",{"_index":759,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["withlatestfrom",{"_index":914,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":2834,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2866,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectarchivefilters",{"_index":900,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":2006,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":1476,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":2198,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":143,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/BaseSettingComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckImplicitFlowAuthenticationStatus.html":{},"classes/ImplicitallyAuthenticated.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UnAuthenticationFromImplicitFlow.html":{},"classes/UselessAuthAction.html":{}}}],["won't",{"_index":4281,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["word",{"_index":1866,"title":{},"body":{"components/CardComponent.html":{}}}],["workflow",{"_index":4851,"title":{},"body":{"injectables/UserEffects.html":{}}}],["works",{"_index":1674,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{}}}],["writevalue",{"_index":2457,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["writevalue(val",{"_index":2476,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["wrong",{"_index":1533,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/IconComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wrote",{"_index":4909,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["www",{"_index":1217,"title":{},"body":{"classes/AuthObject.html":{},"interfaces/AuthenticationModeHandler.html":{},"classes/CheckTokenResponse.html":{},"classes/ImplicitAuthenticationHandler.html":{},"classes/PasswordOrCodeAuthenticationHandler.html":{}}}],["x",{"_index":1018,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["x.getboundingclientrect().height).reduce((prev",{"_index":1742,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x.style.height",{"_index":1754,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x1",{"_index":4542,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":4544,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":4543,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":4546,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":4545,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":4898,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":2894,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":1019,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/TimeLineComponent.html":{}}}],["yea",{"_index":4928,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":2418,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["yes",{"_index":184,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/I18n.html":{},"classes/LightCard.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["yield",{"_index":1712,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["yy",{"_index":4941,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":2554,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythirdfromcard(this.card",{"_index":2587,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":4989,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":3889,"title":{},"body":{"components/SettingsComponent.html":{}}}],["zoom",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["zoomonbutton",{"_index":4388,"title":{},"body":{"components/TimeLineComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n\nTryToLogIn\nCheckAuthentication via handleLogInAttempt @method\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:73\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogOut\n\nRejectLogInAttempt\nConsume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:134\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:134\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:150\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean, key?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionComponent.html":{"url":"components/ActionComponent.html","title":"component - ActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/action.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-action\n            \n\n            \n                styleUrls\n                ./action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentActionPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionUrlPath\n                            \n                            \n                                i18nPrefix\n                            \n                            \n                                lightCardId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_modalService: NgbModal, actionService: ThirdActionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/action.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ThirdActionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         Action\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionUrlPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n                \n                    \n                        Type :         I18n\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lightCardId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentActionPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Action} from \"@ofModel/thirds.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ThirdActionService} from \"@ofServices/third-action.service\";\n\n@Component({\n    selector: 'of-action',\n    templateUrl: './action.component.html',\n    styleUrls: ['./action.component.scss']\n})\nexport class ActionComponent implements OnInit {\n\n    @Input()  action: Action;\n    @Input()  i18nPrefix: I18n;\n    @Input()  lightCardId: string;\n    @Input()  actionUrlPath: string;\n    private currentActionPath: string;\n    /* istanbul ignore next */\n    constructor(\n        private _modalService: NgbModal\n        , private actionService: ThirdActionService) {\n    }\n\n    ngOnInit(): void {\n        this.currentActionPath = `${this.actionUrlPath}/${this.action.key}`;\n    }\n\n    submit() {\n        this.actionService.submit(\n            this.lightCardId\n            , this.currentActionPath\n            , this.action\n            , this._modalService);\n    }\n}\n\n    \n\n    \n        {{i18nPrefix + action.label.key}}\n\n    \n\n    \n                \n                    ./action.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{i18nPrefix + action.label.key}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionStatus.html":{"url":"classes/ActionStatus.html","title":"class - ActionStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, needsConfirm: boolean, lockAction: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:100\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddActionsAppear.html":{"url":"classes/AddActionsAppear.html","title":"class - AddActionsAppear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddActionsAppear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.AddActionsAppear\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:75\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddThirdActions.html":{"url":"classes/AddThirdActions.html","title":"class - AddThirdActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddThirdActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddThirdActions\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:121\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService, titleService: Title, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:30\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTitle(newTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Title} from '@angular/platform-browser';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {buildConfigSelector, selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    readonly title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,\n                private i18nService: I18nService,\n                private titleService: Title\n        , private authenticationService: AuthenticationService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`);\n        this.authenticationService.intializeAuthentication();\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.authenticationService.linkAuthenticationStatus(\n            (isAuthenticated: boolean) => {\n                this.isAuthenticated$ = isAuthenticated;\n            });\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries => this.maxedRetries = maxedRetries));\n        this.store.dispatch(new LoadConfig());\n\n        const sTitle = this.store.select(buildConfigSelector('title', this.title));\n        sTitle.subscribe(data => {\n            this.setTitle(data);\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n        Application is loading ...\n    \n        \n        Application is not available yet, please reload later (F5)\n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n.button {margin-right: 8px;}\n\n.app-content {\n  height: 100%; //This allows to take up all the space in body, minus padding\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Application is loading ...                    Application is not available yet, please reload later (F5)        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CustomLogoComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MenuLinkComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {IconComponent} from './components/navbar/icon/icon.component';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {translateConfig} from './translate.config';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faExternalLinkAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport {InfoComponent} from './components/navbar/info/info.component';\nimport {UtilitiesModule} from './modules/utilities/utilities.module';\nimport {MenuLinkComponent} from './components/navbar/menus/menu-link/menu-link.component';\nimport {CustomLogoComponent} from './components/navbar/custom-logo/custom-logo.component';\nimport {OAuthModule} from 'angular-oauth2-oidc';\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        OAuthModule.forRoot(),\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule,\n        UtilitiesModule,\n        AppRoutingModule\n    ],\n    declarations: [AppComponent,\n        NavbarComponent,\n        LoginComponent,\n        IconComponent,\n        InfoComponent,\n        MenuLinkComponent,\n        CustomLogoComponent],\n    providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\n\nconst routes: Routes = [\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'archives',\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: './modules/settings/settings.module#SettingsModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: '/feed'}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {\n            enableTracing: false, preloadingStrategy:\n            PreloadAllModules,\n            /* sets initialNavigation to false is needed to enable authentication implicit flow\n            * otherwise HashLocationStrategy breaks it by handling '#' within `window.location`.\n            */\n            initialNavigation: false\n        })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        archive\n                                \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                                \n                                        translation\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archive\n                                    \n                                \n                                \n                                    \n                                        archive:         ArchiveState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArchiveState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation\n                                    \n                                \n                                \n                                    \n                                        translation:         TranslationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TranslationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {reducer as archiveReducer} from '@ofStore/reducers/archive.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\nimport {ArchiveState} from \"@ofStates/archive.state\";\nimport {ArchiveEffects} from \"@ofEffects/archive.effects\";\n\nimport {reducer as userReducer} from '@ofStore/reducers/user.reducer';\nimport {UserState} from \"@ofStates/user.state\";\nimport {UserEffects} from \"@ofEffects/user.effects\";\n\nimport {reducer as translationReducer} from \"@ofStore/reducers/translation.reducer\";\nimport {TranslateEffects} from \"@ofEffects/translate.effects\";\nimport {TranslationState} from \"@ofStates/translation.state\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n    archive: ArchiveState;\n    user: UserState;\n    translation: TranslationState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects,\n    ArchiveEffects,\n    UserEffects,\n    TranslateEffects\n];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer,\n    archive: archiveReducer,\n    user: userReducer,\n    translation: translationReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArchiveEffects.html":{"url":"injectables/ArchiveEffects.html","title":"injectable - ArchiveEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArchiveEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/archive.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryArchivedCards\n                            \n                            \n                                queryArchivedCardsPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/archive.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCardsPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {\n    ArchiveActionTypes,\n    ArchiveQuerySuccess,\n    HandleUnexpectedError,\n    SendArchiveQuery,\n    UpdateArchivePage\n} from '@ofActions/archive.actions';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {selectArchiveFilters} from '@ofSelectors/archive.selectors';\nimport {Page} from '@ofModel/page.model';\nimport {UpdateArchiveFilter} from '../actions/archive.actions';\n\n@Injectable()\nexport class ArchiveEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private actions$: Actions, private service: CardService) {\n    }\n\n    @Effect()\n    queryArchivedCards: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n    @Effect()\n    queryArchivedCardsPage: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveFiltersComponent.html":{"url":"components/ArchiveFiltersComponent.html","title":"component - ArchiveFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-filters\n            \n\n            \n                styleUrls\n                ./archive-filters.component.css\n            \n\n\n\n            \n                templateUrl\n                ./archive-filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archiveForm\n                            \n                            \n                                filtersToMap\n                            \n                            \n                                first$\n                            \n                            \n                                processes$\n                            \n                            \n                                size$\n                            \n                            \n                                tags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsendQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersToMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:75\n                            \n                        \n\n                \n                    \n                        Transorm the filters list to Map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable, combineLatest} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { SendArchiveQuery } from '@ofStore/actions/archive.actions';\nimport { DateTimeNgb } from '@ofModel/datetime-ngb.model';\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TimeService } from '@ofServices/time.service';\n\nexport enum FilterDateTypes {\n  PUBLISH_DATE_FROM_PARAM = 'publishDateFrom',\n  PUBLISH_DATE_TO_PARAM = 'publishDateTo',\n  ACTIVE_FROM_PARAM = 'activeFrom',\n  ACTIVE_TO_PARAM = 'activeTo'\n\n}\n\nexport const checkElement = (enumeration: typeof FilterDateTypes, value: string): boolean => {\n  let result = false;\n  if (Object.values(enumeration).includes(value)) {\n    result = true;\n  }\n  return result;\n};\n\nexport const transformToTimestamp = (date: NgbDateStruct, time: NgbTimeStruct): string => {\n  return new DateTimeNgb(date, time).formatDateTime();\n};\n\n@Component({\n  selector: 'of-archive-filters',\n  templateUrl: './archive-filters.component.html',\n  styleUrls: ['./archive-filters.component.css']\n})\nexport class ArchiveFiltersComponent implements OnInit {\n\n  tags$: Observable;\n  processes$: Observable;\n  size$: Observable;\n  first$: Observable;\n\n  archiveForm: FormGroup;\n\n  constructor(private store: Store, private timeService: TimeService) {\n    this.archiveForm = new FormGroup({\n      tags: new FormControl(''),\n      process: new FormControl(),\n      publishDateFrom: new FormControl(''),\n      publishDateTo: new FormControl(''),\n      activeFrom: new FormControl(''),\n      activeTo: new FormControl(''),\n    });\n  }\n\n\n  ngOnInit() {\n    this.tags$ = this.store.select(buildConfigSelector('archive.filters.tags.list'));\n    this.processes$ = this.store.select(buildConfigSelector('archive.filters.process.list'));\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  /**\n   * Transorm the filters list to Map\n   */\n  filtersToMap = (filters: any): Map => {\n    const params = new Map();\n    Object.keys(filters).forEach(key => {\n      const element = filters[key];\n        // if the form element is date\n      if (element) {\n        if (checkElement(FilterDateTypes, key)) {\n          const {date, time} = element;\n          if (date) {\n            const dateString = transformToTimestamp(date, time);\n            params.set(key, [this.timeService.toNgBTimestamp(dateString)]);\n          }\n        } else {\n          if (element.length) {\n            params.set(key, element);\n          }\n        }\n      }\n    });\n    return params;\n  }\n\n  sendQuery(): void {\n    const {value} = this.archiveForm;\n    const params = this.filtersToMap(value);\n    this.size$.subscribe(size => params.set('size', [size.toString()]));\n    this.first$.subscribe(first => params.set('page', [first.toString()]));\n    this.store.dispatch(new SendArchiveQuery({params}));\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n          \n            archive.search\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive-filters.component.css\n                \n                .nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  .archive-filter {\n    padding-right:7px;\n    padding-left:0;\n  }\n  .archive-radius {\n    border-radius:5px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                      archive.search                              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListComponent.html":{"url":"components/ArchiveListComponent.html","title":"component - ArchiveListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list\n            \n\n            \n                styleUrls\n                ./archive-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable, of} from 'rxjs';\nimport { AppState } from '@ofStore/index';\nimport { Store, select } from '@ngrx/store';\nimport { catchError, tap } from 'rxjs/operators';\nimport { selectArchiveLightCards } from '@ofStore/selectors/archive.selectors';\n\n@Component({\n  selector: 'of-archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.scss']\n})\nexport class ArchiveListComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n      \n        \n      \n    \n    \n\n\n\n    \n\n    \n                \n                    ./archive-list.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListPageComponent.html":{"url":"components/ArchiveListPageComponent.html","title":"component - ArchiveListPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list-page\n            \n\n            \n                styleUrls\n                ./archive-list-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionSize$\n                            \n                            \n                                first$\n                            \n                            \n                                size$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateResultPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateResultPage\n                        \n                        \n                    \n                \n            \n            \n                \nupdateResultPage(currentPage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionSize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {UpdateArchivePage} from '@ofActions/archive.actions';\nimport {Store, select} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport { selectArchiveCount } from '@ofStore/selectors/archive.selectors';\nimport { tap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-archive-list-page',\n  templateUrl: './archive-list-page.component.html',\n  styleUrls: ['./archive-list-page.component.scss']\n})\nexport class ArchiveListPageComponent implements OnInit {\n\n  collectionSize$: Observable;\n  first$: Observable;\n  size$: Observable;\n  constructor(private store: Store) {}\n  ngOnInit(): void {\n    this.collectionSize$ = this.store.pipe(\n      select(selectArchiveCount),\n      catchError(err => of(0))\n    );\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  updateResultPage(currentPage): void {\n    this.store.dispatch(new UpdateArchivePage({page: currentPage - 1}));\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n (size$ | async)\"\n  [collectionSize]=\"collectionSize$ | async\"\n  [page]=\"first$ | async\"\n  (pageChange)=\"updateResultPage($event)\"\n  [maxSize]=\"3\"\n  [rotate]=\"true\">\n\n\n    \n\n    \n                \n                    ./archive-list-page.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' (size$ | async)\"  [collectionSize]=\"collectionSize$ | async\"  [page]=\"first$ | async\"  (pageChange)=\"updateResultPage($event)\"  [maxSize]=\"3\"  [rotate]=\"true\">'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArchiveQuerySuccess.html":{"url":"classes/ArchiveQuerySuccess.html","title":"class - ArchiveQuerySuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArchiveQuerySuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.ArchiveQuerySuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArchiveState.html":{"url":"interfaces/ArchiveState.html","title":"interface - ArchiveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArchiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/archive.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filters\n                                \n                                \n                                        loading\n                                \n                                \n                                        resultPage\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultPage\n                                    \n                                \n                                \n                                    \n                                        resultPage:     Page\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Page\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n// import { IArchiveFilter } from '@ofModel/archive-filter.model';\n\nexport interface ArchiveState {\n    selectedCardId: string;\n    resultPage: Page;\n    filters: Map;\n    loading: boolean;\n}\n\nexport const archiveInitialState: ArchiveState = {\n        selectedCardId: null,\n        resultPage: new Page(1, 0 , []),\n        filters: new Map(),\n        loading: false\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {select, Store} from '@ngrx/store';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {selectArchiveLightCards, selectArchiveLightCardSelection} from '@ofSelectors/archive.selectors';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  lightCards$: Observable;\n  selection$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.lightCards$ = this.store.pipe(\n        select(selectArchiveLightCards),\n        catchError(err => of([]))\n    );\n    this.selection$ = this.store.select(selectArchiveLightCardSelection);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n    \n\n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchiveFiltersComponent\n                        \n                        \n                            ArchiveListComponent\n                        \n                        \n                            ArchiveListPageComponent\n                        \n                        \n                            ArchivesComponent\n                        \n                        \n                            DatetimeFilterComponent\n                        \n                        \n                            MultiFilterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                        \n                            CardsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport { ArchiveListPageComponent } from './components/archive-list/archive-list-page/archive-list-page.component';\nimport {ArchivesComponent} from './archives.component';\nimport {ArchiveListComponent} from './components/archive-list/archive-list.component';\nimport { ArchiveFiltersComponent } from './components/archive-filters/archive-filters.component';\nimport { MultiFilterComponent } from './components/archive-filters/multi-filter/multi-filter.component';\nimport { DatetimeFilterComponent } from './components/archive-filters/datetime-filter/datetime-filter.component';\nimport {CardsModule} from '../cards/cards.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArchivesRoutingModule,\n    CardsModule,\n    TranslateModule,\n    NgbModule\n  ],\n  declarations: [\n    ArchivesComponent,\n    ArchiveListComponent,\n    ArchiveFiltersComponent,\n    MultiFilterComponent,\n    ArchiveListPageComponent,\n    DatetimeFilterComponent\n  ]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n        ]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to try to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:408\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:411\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:413\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:412\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:414\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    AcceptLogIn,\n    ImplicitallyAuthenticated, InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitallyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                if (this.mode.toLowerCase() === 'implicit') {\n                    this.authModeHandler = new ImplicitAuthenticationHandler(this, this.store);\n                    this.instantiateImplicitFlowConfiguration();\n                } else {\n                    this.authModeHandler = new PasswordOrCodeAuthenticationHandler(this, this.store);\n                }\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration() {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        await this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n            this.oauthService.tryLogin();\n        }\n        ).then(() => {\n            if (this.oauthService.hasValidAccessToken()) {\n                return Promise.resolve();\n            }\n        });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitallyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public intializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication();\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication() {\n        const searchCodeString = 'code=';\n        const foundIndex = window.location.href.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: window.location.href.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService, private store: Store) {\n    }\n\n    initializeAuthentication(): void {\n        if (this.authenticationService.getAuthenticationMode() === 'IMPLICIT') {\n\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitallyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return sessionStorage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        isImplicitlyAuthenticated\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isImplicitlyAuthenticated\n                                    \n                                \n                                \n                                    \n                                        isImplicitlyAuthenticated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n    isImplicitlyAuthenticated: boolean;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null,\n    isImplicitlyAuthenticated: false\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                CheckImplicitFlowAuthentication\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice handling request of cards\n\nistanbul ignore next \n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:140\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        this.router.navigate(['/feed']);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => new AcceptLogIn(auth))\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:183\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:64\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckImplicitFlowAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => this.router.navigate(['/feed'])),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:238\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:159\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:92\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:119\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {from, Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    CheckImplicitFlowAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '@ofServices/authentication/authentication.service';\nimport {catchError, flatMap, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {Router} from '@angular/router';\nimport {ConfigActionTypes, LoadConfigSuccess} from '@ofActions/config.actions';\nimport {selectCode} from '@ofSelectors/authentication.selectors';\nimport {Message, MessageLevel} from '@ofModel/message.model';\nimport {I18n} from '@ofModel/i18n.model';\nimport {Map} from '@ofModel/map';\nimport {CardService} from '@ofServices/card.service';\nimport {EmptyLightCards} from '@ofActions/light-card.actions';\nimport {ClearCard} from '@ofActions/card.actions';\nimport {environment} from '@env/environment';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructorCheckImplicitFlowAuthenticationStatus\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     * @param cardService - service handling request of cards\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map((loadConfigSuccess: LoadConfigSuccess) => {\n                    const flowMode = loadConfigSuccess.payload.config.security.oauth2.flow.mode;\n                    if (flowMode && flowMode === 'IMPLICIT') {\n                        return new CheckImplicitFlowAuthenticationStatus();\n                    }\n                    return new CheckAuthenticationStatus();\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogIn\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                return this.handleErrorOnTokenGeneration(errorResponse, 'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap(() => {\n                this.resetState();\n                return of(new EmptyLightCards(), new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut flow on demand\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map(() => {\n                this.router.navigate(['/login']);\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                this.authService.clearAuthenticationInformation();\n            }),\n            map(() => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(this.authService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        // no token stored or token invalid\n                        if (!payload) {\n                            if (!!code) {\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    tap(() => {\n                                        this.router.navigate(['/feed']);\n                                    }),\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse, 'code');\n                                        }\n                                    ));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!this.authService.isExpirationDateOver()) {\n                                const authInfo = this.authService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => new AcceptLogIn(auth))\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError(err => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n\n    @Effect()\n    CheckImplicitFlowAuthentication: Observable =\n        this.actions$\n            .pipe(ofType(AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus),\n                flatMap(() => from(this.authService.initAndLoadAuth()).pipe(\n                    map ( response => {\n                        return response ;\n                    }),\n                    catchError( error => {\n                        return of(error);\n                    })\n                )),\n                // due to implicit flow mode an explicit rerouting to `/feed` is needed once authenticated\n                tap ( () => this.router.navigate(['/feed'])),\n                map(() => {\n                    return new  AcceptLogIn(this.authService.providePayloadForSuccessfulAuthenticationFromImplicitFlow());\n                }));\n\n    handleErrorOnTokenGeneration(errorResponse, category: string) {\n        let message, key;\n        const params = new Map();\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        this.authService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    private resetState() {\n        this.authService.clearAuthenticationInformation();\n        this.store.select(buildConfigSelector('keycloak.realm')).subscribe(realm => {\n            if (realm) {\n                const redirect = this.authService.computeRedirectUri();\n                window.location.href = `${environment.urls.auth}/realms/${realm}/protocol/openid-connect/logout?redirect_uri=${redirect}`;\n            }\n        });\n        this.cardService.unsubscribeCardOperation();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationModeHandler.html":{"url":"interfaces/AuthenticationModeHandler.html","title":"interface - AuthenticationModeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthenticationModeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    extractToken\n                                \n                                \n                                    initializeAuthentication\n                                \n                                \n                                    linkAuthenticationStatus\n                                \n                                \n                                    move\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \nextractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:448\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:444\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:446\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:450\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    AcceptLogIn,\n    ImplicitallyAuthenticated, InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitallyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                if (this.mode.toLowerCase() === 'implicit') {\n                    this.authModeHandler = new ImplicitAuthenticationHandler(this, this.store);\n                    this.instantiateImplicitFlowConfiguration();\n                } else {\n                    this.authModeHandler = new PasswordOrCodeAuthenticationHandler(this, this.store);\n                }\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration() {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        await this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n            this.oauthService.tryLogin();\n        }\n        ).then(() => {\n            if (this.oauthService.hasValidAccessToken()) {\n                return Promise.resolve();\n            }\n        });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitallyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public intializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication();\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication() {\n        const searchCodeString = 'code=';\n        const foundIndex = window.location.href.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: window.location.href.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService, private store: Store) {\n    }\n\n    initializeAuthentication(): void {\n        if (this.authenticationService.getAuthenticationMode() === 'IMPLICIT') {\n\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitallyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return sessionStorage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html'\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceholder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CalcHeightDirective.html":{"url":"directives/CalcHeightDirective.html","title":"directive - CalcHeightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CalcHeightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/utilities/calc-height.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [calcHeightDirective]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resizeSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calcHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                calcHeightClass\n                            \n                            \n                                fixedHeightClass\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/calc-height.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        calcHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fixedHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:41\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calcHeight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixedHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    calcHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resizeSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive, ElementRef,\n    Input, HostListener, OnInit\n} from '@angular/core';\nimport {debounceTime} from \"rxjs/operators\";\nimport {Subject} from \"rxjs\";\n\n@Directive({\n    selector: '[calcHeightDirective]'\n})\nexport class CalcHeightDirective {\n\n    @Input()\n    parentId: any;\n\n    @Input()\n    fixedHeightClass: any;\n\n    @Input()\n    calcHeightClass: any;\n\n    private _resizeSubject$: Subject;\n\n    constructor(private el: ElementRef) {\n\n        this._resizeSubject$ = new Subject();\n        this._resizeSubject$.asObservable().pipe(\n            debounceTime(300),\n        ).subscribe(x => this.calcHeight(this.parentId, this.fixedHeightClass, this.calcHeightClass));\n\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        this._resizeSubject$.next();\n    }\n\n    private calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string) {\n\n        let parent : HTMLElement;\n\n        parent = document.getElementById(this.parentId);\n\n        //If no parentId was provided or search didn't yield any element, fallback is element calling the directive\n        if(!parent){\n            parent = this.el.nativeElement;\n        }\n\n        if(!parent){\n            return;\n        }\n\n        //Get elements that should be allowed to define their own height (based on content), which are then \"fixed\" for this calculation\n        const fixedElements = parent.getElementsByClassName(fixedHeightClass);\n\n        //Get elements that for which the height should be calculated\n        //For now all elements bearing the calcHeightClass will have their height updated to the same calculated value\n        //Which makes sense if they're next to one another, but another option would be to divide the available height equally\n        const calcElements = parent.getElementsByClassName(calcHeightClass);\n\n        if (!calcElements) return;\n\n        //Sum heights of fixed elements\n        const sumFixElemHeights = Array.from(fixedElements)\n            .map(x => x.getBoundingClientRect().height).reduce((prev, curr) => {\n                return prev + curr;\n            }, 0);\n\n        // Calculate available height by subtracting the heights of fixed elements from the total window height\n        let availableHeight = parent.clientHeight - sumFixElemHeights;\n\n        //console.log(\"CalcHeightDirective \"+fixedHeightClass+\" \"+parent.clientHeight+\" \"+sumFixElemHeights+\" \"+availableHeight);\n\n        // Apply height and overflow\n        Array.from(calcElements)\n            .forEach((x: HTMLElement) => x.style.height = `${availableHeight}px`\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _i18nPrefix\n                            \n                            \n                                    Private\n                                actions\n                            \n                            \n                                actionsAppear\n                            \n                            \n                                actionsUrlPath\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                            \n                                    Private\n                                ngUnsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                getActions\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                transformActionMapToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformActionMapToArray\n                        \n                        \n                    \n                \n            \n            \n                \ntransformActionMapToArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsAppear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsUrlPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:117\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TimeService} from '@ofServices/time.service';\nimport {Action} from '@ofModel/thirds.model';\nimport {Subject} from 'rxjs';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\nimport { selectCardActionsAppearState } from '@ofStore/selectors/card.selectors';\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    protected _i18nPrefix: string;\n    dateToDisplay: string;\n    actionsUrlPath: string;\n    private actions: Action[];\n    actionsAppear = false;\n\n    private ngUnsubscribe: Subject = new Subject();\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService\n    ) {\n    }\n\n    ngOnInit() {\n        const card = this.lightCard;\n        this._i18nPrefix = `${card.publisher}.${card.publisherVersion}.`;\n        this.store.select(selectCurrentUrl).subscribe(url => {\n            if (url) {\n                const urlParts = url.split('/');\n                this.currentPath = urlParts[1];\n            }\n        });\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n        // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, card)))\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe(computedDate => this.dateToDisplay = computedDate);\n\n        this.actionsUrlPath = `/publisher/${card.publisher}/process/${card.processId}/states/${card.state}/actions`;\n        // check if the current card is in the store\n        this.store.select(selectCardActionsAppearState).subscribe(d => {\n            const currentSelected = card.id;\n            if (d.includes(currentSelected)) {\n                this.actionsAppear = true;\n            }\n        });\n    }\n\n    computeDisplayedDates(config: string, lightCard: LightCard): string {\n        switch (config) {\n            case 'NONE':\n                return '';\n            case 'LTTD':\n                return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION':\n                return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START':\n                return this.handleDate(lightCard.startDate);\n            default:\n                return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp: number): string {\n        return this.time.formatDateTime(timeStamp);\n    }\n\n    public select() {\n        this.store.dispatch(new AddActionsAppear(this.lightCard.id));\n        this.router.navigate(['/' + this.currentPath, 'cards', this.lightCard.id]);\n    }\n\n    /* necessary otherwise action buttons are weirdly refresh */\n    getActions() {\n        if (!this.actions) {\n            this.actions = this.transformActionMapToArray();\n        }\n        return this.actions;\n    }\n\n    transformActionMapToArray() {\n        const actions = this.lightCard.actions;\n        if (actions) {\n            const entries = Array.from(actions.entries());\n            return entries.map(([key, action]: [string, Action]) => {\n                return {...action, key: key}\n            });\n        }\n        return [];\n    }\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix + lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix + lightCard.summary.key}}\n                \n                    \n                    \n                \n        \n    \n\n    \n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix + lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix + lightCard.summary.key}}                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                currentPath\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDetails\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport { ClearLightCardSelection } from '@ofStore/actions/light-card.actions';\nimport { Router } from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n    currentPath: any;\n\n    constructor(private store: Store,\n        private thirdsService: ThirdsService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if (card) {\n                    if (card.details) {\n                        this.details = [...card.details];\n                    } else {\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion).subscribe(third => {\n                            if (third) {\n                                const state = third.extractState(this.card);\n                                if (state != null) {\n                                    this.details.push(...state.details);\n                                }\n                            }\n                        },\n                        error => console.log(`something went wrong while trying to fetch third for ${this.card.publisher} with ${this.card.publisherVersion} version.`))\n                    ;\n                }\n            });\n            this.store.select(selectCurrentUrl).subscribe(url => {\n                if (url) {\n                    const urlParts = url.split('/');\n                    this.currentPath = urlParts[1];\n                }\n            });\n    }\n    closeDetails() {\n        this.store.dispatch(new ClearLightCardSelection());\n        this.router.navigate(['/' + this.currentPath, 'cards']);\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      &times;\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ×          '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clearCardSelection\n                            \n                            \n                                loadArchivedById\n                            \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadArchivedById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from '@ofStore/index';\nimport {CardActionTypes,\n        LoadArchivedCard, LoadArchivedCardFailure,\n        LoadArchivedCardSuccess,\n        LoadCard,\n        LoadCardFailure,\n        LoadCardSuccess,\n        ClearCard} from '@ofActions/card.actions';\nimport {Card} from '@ofModel/card.model';\nimport { ClearLightCardSelection, LightCardActionTypes } from '@ofStore/actions/light-card.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {}\n\n    @Effect()\n    loadById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    loadArchivedById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    clearCardSelection: Observable = this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: whether there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: whether there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card1.publishDate - card2.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareBySeverityLttdPublishDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n            \n                styleUrls\n                ./card-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:27\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from 'rxjs';\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.scss']\n})\nexport class CardListComponent extends ResizableComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.store.select(selectCurrentUrl).subscribe(url => {\n      if (url) {\n          const urlParts = url.split('/');\n          if (urlParts[3]) {\n              this.store.dispatch(new AddActionsAppear(urlParts[3]));\n          }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./card-list.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardOperation.html":{"url":"classes/CardOperation.html","title":"class - CardOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card-operation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CardOperation\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertTypeIntoEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, publicationDate: number, type: CardOperationType, cards?: LightCard[], cardIds?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card-operation.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicationDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CardOperationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cards\n                                                  \n                                                        \n                                                                    LightCard[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertTypeIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTypeIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/card-operation.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from './light-card.model';\n\nexport class CardOperation implements CardOperation {\n    /* istanbul ignore next */\n    constructor(\n        readonly number: number,\n        readonly publicationDate: number,\n        readonly type: CardOperationType,\n        readonly cards?: LightCard[],\n        readonly cardIds?: string[]\n    ) {\n    }\n\n    static convertTypeIntoEnum(key:string, value:string){\n        if(key === 'type'){\n            return CardOperationType[value]\n        }\n        return value;\n    }\n\n}\n\nexport enum CardOperationType {\n    ADD , UPDATE, DELETE\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:73\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LightCardActionTypes,\n    LoadLightCardsSuccess,\n    RemoveLightCard,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {CardOperationType} from \"@ofModel/card-operation.model\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                archivesUrl\n                            \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchArchivedCards\n                            \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadArchivedCard\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, notifyService: NotifyService, guidService: GuidService, timeService: TimeService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchArchivedCards\n                        \n                        \n                    \n                \n            \n            \n                \nfetchArchivedCards(filters: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadArchivedCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadArchivedCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            archivesUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {Card} from '@ofModel/card.model';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\nimport { TimeService } from '@ofServices/time.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n    readonly archivesUrl: string;\n\n\n    constructor(private httpClient: HttpClient,\n                private notifyService: NotifyService,\n                private guidService: GuidService,\n                private timeService: TimeService,\n                private authService: AuthenticationService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n        this.archivesUrl = `${environment.urls.cards}/archives`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        const minus2Hour = new Date(new Date().valueOf() - 2 * 60 * 60 * 1000);\n        const plus48Hours = new Date(minus2Hour.valueOf() + 48 * 60 * 60 * 1000);\n        // security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {\n                headers: this.authService.getSecurityHeader(),\n                heartbeatTimeout: 600000\n            }));\n    }\n\n\n    unsubscribeCardOperation() {\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    this.notifyService.createNotification(`New cards are being pushed`);\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data, CardOperation.convertTypeIntoEnum));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`);\n                };\n\n            } catch (error) {\n                console.error('an error occurred', error);\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        });\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number): Observable {\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart: rangeStart, rangeEnd: rangeEnd});\n    }\n\n    loadArchivedCard(id: string): Observable {\n        return this.httpClient.get(`${this.archivesUrl}/${id}`);\n    }\n\n    fetchArchivedCards(filters: Map): Observable> {\n        let params = new HttpParams();\n        filters.forEach((values, key) => values.forEach(value => params = params.append(key, value)));\n        // const tmp = new HttpParams().set('publisher', 'defaultPublisher').set('size', '10');\n        return this.httpClient.get>(`${this.archivesUrl}/`, {params});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionsAppear\n                                \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionsAppear\n                                    \n                                \n                                \n                                    \n                                        actionsAppear:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from '@ofModel/card.model';\n\nexport interface CardState {\n    selected: Card;\n    loading: boolean;\n    error: string;\n    actionsAppear: string[];\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null,\n    actionsAppear: []\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_imports\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nActionComponent\n\nActionComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {ActionComponent} from './components/action/action.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ConfirmModalComponent} from \"./components/action/confirm-modal/confirm-modal.component\";\n\n@NgModule({\n  declarations: [CardComponent\n      , CardDetailsComponent\n      , DetailsComponent\n      , DetailComponent\n      , ActionComponent\n      , ConfirmModalComponent],\n  imports: [\n    CommonModule,\n      TranslateModule,\n      UtilitiesModule,\n      NgbModule\n  ],\n    exports: [CardComponent\n        , CardDetailsComponent\n        , DetailsComponent\n        , DetailComponent\n        , ConfirmModalComponent\n    ],\n    providers: [HandlebarsService],\n    entryComponents: [ConfirmModalComponent]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckImplicitFlowAuthenticationStatus.html":{"url":"classes/CheckImplicitFlowAuthenticationStatus.html","title":"class - CheckImplicitFlowAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckImplicitFlowAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:154\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:424\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:428\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:427\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication/authentication.service.ts:426\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    AcceptLogIn,\n    ImplicitallyAuthenticated, InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitallyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                if (this.mode.toLowerCase() === 'implicit') {\n                    this.authModeHandler = new ImplicitAuthenticationHandler(this, this.store);\n                    this.instantiateImplicitFlowConfiguration();\n                } else {\n                    this.authModeHandler = new PasswordOrCodeAuthenticationHandler(this, this.store);\n                }\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration() {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        await this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n            this.oauthService.tryLogin();\n        }\n        ).then(() => {\n            if (this.oauthService.hasValidAccessToken()) {\n                return Promise.resolve();\n            }\n        });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitallyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public intializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication();\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication() {\n        const searchCodeString = 'code=';\n        const foundIndex = window.location.href.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: window.location.href.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService, private store: Store) {\n    }\n\n    initializeAuthentication(): void {\n        if (this.authenticationService.getAuthenticationMode() === 'IMPLICIT') {\n\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitallyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return sessionStorage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:82\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:54\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:71\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmModalComponent.html":{"url":"components/ConfirmModalComponent.html","title":"component - ConfirmModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-modal-component\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                dismiss\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Component} from \"@angular/core\";\n\n@Component({\n    selector:'confirm-modal-component',\n    templateUrl: './confirm-modal.component.html'\n})\nexport class ConfirmModalComponent {\n    constructor(public modal: NgbActiveModal) {}\n    dismiss(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.DISMISS);\n    }\n\n    ok(){\n        this.modal.close(ThirdActionComporentModalReturn.OK);\n    }\n\n    cancel(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.CANCEL);\n    }\n}\n\nexport enum ThirdActionComporentModalReturn{\n    CANCEL,OK,DISMISS\n}\n\n    \n\n    \n        \n    Action Status Changed\n    \n        &times;\n    \n\n\n    The status of the Action your are about to perform has changed\" \n    Either you send another time the action or you just update the new status.\n        This operation can not be undone.\n    \n\n\n    Save action\n    Send action anyway\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Action Status Changed            ×        The status of the Action your are about to perform has changed\"     Either you send another time the action or you just update the new status.        This operation can not be undone.        Save action    Send action anyway'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplication.html":{"url":"classes/CreateUserApplication.html","title":"class - CreateUserApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplication\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnFailure.html":{"url":"classes/CreateUserApplicationOnFailure.html","title":"class - CreateUserApplicationOnFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnSuccess.html":{"url":"classes/CreateUserApplicationOnSuccess.html","title":"class - CreateUserApplicationOnSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomLogoComponent.html":{"url":"components/CustomLogoComponent.html","title":"component - CustomLogoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomLogoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/custom-logo/custom-logo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-custom-logo\n            \n\n            \n                styleUrls\n                ./custom-logo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./custom-logo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DEFAULT_HEIGHT\n                            \n                            \n                                DEFAULT_WIDTH\n                            \n                            \n                                    Public\n                                domSanitizationService\n                            \n                            \n                                MAX_HEIGHT\n                            \n                            \n                                MAX_WIDTH\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setHeightAndWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                base64\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(domSanitizationService: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domSanitizationService\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        base64\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        limitSize\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeUrl\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setHeightAndWidth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHeightAndWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domSanitizationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DomSanitizer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_HEIGHT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MAX_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/custom-logo/custom-logo.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'of-custom-logo',\n  templateUrl: './custom-logo.component.html',\n  styleUrls: ['./custom-logo.component.css']\n})\nexport class CustomLogoComponent implements OnInit {\n\n  @Input() base64: string;\n\n  @Input() limitSize: boolean;\n  @Input() height: number;\n  @Input() width: number;\n\n  DEFAULT_HEIGHT: number;\n  DEFAULT_WIDTH: number;\n\n  MAX_HEIGHT: number;\n  MAX_WIDTH: number;\n\n  constructor(public domSanitizationService: DomSanitizer) { \n    this.DEFAULT_HEIGHT = 32;\n    this.DEFAULT_WIDTH = 150;\n  \n    this.MAX_HEIGHT = 32;\n    this.MAX_WIDTH = 200;\n  }\n\n  ngOnInit() {\n    // default value, Administrator has to change explicitly\n    if (this.base64 == undefined || this.base64 == '') {\n      console.error(\"no custom-logo base64 configured, no picture loaded\");\n    }\n    if (this.height == undefined)\n      this.height = this.DEFAULT_HEIGHT;\n    if (this.width == undefined)\n      this.width = this.DEFAULT_WIDTH;\n    if (this.limitSize == undefined)\n      this.limitSize = true;   \n\n    this.setHeightAndWidth();\n  }\n\n  private setHeightAndWidth() {\n    // in case, we want to limit the customLogo size. By default, it is limited.\n    if (this.limitSize) {\n      if (this.height > this.MAX_HEIGHT)\n        this.height = this.MAX_HEIGHT;\n      if (this.width > this.MAX_WIDTH)\n        this.width = this.MAX_WIDTH;\n    } \n  }\n\n  public getImage(): SafeUrl {\n    return this.domSanitizationService.bypassSecurityTrustUrl(this.base64);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n\n    \n                \n                    ./custom-logo.component.css\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CustomLogoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToArchivedCard\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToArchivedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:71\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {\n    ROUTER_NAVIGATED,\n    ROUTER_NAVIGATION,\n    ROUTER_REQUEST,\n    RouterNavigationAction,\n    RouterRequestAction\n} from \"@ngrx/router-store\";\nimport {filter, map, switchMap} from \"rxjs/operators\";\nimport {LoadArchivedCard, LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {SelectArchivedLightCard} from \"@ofActions/archive.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateToArchivedCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeNgb.html":{"url":"classes/DateTimeNgb.html","title":"class - DateTimeNgb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeNgb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/datetime-ngb.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgbDateParserFormatter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                formatDateTime\n                            \n                            \n                                formatTime\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date?: NgbDateStruct, time?: NgbTimeStruct)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/datetime-ngb.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    NgbTimeStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDateTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatDateTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbDateStruct\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgbDateParserFormatter, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nexport function padNumber(value: any) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\nexport function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\nexport class DateTimeNgb extends NgbDateParserFormatter {\n\n  /* istanbul ignore next */\n  constructor(readonly date?: NgbDateStruct, private time?: NgbTimeStruct) {\n    super();\n  }\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-').reverse();\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {day: toInteger(dateParts[0]), month: null, year: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n  format(): string {\n    const {date} = this;\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n\n  // a function that transform timestruct to string\n  formatTime(): string {\n    const {time} = this;\n    return time ?\n    `${isNumber(time.hour) ? padNumber(time.hour) : ''}:${isNumber(time.minute) ? padNumber(time.minute) : ''}` : '';\n  }\n\n  formatDateTime() {\n    let result = '';\n    const {date, time} = this;\n    // if date is present\n    if (date) {\n      if (!time) {\n        this.time = {hour: 0, minute: 0, second: 0};\n      }\n      result = `${this.format()}T${this.formatTime()}`;\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeFilterComponent.html":{"url":"components/DatetimeFilterComponent.html","title":"component - DatetimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    Validator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                                {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                of-datetime-filter\n            \n\n            \n                styleUrls\n                ./datetime-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./datetime-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datetimeForm\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                onChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:33\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChanges\n                        \n                        \n                    \n                \n            \n            \n                \nonChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(c: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datetimeForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {hour: 0, minute: 0}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  Validator} from '@angular/forms';\n\n@Component({\n  selector: 'of-datetime-filter',\n  templateUrl: './datetime-filter.component.html',\n  styleUrls: ['./datetime-filter.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatetimeFilterComponent),\n    multi: true\n  }, {\n   provide: NG_VALIDATORS,\n   useExisting: forwardRef(() => DatetimeFilterComponent),\n   multi: true\n }\n]\n})\nexport class DatetimeFilterComponent implements ControlValueAccessor, Validator {\n\n  disabled = true;\n  time = {hour: 0, minute: 0};\n  @Input() filterPath: string;\n  public datetimeForm: FormGroup = new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  });\n  constructor() {\n    this.onChanges();\n  }\n  /* istanbul ignore next */\n  public onTouched: () => void = () => {};\n  /* istanbul ignore next */\n  writeValue(val: any): void {\n    val && this.datetimeForm.setValue(val, { emitEvent: false });\n  }\n  /* istanbul ignore next */\n  registerOnChange(fn: any): void {\n    this.datetimeForm.valueChanges.subscribe(fn);\n  }\n  /* istanbul ignore next */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  /* istanbul ignore next */\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.datetimeForm.disable() : this.datetimeForm.enable();\n  }\n  /* istanbul ignore next */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this.datetimeForm.valid ? null : { invalidForm: {valid: false, message: 'datetimeForm fields are invalid'}};\n  }\n  /* istanbul ignore next */\n  onChanges(): void {\n    this.datetimeForm.get('date').valueChanges.subscribe(val => {\n      if (val) {\n        this.disabled = false;\n      }\n    });\n  }\n  /* istanbul ignore next */\n  onChange(event): void {\n    if (event.target.value === '') {\n      this.disabled = true;\n      this.time = {hour: 0, minute: 0};\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            archive.filters.{{filterPath}}\n            \n        \n        \n            Time\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./datetime-filter.component.css\n                \n                .nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  legend.accessibility {\n    position:absolute;\n    left:-9999px;\n    width:100px;\n    height:auto;\n    overflow:hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        archive.filters.{{filterPath}}                                        Time                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelayedLightCardUpdate.html":{"url":"classes/DelayedLightCardUpdate.html","title":"class - DelayedLightCardUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelayedLightCardUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:158\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.DelayedLightCardUpdate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                currentCard\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                            \n                                    Private\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                handelActionButtonText\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer, store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handelActionButtonText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handelActionButtonText(label: I18n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                I18n\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:93\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, SimpleChanges, OnChanges} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {HandlebarsService} from '../../services/handlebars.service';\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from '@angular/platform-browser';\nimport {Action, Third} from '@ofModel/thirds.model';\nimport {zip} from 'rxjs';\nimport {DetailContext} from '@ofModel/detail-context.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectAuthenticationState} from '@ofSelectors/authentication.selectors';\nimport {UserContext} from '@ofModel/user-context.model';\nimport {TranslateService} from '@ngx-translate/core';\nimport {I18n} from '@ofModel/i18n.model';\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit, OnChanges {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    currentCard: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n    private userContext: UserContext;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer,\n                private store: Store,\n                private translate: TranslateService ) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n        this.store.select(selectAuthenticationState).subscribe(authState => {\n            this.userContext = new UserContext(\n                authState.identifier,\n                authState.token,\n                authState.firstName,\n                authState.lastName\n            );\n        });\n    }\n    ngOnChanges(): void {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                // needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}'\n                and with local version '${safeCssUrl.toLocaleString()}'`);\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThirdFromCard(this.card),\n        this.handlebars.executeTemplate(this.detail.templateName, new DetailContext(this.card,null)))\n            .subscribe(\n                ([third, html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (const button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if (!!state && !!state.actions[actionId]) {\n                        this.attachAction(button, state.actions[actionId], actionId);\n                    }\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (const c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n\n        button.children[0].textContent = this.handelActionButtonText(action.label);\n\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n    private handelActionButtonText(label: I18n) {\n        if (label) {\n            if (this.card) {\n                console.log('card exists!');\n            } else {\n                console.log(`card doesn't exist yet`);\n            }\n            return this.translate.instant(`${this.card.publisher}.${this.card.publisherVersion}.${label.key}`, label.parameters);\n        }\n        return 'Undefined';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetailContext.html":{"url":"classes/DetailContext.html","title":"class - DetailContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetailContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/detail-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: Card, userContext: UserContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/detail-context.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                        Card\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContext\n                                                  \n                                                        \n                                                                        UserContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\nimport {UserContext} from \"@ofModel/user-context.model\";\n\nexport class DetailContext{\n    constructor(readonly card:Card, readonly userContext: UserContext){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:27\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:10\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent extends ResizableComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n        super();\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      {{i18nPrefix+detailC.detail.title.key}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.calc-height-details {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{i18nPrefix+detailC.detail.title.key}}              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:7\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:18\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:28\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:40\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, Input} from '@angular/core';\nimport {TextSettingComponent} from '../text-setting/text-setting.component';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Validators} from '@angular/forms';\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html'\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    @Input() disabled: boolean;\n    constructor(protected store: Store) {\n        super(store);\n        console.log(this.disabled);\n    }\n\n    computeTextValidators() {\n      const validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify that something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, notifyService: NotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as moment from 'moment';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store, private notifyService: NotifyService) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide')).subscribe(\n            v => this.hideTimeLine = v\n        );\n        moment.updateLocale('en', { week: {\n            dow: 6, // First day of week is Saturday\n            doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n        }});\n        this.store.select(buildConfigSelector('feed.notify')).subscribe(\n            (notif) => {\n                if (notif) {\n                    this.notifyService.requestPermission();\n                }\n            }\n        );\n    }\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elapsedSoFar\n                            \n                            \n                                    Private\n                                followClockTick\n                            \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                            \n                                    Private\n                                refreshThreshold\n                            \n                            \n                                updateFilterOnClockTick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elapsedSoFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            followClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshThreshold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterOnClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Tick, TimeActionTypes} from \"@ofActions/time.actions\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    private followClockTick = false;\n\n    //Constants used by the updateFilterOnClockTick effect if the feed.timeFilter.followClockTick property is set to true\n    private elapsedSoFar = 0;\n    /*The time filter should only be refreshed once the accumulated shift in time is 1m\n    (since the time filter component only displays the time up to minutes)*/\n    private refreshThreshold = 60000;\n\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n\n        this.store.select(buildConfigSelector('feed.timeFilter.followClockTick')).subscribe(x => this.followClockTick = x);\n\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n\n    @Effect()\n    updateFilterOnClockTick: Observable = this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/time-line/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/tick-format-pipe/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/directives/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/directives/app-draggable\";\nimport {InitChartComponent} from \"./components/time-line/init-chart/init-chart.component\";\nimport {TagsFilterComponent} from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:43\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:56\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:67\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initRecipientFilter\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRecipientFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRecipientFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const question = Severity.QUESTION;\n        const notification = Severity.NOTIFICATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.question && card.severity == question ||\n                    status.notification && card.severity == notification;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                question: true,\n                notification: true\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n    private initRecipientFilter() {\n        return new Filter(\n            (card, status) => false,\n            false,\n            {}\n        );\n    }\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        // filters.set(FilterType.RECIPIENT_FILTER, this.initRecipientFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  hideTags$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n    \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString():string{\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:106\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-5.html":{"url":"classes/HandleUnexpectedError-5.html","title":"class - HandleUnexpectedError-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-6.html":{"url":"classes/HandleUnexpectedError-6.html","title":"class - HandleUnexpectedError-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerJson\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, context: DetailContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                DetailContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\nimport {DetailContext} from \"@ofModel/detail-context.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n    private _locale: string;\n\n    constructor(private time: TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService,\n                private store: Store){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n        this.registerJson();\n        this.store.select(buildSettingsOrConfigSelector('locale')).subscribe(locale => this.changeLocale(locale))\n    }\n\n    public changeLocale(locale:string){ //TODO Refactor as common with i18n service ? Common fallback handling ?\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n    }\n\n    public executeTemplate(templateName: string, context: DetailContext):Observable {\n        return this.queryTemplate(context.card.publisher,context.card.publisherVersion,templateName).pipe(\n            map(t=>t(context)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this._locale;\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerJson() {\n        Handlebars.registerHelper('json', function (obj) {\n            return new Handlebars.SafeString(JSON.stringify(obj))\n        });\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (...args: any[]) {\n            if(args.length === 3)\n                return args[0].split(args[1]);\n            if(args.length === 4)\n                return args[0].split(args[1])[args[2]];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this._locale);\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this._locale, options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {combineLatest} from \"rxjs\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n\n    constructor(private translate: TranslateService,private store: Store) {\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = 'en';\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setSize\n                            \n                            \n                                    Private\n                                setSprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bright\n                            \n                            \n                                icon\n                            \n                            \n                                sizeIcon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/icon/icon.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bright\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeIcon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setSprites\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSprites()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/icon/icon.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/icon/icon.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() sizeIcon:string;\n  @Input() bright:string;\n\n  size:string;\n  sprites:string;\n  iconPath:string;\n\n  constructor(platformLocation: PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.setSize();\n    this.setSprites();\n  }\n\n  private setSize() {\n    switch (this.sizeIcon) {\n      case 'big':\n        this.size = '64px';\n        break;\n      case 'medium':\n        this.size = '32px';\n        break;\n      case 'small':\n        this.size = '16px';\n        break;\n      default:\n        this.size = '32px'  \n    }   \n  }\n\n  private setSprites() {\n    if (this.bright == 'dark' || this.bright == 'light') {\n      this.sprites='sprites-mono.svg'\n    } else {\n      this.bright = undefined; // wrong value set by the user\n      this.sprites='sprites.svg'\n    }\n  }\n  \n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {selectMenuStateSelectedIframeURL,} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n .fill-available {\n     height: 100%;\n     width: 100%;\n }\n .no-border {\n     border: none;\n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitAuthenticationHandler.html":{"url":"classes/ImplicitAuthenticationHandler.html","title":"class - ImplicitAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:482\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:497\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:486\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:493\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:501\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    AcceptLogIn,\n    ImplicitallyAuthenticated, InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitallyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                if (this.mode.toLowerCase() === 'implicit') {\n                    this.authModeHandler = new ImplicitAuthenticationHandler(this, this.store);\n                    this.instantiateImplicitFlowConfiguration();\n                } else {\n                    this.authModeHandler = new PasswordOrCodeAuthenticationHandler(this, this.store);\n                }\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration() {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        await this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n            this.oauthService.tryLogin();\n        }\n        ).then(() => {\n            if (this.oauthService.hasValidAccessToken()) {\n                return Promise.resolve();\n            }\n        });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitallyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public intializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication();\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication() {\n        const searchCodeString = 'code=';\n        const foundIndex = window.location.href.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: window.location.href.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService, private store: Store) {\n    }\n\n    initializeAuthentication(): void {\n        if (this.authenticationService.getAuthenticationMode() === 'IMPLICIT') {\n\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitallyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return sessionStorage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImplicitallyAuthenticated.html":{"url":"classes/ImplicitallyAuthenticated.html","title":"class - ImplicitallyAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImplicitallyAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.ImplicitallyAuthenticated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:163\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    {{userName$|async}}\n    {{description$|async}}\n    {{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                .navbar-info-block {\n  display: inline-block;\n  line-height: 90%;\n\n  > .time {\n    font-size: small;\n  }\n\n  > .user-description {\n    font-size: small;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}    {{description$|async}}    {{time$|async}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:160\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCard.html":{"url":"classes/LightCard.html","title":"class - LightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, processId?: string, lttd?: number, title?: I18n, summary?: I18n, tags?: string[], timeSpans?: TimeSpan[], process?: string, state?: string, actions?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSpans\n                                                  \n                                                        \n                                                                        TimeSpan[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", NOTIFICATION = \"NOTIFICATION\", QUESTION = \"QUESTION\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.QUESTION:\n            result = 2;\n            break;\n        case Severity.NOTIFICATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    NOTIFICATION, QUESTION\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCardAlreadyUpdated.html":{"url":"classes/LightCardAlreadyUpdated.html","title":"class - LightCardAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCardAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:162\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LightCardAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:162\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delayUpdateLightCard\n                            \n                            \n                                updateAThirdAction\n                            \n                            \n                                updateThirdActions\n                            \n                            \n                                uploadActions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delayUpdateLightCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAThirdAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateThirdActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:91\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, delay, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    AddThirdActions,\n    DelayedLightCardUpdate,\n    LightCardActionTypes,\n    LightCardAlreadyUpdated,\n    ThirdActionAlreadyLoaded,\n    ThirdActionAlreadyUpdated,\n    UpdateALightCard,\n    UpdateAnAction,\n    UpdateAnActionFailure\n} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {fetchLightCard} from \"@ofSelectors/feed.selectors\";\nimport {CardActionTypes, LoadCard} from \"@ofActions/card.actions\";\nimport {Action as ThirdAction, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateThirdActions: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        );\n\n    @Effect()\n    updateAThirdAction: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        );\n\n    @Effect()\n    uploadActions: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        );\n    @Effect()\n    delayUpdateLightCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html'\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('ListSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}                {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCard.html":{"url":"classes/LoadArchivedCard.html","title":"class - LoadArchivedCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardFailure.html":{"url":"classes/LoadArchivedCardFailure.html","title":"class - LoadArchivedCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardSuccess.html":{"url":"classes/LoadArchivedCardSuccess.html","title":"class - LoadArchivedCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:55\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeOrImplicitFlow\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeOrImplicitFlow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {OAuthService} from \"angular-oauth2-oidc\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeOrImplicitFlow: boolean;\n    loginMessage: Message;\n    codeProvider: any;\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private service: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.useCodeOrImplicitFlow = this.service.isAuthModeCodeOrImplicitFlow();\n        this.store.select(selectMessage).pipe(filter(m => m != null && m.level === MessageLevel.ERROR))\n            .subscribe(m => this.loginMessage = m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider => this.codeProvider = {name: provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void {\n        this.service.move();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:61\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink,\n    SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuLinkComponent.html":{"url":"components/MenuLinkComponent.html","title":"component - MenuLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/menus/menu-link/menu-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-menu-link\n            \n\n            \n                styleUrls\n                ./menu-link.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-link.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menusOpenInBoth\n                            \n                            \n                                menusOpenInIframes\n                            \n                            \n                                menusOpenInTabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menu\n                            \n                            \n                                menuEntry\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         ThirdMenu\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuEntry\n                    \n                \n                \n                    \n                        Type :         ThirdMenuEntry\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInBoth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInIframes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menusOpenInTabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/menus/menu-link/menu-link.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-menu-link',\n  templateUrl: './menu-link.component.html',\n  styleUrls: ['./menu-link.component.scss']\n})\nexport class MenuLinkComponent implements OnInit {\n\n  @Input() public menu: ThirdMenu;\n  @Input() public menuEntry: ThirdMenuEntry;\n  menusOpenInTabs: boolean;\n  menusOpenInIframes: boolean;\n  menusOpenInBoth: boolean;\n\n  constructor(private store: Store) {\n  }\n\n  ngOnInit() {\n    this.store.select(buildConfigSelector('navbar.thirdmenus.type', 'BOTH'))\n        .subscribe(v=> {\n          if(v == 'TAB') {\n            this.menusOpenInTabs = true;\n          } else if (v == 'IFRAME') {\n            this.menusOpenInIframes = true;\n          } else {\n            if (!(v == 'BOTH')) {\n              console.log(\"MenuLinkComponent - Property navbar.thirdmenus.type has an unexpected value: \"+v+\". Default (BOTH) will be applied.\")\n            }\n            this.menusOpenInBoth = true;\n          }\n        })\n  }\n}\n\n\n\n    \n\n    \n        \n  \n    {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  \n    {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n\n\n  \n    {{menu.id}}.{{menu.version}}.{{menuEntry.label}}\n  \n    \n  \n\n    \n\n    \n                \n                    ./menu-link.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.text-link {\n    color: inherit;\n    text-decoration: none;\n}\n\n.icon-link {\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{menu.id}}.{{menu.version}}.{{menuEntry.label}}      {{menu.id}}.{{menu.version}}.{{menuEntry.label}}      {{menu.id}}.{{menu.version}}.{{menuEntry.label}}        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:16\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:26\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:34\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiFilterComponent.html":{"url":"components/MultiFilterComponent.html","title":"component - MultiFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-filter\n            \n\n            \n                styleUrls\n                ./multi-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multi-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                            \n                                parentForm\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentForm\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { I18n } from '@ofModel/i18n.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'of-multi-filter',\n  templateUrl: './multi-filter.component.html',\n  styleUrls: ['./multi-filter.component.css']\n})\nexport class MultiFilterComponent implements OnInit {\n\n  preparedList: { value: string, label: Observable }[];\n  @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n  @Input() parentForm: FormGroup;\n\n  @Input() filterPath: string;\n  constructor(private translateService: TranslateService) {\n    this.parentForm = new   FormGroup({\n      [this.filterPath]: new FormControl()\n    });\n  }\n\n  ngOnInit() {\n    this.preparedList = [];\n    if (this.values) {\n      for (const v of this.values) {\n        if (typeof v === 'string') {\n          this.preparedList.push({value: v, label: of(v)});\n        } else if (typeof v.label === 'string') {\n          this.preparedList.push({value: v.value, label: of(v.label)});\n        } else {\n          this.preparedList.push({\n            value: v.value,\n            label: this.translateService.get(v.label.key, v.label.parameters)\n          });\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  archive.filters.{{filterPath}}\n  \n    {{v.label|async}}\n  \n\n\n    \n\n    \n                \n                    ./multi-filter.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archive.filters.{{filterPath}}      {{v.label|async}}  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html'\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                customLogo\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                height\n                            \n                            \n                                limitSize\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customLogo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limitSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n\n    customLogo: string;\n    height: Number;\n    width: Number;\n    limitSize: Boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n\n        this.store.select(buildConfigSelector('logo.base64')).subscribe(\n            data => {\n              if (data) this.customLogo = `data:image/svg+xml;base64,${data}`\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.height')).subscribe(\n            height => {\n              if (height) this.height = height;\n            }\n        );\n\n        this.store.select(buildConfigSelector('logo.width')).subscribe(\n            width => {\n              if (width) this.width = width;\n            }\n        );\n        this.store.select(buildConfigSelector('logo.limitSize')).subscribe(\n            (limitSize:boolean) => {\n                // BE CAREFUL, as a boolean it has to be test with undefined value to know if it has been set.\n              if (limitSize!=undefined && typeof(limitSize) =='boolean') this.limitSize = limitSize;\n            }\n        );\n    }\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n       \n    \n    \n      \n        \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n                href=\"javascript:void(0)\"\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n          \n        \n        \n        \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate                href=\"javascript:void(0)\"        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                                                                                                                    menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotifyService.html":{"url":"injectables/NotifyService.html","title":"injectable - NotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notify.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                permission\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNotification\n                            \n                            \n                                isSupported\n                            \n                            \n                                requestPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notify.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNotification\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNotification(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupported\n                        \n                        \n                    \n                \n            \n            \n                \nisSupported(window)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    window\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestPermission\n                        \n                        \n                    \n                \n            \n            \n                \nrequestPermission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notify.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permission\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notify.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class NotifyService {\n\n    permission: string;\n    constructor() {\n    }\n\n    isSupported(window): boolean {\n        return 'Notification' in window;\n    }\n    requestPermission(): void {\n        if (this.isSupported(window)) {\n            Notification.requestPermission(status => {\n                this.permission = status;\n            });\n        }\n    }\n\n    createNotification(title: string) {\n        if (this.isSupported(window) && this.permission === 'granted') {\n            return new Notification(title);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Page.html":{"url":"classes/Page.html","title":"class - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/page.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(totalPages: number, totalElements: number, content: T[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/page.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        totalPages\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalElements\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Page {\n    /* istanbul ignore next */\n    constructor(\n        readonly totalPages: number,\n        readonly totalElements: number,\n        readonly content: T[]\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:177\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordOrCodeAuthenticationHandler.html":{"url":"classes/PasswordOrCodeAuthenticationHandler.html","title":"class - PasswordOrCodeAuthenticationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordOrCodeAuthenticationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication/authentication.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            AuthenticationModeHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractToken\n                            \n                            \n                                initializeAuthentication\n                            \n                            \n                                linkAuthenticationStatus\n                            \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication/authentication.service.ts:453\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:473\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeAuthentication\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:459\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            linkAuthenticationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nlinkAuthenticationStatus(linker: (isAuthenticated: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:468\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linker\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            move\n                        \n                        \n                    \n                \n            \n            \n                \nmove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication/authentication.service.ts:477\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, filter, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {\n    AcceptLogIn,\n    ImplicitallyAuthenticated, InitAuthStatus,\n    PayloadForSuccessfulAuthentication,\n    UnAuthenticationFromImplicitFlow\n} from '@ofActions/authentication.actions';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {AppState} from '@ofStore/index';\nimport {select, Store} from '@ngrx/store';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport * as jwt_decode from 'jwt-decode';\nimport * as _ from 'lodash';\nimport {User} from '@ofModel/user.model';\nimport {EventType as OAuthType, JwksValidationHandler, OAuthEvent, OAuthService} from 'angular-oauth2-oidc';\nimport {implicitAuthenticationConfigFallback} from '@ofServices/authentication/auth-implicit-flow.config';\nimport {selectExpirationTime, selectIsImplicitallyAuthenticated} from '@ofSelectors/authentication.selectors';\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n    private mode: string;\n    private authModeHandler: AuthenticationModeHandler;\n    private implicitConf = implicitAuthenticationConfigFallback;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store - NGRX store\n     * @param oauthService - manage implicit flow for OAuth2\n     */\n    constructor(private httpClient: HttpClient\n        , private guidService: GuidService\n        , private store: Store\n        , private oauthService: OAuthService\n    ) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n                if (this.mode.toLowerCase() === 'implicit') {\n                    this.authModeHandler = new ImplicitAuthenticationHandler(this, this.store);\n                    this.instantiateImplicitFlowConfiguration();\n                } else {\n                    this.authModeHandler = new PasswordOrCodeAuthenticationHandler(this, this.store);\n                }\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n        this.mode = _.get(oauth2Conf, 'oauth2.flow.mode', 'PASSWORD');\n    }\n\n    // TODO push this part into ImplicitAuthenticationHandler class\n    instantiateImplicitFlowConfiguration() {\n        this.implicitConf = {...this.implicitConf, issuer: this.delegateUrl, clientId: this.clientId};\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(function (error: any) {\n                    console.error(error);\n                    return throwError(error);\n                })\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', this.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login: string, password: string): Observable {\n        if (!this.clientId || !this.clientSecret) {\n            return throwError('The authentication service is no correctly initialized');\n        }\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for access_token is an oauth parameters\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()};\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(this.saveAuthenticationInformation),\n            catchError(function (error: any) {\n                console.error(error);\n                return throwError(error);\n            }),\n            switchMap((auth) => this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth: PayloadForSuccessfulAuthentication): Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(() => of(auth))\n            );\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    public extractToken(): string {\n        const currentAuthModeHandler = this.authModeHandler;\n        return currentAuthModeHandler.extractToken();\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    isExpirationDateOver(): boolean {\n        return !this.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    clearAuthenticationInformation(): void {\n        localStorage.clear();\n        sessionStorage.clear();\n        this.oauthService.logOut();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` is used to convert the string into number\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = this.decodeToken(payload.access_token);\n        if (!!payload.expires_in) {\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        } else if (!!this.expireClaim) {\n            expirationDate = jwt[this.expireClaim];\n        } else {\n            expirationDate = 0;\n        }\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }        // await this.oauthService.tryLogin();\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    public getSecurityHeader() {\n        return {'Authorization': `Bearer ${this.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret) {\n\n        }\n        if (!this.delegateUrl) {\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${this.computeRedirectUri()}`;\n        } else {\n            window.location.href = `${this.delegateUrl}&redirect_uri=${this.computeRedirectUri()}`;\n        }\n    }\n\n    public async moveToImplicitFlowLoginPage() {\n        this.oauthService.configure(this.implicitConf);\n        await this.oauthService.loadDiscoveryDocument();\n        sessionStorage.setItem('flow', 'implicit');\n        await this.oauthService.initImplicitFlow();\n    }\n\n    public async initAndLoadAuth() {\n        this.oauthService.configure(this.implicitConf);\n        this.oauthService.setupAutomaticSilentRefresh();\n        this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n        await this.oauthService.loadDiscoveryDocument()\n            .then(() => {\n            this.oauthService.tryLogin();\n        }\n        ).then(() => {\n            if (this.oauthService.hasValidAccessToken()) {\n                return Promise.resolve();\n            }\n        });\n\n        this.oauthService.events\n            .pipe(filter(e => e.type === 'session_terminated'))\n            .subscribe(() => {\n                console.log('Your session has been terminated!');\n            });\n        this.askForOauthAccessToken();\n        this.dispatchAuthActionFromOAuthEvents();\n    }\n\n    computeRedirectUri() {\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1) ? location.pathname : '';\n        return `${uriBase}${pathEnd}`;\n    }\n\n    decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        } catch (Error) {\n            return null;\n        }\n    }\n\n    public dispatchAuthActionFromOAuthEvents() {\n        this.oauthService.events.subscribe(e => {\n            this.dispatchAppStateActionFromOAuth2Events(e);\n        });\n    }\n\n    public askForOauthAccessToken() {\n        return this.oauthService.getAccessToken();\n\n    }\n\n    public providePayloadForSuccessfulAuthenticationFromImplicitFlow(): PayloadForSuccessfulAuthentication {\n        const identityClaims = this.oauthService.getIdentityClaims();\n        const identifier = identityClaims['sub'];\n        const clientId = this.guidService.getCurrentGuid();\n        const token = this.askForOauthAccessToken();\n        const expirationDate = new Date(this.oauthService.getAccessTokenExpiration());\n        return new PayloadForSuccessfulAuthentication(identifier, clientId, token, expirationDate);\n    }\n\n    dispatchAppStateActionFromOAuth2Events(event: OAuthEvent): void {\n        const eventType: OAuthType = event.type;\n        switch (eventType) {\n            case ('token_received'): {\n                this.store.dispatch(new ImplicitallyAuthenticated());\n                break;\n            }\n            case ('token_error'):\n            case('token_refresh_error'):\n            case('logout'): {\n                this.store.dispatch(new UnAuthenticationFromImplicitFlow());\n                break;\n            }\n            default: {\n                // console.log('no action to dispatch for:', eventType);\n            }\n        }\n    }\n\n    public getAuthenticationMode(): string {\n        return this.mode;\n    }\n\n    public intializeAuthentication(): void {\n        this.authModeHandler.initializeAuthentication();\n    }\n\n    public linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.authModeHandler.linkAuthenticationStatus(linker);\n    }\n\n    public move(): void {\n        this.authModeHandler.move();\n    }\n\n    public isAuthModeCodeOrImplicitFlow(): boolean {\n        const mode = this.getAuthenticationMode();\n        return mode === 'CODE' || mode === 'IMPLICIT';\n    }\n}\n\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,    // token_received,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}    // token_received,\n\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\nexport interface AuthenticationModeHandler {\n    initializeAuthentication(): void;\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void;\n\n    extractToken(): string;\n\n    move(): void;\n}\n\nexport class PasswordOrCodeAuthenticationHandler implements AuthenticationModeHandler {\n\n    constructor(private authenticationService: AuthenticationService,\n                private store: Store) {\n    }\n\n    initializeAuthentication() {\n        const searchCodeString = 'code=';\n        const foundIndex = window.location.href.indexOf(searchCodeString);\n        if (foundIndex !== -1) {\n            this.store.dispatch(\n                new InitAuthStatus({code: window.location.href.substring(foundIndex + searchCodeString.length)}));\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectExpirationTime), map(isInTheFuture))\n            .subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    move(): void {\n        this.authenticationService.moveToCodeFlowLoginPage();\n    }\n}\n\nexport class ImplicitAuthenticationHandler implements AuthenticationModeHandler {\n    constructor(private authenticationService: AuthenticationService, private store: Store) {\n    }\n\n    initializeAuthentication(): void {\n        if (this.authenticationService.getAuthenticationMode() === 'IMPLICIT') {\n\n            this.authenticationService.initAndLoadAuth();\n        }\n    }\n\n    linkAuthenticationStatus(linker: (isAuthenticated: boolean) => void): void {\n        this.store.pipe(select(selectIsImplicitallyAuthenticated)).subscribe(linker);\n    }\n\n    public extractToken(): string {\n        return sessionStorage.getItem('access_token');\n    }\n\n    move() {\n        this.authenticationService.moveToImplicitFlowLoginPage();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTranslation.html":{"url":"classes/RefreshTranslation.html","title":"class - RefreshTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.RefreshTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogin;\nCheckAuthentication\nand in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:117\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:117\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLightCard.html":{"url":"classes/RemoveLightCard.html","title":"class - RemoveLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:114\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.RemoveLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:114\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResizableComponent.html":{"url":"components/ResizableComponent.html","title":"component - ResizableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResizableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/utilities/components/resizable/resizable.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-resizable\n            \n\n            \n                styleUrls\n                ./resizable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./resizable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:27\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'of-resizable',\n  templateUrl: './resizable.component.html',\n  styleUrls: ['./resizable.component.css']\n})\nexport class ResizableComponent implements AfterViewInit {\n\n  resized: boolean;\n  constructor() { }\n  ngAfterViewInit() {\n    // Trigger resize event to make sure that height is calculated once parent height is available (see OC-362)\n    if (typeof(Event) === 'function') {\n      // modern browsers\n      window.dispatchEvent(new Event('resize'));\n    } else {\n      // for IE and other old browsers\n      // causes deprecation warning on modern browsers\n      const evt = window.document.createEvent('UIEvents');\n      evt.initUIEvent('resize', true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resized = true;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  resizable works!\n\n\n    \n\n    \n                \n                    ./resizable.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  resizable works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResizableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectArchivedLightCard.html":{"url":"classes/SelectArchivedLightCard.html","title":"class - SelectArchivedLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectArchivedLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SelectArchivedLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendArchiveQuery.html":{"url":"classes/SendArchiveQuery.html","title":"class - SendArchiveQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendArchiveQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SendArchiveQuery\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            NotifyService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdActionService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication/authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from '@ofServices/guid.service';\nimport {TimeService} from '@ofServices/time.service';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {FilterService} from '@ofServices/filter.service';\nimport {ConfigService} from '@ofServices/config.service';\nimport {I18nService} from '@ofServices/i18n.service';\nimport {SettingsService} from '@ofServices/settings.service';\nimport { UserService } from './user.service';\nimport {ThirdActionService} from '@ofServices/third-action.service';\nimport { NotifyService } from '@ofServices/notify.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService,\n        UserService,\n        ThirdActionService,\n        NotifyService\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disableInfos$\n                            \n                            \n                                hideTags$\n                            \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableInfos$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:42\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:60\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess,\n    PatchSettings,\n    PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\nimport { AcceptLogIn } from '@ofStore/actions/authentication.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {BaseSettingComponent} from './components/settings/base-setting/base-setting.component';\nimport {TextSettingComponent} from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {EmailSettingComponent} from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport {MultiSettingsComponent} from './components/settings/multi-settings/multi-settings.component';\nimport {TypeAheadSettingsComponent} from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[], {emitEvent: false});\n            } else {\n                this.tagFilterForm.get('tags').setValue([], {emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                .tags-field {\n  /deep/ .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from '../base-setting/base-setting.component';\nimport {AppState} from '@ofStore/index';\nimport {Store} from '@ngrx/store';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html'\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern: string;\n    @Input() disabled: boolean;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup() {\n        const validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null, validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        const validators = [];\n        if (this.requiredField) {\n            validators.push(Validators.required);\n        }\n        if (this.pattern) {\n            validators.push(Validators.pattern(this.pattern));\n        }\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value, {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('TextSettingComponent.isEqual called');\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n\n    \n\n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyLoaded.html":{"url":"classes/ThirdActionAlreadyLoaded.html","title":"class - ThirdActionAlreadyLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:147\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyLoaded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:147\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyUpdated.html":{"url":"classes/ThirdActionAlreadyUpdated.html","title":"class - ThirdActionAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:152\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:152\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdActionService.html":{"url":"injectables/ThirdActionService.html","title":"injectable - ThirdActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/third-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actionUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                callModalAndHandleResponse\n                            \n                            \n                                callModalIfNecessary\n                            \n                            \n                                checkIfReceivedStatusIsDifferentFromCurrentOne\n                            \n                            \n                                dispatchUpdateThirdAction\n                            \n                            \n                                postActionAndUpdateIfNecessary\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/third-action.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalAndHandleResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkIfReceivedStatusIsDifferentFromCurrentOne\n                        \n                        \n                    \n                \n            \n            \n                \ncheckIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formerStatus\n                                    \n                                                ActionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchUpdateThirdAction\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchUpdateThirdAction(updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postActionAndUpdateIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \npostActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(lightCardId: string, currentActionPath: string, action: Action, modalService: NgbModal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            actionUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/third-action.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {Action, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport {map} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {\n    ConfirmModalComponent,\n    ThirdActionComporentModalReturn\n} from \"../modules/cards/components/action/confirm-modal/confirm-modal.component\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {UpdateAnAction} from \"@ofActions/light-card.actions\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ThirdActionService {\n    readonly actionUrl: string;\n\n    constructor(private httpClient: HttpClient\n        , private store: Store) {\n        this.actionUrl = `${environment.urls.actions}`;\n    }\n\n    checkIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus) {\n        const status = extractActionStatusFromPseudoActionStatus(formerStatus);\n        return map(currentStatus => {\n            const normalizedCurrentStatus = extractActionStatusFromPseudoActionStatus(currentStatus);\n            const hasChanged = !_.isEqual(status, normalizedCurrentStatus);\n            return [hasChanged, currentStatus];\n        });\n    }\n\n    postActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action) {\n        return this.httpClient.post(`${this.actionUrl}${currentActionPath}`, action).pipe(\n            this.checkIfReceivedStatusIsDifferentFromCurrentOne(action),\n            map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n                if (hasChanged) {\n                    const updateThirdActionAction = new UpdateAnAction({\n                        cardId: lightCardId,\n                        actionKey: action.key\n                        , status: currentStatus\n                    });\n                    this.dispatchUpdateThirdAction(updateThirdActionAction);\n                }\n            })\n        );\n    }\n\n    callModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable) {\n        return map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n            if (hasChanged) {\n                const updateThirdAction = new UpdateAnAction({\n                    cardId: lightCardId\n                    , actionKey: actionKey\n                    , status: currentStatus\n                });\n                this.callModalAndHandleResponse(modalService, postAction$, updateThirdAction);\n            } else {\n                postAction$.subscribe();\n            }\n        });\n    }\n\n    callModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction) {\n        modalService\n            .open(ConfirmModalComponent)\n            .result\n            .then(performPost => {\n                if (performPost) postAction$.subscribe()\n            })\n            .catch(error => {\n                switch (error) {\n                    case ThirdActionComporentModalReturn.CANCEL: {\n                        // save new status of action and do nothing\n                        this.dispatchUpdateThirdAction(updateThirdAction);\n                        break;\n                    }\n                    case ThirdActionComporentModalReturn.DISMISS: {\n                        // do nothing leaves the former action status untouched\n                        break;\n                    }\n                    default:\n                        console.log('unknown error from update action status modal', error);\n                }\n            });\n    }\n\n    submit(lightCardId: string\n        , currentActionPath: string\n        , action: Action\n        , modalService: NgbModal) {\n\n        const postAction$ = this.postActionAndUpdateIfNecessary(lightCardId, currentActionPath, action);\n\n        if (action.updateStateBeforeAction) {\n            this.httpClient.get(`${this.actionUrl}${currentActionPath}`).pipe(\n                this.checkIfReceivedStatusIsDifferentFromCurrentOne(action as ActionStatus),\n                this.callModalIfNecessary(lightCardId, action.key, modalService, postAction$)\n            ).subscribe();\n        } else {\n            postAction$.subscribe();\n        }\n    }\n\n    /* istanbul ignore next */\n    dispatchUpdateThirdAction(updateThirdAction: UpdateAnAction) {\n        this.store.dispatch(updateThirdAction);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IframeDisplayComponent} from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:155\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t =>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            const obj = JSON.parse(json);\n            return new Map(Object.entries(obj));\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askForI18nJson\n                            \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                    Private\n                                convertJsonToI18NObject\n                            \n                            \n                                fetchActionMap\n                            \n                            \n                                fetchActionMapFromLightCard\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                queryThirdFromCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askForI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \naskForI18nJson(publisher: string, locale: string, version?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertJsonToI18NObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertJsonToI18NObject(locale, publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (r: any) => {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMap\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMap(publisher: string, process: string, state: string, apiVersion?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    process\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMapFromLightCard\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMapFromLightCard(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThirdFromCard\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThirdFromCard(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t =>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            const obj = JSON.parse(json);\n            return new Map(Object.entries(obj));\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\nContains the elapsed virtual time since the previous heart beat so any components following the clock\ncan shift their timespan accordingly\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: TickPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        TickPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TickPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TickPayload.html":{"url":"classes/TickPayload.html","title":"class - TickPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TickPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clock tick (heart beat) payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                elapsedSinceLast\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentTime: moment.Moment, elapsedSinceLast: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentTime\n                                                  \n                                                        \n                                                                    moment.Moment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedSinceLast\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elapsedSinceLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:35\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:49\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {UserActionsTypes} from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:30\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n\n        //Update the values of the filter form if the state of the filter has been changed by other means (timeline, followClockTick, etc.)\n        //With {emitEvent:false}, this update won't trigger a valueChanges, so no ApplyFilter action will be dispatched\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start), {emitEvent:false});\n                    else\n                        this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end) {\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end), {emitEvent: false});\n                    }\n                    else\n                        this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n            }\n        });\n\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                    Public\n                                domains\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructMomentObj\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                periodStartToEnd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            constructMomentObj\n                        \n                        \n                    \n                \n            \n            \n                \nconstructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mommentOjb\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startOf\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                            Array\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            periodStartToEnd\n                        \n                        \n                    \n                \n            \n            \n                \nperiodStartToEnd(conf, future: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:251\n                \n            \n\n\n            \n                \n                    return a moment\nadd time to moment depending of configue object when future is true. compute a domain end\nsubtract time when future is false\nuse startOf function on each time's unit pass in list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    future\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domains\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom = [];\n    public domains: any;\n\n    constructor(private store: Store) {}\n    ngOnInit() {\n        // DOMAIN CONF from moment() to our conf\n        const domain7DayConf = this.constructMomentObj([0, 0, 0, 8, 0, 0, 0], ['day'], null);\n        const domainWeekConf = this.constructMomentObj([0, 0, 1, 0, 0, 0, 0], ['week'], null);\n\n        const domainMonthConf = this.constructMomentObj([0, 1, 0, 0, 0, 0, 0], ['month'], null);\n        const domainYearConf = this.constructMomentObj([1, 0, 0, 0, 0, 0, 0], ['year'], null);\n        const currentMoment = moment();\n\n        const startDomain7Day = moment(currentMoment);\n        startDomain7Day.minutes(0).second(0).millisecond(0);\n        const endDomain7Day = this.periodStartToEnd(domain7DayConf, true);\n\n        const startDomainWeek = moment(currentMoment.startOf('week'));\n        startDomainWeek.minutes(0).second(0).millisecond(0);\n        const endDomainWeek = this.periodStartToEnd(domainWeekConf, true);\n\n        const startDomainMonth = moment(currentMoment.startOf('month'));\n        startDomainMonth.minutes(0).second(0).millisecond(0);\n        const endDomainMonth = this.periodStartToEnd(domainMonthConf, true);\n\n        const startDomainYear = moment(currentMoment.startOf('year'));\n        startDomainYear.hour(0).minutes(0).second(0).millisecond(0);\n        const endDomainYear = this.periodStartToEnd(domainYearConf, true);\n\n        // Adding two domains required by SEA Team\n        const startDomainTR = moment().minutes(0).second(0).millisecond(0).subtract(2, 'hours');\n        const endDomainTR = moment().hours(0).minutes(0).second(0).millisecond(0).add(1, 'days');\n\n        const startDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0);\n        const endDomainJ = moment().hours(0).minutes(0).second(0).millisecond(0).add(1, 'days');\n        // FORWARD CONF (movement on domain)\n        const forwardYearConf = {\n            start: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([1, 0, 0, 0, 0, 0, 0]),\n        };\n        const forwardMonthConf = {\n            start: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 1, 0, 0, 0, 0, 0])\n        };\n        const forwardWeekConf = {\n            start: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 1, 0, 0, 0, 0]),\n        };\n        const forwardDayConf = {\n            start: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]),\n        };\n        const forwardTRConf = {\n            start: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n            end: this.constructMomentObj([0, 0, 0, 0, 2, 0, 0]),\n        };\n\n        const ticks4HoursConf = this.constructMomentObj([0, 0, 0, 0, 4, 0, 0]);\n\n        const ticksDayConf = this.constructMomentObj([0, 0, 0, 1, 0, 0, 0]);\n        const ticksHalfMonthConf = this.constructMomentObj([0, 0, 0, 0, 0, 0, 0], null, [1, 16]);\n\n        const ticks30minConf = this.constructMomentObj([0, 0, 0, 0, 0, 30, 0]);\n        const ticks1hConf = this.constructMomentObj([0, 0, 0, 0, 1, 0, 0]);\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            zoomOnButton: true,\n            autoScale: false,\n            showGridLines: true,\n            realTimeBar: true,\n        };\n\n        this.domains = {\n            J: {\n                startDomain: startDomainJ.valueOf(),\n                endDomain: endDomainJ.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'J',\n                forwardConf: forwardDayConf,\n                backwardConf: forwardDayConf,\n                ticksConf: ticks1hConf,\n                formatTicks: 'dd - h:mm a'\n            }, TR: {\n                startDomain: startDomainTR.valueOf(),\n                endDomain: endDomainTR.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'TR',\n                forwardConf: forwardTRConf,\n                backwardConf: forwardTRConf,\n                ticksConf: ticks30minConf,\n                formatTicks: 'dd - h:mm a'\n            }, '7D': {\n                startDomain: startDomain7Day.valueOf(),\n                endDomain: endDomain7Day.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: '7D',\n                forwardConf: forwardDayConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: true,\n                firstMoveStartOfUnit: true,\n                homeDomainExtraTicks: true\n            }, 'W': {\n                startDomain: startDomainWeek.valueOf(),\n                endDomain: endDomainWeek.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'W',\n                forwardConf: forwardWeekConf,\n                backwardConf: forwardWeekConf,\n                ticksConf: ticks4HoursConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, M: {\n                startDomain: startDomainMonth.valueOf(),\n                endDomain: endDomainMonth.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'M',\n                forwardConf: forwardMonthConf,\n                ticksConf: ticksDayConf,\n                // formatTicks: 'DD',\n                // formatTooltipsDate: 'DD/MM',\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }, Y: {\n                startDomain: startDomainYear.valueOf(),\n                endDomain: endDomainYear.valueOf(),\n                centeredOnTicks: true,\n                clusterTicksToTicks: true,\n                buttonTitle: 'Y',\n                forwardConf: forwardYearConf,\n                ticksConf: ticksHalfMonthConf,\n                followClockTick: false,\n                firstMoveStartOfUnit: false,\n                homeDomainExtraTicks: false\n            }\n        };\n        this.store.pipe(select(buildConfigSelector('feed.timeline.domains')), catchError(() => of([]))).subscribe(d => {\n            if (d) {\n                d.map(domain => {\n                    if (Object.keys(this.domains).includes(domain)) {\n                        this.confZoom.push(this.domains[domain]);\n                    }\n                });\n            }\n        });\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged()).subscribe(value => {\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({data: []}));\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                if (val.timeSpans && val.timeSpans.length > 0) {\n                    val.timeSpans.forEach(d => {\n                        const myCardTimelineTimespans = {\n                            displayDate: d.start, publishDate: d.start, // useless\n                            startDate: d.start, // useless\n                            endDate: d.end, // useless\n                            severity: val.severity, publisher: val.publisher,\n                            publisherVersion: val.publisherVersion, summary: val.title\n                        };\n                        myCardsTimeline.push(myCardTimelineTimespans);\n                    });\n                } else {\n                    // val.endDate val.startDate val.severity\n                    const myCardTimeline = {\n                        displayDate: val.startDate,\n                        publishDate: val.publishDate, // useless\n                        startDate: val.startDate, // useless\n                        endDate: val.endDate, // useless\n                        severity: val.severity, publisher: val.publisher,\n                        publisherVersion: val.publisherVersion, summary: val.title\n                    };\n                    myCardsTimeline.push(myCardTimeline);\n                }\n            }\n            this.store.dispatch(new SetCardDataTimeline({cardsTimeline: myCardsTimeline}));\n        });\n    }\n\n    constructMomentObj(mommentOjb: Array, startOf?: Array, date?: Array) {\n        const obj: any = {};\n        obj.year = mommentOjb[0];\n        obj.month = mommentOjb[1];\n        obj.week = mommentOjb[2];\n        obj.day = mommentOjb[3];\n        obj.hour = mommentOjb[4];\n        obj.minute = mommentOjb[5];\n        obj.second = mommentOjb[6];\n        if (startOf) {\n            obj.startOf = startOf;\n        }\n        if (date) {\n            obj.date = date;\n        }\n        return obj;\n    }\n    /**\n     * return a moment\n     * add time to moment depending of configue object when future is true. compute a domain end\n     * subtract time when future is false\n     * use startOf function on each time's unit pass in list\n     * @param conf\n     * @param future\n     */\n    periodStartToEnd(conf, future: boolean): moment.Moment {\n        const tmpMoment = moment();\n        // Test bug\n        // tmpMoment.date(2);\n        const newDate = _.cloneDeep(tmpMoment);\n        Object.keys(conf).forEach(key => {\n            if (key === 'startOf') {\n                conf[key].forEach(value => {\n                    newDate.startOf(value);\n                });\n            } else if (conf[key] > 0) {\n                if (future) {\n                    newDate.add(conf[key], key);\n                } else {\n                    newDate.subtract(conf[key], key);\n                }\n            }\n        });\n        return newDate;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(start: number, end?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", NOTIFICATION = \"NOTIFICATION\", QUESTION = \"QUESTION\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.QUESTION:\n            result = 2;\n            break;\n        case Severity.NOTIFICATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    NOTIFICATION, QUESTION\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nerror: last message during state processing before error\ndata: an array of data Card (less information than lightCard)\nwhich are use for display on the chart the number of card on timescale\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication/authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    constructor(private authService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const securityHeader = this.authService.getSecurityHeader();\n            const update = {setHeaders: securityHeader};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionalThirdWithItSVersion.html":{"url":"classes/TransitionalThirdWithItSVersion.html","title":"class - TransitionalThirdWithItSVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionalThirdWithItSVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                third\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(third: string, version: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:200\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        third\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            third\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    RefreshTranslation,\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {selectI18nUpLoaded} from \"@ofSelectors/translation.selectors\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    refreshLanguageUsedByTranslation: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        );\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n        return this.store.select(selectI18nUpLoaded).pipe(\n            map((referencedTranslation: Map>) => {\n                return TranslateEffects.extractThirdToUpdate(versions, referencedTranslation)\n            }));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        const thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n\n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) return new UpdateTranslation({versions: versionToUpdate});\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string,public version:string){}\n};\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateEffects.html":{"url":"injectables/TranslateEffects.html","title":"injectable - TranslateEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslateEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshLanguageUsedByTranslation\n                            \n                            \n                                updateTranslateService\n                            \n                            \n                                verifyTranslationNeeded\n                            \n                            \n                                verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                consolidateThirdAndVersions\n                            \n                            \n                                    Private\n                                extractI18nToUpdate\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFrom\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFromCards\n                            \n                            \n                                    Static\n                                extractThirdToUpdate\n                            \n                            \n                                mapLanguages\n                            \n                            \n                                mapThirds\n                            \n                            \n                                mapVersions\n                            \n                            \n                                    Static\n                                sendTranslateAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, translate: TranslateService, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            consolidateThirdAndVersions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consolidateThirdAndVersions(thirdsAndVersions: TransitionalThirdWithItSVersion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                            TransitionalThirdWithItSVersion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractI18nToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractI18nToUpdate(versions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFromCards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                            LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractThirdToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionInput\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cachedVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapLanguages\n                        \n                        \n                    \n                \n            \n            \n                \nmapLanguages(thirdsAndVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapThirds\n                        \n                        \n                    \n                \n            \n            \n                \nmapThirds(locale: string, thirdsAndVersion: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdsAndVersion\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapVersions\n                        \n                        \n                    \n                \n            \n            \n                \nmapVersions(locale: string, publisher: string, versions: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    versions\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sendTranslateAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendTranslateAction(versionToUpdate: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionToUpdate\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslateActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshLanguageUsedByTranslation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTranslateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:132\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    RefreshTranslation,\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {selectI18nUpLoaded} from \"@ofSelectors/translation.selectors\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    refreshLanguageUsedByTranslation: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        );\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n        return this.store.select(selectI18nUpLoaded).pipe(\n            map((referencedTranslation: Map>) => {\n                return TranslateEffects.extractThirdToUpdate(versions, referencedTranslation)\n            }));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        const thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n\n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) return new UpdateTranslation({versions: versionToUpdate});\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string,public version:string){}\n};\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationState.html":{"url":"interfaces/TranslationState.html","title":"interface - TranslationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/translation.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        i18nBundleVersionLoaded\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nBundleVersionLoaded\n                                    \n                                \n                                \n                                    \n                                        i18nBundleVersionLoaded:         Map>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport interface TranslationState {\n    i18nBundleVersionLoaded: Map>,\n    loading:boolean,\n    error:string\n}\n\nexport const translationInitialState: TranslationState = {\n    i18nBundleVersionLoaded:new Map>(),\n    loading:false,\n    error:null\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationUpToDate.html":{"url":"classes/TranslationUpToDate.html","title":"class - TranslationUpToDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationUpToDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.TranslationUpToDate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:86\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:100\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                .tags-field {\n    /deep/ .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            question: new FormControl(),\n            notification: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm, {emitEvent: false});\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action, {emitEvent: false});\n                this.typeFilterForm.get('question').setValue(!next.active || next.status.question, {emitEvent: false});\n                this.typeFilterForm.get('notification').setValue(!next.active || next.status.notification, {emitEvent: false});\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('action').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('question').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('notification').setValue(true,{emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.question && form.notification),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n        \n            \n                \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                \n                feed.filters.type.action.label\n            \n            \n                \n                \n                feed.filters.type.question.label\n            \n            \n                \n                \n                feed.filters.type.notification.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.fa-circle {\n  margin-right: 0.3rem;\n}  \n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        feed.filters.type.alarm.label                                                                        feed.filters.type.action.label                                                                        feed.filters.type.question.label                                                                        feed.filters.type.notification.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomLogoComponent', 'selector': 'of-custom-logo'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MenuLinkComponent', 'selector': 'of-menu-link'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnAuthenticationFromImplicitFlow.html":{"url":"classes/UnAuthenticationFromImplicitFlow.html","title":"class - UnAuthenticationFromImplicitFlow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnAuthenticationFromImplicitFlow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UnAuthenticationFromImplicitFlow\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:167\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateALightCard.html":{"url":"classes/UpdateALightCard.html","title":"class - UpdateALightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateALightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:128\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateALightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:128\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnAction.html":{"url":"classes/UpdateAnAction.html","title":"class - UpdateAnAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:134\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:134\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnActionFailure.html":{"url":"classes/UpdateAnActionFailure.html","title":"class - UpdateAnActionFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnActionFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:141\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnActionFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:141\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchiveFilter.html":{"url":"classes/UpdateArchiveFilter.html","title":"class - UpdateArchiveFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchiveFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchiveFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchivePage.html":{"url":"classes/UpdateArchivePage.html","title":"class - UpdateArchivePage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchivePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchivePage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslation.html":{"url":"classes/UpdateTranslation.html","title":"class - UpdateTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationFailed.html":{"url":"classes/UpdateTranslationFailed.html","title":"class - UpdateTranslationFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationFailed\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationSuccessful.html":{"url":"classes/UpdateTranslationSuccessful.html","title":"class - UpdateTranslationSuccessful","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationSuccessful\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationSuccessful\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:97\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UselessAuthAction.html":{"url":"classes/UselessAuthAction.html","title":"class - UselessAuthAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UselessAuthAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.UselessAuthAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:158\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\nimport {ExtractI18nBuilderOptions} from \"@angular-devkit/build-angular\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n    CheckImplicitFlowAuthenticationStatus = '[Authentication] Check Authentication Status specifically for the Implicit Flow',\n    UselessAuthAction = '[Authentication] test purpose action'\n    // TODO the following actions should be merge with password and code flow management of authentication\n    , ImplicitallyAuthenticated = '[Authentication] user is authentication using Implicit Flow' //\n    , UnAuthenticationFromImplicitFlow = '[Authentication[ user is log out by implicit Flow internal managment'\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport class CheckImplicitFlowAuthenticationStatus implements Action {\n    readonly type = AuthenticationActionTypes.CheckImplicitFlowAuthenticationStatus;\n}\n\nexport class UselessAuthAction implements  Action{\n    readonly type = AuthenticationActionTypes.UselessAuthAction;\n\n}\n\nexport class ImplicitallyAuthenticated implements Action {\n    readonly type = AuthenticationActionTypes.ImplicitallyAuthenticated;\n}\n\nexport class UnAuthenticationFromImplicitFlow implements Action {\n    readonly type = AuthenticationActionTypes.UnAuthenticationFromImplicitFlow;\n}\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess\n    | CheckImplicitFlowAuthenticationStatus\n    | UselessAuthAction\n    | ImplicitallyAuthenticated\n    |UnAuthenticationFromImplicitFlow;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationNotRegistered.html":{"url":"classes/UserApplicationNotRegistered.html","title":"class - UserApplicationNotRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationNotRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationNotRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationRegistered.html":{"url":"classes/UserApplicationRegistered.html","title":"class - UserApplicationRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserContext.html":{"url":"classes/UserContext.html","title":"class - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, token: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user-context.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserContext{\n    constructor(\n        readonly login:string,\n        readonly token:string,\n        readonly firstName:string,\n        readonly lastName:string,\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/user.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserApplication\n                            \n                            \n                                CreateUserApplication\n                            \n                            \n                                transition2CreateUserApplication\n                            \n                            \n                                transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/user.effects.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:38\n                            \n                        \n\n                \n                    \n                        after that the user is authentificated throught the token,\ndetect if the user is already registered in the application and raise the UserApplicationRegistered action\nif not, set the creation user workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:74\n                            \n                        \n\n                \n                    \n                        create the user application (first time in the application)\nraise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:59\n                            \n                        \n\n                \n                    \n                        transition to the creation user application workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:99\n                            \n                        \n\n                \n                    \n                        transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {UserService} from '@ofServices/user.service';\nimport {Observable} from 'rxjs';\nimport {\n    CreateUserApplication,\n    CreateUserApplicationOnFailure,\n    CreateUserApplicationOnSuccess,\n    UserActions,\n    UserActionsTypes,\n    UserApplicationNotRegistered,\n    UserApplicationRegistered\n} from '@ofStore/actions/user.actions';\nimport {AcceptLogIn, AuthenticationActionTypes} from '@ofStore/actions/authentication.actions';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {User} from '@ofModel/user.model';\nimport {AuthenticationService} from \"@ofServices/authentication/authentication.service\";\n\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private userService: UserService,\n                private authService: AuthenticationService\n    ) {\n    }\n\n    /**\n     * after that the user is authentificated throught the token,\n     * detect if the user is already registered in the application and raise the UserApplicationRegistered action\n     * if not, set the creation user workflow\n     */\n    @Effect()\n    checkUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData: User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error: error, user: userData}));\n                            return caught;\n                        })\n                    );\n            })\n        );\n\n    /**\n     * transition to the creation user application workflow\n     */\n    @Effect()\n    transition2CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered),\n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        );\n\n    /**\n     * create the user application (first time in the application)\n     * raise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n     */\n    @Effect()\n    CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication),\n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(currentUser => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user: currentUser});\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.authService.clearAuthenticationInformation();\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error: error}));\n                            return caught;\n                        })\n                    );\n            }),\n        );\n\n    /**\n     * transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n     */\n    @Effect()\n    transition2UserApplicationRegistered: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess),\n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user: userDataPayload});\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askCreateUser\n                            \n                            \n                                askUserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular build-in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askCreateUser\n                        \n                        \n                    \n                \n            \n            \n                \naskCreateUser(userData: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askUserApplicationRegistered\n                        \n                        \n                    \n                \n            \n            \n                \naskUserApplicationRegistered(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { environment } from '@env/environment';\nimport { Observable, of } from 'rxjs';\nimport { User } from '@ofModel/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n\n@Injectable()\nexport class UserService {\n\n    readonly userUrl : string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     */\n    constructor(private httpClient : HttpClient) {\n        this.userUrl = `${environment.urls.users}`;\n    }\n\n    askUserApplicationRegistered(user : string) : Observable {\n        console.log(\"user in askUserApplicationRegistered service : \" + user);\n        return this.httpClient.get(`${this.userUrl}/users/${user}`);\n    }\n\n    askCreateUser(userData : User) : Observable {\n        console.log(\"user in askCreateUser service : \" + userData.login);\n        return this.httpClient.put(`${this.userUrl}/users/${userData.login}`, userData);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/user.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                                \n                                        registered\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserState {\n    registered : boolean,\n    group : string[]\n}\n\nexport const userInitialState : UserState = {\n    registered : false,\n    group : null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/utilities/utilities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalcHeightDirective } from \"./calc-height.directive\";\nimport { ResizableComponent } from './components/resizable/resizable.component';\n//TODO Find out where directive would be best put\n\n@NgModule({\n  declarations: [CalcHeightDirective, ResizableComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n      CalcHeightDirective, ResizableComponent\n  ]\n})\nexport class UtilitiesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:79\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:55\n                \n            \n\n\n            \n                \n                    special format function used for wrote all ticks on one horizontal line\nif cluster level is correct return a string formatted from value\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:16\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  constructor(private timeService: TimeService) {\n  }\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n      const date = moment(value);\n      switch (clusterLevel) {\n        case 'Min':\n        case 'Sec': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') +\n              'h' + this.timeService.predefinedFormat(date, 'minutesOnly');\n        }\n        case 'Hou': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') + 'h';\n        }\n        case 'Day':\n        case 'Dat':\n        case 'Wee':\n        case 'Mon':\n        case 'Yea':\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * special format function used for wrote all ticks on one horizontal line\n   * if cluster level is correct return a string formatted from value\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        if (clusterLevel === 'Hou') {\n          return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n        } else if (clusterLevel === 'Min') {\n          return this.timeService.predefinedFormat(date, 'minutesOnly');\n        } else if (clusterLevel === 'Sec') {\n          return this.timeService.predefinedFormat(date, 'secondedsOnly');\n        } else if (clusterLevel === 'nbW') {\n          return this.timeService.predefinedFormat(date, 'weekNumberOnly');\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n      switch (clusterLevel) {\n        case 'Hou' : {\n          if (date.valueOf() === startYear.valueOf()) {\n            return date.format( 'DD MMM YY');\n            // return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n          }\n          if (date.hours() === 0) {\n            return this.timeService.predefinedFormat(date, 'dateOnDay');\n          } else {\n            return this.timeService.predefinedFormat(date, 'hoursOnly');\n          }\n        }\n        case 'Min': {\n          if (date.minutes() === 0) {\n            if (date.hour() === 0) {\n              return this.timeService.predefinedFormat(date, 'dateOnDay');\n            } else {\n              return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n            }\n          }\n        }\n        case 'Sec': {\n          if (date.seconds() === 0) {\n            if (date.minutes() === 0) {\n              if (date.hour() === 0) {\n                return this.timeService.predefinedFormat(date, 'dateOnDay');\n              } else {\n                return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n              }\n            } else {\n              return this.timeService.predefinedFormat(date, 'minutesOnly');\n            }\n          }\n        }\n        case 'Day': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateOnDay');\n        }\n        case 'Dat': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDay');\n        }\n        case 'Wee': {\n          return this.timeService.predefinedFormat(date, 'dateOnWeek');\n        }\n        case 'Mon': {\n          return this.timeService.predefinedFormat(date, 'dateOnMonth');\n        }\n        case 'Yea': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^10.1.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            angular-oauth2-oidc : ^8.0.4\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.15\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.25\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            ArchiveActionTypes   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterDateTypes   (src/.../archive-filters.component.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            ThirdActionComporentModalReturn   (src/.../confirm-modal.component.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                        \n                            TranslateActionsTypes   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActionsTypes   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                Value : EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                Value : JNLP\n                            \n                        \n                        \n                            \n                                 URL\n                            \n                        \n                        \n                            \n                                Value : URL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/archive.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ArchiveActionTypes\n                    \n                \n                        \n                            \n                                 UpdateArchiveFilter\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update Filter\n                            \n                        \n                        \n                            \n                                 SendArchiveQuery\n                            \n                        \n                        \n                            \n                                Value : [Archive] Send Query\n                            \n                        \n                        \n                            \n                                 ArchiveQuerySuccess\n                            \n                        \n                        \n                            \n                                Value : [Archive] Query was successful\n                            \n                        \n                        \n                            \n                                 UpdateArchivePage\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update query result page\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Archive] Handle unexpected error related to archived card issue\n                            \n                        \n                        \n                            \n                                 SelectArchivedLightCard\n                            \n                        \n                        \n                            \n                                Value : [Archive] Select one archived light card\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 CheckImplicitFlowAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status specifically for the Implicit Flow\n                            \n                        \n                        \n                            \n                                 UselessAuthAction\n                            \n                        \n                        \n                            \n                                Value : [Authentication] test purpose action\n                            \n                        \n                        \n                            \n                                 ImplicitallyAuthenticated\n                            \n                        \n                        \n                            \n                                Value : [Authentication] user is authentication using Implicit Flow\n                            \n                        \n                        \n                            \n                                 UnAuthenticationFromImplicitFlow\n                            \n                        \n                        \n                            \n                                Value : [Authentication[ user is log out by implicit Flow internal managment\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 LoadArchivedCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Success\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n                        \n                            \n                                 AddActionsAppear\n                            \n                        \n                        \n                            \n                                Value : [Card] Add Actions Appear\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n                        \n                            \n                                Value : QUESTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterDateTypes\n                    \n                \n                        \n                            \n                                 PUBLISH_DATE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateFrom\n                            \n                        \n                        \n                            \n                                 PUBLISH_DATE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateTo\n                            \n                        \n                        \n                            \n                                 ACTIVE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeFrom\n                            \n                        \n                        \n                            \n                                 ACTIVE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeTo\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n                        \n                            \n                                 RemoveLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Remove a card\n                            \n                        \n                        \n                            \n                                 AddThirdActions\n                            \n                        \n                        \n                            \n                                Value : [LCard] Adds some Third Actions to existing card\n                            \n                        \n                        \n                            \n                                 UpdateALightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update a Light Card\n                            \n                        \n                        \n                            \n                                 UpdateAnAction\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update one Action of a LightCard\n                            \n                        \n                        \n                            \n                                 UpdateAnActionFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] No actions where available to update for the current selected card in the state\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyLoaded\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card contains actions\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Third Action unchanged\n                            \n                        \n                        \n                            \n                                 DelayedLightCardUpdate\n                            \n                        \n                        \n                            \n                                Value : [LCard] update Light Card actions later\n                            \n                        \n                        \n                            \n                                 LightCardAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card already Updated\n                            \n                        \n            \n        \n\n    src/app/services/authentication/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ThirdActionComporentModalReturn\n                    \n                \n                        \n                            \n                                 CANCEL\n                            \n                        \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 DISMISS\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to update the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n    src/app/store/actions/translate.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TranslateActionsTypes\n                    \n                \n                        \n                            \n                                 UpdateTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation need an update\n                            \n                        \n                        \n                            \n                                 UpdateTranslationSuccessful\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation successfully updated\n                            \n                        \n                        \n                            \n                                 UpdateTranslationFailed\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation update failed\n                            \n                        \n                        \n                            \n                                 TranslationUpToDate\n                            \n                        \n                        \n                            \n                                Value : [i18n] all Translation materials are already loaded\n                            \n                        \n                        \n                            \n                                 RefreshTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] translate handler has been refreshed\n                            \n                        \n            \n        \n\n    src/app/store/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionsTypes\n                    \n                \n                        \n                            \n                                 UserApplicationRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application registered\n                            \n                        \n                        \n                            \n                                 UserApplicationNotRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application not registered\n                            \n                        \n                        \n                            \n                                 CreateUserApplication\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnSuccess\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on success\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnFailure\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on failure\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [User] Handle unexpected error related to user creation issue\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCustomLogoComponent\n\nCustomLogoComponent\n\nAppModule -->\n\nCustomLogoComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMenuLinkComponent\n\nMenuLinkComponent\n\nAppModule -->\n\nMenuLinkComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nNotifyService\n\nNotifyService\n\nServicesModule -->\n\nNotifyService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    118 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArchiveActions   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            Omit   (src/.../thirds.model.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                        \n                            TranslateActions   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActions   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/archive.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ArchiveActions\n                \n            \n            \n                \n                        UpdateArchiveFilter | SendArchiveQuery | HandleUnexpectedError | ArchiveQuerySuccess | UpdateArchivePage | SelectArchivedLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess | CheckImplicitFlowAuthenticationStatus | UselessAuthAction | ImplicitallyAuthenticated | UnAuthenticationFromImplicitFlow\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | LoadArchivedCard | LoadArchivedCardSuccess | LoadArchivedCardFailure | HandleUnexpectedError | AddActionsAppear\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards | AddThirdActions | UpdateALightCard | UpdateAnAction | UpdateAnActionFailure | ThirdActionAlreadyLoaded | ThirdActionAlreadyUpdated | DelayedLightCardUpdate | LightCardAlreadyUpdated | RemoveLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/model/thirds.model.ts\n    \n    \n        \n            \n                \n                    \n                    Omit\n                \n            \n            \n                \n                        Pick>\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n    src/app/store/actions/translate.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TranslateActions\n                \n            \n            \n                \n                        UpdateTranslation | UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation\n\n                \n            \n        \n    \n    src/app/store/actions/user.actions.ts\n    \n    \n        \n            \n                \n                    \n                    UserActions\n                \n            \n            \n                \n                        UserApplicationRegistered | UserApplicationNotRegistered | CreateUserApplication | CreateUserApplicationOnSuccess | CreateUserApplicationOnFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
