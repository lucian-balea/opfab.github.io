var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.274,1,2.61]],["body/classes/AcceptLogIn.html",[0,0.501,1,3.966,2,0.479,3,0.022,4,0.022,5,0.052,6,2.316,7,1.646,8,1.104,9,4.914,10,1.586,11,2.206,12,3.539,13,4.674,14,4.205,15,3.296,16,3.537,17,2.159,18,4.716,19,4.525,20,4.144,21,3.619,22,3.501,23,3.688,24,2.831,25,4.563,26,4.716,27,3.614,28,1.688,29,4.144,30,4.423,31,4.716,32,0.198,33,0.989,34,0.161,35,0.346,36,1.019,37,1.529,38,1.15,39,0.265,40,0.997,41,4.573,42,0.215,43,5.79,44,0.263,45,0.005,46,0.257,47,0.263,48,3.952,49,0.471,50,0.385,51,0.087,52,0.373,53,3.602,54,2.077,55,2.804,56,1.935,57,0.061,58,0.568,59,2.249,60,3.794,61,1.161,62,1.885,63,3.794,64,2.077,65,4.144,66,3.243,67,5.076,68,4.423,69,3.794,70,2.389,71,2.9,72,4.068,73,3.146,74,4.447,75,3.794,76,1.403,77,1.474,78,2.13,79,0.862,80,2.13,81,2.027,82,2.188,83,1.743,84,2.47,85,2.47,86,3.619,87,3.501,88,1.885,89,3.501,90,2.47,91,1.209,92,1.209,93,1.125,94,2.47,95,2.389,96,2.47,97,2.47,98,2.316,99,1.778,100,1.178,101,2.389,102,3.146,103,3.619,104,3.515,105,3.296,106,1.709,107,1.178,108,2.389,109,2.316,110,2.249,111,4.423,112,1.195,113,2.47,114,2.249,115,2.389,116,3.206,117,1.422,118,2.47,119,2.47,120,4.716,121,2.389,122,2.47,123,3.501,124,2.47,125,3.501,126,0.56,127,2.47,128,2.389,129,2.47,130,2.389,131,2.47,132,2.9,133,3.501,134,1.56,135,2.47,136,2.316,137,0.002,138,0.003,139,0.002]],["title/classes/AcceptLogOut.html",[0,0.274,74,2.749]],["body/classes/AcceptLogOut.html",[0,0.504,1,3.652,2,0.49,3,0.022,4,0.022,5,0.05,6,2.373,7,1.687,8,1.107,9,4.875,10,1.109,11,2.006,12,3.538,13,4.593,14,4.241,15,2.305,16,3.578,17,2.229,18,4.771,19,4.373,20,3.564,21,2.53,22,2.448,23,3.504,24,2.607,25,4.202,26,4.343,27,3.328,28,1.554,29,3.564,30,4.074,31,3.684,32,0.195,33,0.995,34,0.165,35,0.352,36,0.954,37,1.346,38,1.157,39,0.318,41,3.355,42,0.185,45,0.005,49,0.483,50,0.395,51,0.088,52,0.382,53,3.652,54,2.128,55,2.843,56,1.982,57,0.061,58,0.582,59,2.305,60,3.847,61,1.19,62,1.918,63,3.847,64,2.128,65,4.202,66,3.304,67,5.119,68,4.475,69,3.847,70,2.448,71,2.952,72,4.373,73,3.19,74,4.838,75,3.847,76,1.428,77,1.488,78,2.183,79,0.87,80,2.183,81,2.076,82,2.241,83,1.785,84,2.53,85,2.53,86,3.684,87,3.564,88,1.918,89,3.564,90,2.53,91,1.217,92,1.217,93,1.133,94,2.53,95,2.448,96,2.53,97,2.53,98,2.373,99,1.821,100,1.207,101,2.448,102,3.19,103,3.684,104,3.564,105,3.355,106,1.751,107,1.207,108,2.448,109,2.373,110,2.305,111,4.755,112,1.224,113,2.53,114,2.305,115,2.448,116,3.263,117,1.447,118,2.53,119,2.53,120,5.291,121,2.448,122,2.53,123,3.564,124,2.53,125,3.564,126,0.574,127,3.684,128,3.564,129,3.684,130,3.564,131,3.684,132,3.481,133,4.202,134,1.598,135,2.53,136,2.373,137,0.002,138,0.003,139,0.002,140,5.894]],["title/classes/AcceptLogOutSuccess.html",[0,0.274,75,2.749]],["body/classes/AcceptLogOutSuccess.html",[0,0.504,1,3.65,2,0.49,3,0.022,4,0.022,5,0.053,6,2.371,7,1.685,8,1.107,9,4.938,10,1.108,11,2.131,12,3.548,13,4.705,14,4.239,15,2.302,16,3.256,17,2.174,18,4.341,19,4.372,20,3.561,21,2.528,22,2.446,23,3.503,24,2.862,25,4.614,26,4.769,27,3.654,28,1.707,29,3.561,30,4.473,31,3.681,32,0.197,33,0.994,34,0.165,35,0.352,36,0.953,37,1.345,38,1.156,39,0.185,41,3.353,42,0.127,45,0.005,49,0.483,50,0.394,51,0.088,52,0.381,53,3.65,54,2.126,55,2.841,56,1.98,57,0.061,58,0.582,59,2.302,60,3.845,61,1.188,62,1.917,63,3.845,64,2.126,65,4.2,66,3.26,67,5.118,68,4.473,69,3.845,70,2.446,71,2.95,72,4.113,73,3.189,74,4.685,75,4.224,76,1.427,77,1.488,78,2.181,79,0.87,80,2.181,81,2.074,82,2.239,83,1.784,84,2.528,85,2.528,86,3.681,87,3.561,88,1.917,89,3.561,90,2.528,91,1.217,92,1.217,93,1.133,94,2.528,95,2.446,96,2.528,97,2.528,98,2.371,99,1.82,100,1.206,101,2.446,102,3.189,103,3.681,104,3.562,105,3.353,106,1.75,107,1.206,108,2.446,109,2.371,110,2.302,111,4.473,112,1.223,113,2.528,114,2.302,115,2.446,116,3.845,117,1.706,118,2.528,119,2.528,120,5.068,121,2.446,122,2.528,123,4.2,124,2.528,125,3.561,126,0.574,127,2.528,128,2.446,129,2.528,130,2.446,131,2.528,132,3.479,133,4.2,134,2.325,135,3.681,136,2.371,137,0.002,138,0.003,139,0.002,141,4.045]],["title/classes/Action.html",[0,0.274,8,0.558]],["body/classes/Action.html",[0,0.509,2,0.512,3,0.023,4,0.023,5,0.028,8,0.684,11,1.112,23,1.943,24,1.588,28,1.743,32,0.167,36,0.497,38,1.312,39,0.428,42,0.133,44,0.281,45,0.005,46,0.396,47,0.281,50,0.593,51,0.091,57,0.063,58,0.875,79,1.081,91,1.232,92,1.232,93,1.147,102,3.272,137,0.004,138,0.003,139,0.002,142,2.481,143,3.793,144,4.712,145,5.4,146,3.406,147,4.057,148,3.193,149,4.87,150,4.87,151,3.307,152,3.504,153,4.87,154,4.87,155,4.87,156,4.87,157,4.87,158,3.369,159,4.232,160,2.224,161,0.634,162,2.17,163,1.701,164,1.943,165,0.84,166,2.645,167,1.943,168,1.298,169,2.645,170,2.409,171,2.645,172,2.645,173,2.645,174,2.645,175,2.645,176,2.645,177,2.645,178,2.645,179,3.804,180,2.083,181,2.98,182,2.645,183,3.804,184,1.552,185,1.642,186,3.568,187,2.645,188,1.615,189,1.831,190,1.488,191,1.866,192,2.559,193,2.645,194,2.645,195,2.645,196,2.645,197,2.645,198,2.645,199,3.266,200,2.645,201,2.645,202,2.645,203,2.559,204,2.559,205,2.322,206,2.645,207,2.645,208,2.645,209,2.645,210,1.866,211,2.645,212,2.409,213,2.645,214,2.645,215,2.645,216,2.645,217,2.559,218,2.027,219,2.645,220,1.039,221,2.409,222,2.559,223,1.866,224,2.559,225,2.282,226,2.645,227,2.645,228,2.645,229,2.645,230,1.796,231,2.645,232,2.645,233,2.645,234,2.645,235,2.645,236,2.645,237,2.645,238,2.645,239,2.645,240,2.12,241,2.645,242,2.645,243,2.559,244,2.645,245,2.645,246,2.645,247,2.645,248,2.645,249,3.68,250,1.261,251,1.261,252,2.559,253,2.559,254,2.559,255,1.904,256,2.645,257,2.645,258,2.106,259,2.645,260,2.343,261,3.68,262,2.645,263,2.645]],["title/components/ActionComponent.html",[264,1.013,265,1.719]],["body/components/ActionComponent.html",[0,0.263,3,0.026,4,0.036,5,0.043,8,1.05,32,0.189,33,0.722,34,0.195,35,0.396,36,0.561,39,0.303,42,0.293,44,0.317,45,0.005,46,0.535,47,0.317,51,0.11,57,0.031,61,1.402,79,0.959,91,0.649,92,0.649,93,0.604,100,1.423,107,1.423,112,1.443,137,0.002,138,0.003,139,0.002,146,2.808,151,2.812,152,3.666,161,0.993,164,2.191,225,4.432,250,1.423,251,1.975,264,1.552,265,2.845,266,2.223,267,1.705,268,2.105,269,1.733,270,1.733,271,4.773,272,2.855,273,1.626,274,3.635,275,3.106,276,7.611,277,2.405,278,6.626,279,2.399,280,6.821,281,1.627,282,3.19,283,6.806,284,7.611,285,7.151,286,6.301,287,4.773,288,7.368,289,7.611,290,6.626,291,6.626,292,4.773,293,4.773,294,4.773,295,4.773,296,4.773,297,1.605,298,2.335,299,4.773,300,0.899,301,1.577,302,2.798,303,2.886,304,2.448,305,4.278,306,4.278,307,6.626,308,4.773,309,4.773,310,4.773,311,4.773,312,4.773,313,6.626,314,1.953,315,1.885,316,1.953,317,1.953,318,1.953,319,1.953,320,1.761,321,1.652,322,1.953,323,1.953,324,1.953,325,1.852,326,1.953,327,1.918,328,1.953,329,1.953,330,1.953,331,1.237,332,1.953,333,1.486,334,2.405,335,2.367,336,1.554,337,2.985,338,1.733,339,1.733,340,1.652,341,1.733,342,1.652,343,2.404,344,2.405,345,1.652,346,2.405,347,1.652,348,1.733,349,1.626,350,1.733,351,1.652,352,1.733,353,2.985,354,1.652,355,1.733,356,1.602,357,2.405,358,1.652,359,1.602,360,1.678,361,1.705,362,1.733,363,1.678,364,1.705,365,1.577,366,2.405,367,1.652,368,1.733,369,2.985,370,1.602,371,1.733,372,1.652,373,1.652,374,1.733,375,1.626,376,1.733,377,1.652,378,1.652,379,1.733,380,1.626,381,1.733,382,1.652,383,1.733,384,1.678,385,1.652,386,1.733,387,1.652,388,2.367,389,1.652,390,2.763,391,1.733,392,1.652,393,1.733,394,1.652,395,1.733,396,1.626,397,1.652,398,1.652,399,1.652,400,1.652,401,1.892,402,1.652,403,1.733,404,1.652,405,1.652,406,1.652,407,1.289,408,1.626,409,1.626,410,1.733,411,1.626,412,1.733,413,1.626,414,1.705,415,1.733]],["title/classes/ActionStatus.html",[0,0.274,205,1.895]],["body/classes/ActionStatus.html",[0,0.511,2,0.519,3,0.024,4,0.024,5,0.028,8,0.482,11,1.127,23,1.968,24,1.608,28,1.753,32,0.158,36,0.504,38,1.313,39,0.429,42,0.135,44,0.285,45,0.005,46,0.4,47,0.285,50,0.599,51,0.091,57,0.064,58,0.883,79,1.075,91,1.236,92,1.236,93,1.151,102,1.968,137,0.004,138,0.003,139,0.002,142,2.513,144,3.714,145,5.349,146,3.417,147,4.086,148,3.184,149,4.899,150,4.899,151,3.327,152,3.521,153,4.899,154,4.899,155,4.899,156,4.899,157,4.899,161,0.643,162,2.199,163,1.723,164,1.968,165,0.851,166,2.679,167,1.968,168,1.315,169,2.679,170,2.44,171,2.679,172,2.679,173,2.679,174,2.679,175,2.679,176,2.679,177,2.679,178,2.679,179,3.839,180,2.092,181,3.007,182,2.679,183,3.839,184,1.564,185,1.664,186,3.601,187,2.679,188,1.635,189,1.854,190,1.507,191,1.891,192,2.592,193,2.679,194,2.679,195,2.679,196,2.679,197,2.679,198,2.679,199,3.274,200,2.679,201,2.679,202,2.679,203,2.592,204,2.592,205,2.738,206,2.679,207,2.679,208,2.679,209,2.679,210,1.891,211,2.679,212,2.44,213,2.679,214,2.679,215,2.679,216,2.679,217,2.592,218,2.053,219,2.679,220,1.053,221,2.44,222,2.592,223,1.891,224,2.592,225,2.311,226,2.679,227,2.679,228,2.679,229,2.679,230,1.82,231,2.679,232,2.679,233,2.679,234,2.679,235,2.679,236,2.679,237,2.679,238,2.679,239,2.679,240,2.147,241,2.679,242,2.679,243,2.592,244,2.679,245,2.679,246,2.679,247,2.679,248,2.679,249,3.714,250,1.278,251,1.278,252,2.592,253,2.592,254,2.592,255,1.929,256,2.679,257,2.679,258,2.126,259,2.679,260,2.373,261,3.714,262,2.679,263,2.679,416,3.842,417,4.287]],["title/classes/AddActionsAppear.html",[0,0.274,418,2.677]],["body/classes/AddActionsAppear.html",[0,0.53,2,0.611,3,0.028,4,0.028,5,0.033,8,1.102,32,0.202,33,1.058,34,0.206,35,0.412,36,0.809,37,1.729,38,1.223,39,0.231,40,1.274,42,0.246,44,0.336,45,0.005,46,0.329,47,0.336,49,0.602,50,0.492,51,0.088,52,0.476,57,0.064,58,0.726,76,1.669,77,1.738,79,0.975,91,1.306,92,1.306,93,1.216,126,1.32,137,0.002,138,0.003,139,0.002,161,1.539,163,2.029,190,2.421,220,1.24,418,4.539,419,2.959,420,6.886,421,5.048,422,4.304,423,2.874,424,4.225,425,1.894,426,3.926,427,2.597,428,4.339,429,4.339,430,1.939,431,4.119,432,4.02,433,4.339,434,4.339,435,1.73,436,1.274,437,1.257,438,1.402,439,1.402,440,1.926,441,1.526,442,2.959,443,1.442,444,1.526,445,3.155,446,3.155,447,3.155,448,3.155,449,3.155,450,3.155,451,3.155,452,3.155,453,3.053]],["title/classes/AddLightCardFailure.html",[0,0.274,454,2.19]],["body/classes/AddLightCardFailure.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,3.306,455,3.442,456,1.789,457,1.739,458,5.732,459,3.898,460,2.745,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,1.867,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789]],["title/classes/AddThirdActions.html",[0,0.274,484,2.19]],["body/classes/AddThirdActions.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,3.306,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,2.745,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,525,5.732,526,3.898]],["title/components/AppComponent.html",[264,1.013,340,1.719]],["body/components/AppComponent.html",[0,0.225,3,0.022,4,0.033,5,0.039,8,0.783,12,2.691,17,1.735,32,0.185,33,0.645,34,0.166,35,0.354,36,0.479,39,0.319,42,0.282,44,0.271,45,0.005,46,0.498,47,0.271,49,0.913,50,0.746,51,0.121,52,0.384,57,0.027,60,2.254,61,2.049,62,2.491,64,3.11,66,1.431,79,0.437,88,2.491,100,1.214,105,2.318,107,1.214,112,1.231,117,2.083,137,0.002,138,0.003,139,0.002,148,2.641,161,0.887,165,0.809,188,2.66,199,2.89,212,3.969,250,1.214,251,1.764,264,1.422,265,1.409,266,1.986,267,1.454,268,1.796,269,1.478,270,1.478,272,2.616,273,1.387,274,3.602,275,2.774,277,2.148,279,1.936,281,1.453,282,2.97,297,0.987,298,1.249,300,0.767,314,1.666,315,1.608,316,1.666,317,1.666,318,1.666,319,1.666,320,1.502,321,1.409,322,1.666,323,1.666,324,1.666,325,1.58,326,1.666,327,1.636,328,1.666,329,1.666,330,1.666,331,1.056,332,1.666,333,1.267,334,2.148,335,2.114,336,1.325,337,2.778,338,1.478,339,1.478,340,2.649,341,1.478,342,1.409,343,2.203,344,2.148,345,1.409,346,2.148,347,1.409,348,1.478,349,1.387,350,1.478,351,1.409,352,1.478,353,2.778,354,1.409,355,1.478,356,1.366,357,2.148,358,1.409,359,1.366,360,1.431,361,1.454,362,1.478,363,1.431,364,1.454,365,1.345,366,2.148,367,1.409,368,1.478,369,2.778,370,1.366,371,1.478,372,1.409,373,1.409,374,1.478,375,1.387,376,1.478,377,1.409,378,1.409,379,1.478,380,1.387,381,1.478,382,1.409,383,1.478,384,1.431,385,1.409,386,1.478,387,1.409,388,2.114,389,1.409,390,2.531,391,1.478,392,1.409,393,1.478,394,1.409,395,1.478,396,1.387,397,1.409,398,1.409,399,1.409,400,1.409,401,1.69,402,1.409,403,1.478,404,1.409,405,1.409,406,1.409,407,1.1,408,1.387,409,1.387,410,1.478,411,1.387,412,1.478,413,1.387,414,1.454,415,1.478,477,1.325,490,2.512,497,2.717,527,4.072,528,4.899,529,6.972,530,5.918,531,6.972,532,5.416,533,6.972,534,6.972,535,6.972,536,4.895,537,1.431,538,6.601,539,5.918,540,5.918,541,5.918,542,4.597,543,4.385,544,5.918,545,4.072,546,5.772,547,5.918,548,4.899,549,5.304,550,4.356,551,3.969,552,4.072,553,4.072,554,4.072,555,4.072,556,5.918,557,4.072,558,4.072,559,3.163,560,1.163,561,1.454,562,2.859,563,1.196,564,1.231,565,2.997,566,4.072,567,3.649,568,4.072,569,2.74,570,4.072,571,3.649,572,3.699,573,3.371,574,4.072,575,4.072,576,2.387,577,3.649,578,3.579,579,1.214,580,4.072,581,4.072,582,4.072,583,4.072,584,4.072,585,4.072,586,4.072,587,4.072,588,2.039,589,3.035,590,4.072,591,3.371,592,4.072,593,3.163,594,4.072,595,4.072,596,4.072,597,4.072,598,4.072,599,5.918,600,4.072,601,4.072,602,4.072,603,2.462,604,4.072,605,4.072,606,2.318,607,2.997,608,4.072,609,3.699,610,5.918,611,5.918,612,5.918,613,2.997,614,3.163,615,3.649,616,2.74,617,2.637,618,3.371,619,4.072,620,2.859,621,4.072,622,3.649,623,4.072,624,3.163]],["title/modules/AppModule.html",[625,2.148,626,3.655]],["body/modules/AppModule.html",[0,0.309,3,0.031,4,0.041,5,0.048,36,0.658,45,0.005,51,0.132,57,0.036,73,2.572,100,2.793,107,1.67,112,2.834,137,0.003,138,0.004,139,0.003,300,1.055,302,3.284,303,3.387,304,4.503,314,2.292,315,2.212,316,2.292,317,2.292,318,2.292,319,2.292,320,2.067,321,1.939,322,2.292,323,2.292,324,2.292,325,2.174,326,2.292,327,2.251,328,2.292,329,2.292,330,2.292,331,1.452,332,2.292,333,1.744,340,3.477,378,3.243,382,3.243,546,4.637,625,2.423,626,7.66,627,2.806,628,3.189,629,4.995,630,4.328,631,2.944,632,5.02,633,5.02,634,5.02,635,5.02,636,6.898,637,6.717,638,6.717,639,6.307,640,4.328,641,3.387,642,5.602,643,3.981,644,7.384,645,5.435,646,3.933,647,3.981,648,7.384,649,5.602,650,7.384,651,3.189,652,4.615,653,7.384,654,7.384,655,3.284,656,5.736,657,5.736,658,2.806,659,5.602,660,5.736,661,5.602,662,3.933,663,5.602,664,5.602,665,5.02,666,5.602,667,4.123,668,2.873,669,2.873,670,5.602,671,5.602,672,6.618,673,4.637,674,4.637,675,5.02,676,4.637,677,5.736,678,4.637,679,5.602,680,5.602,681,4.637,682,4.637,683,4.637,684,5.602,685,5.602,686,5.602,687,5.602,688,5.602,689,5.602,690,5.602,691,4.123,692,4.351]],["title/modules/AppRoutingModule.html",[625,2.148,636,3.655]],["body/modules/AppRoutingModule.html",[0,0.357,3,0.036,4,0.044,5,0.053,36,0.76,45,0.005,51,0.118,57,0.053,100,2.634,104,3.314,107,1.926,114,3.678,137,0.003,138,0.004,139,0.003,180,1.961,199,2.202,264,1.65,300,1.217,314,2.643,315,2.551,316,2.643,317,2.643,318,2.643,319,2.643,320,2.384,321,2.236,322,2.643,323,2.643,324,2.643,325,2.508,326,2.643,327,2.597,328,2.643,329,2.643,330,2.643,331,1.675,332,2.643,627,3.237,631,3.396,636,5.958,643,3.484,647,4.364,665,5.791,693,6.462,694,4.756,695,8.094,696,5.958,697,5.999,698,3.678,699,7.411,700,5.35,701,7.35,702,4.608,703,9.264,704,6.462,705,7.196,706,5.35,707,6.462,708,5.35,709,6.462,710,3.164,711,6.462,712,5.35,713,5.791,714,5.35,715,6.462,716,6.462,717,6.462,718,5.791,719,6.462,720,4.185,721,6.462,722,6.462,723,6.462]],["title/interfaces/AppState.html",[563,1.459,724,2.148]],["body/interfaces/AppState.html",[3,0.027,4,0.027,5,0.032,12,3.084,15,3.886,25,5.917,32,0.199,34,0.203,35,0.408,45,0.005,51,0.134,52,0.47,57,0.057,66,3.084,117,1.912,137,0.002,138,0.003,139,0.002,161,1.315,180,2.029,221,3.886,343,2.771,365,2.899,401,2.505,443,1.95,563,2.006,702,4.993,710,4.295,724,2.156,725,2.759,726,4.984,727,5.304,728,4.61,729,5.662,730,5.482,731,6.933,732,6.933,733,6.933,734,6.933,735,6.933,736,6.933,737,8.374,738,6.933,739,6.933,740,6.933,741,6.933,742,6.933,743,4.984,744,4.793,745,3.872,746,4.467,747,6.826,748,4.984,749,6.826,750,6.826,751,2.837,752,2.922,753,6.826,754,4.984,755,5.651,756,4.984,757,5.651,758,4.984,759,4.984,760,4.984,761,6.826,762,4.467,763,6.826,764,4.984,765,6.826,766,4.984,767,4.984,768,6.826,769,4.984,770,6.826,771,4.984,772,6.826,773,4.984,774,6.826,775,4.984,776,6.826,777,4.984,778,6.826,779,4.984,780,4.984,781,4.984,782,4.128,783,4.984,784,4.984,785,4.984,786,5.651,787,4.984,788,4.984,789,4.984,790,5.651,791,4.984,792,4.984,793,4.467,794,5.651,795,4.984,796,4.984,797,4.984,798,5.651,799,4.984,800,4.984,801,5.651,802,4.984,803,4.984,804,5.651,805,4.984,806,6.826,807,4.984,808,4.984,809,5.651,810,4.984,811,6.826,812,4.984,813,5.303,814,4.984,815,4.984,816,4.467,817,4.467,818,4.984,819,6.826,820,4.467,821,4.467,822,4.984]],["title/classes/ApplyFilter.html",[0,0.274,823,2.911]],["body/classes/ApplyFilter.html",[0,0.457,2,0.812,3,0.037,4,0.037,5,0.044,8,1.054,32,0.206,33,0.979,34,0.274,35,0.495,36,0.973,37,1.584,38,1.17,39,0.306,40,1.691,42,0.282,44,0.446,45,0.005,46,0.437,47,0.446,49,0.8,50,0.653,51,0.114,52,0.632,57,0.061,58,0.964,61,1.97,62,2.695,77,1.519,91,1.126,92,1.126,93,1.048,137,0.003,138,0.004,139,0.003,148,2.087,165,1.331,407,2.427,457,2.298,702,4.714,823,5.502,824,5.208,825,8.281,826,6.704,827,7.422,828,4.512,829,4.342,830,5.008,831,4.19,832,5.208,833,3.93,834,5.55,835,6.008,836,4.19,837,5.814,838,6.008,839,6.008,840,5.55]],["title/injectables/ArchiveEffects.html",[804,4.111,841,1.439]],["body/injectables/ArchiveEffects.html",[0,0.293,3,0.029,4,0.029,5,0.035,8,0.904,10,1.953,11,1.874,17,2.233,28,1.924,32,0.163,34,0.217,35,0.426,39,0.243,42,0.253,44,0.354,45,0.005,46,0.346,47,0.354,49,0.851,50,0.695,51,0.127,52,0.501,57,0.035,88,2.322,91,0.723,92,0.723,93,0.673,99,3.621,106,4.2,117,2.268,126,1.22,137,0.003,138,0.004,139,0.003,165,1.056,180,2.084,184,2.088,223,3.956,230,3.65,251,2.126,279,1.981,300,1.002,343,2.253,407,1.927,435,1.174,441,2.852,461,1.562,462,1.608,463,1.585,537,1.869,560,1.519,561,1.899,563,1.562,564,1.608,579,1.585,589,4.736,804,5.905,841,2.066,842,2.345,843,5.317,844,8.048,845,8.048,846,5.57,847,5.317,848,6.33,849,7.132,850,5.541,851,4.718,852,5.905,853,7.132,854,7.132,855,7.132,856,7.132,857,7.132,858,6.038,859,5.308,860,7.708,861,3.845,862,5.317,863,7.132,864,7.132,865,7.132,866,4.978,867,7.132,868,7.132,869,7.132,870,7.132,871,6.392,872,5.317,873,2.867,874,2.727,875,4.13,876,2.441,877,2.663,878,3.914,879,3.443,880,3.215,881,3.117,882,4.402,883,5.317,884,4.765,885,3.323,886,3.215,887,5.317]],["title/components/ArchiveFiltersComponent.html",[264,1.013,342,1.719]],["body/components/ArchiveFiltersComponent.html",[0,0.213,3,0.021,4,0.021,5,0.025,17,2.246,28,2.018,32,0.179,33,0.62,34,0.158,35,0.34,39,0.177,42,0.283,44,0.257,45,0.005,46,0.486,47,0.257,49,0.461,50,0.659,51,0.117,52,0.364,57,0.049,58,0.555,61,1.135,79,0.611,83,3.292,100,1.151,107,1.151,112,1.168,117,2.045,137,0.004,138,0.003,139,0.002,148,1.202,158,2.138,161,0.854,165,1.482,180,2.141,181,1.891,184,1.473,199,1.316,230,2.871,250,1.151,251,2.225,264,1.379,265,1.337,266,1.911,267,1.38,268,1.704,269,1.402,270,1.402,272,2.537,273,1.316,274,3.59,275,2.669,277,2.067,279,1.073,281,1.398,282,2.896,297,1.38,298,2.075,300,0.728,302,2.264,303,2.336,304,1.981,333,1.202,334,2.067,335,3.076,336,1.257,337,2.71,338,1.402,339,1.402,340,1.337,341,1.402,342,2.583,343,2.974,344,2.067,345,1.337,346,2.067,347,1.337,348,1.402,349,1.316,350,1.402,351,1.337,352,1.402,353,2.71,354,1.337,355,1.402,356,1.296,357,2.067,358,1.337,359,1.296,360,1.358,361,1.38,362,1.402,363,1.358,364,1.38,365,1.276,366,2.067,367,1.337,368,1.402,369,2.71,370,1.296,371,1.402,372,1.337,373,1.337,374,1.402,375,1.316,376,1.402,377,1.337,378,1.337,379,1.402,380,1.316,381,1.402,382,1.337,383,1.402,384,1.358,385,1.337,386,1.402,387,1.337,388,2.034,389,1.337,390,2.455,391,1.402,392,1.337,393,1.402,394,1.337,395,1.402,396,1.316,397,1.337,398,2.754,399,1.337,400,1.337,401,2.273,402,1.337,403,1.402,404,1.337,405,1.337,406,1.337,407,1.538,408,1.316,409,1.316,410,1.402,411,1.316,412,1.402,413,1.316,414,1.38,415,1.402,537,1.358,560,1.103,563,1.135,564,1.168,576,2.264,579,1.151,589,1.981,606,3.85,613,4.191,624,5.798,658,1.935,851,2.264,866,4.291,871,3.462,888,6.442,889,7.595,890,3.462,891,6.763,892,5.103,893,6.763,894,6.763,895,6.061,896,4.978,897,7.464,898,5.048,899,5.694,900,3.863,901,3.863,902,4.132,903,3.863,904,5.694,905,3.863,906,3.863,907,3.863,908,3.863,909,3.198,910,2.199,911,5.382,912,3.863,913,3.198,914,3.863,915,3.863,916,5.103,917,5.103,918,2.414,919,5.103,920,3.462,921,5.103,922,3.462,923,5.103,924,3.462,925,5.103,926,3.462,927,5.103,928,3.863,929,3.863,930,2.712,931,3.863,932,1.891,933,3.863,934,3.863,935,3.863,936,5.694,937,3.863,938,3.863,939,3.863,940,3.863,941,3.198,942,3.462,943,3.462,944,3.462,945,3.863,946,3.863,947,3.863,948,3.863,949,3.863,950,5.694,951,3.863,952,3.863,953,3.863,954,3.863,955,3.863,956,3.863,957,3.863,958,3.863,959,3.863,960,5.694,961,3.462,962,6.061,963,5.103,964,3.462,965,3.863,966,3.863,967,3.198,968,3.863]],["title/components/ArchiveListComponent.html",[264,1.013,345,1.719]],["body/components/ArchiveListComponent.html",[0,0.27,3,0.027,4,0.037,5,0.044,17,1.92,32,0.176,33,0.735,34,0.2,36,0.907,39,0.224,42,0.261,44,0.326,45,0.005,46,0.541,47,0.326,51,0.117,52,0.462,57,0.032,61,1.439,100,1.46,107,1.46,112,1.481,117,2.213,137,0.002,138,0.003,139,0.002,147,2.789,151,2.863,152,3.275,161,1.011,250,1.46,251,2.478,264,1.573,265,1.695,266,2.263,267,1.75,268,2.16,269,1.778,270,1.778,272,2.894,273,1.669,274,3.64,275,3.162,277,2.449,281,1.657,282,3.226,297,1.187,298,2.07,300,0.923,314,2.004,315,1.934,316,2.004,317,2.004,318,2.004,319,2.004,320,1.808,321,1.695,322,2.004,323,2.004,324,2.004,325,1.901,326,2.004,327,1.968,328,2.004,329,2.004,330,2.004,331,1.27,332,2.004,333,1.525,334,2.449,335,2.41,336,1.594,337,3.018,338,1.778,339,1.778,340,1.695,341,1.778,342,1.695,343,3.052,344,2.449,345,2.877,346,2.449,347,1.695,348,1.778,349,1.669,350,1.778,351,1.695,352,1.778,353,3.018,354,1.695,355,1.778,356,1.644,357,2.449,358,1.695,359,1.644,360,1.722,361,1.75,362,1.778,363,1.722,364,1.75,365,1.619,366,2.449,367,1.695,368,1.778,369,3.018,370,1.644,371,1.778,372,1.695,373,1.695,374,1.778,375,1.669,376,1.778,377,1.695,378,1.695,379,1.778,380,1.669,381,1.778,382,1.695,383,1.778,384,1.722,385,1.695,386,1.778,387,1.695,388,2.41,389,1.695,390,2.801,391,1.778,392,1.695,393,1.778,394,1.695,395,1.778,396,1.669,397,1.695,398,1.695,399,1.695,400,1.695,401,1.927,402,1.695,403,1.778,404,1.695,405,1.695,406,1.695,407,1.323,408,1.669,409,1.669,410,1.778,411,1.669,412,1.778,413,1.669,414,1.75,415,1.778,461,2.267,462,1.481,463,1.46,477,1.594,480,3.275,504,3.275,537,1.722,560,1.399,561,1.75,563,1.439,564,1.481,579,1.46,616,4.54,617,4.369,618,4.055,702,3.84,876,2.249,888,6.121,969,7.218,970,4.39,971,6.915,972,6.046,973,6.046,974,4.899,975,4.899,976,2.962,977,4.39,978,4.39,979,3.805,980,5.24,981,3.805,982,3.805,983,4.055]],["title/components/ArchiveListPageComponent.html",[264,1.013,347,1.719]],["body/components/ArchiveListPageComponent.html",[0,0.248,3,0.025,4,0.035,5,0.041,17,2.243,32,0.177,33,0.691,34,0.183,35,0.379,36,0.528,39,0.205,42,0.275,44,0.422,45,0.005,46,0.55,47,0.422,51,0.117,52,0.423,57,0.029,61,1.319,100,1.338,106,2.745,107,1.338,112,1.357,117,2.153,137,0.002,138,0.003,139,0.002,152,1.905,161,0.951,250,1.338,251,3.041,264,1.501,265,1.553,266,2.129,267,1.603,268,1.98,269,1.629,270,1.629,272,2.762,273,1.529,274,3.623,275,2.975,277,2.304,281,1.559,282,3.106,297,1.538,298,2.455,300,0.846,314,1.836,315,1.772,316,1.836,317,1.836,318,1.836,319,1.836,320,1.656,321,1.553,322,1.836,323,1.836,324,1.836,325,1.742,326,1.836,327,1.804,328,1.836,329,1.836,330,1.836,331,1.164,332,1.836,333,1.397,334,2.304,335,2.267,336,1.461,337,2.905,338,1.629,339,1.629,340,1.553,341,1.629,342,1.553,343,2.998,344,2.304,345,1.553,346,2.304,347,2.77,348,1.629,349,1.529,350,1.629,351,1.553,352,1.629,353,2.905,354,1.553,355,1.629,356,1.506,357,2.304,358,1.553,359,1.506,360,1.578,361,1.603,362,1.629,363,1.578,364,1.603,365,1.483,366,2.304,367,1.553,368,1.629,369,2.905,370,1.506,371,1.629,372,1.553,373,1.553,374,1.629,375,1.529,376,1.629,377,1.553,378,1.553,379,1.629,380,1.529,381,1.629,382,1.553,383,1.629,384,1.578,385,1.553,386,1.629,387,1.553,388,2.267,389,1.553,390,2.673,391,1.629,392,1.553,393,1.629,394,1.553,395,1.629,396,1.529,397,1.553,398,1.553,399,1.553,400,1.553,401,1.813,402,1.553,403,1.629,404,1.553,405,1.553,406,1.553,407,1.213,408,1.529,409,1.529,410,1.629,411,1.529,412,1.629,413,1.529,414,1.603,415,1.629,477,1.461,537,1.578,560,1.282,561,1.603,563,1.319,564,1.357,579,1.338,588,2.248,589,2.302,606,4.191,876,2.061,881,2.631,882,3.716,888,6.327,896,6.215,910,2.555,941,3.716,942,4.023,943,4.023,944,4.023,969,7.46,976,2.714,978,4.023,984,8.076,985,4.489,986,7.363,987,6.347,988,7.363,989,6.347,990,6.347,991,4.489,992,6.347,993,4.489,994,6.347,995,4.489,996,4.489,997,4.489,998,3.716,999,4.489,1000,3.487,1001,4.489,1002,3.304,1003,4.489,1004,4.489,1005,8.766,1006,6.347,1007,6.347,1008,6.347,1009,6.347,1010,6.347]],["title/classes/ArchiveQuerySuccess.html",[0,0.274,880,3.003]],["body/classes/ArchiveQuerySuccess.html",[0,0.517,2,0.677,3,0.031,4,0.031,5,0.036,8,1.089,10,2.021,32,0.205,33,1.041,34,0.228,35,0.441,36,0.867,37,1.729,38,1.209,39,0.256,40,1.411,42,0.259,44,0.372,45,0.005,46,0.364,47,0.372,49,0.667,50,0.545,51,0.105,52,0.528,57,0.063,58,0.804,77,1.719,79,0.6,91,1.299,92,1.299,93,1.209,106,3.796,126,1.171,137,0.004,138,0.004,139,0.003,161,1.106,165,1.465,230,2.374,258,1.936,331,1.45,343,2.96,407,1.511,432,3.784,435,1.822,436,1.411,437,1.392,438,1.554,439,1.554,457,2.111,461,1.644,462,1.692,463,1.667,477,1.821,479,2.099,508,2.209,551,3.185,851,4.839,866,3.016,879,3.623,880,5.307,881,4.839,885,3.497,886,4.991,1011,3.623,1012,7.378,1013,5.594,1014,5.18,1015,5.159,1016,3.623,1017,4.991,1018,3.928,1019,3.928,1020,3.928,1021,3.765,1022,3.928,1023,3.928,1024,3.765]],["title/interfaces/ArchiveState.html",[724,2.148,731,4.111]],["body/interfaces/ArchiveState.html",[3,0.039,4,0.039,5,0.046,28,1.917,32,0.193,34,0.289,35,0.512,45,0.005,51,0.117,57,0.056,79,0.988,106,4.139,137,0.004,138,0.004,139,0.004,148,2.867,165,1.9,180,1.718,185,2.752,199,2.416,461,2.084,462,2.144,463,2.114,508,3.868,609,6.123,724,3.068,725,3.926,731,7.626,829,4.593,866,5.281,885,4.432,1021,6.594,1025,7.092,1026,7.092,1027,7.092,1028,7.092,1029,7.092,1030,2.901]],["title/components/ArchivesComponent.html",[264,1.013,349,1.692]],["body/components/ArchivesComponent.html",[0,0.282,3,0.028,4,0.038,5,0.045,17,2.203,32,0.179,33,0.757,34,0.209,35,0.415,36,0.601,39,0.234,42,0.266,44,0.34,45,0.005,46,0.551,47,0.34,51,0.119,52,0.482,57,0.033,61,1.503,100,1.524,107,1.524,112,1.547,117,2.242,137,0.003,138,0.003,139,0.003,161,1.041,165,1.016,250,1.524,251,2.071,264,1.609,265,1.77,266,2.331,267,1.827,268,2.256,269,1.857,270,1.857,272,2.96,273,1.743,274,3.648,275,3.257,277,2.522,281,1.706,282,3.285,297,1.239,298,1.569,300,0.963,314,2.092,315,2.019,316,2.092,317,2.092,318,2.092,319,2.092,320,1.887,321,1.77,322,2.092,323,2.092,324,2.092,325,1.985,326,2.092,327,2.055,328,2.092,329,2.092,330,2.092,331,1.326,332,2.092,333,1.592,334,2.522,335,2.482,336,1.665,337,3.073,338,1.857,339,1.857,340,1.77,341,1.857,342,1.77,343,2.493,344,2.522,345,1.77,346,2.522,347,1.77,348,1.857,349,2.884,350,1.857,351,1.77,352,1.857,353,3.073,354,1.77,355,1.857,356,1.716,357,2.522,358,1.77,359,1.716,360,1.798,361,1.827,362,1.857,363,1.798,364,1.827,365,1.69,366,2.522,367,1.77,368,1.857,369,3.073,370,1.716,371,1.857,372,1.77,373,1.77,374,1.857,375,1.743,376,1.857,377,1.77,378,1.77,379,1.857,380,1.743,381,1.857,382,1.77,383,1.857,384,1.798,385,1.77,386,1.857,387,1.77,388,2.482,389,1.77,390,2.864,391,1.857,392,1.77,393,1.857,394,1.77,395,1.857,396,1.743,397,1.77,398,1.77,399,1.77,400,1.77,401,1.984,402,1.77,403,1.857,404,1.77,405,1.77,406,1.77,407,1.382,408,1.743,409,1.743,410,1.857,411,1.743,412,1.857,413,1.743,414,1.827,415,1.857,461,1.503,462,1.547,463,1.524,477,1.665,480,3.349,504,3.349,537,1.798,560,1.461,561,1.827,563,1.503,564,1.547,579,1.524,706,5.752,876,2.348,884,4.584,976,3.093,977,4.584,1000,3.973,1002,3.765,1031,5.114,1032,7.89,1033,6.948,1034,6.948,1035,5.114,1036,5.114,1037,5.114,1038,4.234,1039,5.114,1040,4.584,1041,5.114]],["title/modules/ArchivesModule.html",[625,2.148,1042,3.858]],["body/modules/ArchivesModule.html",[0,0.327,3,0.033,4,0.042,5,0.05,36,0.696,45,0.005,51,0.129,57,0.039,73,2.717,107,1.764,137,0.003,138,0.004,139,0.003,251,2.281,300,1.115,302,3.469,303,3.579,304,3.925,314,2.421,315,2.337,316,2.421,317,2.421,318,2.421,319,2.421,320,2.184,321,2.048,322,2.421,323,2.421,324,2.421,325,2.297,326,2.421,327,2.378,328,2.421,329,2.421,330,2.421,331,1.534,332,2.421,333,1.842,342,3.292,345,3.292,347,3.292,349,3.242,367,3.292,387,3.292,625,2.56,627,2.965,628,3.369,629,5.13,630,3.469,631,3.11,640,4.487,641,3.579,643,4.126,647,4.126,652,4.784,655,3.469,656,5.946,657,5.946,658,2.965,660,5.946,662,4.155,667,5.634,668,3.035,669,3.035,706,4.9,889,4.9,969,6.336,984,5.304,1042,8.077,1043,5.304,1044,5.304,1045,5.304,1046,7.002,1047,6.68,1048,5.918,1049,9.288,1050,5.918,1051,5.304,1052,5.304,1053,5.918,1054,5.304,1055,5.304,1056,6.86,1057,5.304,1058,5.304,1059,5.304]],["title/modules/ArchivesRoutingModule.html",[625,2.148,1046,3.655]],["body/modules/ArchivesRoutingModule.html",[0,0.365,3,0.036,4,0.045,5,0.053,36,0.777,45,0.005,51,0.124,57,0.043,107,1.97,137,0.003,138,0.004,139,0.003,180,1.602,264,1.904,300,1.245,314,2.705,315,2.61,316,2.705,317,2.705,318,2.705,319,2.705,320,2.439,321,2.288,322,2.705,323,2.705,324,2.705,325,2.565,326,2.705,327,2.657,328,2.705,329,2.705,330,2.705,331,1.714,332,2.705,349,2.797,356,2.996,370,2.755,513,3.186,627,3.312,631,3.475,643,3.564,647,4.426,694,4.866,696,6.043,697,5.783,698,3.763,699,6.378,700,5.473,701,7.205,705,5.136,712,5.473,1046,6.043,1051,5.925,1060,6.611,1061,5.925,1062,5.136,1063,5.473,1064,5.925,1065,8.003,1066,5.925,1067,5.925,1068,5.925,1069,5.925,1070,5.136]],["title/classes/AuthObject.html",[0,0.274,1071,4.111]],["body/classes/AuthObject.html",[0,0.408,2,0.347,3,0.016,4,0.016,5,0.019,7,1.193,9,2.38,12,3.243,13,2.38,17,1.929,23,2.579,24,1.074,27,1.371,28,1.933,32,0.171,34,0.117,35,0.271,36,1.103,37,0.798,39,0.292,41,4.411,42,0.218,44,0.19,45,0.005,46,0.366,47,0.374,51,0.115,52,0.27,53,3.888,54,1.505,55,1.853,57,0.048,58,0.412,64,2.38,66,1.592,71,2.814,78,4.332,79,1.049,80,4.87,81,4.955,82,4.29,83,2.817,98,3.744,99,3.721,104,3.275,107,1.675,110,3.636,117,1.817,126,0.406,137,0.001,138,0.002,139,0.001,148,1.749,160,1.505,165,0.569,180,2.189,184,2.146,185,2.478,188,2.143,190,1.592,199,1.914,210,1.263,230,1.922,255,3.811,258,2.932,279,2.509,298,0.878,300,0.539,320,2.357,331,1.656,360,1.007,401,1.987,425,1.074,443,0.818,474,1.092,493,1.023,543,1.434,560,0.818,561,1.023,562,2.01,563,0.841,564,0.866,576,1.678,578,5.123,579,0.853,616,3.048,651,1.63,751,1.63,752,1.678,841,1.312,876,1.314,877,1.434,910,1.63,932,2.751,976,1.731,1030,1.171,1071,5.76,1072,2.37,1073,4.059,1074,6.631,1075,5.724,1076,6.236,1077,2.863,1078,2.863,1079,2.863,1080,2.863,1081,2.863,1082,2.863,1083,3.992,1084,2.37,1085,2.224,1086,4.484,1087,2.224,1088,2.566,1089,7.278,1090,2.37,1091,1.585,1092,1.731,1093,2.37,1094,4.059,1095,2.566,1096,1.854,1097,2.566,1098,2.566,1099,5.035,1100,2.566,1101,2.566,1102,2.566,1103,2.566,1104,2.566,1105,2.566,1106,2.566,1107,2.566,1108,2.566,1109,2.566,1110,2.37,1111,2.37,1112,2.566,1113,2.566,1114,2.566,1115,2.566,1116,2.566,1117,6.631,1118,6.945,1119,4.059,1120,6.236,1121,2.566,1122,2.566,1123,2.566,1124,4.059,1125,2.566,1126,5.724,1127,4.059,1128,2.566,1129,2.566,1130,2.566,1131,2.566,1132,2.566,1133,2.566,1134,4.059,1135,2.566,1136,4.059,1137,2.566,1138,2.37,1139,3.333,1140,2.566,1141,3.749,1142,2.224,1143,2.566,1144,2.566,1145,4.299,1146,2.566,1147,4.059,1148,2.566,1149,5.035,1150,2.566,1151,6.652,1152,5.035,1153,5.035,1154,5.035,1155,5.035,1156,5.035,1157,4.651,1158,2.566,1159,2.566,1160,2.566,1161,2.566,1162,4.059,1163,2.37,1164,3.294,1165,4.059,1166,4.059,1167,2.655,1168,2.566,1169,2.566,1170,2.566,1171,5.035,1172,3.512,1173,4.059,1174,2.566,1175,4.059,1176,2.566,1177,3.749,1178,4.059,1179,4.059,1180,2.566,1181,2.566,1182,4.059,1183,4.059,1184,2.566,1185,2.566,1186,2.566,1187,2.566,1188,2.566,1189,2.566,1190,2.566,1191,2.566,1192,2.566,1193,2.566,1194,2.566,1195,2.566,1196,2.566,1197,2.566,1198,1.263,1199,2.566,1200,2.566,1201,2.566,1202,2.566,1203,2.566,1204,2.566,1205,2.566,1206,2.566,1207,2.37,1208,2.566,1209,3.333,1210,6.236,1211,2.566,1212,4.059,1213,5.287,1214,4.651,1215,2.566,1216,2.37,1217,2.566,1218,2.566,1219,2.933,1220,2.566,1221,4.059,1222,2.566,1223,4.059,1224,2.566,1225,2.224,1226,2.566,1227,2.566,1228,2.566,1229,2.566,1230,2.224,1231,2.566,1232,3.18,1233,2.566,1234,2.566,1235,2.566,1236,2.566,1237,2.566,1238,2.566,1239,2.566,1240,2.566,1241,2.566,1242,2.566,1243,2.566,1244,2.566,1245,2.566,1246,2.566,1247,2.566,1248,2.566,1249,2.566,1250,5.035,1251,4.059,1252,2.566,1253,2.566,1254,4.059,1255,4.059,1256,2.566,1257,2.566,1258,2.566,1259,2.566,1260,2.566,1261,2.566,1262,2.566,1263,2.37,1264,2.566,1265,2.566,1266,2.566,1267,2.224,1268,2.566,1269,2.566,1270,2.566,1271,2.566,1272,2.566,1273,2.566,1274,2.566,1275,4.059,1276,2.566,1277,2.566,1278,2.566,1279,2.566,1280,2.566,1281,2.566,1282,2.566,1283,2.566,1284,2.566,1285,2.566,1286,2.566,1287,2.37,1288,4.364,1289,2.566,1290,2.566,1291,2.224,1292,2.566,1293,4.059,1294,3.749,1295,2.169,1296,2.566,1297,2.37,1298,2.37,1299,2.566]],["title/interfaces/AuthState.html",[724,2.148,732,4.111]],["body/interfaces/AuthState.html",[3,0.037,4,0.037,5,0.044,28,1.504,32,0.203,34,0.275,35,0.496,45,0.005,51,0.106,53,5.072,54,3.534,55,4.149,56,3.293,57,0.054,78,5.203,79,1.116,80,5.203,81,4.95,82,5.343,83,3.969,137,0.003,138,0.004,139,0.003,180,1.629,185,3.865,320,3.561,724,2.909,725,3.723,732,7.45,1300,6.725,1301,7.497,1302,7.497,1303,6.725,1304,6.725]],["title/injectables/AuthenticationEffects.html",[15,2.827,841,1.439]],["body/injectables/AuthenticationEffects.html",[0,0.139,1,3.432,3,0.014,4,0.014,5,0.016,7,1.705,8,1.064,11,1.561,12,3.364,13,4.032,14,2.05,15,2.33,17,2.429,19,3.971,20,3.592,22,2.475,23,2.727,28,2.159,32,0.186,34,0.103,35,0.245,37,1.398,39,0.187,42,0.256,44,0.49,45,0.005,46,0.5,47,0.343,49,0.879,50,0.682,51,0.115,52,0.238,55,3.333,56,1.235,57,0.016,59,1.436,62,1.332,63,2.859,64,3.122,66,3.038,68,2.399,69,2.859,72,3.971,74,4.784,75,2.859,79,0.439,81,4.275,83,1.805,88,2.276,91,0.556,92,0.556,93,0.518,95,2.475,99,3.567,102,2.727,104,4.358,105,2.33,106,3.025,108,2.475,111,2.399,115,2.475,117,1.947,121,3.592,125,2.475,126,0.358,128,3.592,130,3.592,132,3.271,133,2.475,136,5.14,137,0.003,138,0.002,139,0.001,146,0.931,158,3.289,164,1.158,165,1.463,167,1.158,180,1.785,184,2.111,212,3.382,223,4.22,230,1.737,279,2.046,281,1.005,297,1.251,298,0.774,300,0.475,320,2.192,424,2.784,425,2.229,437,0.628,441,2.32,469,1.113,537,0.887,543,3.503,560,0.721,561,0.901,562,1.772,563,0.741,564,0.763,569,1.698,573,2.089,578,3.592,579,0.752,606,2.33,607,1.857,614,3.179,698,1.436,729,5.311,841,1.186,842,1.113,846,4.77,848,4.372,850,4.615,852,3.388,859,2.266,861,3.77,873,1.36,874,1.294,875,1.96,876,1.158,877,2.586,878,1.857,976,3.122,1030,1.032,1096,4.969,1138,3.388,1139,3.012,1142,5.432,1145,2.755,1163,3.388,1198,3.384,1209,3.012,1213,3.388,1214,5.789,1291,1.96,1305,2.523,1306,4.093,1307,5.163,1308,4.093,1309,5.94,1310,5.94,1311,2.523,1312,4.093,1313,4.093,1314,4.093,1315,4.093,1316,3.668,1317,3.998,1318,4.093,1319,2.523,1320,4.093,1321,2.523,1322,4.093,1323,4.093,1324,2.523,1325,4.093,1326,2.523,1327,4.093,1328,2.874,1329,4.093,1330,2.523,1331,6.352,1332,6.993,1333,4.093,1334,5.432,1335,4.093,1336,4.093,1337,4.093,1338,3.981,1339,4.093,1340,4.093,1341,4.093,1342,4.093,1343,4.093,1344,4.093,1345,5.94,1346,5.94,1347,5.94,1348,4.093,1349,6.993,1350,5.94,1351,6.601,1352,4.093,1353,4.093,1354,5.163,1355,4.093,1356,4.093,1357,4.093,1358,4.093,1359,4.395,1360,5.163,1361,4.093,1362,4.093,1363,2.755,1364,3.668,1365,4.093,1366,4.093,1367,4.093,1368,4.093,1369,2.523,1370,4.093,1371,3.388,1372,3.012,1373,4.093,1374,5.324,1375,4.093,1376,3.179,1377,2.558,1378,4.093,1379,2.523,1380,4.093,1381,4.093,1382,4.093,1383,5.94,1384,4.093,1385,2.523,1386,2.755,1387,4.093,1388,4.093,1389,4.093,1390,4.093,1391,2.523,1392,4.093,1393,4.093,1394,4.093,1395,5.163,1396,5.163,1397,4.093,1398,4.093,1399,2.558,1400,4.093,1401,4.093,1402,4.093,1403,2.523,1404,4.093,1405,2.475,1406,2.523,1407,1.698,1408,2.523,1409,1.857,1410,1.698,1411,1.577,1412,1.857,1413,6.53,1414,2.523,1415,2.523,1416,1.577,1417,2.523,1418,3.027,1419,2.523,1420,2.523,1421,2.755,1422,2.523,1423,2.523,1424,2.523,1425,2.523,1426,2.523,1427,2.523,1428,2.523,1429,4.093,1430,2.523,1431,2.523,1432,2.523,1433,2.523,1434,2.523]],["title/components/BaseSettingComponent.html",[264,1.013,351,1.719]],["body/components/BaseSettingComponent.html",[0,0.212,3,0.021,4,0.021,5,0.025,28,1.27,32,0.188,33,0.619,34,0.157,35,0.339,36,0.793,39,0.176,42,0.307,44,0.528,45,0.005,46,0.575,47,0.528,49,0.678,50,0.81,51,0.118,52,0.363,57,0.025,61,1.131,79,0.799,93,0.487,100,1.147,107,2.221,112,1.164,117,2.042,123,2.327,137,0.002,138,0.003,139,0.002,148,2.101,151,2.41,152,3.162,161,0.851,165,0.764,180,0.933,184,1.47,185,1.494,210,1.697,218,1.843,250,1.147,251,1.693,264,1.519,265,1.332,266,1.906,267,1.375,269,1.397,270,1.397,272,2.532,273,1.311,274,3.589,277,2.062,279,2.503,281,1.395,282,2.891,297,2.139,298,2.438,300,0.725,321,2.336,333,1.198,334,2.062,335,2.029,336,1.253,337,2.705,338,1.397,339,1.397,340,1.332,341,1.397,342,1.332,343,2.132,344,2.062,345,1.332,346,2.062,347,1.332,348,1.397,349,1.311,350,1.397,351,2.579,352,3.122,353,2.705,354,1.332,355,1.397,356,1.291,357,2.062,358,1.332,359,1.291,360,1.353,361,1.375,362,1.397,363,1.353,364,1.375,365,1.272,366,2.062,367,1.332,368,1.397,369,2.705,370,1.291,371,1.397,372,1.332,373,1.332,374,1.397,375,1.311,376,1.397,377,1.332,378,1.332,379,1.397,380,1.311,381,1.397,382,1.332,383,1.397,384,1.353,385,1.332,386,1.397,387,1.332,388,2.029,389,1.332,390,2.45,391,1.397,392,1.332,393,1.397,394,1.332,395,1.397,396,1.311,397,1.332,398,1.332,399,1.332,400,1.332,401,1.622,402,1.332,403,1.397,404,1.332,405,1.332,406,1.332,407,1.534,408,1.311,409,1.311,410,1.397,411,1.311,412,1.397,413,1.311,414,1.375,415,1.397,537,1.353,560,1.099,561,1.375,563,1.131,564,1.164,569,2.59,576,2.256,589,1.974,606,2.191,658,1.928,710,2.781,902,4.125,910,2.191,1091,2.131,1198,2.505,1219,3.678,1435,9.838,1436,7.241,1437,2.99,1438,3.956,1439,6.039,1440,4.412,1441,4.739,1442,4.081,1443,6.709,1444,4.739,1445,3.434,1446,4.739,1447,3.987,1448,4.368,1449,5.231,1450,3.987,1451,4.739,1452,4.739,1453,4.739,1454,5.679,1455,3.849,1456,3.449,1457,3.449,1458,2.702,1459,3.849,1460,2.702,1461,3.849,1462,3.849,1463,3.987,1464,4.967,1465,3.849,1466,2.702,1467,3.849,1468,3.849,1469,3.849,1470,2.702,1471,3.849,1472,3.849,1473,3.849,1474,3.849,1475,3.449,1476,2.191,1477,3.186,1478,3.449,1479,3.449,1480,2.99,1481,4.412,1482,2.833,1483,2.702,1484,3.449,1485,2.702,1486,3.849,1487,3.849,1488,3.849,1489,3.449,1490,2.702,1491,3.849,1492,5.679,1493,3.849,1494,5.09,1495,3.849,1496,3.849,1497,3.849,1498,2.99,1499,3.849,1500,4.412,1501,3.849,1502,2.99,1503,3.849,1504,2.99,1505,3.849,1506,3.849,1507,3.849,1508,3.849,1509,3.849,1510,3.849,1511,3.849,1512,2.99,1513,2.99,1514,3.849,1515,3.849,1516,3.849,1517,3.849,1518,3.849,1519,3.849,1520,3.849,1521,3.849,1522,3.849,1523,3.449,1524,3.849,1525,4.412]],["title/directives/CalcHeightDirective.html",[336,1.616,409,1.692]],["body/directives/CalcHeightDirective.html",[0,0.297,3,0.03,4,0.03,5,0.035,28,1.203,32,0.187,34,0.22,35,0.429,39,0.246,42,0.297,44,0.478,45,0.005,46,0.468,47,0.478,50,0.524,51,0.103,57,0.035,79,1.044,93,0.68,137,0.003,138,0.004,139,0.003,151,3.05,152,3.667,180,1.961,184,1.763,272,2.017,273,1.832,274,2.487,279,2.573,281,1.765,297,1.303,298,1.65,300,1.013,321,2.99,331,1.394,335,2.567,336,2.634,408,1.832,409,2.944,490,3.05,500,2.087,560,1.536,561,1.921,579,1.603,616,3.619,617,6.126,980,4.177,1030,2.2,1374,4.819,1376,4.177,1526,9.611,1527,5.377,1528,8.094,1529,7.186,1530,9.459,1531,9.459,1532,9.003,1533,5.045,1534,6.287,1535,5.377,1536,7.743,1537,7.186,1538,7.186,1539,5.377,1540,5.377,1541,5.377,1542,5.377,1543,7.186,1544,5.377,1545,4.177,1546,4.819,1547,5.377,1548,5.377,1549,5.377,1550,5.377,1551,5.377,1552,5.377,1553,5.377,1554,4.819,1555,4.819,1556,5.377,1557,7.254,1558,7.186,1559,5.377,1560,4.819,1561,5.377,1562,5.377,1563,5.377,1564,5.377,1565,7.186,1566,5.377,1567,9.003,1568,5.377,1569,5.377,1570,5.377,1571,8.094,1572,5.377,1573,5.377,1574,5.377,1575,6.44,1576,5.377,1577,5.377,1578,4.819,1579,5.377,1580,5.377,1581,5.377,1582,6.44,1583,5.377,1584,5.377,1585,5.377,1586,7.186,1587,5.377,1588,5.377,1589,7.186,1590,8.094,1591,5.377,1592,5.377,1593,5.377,1594,7.186,1595,5.377,1596,5.377,1597,5.377,1598,5.377,1599,4.819,1600,7.186,1601,7.186,1602,5.377,1603,5.377,1604,5.377,1605,5.377,1606,5.377]],["title/classes/Card.html",[0,0.274,161,0.744]],["body/classes/Card.html",[0,0.426,2,0.726,3,0.033,4,0.033,5,0.039,11,2.243,32,0.121,38,1.303,39,0.39,42,0.188,44,0.398,45,0.005,46,0.39,47,0.398,51,0.098,57,0.056,58,0.862,79,1.128,91,1.049,92,1.049,93,0.976,137,0.003,138,0.004,139,0.003,146,3.63,160,5.17,161,1.157,162,4.621,164,2.751,181,4.178,190,3,258,3.512,268,2.643,462,1.812,463,1.786,474,3.256,536,6.327,620,4.208,1607,4.961,1608,5.371,1609,5.002,1610,5.991,1611,6.281,1612,6.281,1613,6.281,1614,6.288,1615,6.629,1616,6.629,1617,6.281,1618,6.281,1619,6.281,1620,5.993,1621,5.994,1622,7.065,1623,4.655,1624,4.033,1625,5.371,1626,4.961]],["title/components/CardComponent.html",[264,1.013,354,1.719]],["body/components/CardComponent.html",[0,0.185,3,0.018,4,0.028,5,0.033,8,0.922,28,1.143,32,0.187,33,0.557,34,0.137,35,0.305,36,0.927,39,0.153,42,0.302,44,0.412,45,0.005,46,0.514,47,0.412,49,0.829,50,0.605,51,0.119,52,0.315,57,0.022,61,0.983,64,1.758,79,1.011,83,1.475,88,1.089,91,0.455,92,0.455,93,0.423,100,0.997,107,0.997,112,1.011,117,2.078,137,0.002,138,0.003,139,0.002,148,1.591,151,2.169,152,2.633,158,2.83,161,1.368,162,1.716,165,0.664,180,1.813,184,1.96,188,1.276,192,2.023,199,2.366,217,2.023,250,1.849,251,1.523,258,2.147,264,1.265,265,1.158,266,1.715,267,1.195,268,1.475,269,1.214,270,1.214,272,2.327,273,1.14,274,3.554,275,2.396,277,1.855,279,2.409,281,1.255,282,2.695,285,6.794,297,1.988,298,2.131,300,0.63,301,1.105,314,1.368,315,1.321,316,1.368,317,1.368,318,1.368,319,1.368,320,1.234,321,2.73,322,1.368,323,1.368,324,1.368,325,1.298,326,1.368,327,1.344,328,1.368,329,1.368,330,1.368,331,0.867,332,1.368,333,1.041,334,1.855,335,1.826,336,1.089,337,2.521,338,1.214,339,1.214,340,1.158,341,1.214,342,1.158,343,1.96,344,1.855,345,1.158,346,1.855,347,1.158,348,1.214,349,1.14,350,1.214,351,1.158,352,1.214,353,2.521,354,2.403,355,1.214,356,1.122,357,1.855,358,1.158,359,1.122,360,1.176,361,1.195,362,1.214,363,1.176,364,1.195,365,1.105,366,1.855,367,1.158,368,1.214,369,2.521,370,1.122,371,1.214,372,1.158,373,1.158,374,1.214,375,1.14,376,1.214,377,1.158,378,1.158,379,1.214,380,1.14,381,1.214,382,1.158,383,1.214,384,1.176,385,1.158,386,1.214,387,1.158,388,1.826,389,1.158,390,2.252,391,1.214,392,1.158,393,1.214,394,1.158,395,1.214,396,1.14,397,1.158,398,1.158,399,1.158,400,1.158,401,2.137,402,1.158,403,1.214,404,1.158,405,1.158,406,1.158,407,0.904,408,1.14,409,1.14,410,1.214,411,1.14,412,1.214,413,1.14,414,1.195,415,1.214,418,1.803,441,2.262,461,2.682,462,1.011,463,0.997,477,2.26,479,1.255,513,1.298,532,4.819,536,2.349,560,0.955,561,1.195,563,0.983,564,1.011,565,2.462,576,1.961,579,0.997,589,1.716,593,3.97,613,2.462,668,1.716,669,1.716,698,1.904,727,3.091,729,4.93,896,4.566,898,4.071,910,1.904,918,2.091,932,1.638,967,2.769,1145,2.251,1338,3.531,1416,2.091,1418,4.071,1421,3.44,1438,3.636,1442,3.751,1443,4.175,1448,4.071,1483,2.349,1494,2.998,1617,2.462,1624,2.251,1627,3.345,1628,6.203,1629,5.111,1630,5.559,1631,5.559,1632,6.203,1633,6.203,1634,5.111,1635,6.945,1636,5.111,1637,6.945,1638,6.203,1639,3.195,1640,3.345,1641,3.434,1642,4.497,1643,5.111,1644,3.345,1645,3.345,1646,5.111,1647,3.345,1648,3.345,1649,5.111,1650,3.345,1651,3.345,1652,3.345,1653,3.345,1654,3.345,1655,3.345,1656,3.345,1657,3.345,1658,3.345,1659,3.345,1660,3.345,1661,3.345,1662,2.998,1663,3.345,1664,2.769,1665,2.998,1666,3.345,1667,2.998,1668,3.345,1669,4.581,1670,3.345,1671,2.598,1672,2.769,1673,2.598,1674,2.998,1675,3.345,1676,2.349,1677,2.251,1678,3.345,1679,3.345,1680,3.345,1681,6.203,1682,3.345,1683,3.345,1684,3.345,1685,3.345,1686,3.345,1687,2.998,1688,3.345,1689,3.345,1690,3.345,1691,3.345,1692,3.345,1693,3.345,1694,5.111,1695,3.345,1696,3.345,1697,3.345,1698,2.769,1699,3.345,1700,3.345,1701,2.998,1702,3.345,1703,2.998,1704,3.345,1705,3.345,1706,3.345,1707,3.345,1708,3.345,1709,3.345,1710,5.111,1711,5.111,1712,3.345,1713,4.581,1714,3.345,1715,3.345,1716,3.345,1717,3.345,1718,6.224,1719,3.345,1720,5.135,1721,3.345,1722,3.345,1723,3.345,1724,3.345,1725,3.345,1726,3.345,1727,3.345]],["title/components/CardDetailsComponent.html",[264,1.013,356,1.666]],["body/components/CardDetailsComponent.html",[0,0.256,3,0.025,4,0.025,5,0.03,11,1.706,32,0.179,33,0.707,34,0.189,35,0.388,39,0.212,42,0.278,44,0.308,45,0.005,46,0.529,47,0.308,51,0.12,52,0.437,57,0.03,61,1.362,100,1.381,112,1.401,117,2.175,126,0.657,137,0.002,138,0.003,139,0.002,161,1.482,162,3.842,163,1.862,168,1.991,180,1.573,185,1.798,188,1.768,191,2.044,250,1.381,251,1.935,264,1.528,265,1.604,266,2.178,267,1.655,269,1.682,270,1.682,272,2.81,273,1.579,274,3.629,277,2.356,279,1.803,281,1.594,282,3.15,297,1.573,298,1.991,300,0.873,333,1.443,334,2.356,335,2.319,336,1.508,337,2.946,338,1.682,339,1.682,340,1.604,341,1.682,342,1.604,343,2.367,344,2.356,345,1.604,346,2.356,347,1.604,348,1.682,349,1.579,350,1.682,351,1.604,352,1.682,353,2.946,354,1.604,355,1.682,356,2.723,357,2.356,358,1.604,359,1.555,360,1.629,361,1.655,362,1.682,363,1.629,364,1.655,365,1.531,366,2.356,367,1.604,368,1.682,369,2.946,370,1.555,371,1.682,372,1.604,373,1.604,374,1.682,375,1.579,376,1.682,377,1.604,378,1.604,379,1.682,380,1.579,381,1.682,382,1.604,383,1.682,384,1.629,385,1.604,386,1.682,387,1.604,388,2.319,389,1.604,390,2.719,391,1.682,392,1.604,393,1.682,394,1.604,395,1.682,396,1.579,397,1.604,398,1.604,399,1.604,400,1.604,401,1.854,402,1.604,403,1.682,404,1.604,405,1.604,406,1.604,407,1.252,408,1.579,409,1.579,410,1.682,411,1.579,412,1.682,413,1.579,414,1.655,415,1.682,478,2.755,513,1.798,532,5.819,537,1.629,563,1.362,564,1.401,565,3.411,579,1.381,589,2.377,593,5.042,698,2.638,729,5.683,1062,7.063,1386,3.119,1411,2.896,1490,3.254,1619,6.289,1664,3.836,1667,4.153,1671,3.6,1672,3.836,1673,3.6,1674,4.153,1698,3.836,1728,9.093,1729,4.634,1730,5.817,1731,8.117,1732,5.034,1733,6.491,1734,4.634,1735,4.634,1736,4.634,1737,4.634,1738,4.634,1739,3.119,1740,4.153,1741,4.634,1742,4.634,1743,4.153,1744,6.491,1745,6.491,1746,4.634,1747,4.634,1748,4.153,1749,4.634,1750,4.634,1751,3.254,1752,3.836,1753,4.153,1754,4.153,1755,4.153]],["title/injectables/CardEffects.html",[755,4.111,841,1.439]],["body/injectables/CardEffects.html",[0,0.3,3,0.03,4,0.03,5,0.035,8,0.611,17,2.361,28,2.079,32,0.175,34,0.222,35,0.433,39,0.249,42,0.272,44,0.362,45,0.005,46,0.354,47,0.362,49,0.971,50,0.793,51,0.125,52,0.513,57,0.035,91,0.739,92,0.739,93,0.688,99,3.662,117,2.282,137,0.003,138,0.004,139,0.003,161,1.462,163,2.185,165,1.617,184,2.146,223,4.184,279,2.011,300,1.024,423,3.096,424,4.388,426,2.724,428,3.011,429,3.011,431,2.858,433,3.011,434,3.011,441,2.868,466,2.308,478,2.308,537,1.912,560,1.553,561,1.943,563,1.598,564,1.644,579,1.621,589,4.451,755,5.994,841,2.097,842,2.398,846,5.62,848,6.841,859,5.334,861,4.388,873,2.932,874,2.789,875,4.225,876,2.497,877,2.724,1295,2.605,1363,5.841,1411,3.399,1412,4.003,1740,4.874,1756,5.438,1757,8.14,1758,8.14,1759,8.14,1760,5.438,1761,7.241,1762,5.438,1763,7.241,1764,6.093,1765,7.241,1766,7.778,1767,7.241,1768,7.241,1769,5.438,1770,6.489,1771,7.241,1772,7.241,1773,7.241,1774,5.438,1775,4.502,1776,4.502,1777,4.502]],["title/interfaces/CardFeedState.html",[724,2.148,735,4.111]],["body/interfaces/CardFeedState.html",[3,0.03,4,0.03,5,0.036,7,2.31,11,2.456,24,3.412,28,1.24,32,0.184,34,0.226,35,0.438,45,0.005,51,0.111,55,3.577,57,0.063,79,1.002,126,1.29,137,0.004,138,0.004,139,0.003,148,2.558,161,1.099,165,1.737,180,1.777,184,1.981,185,2.151,190,2.578,199,1.889,407,2.22,461,3.003,462,1.676,463,1.652,465,2.494,491,3.172,500,2.846,508,3.763,513,2.846,607,5.398,609,5.957,702,5.319,724,2.398,725,3.069,735,6.803,828,3.731,829,3.59,830,3.352,831,3.465,866,5.138,1030,2.268,1376,5.697,1778,5.544,1779,6.572,1780,8.151,1781,8.542,1782,7.837,1783,6.071,1784,7.333,1785,6.572,1786,6.572,1787,6.071,1788,6.572,1789,7.333,1790,7.333,1791,4.434,1792,7.333,1793,7.333,1794,5.544,1795,5.544,1796,9.095,1797,5.544,1798,5.544,1799,5.544,1800,5.544,1801,5.544,1802,5.544,1803,5.544,1804,5.544,1805,5.544,1806,5.544,1807,5.544,1808,5.544,1809,5.544,1810,5.544,1811,5.544,1812,5.544,1813,5.544,1814,4.969,1815,5.544,1816,5.544,1817,4.969]],["title/components/CardListComponent.html",[264,1.013,358,1.719]],["body/components/CardListComponent.html",[0,0.255,3,0.025,4,0.036,5,0.042,17,1.86,32,0.179,33,0.705,34,0.188,35,0.387,36,0.879,39,0.211,42,0.285,44,0.307,45,0.005,46,0.528,47,0.307,51,0.118,52,0.435,57,0.03,61,1.356,100,1.375,107,1.375,112,1.395,117,2.172,137,0.002,138,0.003,139,0.002,147,2.627,148,1.436,151,2.747,152,3.172,161,1.412,180,1.118,188,1.76,250,1.375,251,2.415,264,1.524,265,1.597,266,2.171,267,1.648,268,2.035,269,1.675,270,1.675,272,2.804,273,1.572,274,3.629,275,3.033,277,2.349,281,1.589,282,3.144,297,1.568,298,2.293,300,0.869,314,1.888,315,1.822,316,1.888,317,1.888,318,1.888,319,1.888,320,1.703,321,1.597,322,1.888,323,1.888,324,1.888,325,1.791,326,1.888,327,1.854,328,1.888,329,1.888,330,1.888,331,1.196,332,1.888,333,1.436,334,2.349,335,2.312,336,1.502,337,2.941,338,1.675,339,1.675,340,1.597,341,1.675,342,1.597,343,2.361,344,2.349,345,1.597,346,2.349,347,1.597,348,1.675,349,1.572,350,1.675,351,1.597,352,1.675,353,2.941,354,1.597,355,1.675,356,1.548,357,2.349,358,2.804,359,1.548,360,1.622,361,1.648,362,1.675,363,1.622,364,1.648,365,1.525,366,2.349,367,1.597,368,1.675,369,2.941,370,1.548,371,1.675,372,1.597,373,1.597,374,1.675,375,1.572,376,1.675,377,1.597,378,1.597,379,1.675,380,1.572,381,1.675,382,1.597,383,1.675,384,1.622,385,1.597,386,1.675,387,1.597,388,2.312,389,1.597,390,2.713,391,1.675,392,1.597,393,1.675,394,3.143,395,1.675,396,1.572,397,1.597,398,1.597,399,1.597,400,1.597,401,1.848,402,1.597,403,1.675,404,1.597,405,1.597,406,1.597,407,1.246,408,1.572,409,1.572,410,1.675,411,1.572,412,1.675,413,1.572,414,1.648,415,1.675,418,2.488,461,2.196,462,1.395,463,1.375,480,3.172,504,3.172,537,1.622,560,1.318,563,1.356,564,1.395,565,3.396,579,1.375,589,2.366,616,4.355,617,4.191,618,3.82,702,3.684,970,4.135,971,6.698,972,5.8,973,4.135,979,3.584,980,5.027,981,3.584,982,3.584,983,3.82,1533,4.543,1534,5.806,1664,3.82,1665,4.135,1671,3.584,1672,3.82,1673,3.584,1791,3.913,1818,6.279,1819,7.646,1820,5.357,1821,5.806,1822,6.471,1823,5.03,1824,4.135,1825,4.614,1826,4.135,1827,4.135,1828,4.135,1829,3.82,1830,4.614,1831,4.614]],["title/classes/CardOperation.html",[0,0.274,1832,4.111]],["body/classes/CardOperation.html",[0,0.369,2,0.809,3,0.037,4,0.037,5,0.044,10,1.83,32,0.198,33,0.9,34,0.273,38,1.201,39,0.378,42,0.26,44,0.55,45,0.005,46,0.538,47,0.55,50,0.875,51,0.085,57,0.054,58,0.961,79,1.067,91,0.909,92,0.909,93,0.846,137,0.003,138,0.004,139,0.003,158,3.7,160,4.344,184,1.8,255,4.037,258,3.478,281,2.03,297,1.619,440,2.55,461,2.755,463,1.992,479,2.507,513,3.482,1832,7.761,1833,8.042,1834,5.99,1835,8.265,1836,6.683,1837,8.974,1838,7.761,1839,8.974,1840,6.683,1841,6.683,1842,6.683,1843,6.683,1844,6.683,1845,6.683,1846,6.683,1847,5.533]],["title/injectables/CardOperationEffects.html",[757,4.111,841,1.439]],["body/injectables/CardOperationEffects.html",[0,0.235,3,0.023,4,0.023,5,0.028,8,0.93,12,2.75,17,2.21,28,2.147,32,0.174,34,0.174,35,0.366,37,1.079,39,0.195,42,0.246,44,0.284,45,0.005,46,0.278,47,0.284,49,1.103,50,0.698,51,0.124,52,0.402,57,0.028,66,2.75,88,1.992,91,0.58,92,0.58,93,0.54,99,3.22,117,2.117,126,1.288,137,0.002,138,0.004,139,0.002,161,1.361,165,1.422,181,2.997,184,2.125,190,2.152,223,3.915,251,1.824,279,1.7,300,0.804,407,1.152,426,3.586,435,0.942,441,2.684,454,3.157,466,1.81,471,3.038,479,2.296,481,3.157,482,3.286,483,1.881,491,3.383,504,2.598,508,2.417,513,2.375,524,1.958,537,1.5,542,4.755,560,1.218,561,1.524,563,1.253,564,1.29,579,1.271,589,4.42,607,4.505,757,5.067,823,4.854,830,2.579,831,2.666,832,3.314,841,1.773,842,1.881,846,5.065,858,6.051,859,5.314,860,7.009,861,3.859,873,2.3,874,2.188,875,3.314,876,1.958,877,3.586,878,3.14,1030,2.504,1198,4.139,1338,4.906,1372,5.757,1410,2.871,1411,2.666,1412,3.14,1416,3.825,1418,4.585,1483,2.995,1498,5.56,1703,5.485,1783,5.067,1838,3.531,1848,8.281,1849,4.266,1850,7.158,1851,4.266,1852,5.067,1853,6.121,1854,6.121,1855,7.821,1856,6.121,1857,6.121,1858,6.121,1859,6.121,1860,6.121,1861,6.121,1862,5.485,1863,6.121,1864,6.121,1865,4.266,1866,7.009,1867,7.009,1868,4.755,1869,6.121,1870,6.121,1871,6.121,1872,7.821,1873,6.121,1874,6.121,1875,6.121,1876,6.121,1877,6.121,1878,6.121,1879,6.121,1880,6.121,1881,4.266,1882,6.121,1883,6.121,1884,6.121,1885,5.067,1886,6.121,1887,6.121,1888,6.121,1889,4.266,1890,3.14,1891,4.266,1892,4.266,1893,3.823,1894,3.823,1895,2.428,1896,3.14]],["title/injectables/CardService.html",[841,1.439,846,3.216]],["body/injectables/CardService.html",[0,0.257,3,0.026,4,0.036,5,0.03,17,2.428,28,1.984,32,0.191,34,0.19,35,0.389,36,0.883,38,1.216,39,0.213,42,0.306,44,0.59,45,0.005,46,0.578,47,0.59,49,0.556,50,0.635,51,0.124,55,2.665,57,0.03,71,2.334,79,1.046,80,2.512,106,2.015,126,0.924,137,0.002,138,0.003,139,0.002,158,2.58,161,0.698,163,1.872,165,1.492,180,1.579,184,2.083,190,2.291,220,1.144,230,3.189,258,2.816,279,1.809,281,1.6,297,2.207,298,1.429,300,0.878,302,2.731,321,2.6,426,3.264,431,3.424,461,1.369,462,1.409,463,1.389,560,1.331,579,1.389,651,2.652,751,2.652,752,2.731,841,1.887,842,2.055,846,4.219,866,2.512,885,2.912,898,5.338,1083,5.545,1086,6.394,1087,3.619,1096,3.017,1151,3.857,1267,5.061,1287,3.857,1832,3.857,1893,4.176,1894,4.176,1897,4.659,1898,7.513,1899,7.513,1900,7.513,1901,7.513,1902,6.515,1903,6.515,1904,8.136,1905,8.136,1906,6.515,1907,3.271,1908,6.515,1909,6.515,1910,4.659,1911,6.515,1912,8.562,1913,4.659,1914,6.515,1915,4.659,1916,6.515,1917,4.659,1918,6.515,1919,4.659,1920,4.659,1921,4.659,1922,7.513,1923,4.659,1924,4.659,1925,4.659,1926,4.659,1927,4.659,1928,3.136,1929,3.857,1930,5.394,1931,4.659,1932,4.659,1933,6.515,1934,4.659,1935,4.659,1936,4.659,1937,4.659,1938,4.659,1939,4.659,1940,4.659,1941,4.659,1942,4.659,1943,4.659,1944,4.659,1945,4.659,1946,4.659,1947,4.659,1948,4.659,1949,3.271,1950,4.659,1951,4.176,1952,4.659,1953,4.659,1954,4.176,1955,4.659,1956,4.659,1957,4.659,1958,4.659,1959,4.659,1960,4.659,1961,4.659,1962,4.659,1963,3.857,1964,4.659,1965,4.659,1966,4.659,1967,4.659,1968,4.659,1969,4.659,1970,4.659,1971,4.659,1972,4.659,1973,4.659,1974,4.659,1975,4.659,1976,4.659,1977,4.659,1978,4.176,1979,4.659,1980,4.659,1981,3.429,1982,4.659]],["title/interfaces/CardState.html",[724,2.148,733,4.111]],["body/interfaces/CardState.html",[3,0.04,4,0.04,5,0.047,32,0.195,34,0.297,35,0.521,45,0.005,51,0.093,57,0.057,79,1.074,126,1.399,137,0.004,138,0.004,139,0.004,148,2.901,161,1.447,163,2.927,180,1.765,185,3.38,199,2.482,491,4.269,609,6.168,724,3.151,725,4.033,733,7.714,1631,8.845,1983,7.284,1984,7.284]],["title/modules/CardsModule.html",[625,2.148,1047,3.487]],["body/modules/CardsModule.html",[0,0.304,3,0.03,4,0.04,5,0.048,36,0.647,42,0.173,45,0.005,51,0.128,57,0.036,73,2.529,107,1.642,137,0.003,138,0.004,139,0.003,184,1.2,255,3.285,265,3.228,281,1.353,297,1.335,300,1.038,302,3.229,303,3.331,304,3.745,314,2.253,315,2.175,316,2.253,317,2.253,318,2.253,319,2.253,320,2.033,321,1.906,322,2.253,323,2.253,324,2.253,325,2.137,326,2.253,327,2.213,328,2.253,329,2.253,330,2.253,331,1.428,332,2.253,333,1.715,354,3.469,356,3.363,359,3.399,370,3.363,372,3.469,625,2.383,627,2.759,628,3.136,629,4.953,630,5.113,631,4.305,639,6.278,640,4.281,641,3.331,643,3.937,647,4.416,652,4.564,655,3.229,660,5.673,667,5.375,668,2.825,669,2.825,1047,7.331,1062,4.279,1063,4.56,1732,4.043,1985,4.937,1986,4.937,1987,5.508,1988,4.937,1989,4.937,1990,6.866,1991,5.508,1992,7.302,1993,6.782,1994,5.508,1995,6.782,1996,5.508,1997,4.937,1998,5.508,1999,5.508,2000,4.937,2001,4.937,2002,4.937,2003,5.508,2004,5.508,2005,4.054,2006,4.56]],["title/classes/CheckAuthenticationStatus.html",[0,0.274,63,2.749]],["body/classes/CheckAuthenticationStatus.html",[0,0.506,1,3.692,2,0.5,3,0.023,4,0.023,5,0.05,6,2.419,7,1.719,8,1.104,9,4.821,10,1.13,11,2.024,12,3.545,13,4.479,14,4.094,15,2.349,16,3.293,17,2.121,18,4.391,19,4.407,20,3.613,21,2.579,22,2.495,23,3.536,24,2.636,25,4.248,26,4.391,27,3.365,28,1.571,29,3.613,30,4.118,31,3.735,32,0.196,33,0.999,34,0.168,35,0.357,36,0.961,37,1.358,38,1.162,39,0.189,41,3.402,42,0.13,45,0.005,49,0.492,50,0.402,51,0.089,52,0.389,53,3.692,54,2.169,55,2.874,56,2.02,57,0.061,58,0.593,59,2.349,60,3.889,61,1.212,62,1.945,63,4.264,64,2.169,65,4.248,66,3.275,67,5.153,68,4.515,69,3.889,70,2.495,71,2.993,72,4.152,73,3.225,74,4.525,75,3.889,76,1.448,77,1.499,78,2.225,79,0.877,80,2.225,81,2.116,82,2.284,83,1.82,84,2.579,85,2.579,86,4.391,87,4.248,88,2.287,89,4.248,90,2.579,91,1.224,92,1.224,93,1.139,94,2.579,95,3.613,96,2.579,97,2.579,98,2.419,99,1.856,100,1.23,101,2.495,102,3.225,103,3.735,104,3.603,105,3.402,106,1.785,107,1.23,108,2.495,109,2.419,110,2.349,111,4.515,112,1.248,113,2.579,114,2.349,115,2.495,116,3.308,117,1.468,118,2.579,119,2.579,120,4.814,121,2.495,122,2.579,123,3.613,124,2.579,125,3.613,126,0.585,127,2.579,128,2.495,129,2.579,130,2.495,131,2.579,132,2.993,133,3.613,134,1.629,135,2.579,136,2.419,137,0.002,138,0.003,139,0.002,2007,4.126]],["title/classes/CheckTokenResponse.html",[0,0.274,1291,3.858]],["body/classes/CheckTokenResponse.html",[0,0.409,2,0.348,3,0.016,4,0.016,5,0.019,7,1.196,9,1.509,12,3.213,13,2.385,17,1.931,23,2.584,24,1.077,27,1.375,28,1.935,32,0.167,34,0.117,35,0.271,36,1.085,37,0.8,39,0.292,41,4.416,42,0.201,44,0.191,45,0.005,46,0.367,47,0.516,51,0.115,52,0.271,53,2.958,54,1.509,55,1.857,57,0.048,58,0.413,64,2.385,66,1.596,71,2.273,78,3.448,79,1.05,80,4.873,81,5,82,4.295,83,2.821,98,3.749,99,3.724,104,2.887,107,1.678,110,3.641,117,1.819,126,0.407,137,0.001,138,0.002,139,0.001,148,1.752,160,2.958,165,0.57,180,2.19,184,2.146,185,2.482,188,2.147,190,1.596,199,1.918,210,1.266,230,1.926,255,3.814,258,2.934,279,2.51,298,0.881,300,0.541,320,2.36,331,1.806,360,1.009,401,1.99,425,1.077,443,0.82,474,1.095,493,1.025,543,1.438,560,0.82,561,1.025,562,2.016,563,0.843,564,0.868,576,1.683,578,5.127,579,0.856,616,3.055,651,1.634,751,1.634,752,1.683,841,1.315,876,1.318,877,1.438,910,1.634,932,2.756,976,1.736,1030,1.174,1071,5.295,1072,2.377,1073,2.573,1074,6.638,1075,2.573,1076,2.573,1083,3.998,1084,2.377,1085,2.23,1086,4.491,1087,2.23,1088,2.573,1089,7.389,1090,2.377,1091,1.589,1092,1.736,1093,2.377,1094,4.067,1095,2.573,1096,1.859,1097,2.573,1098,2.573,1099,5.044,1100,2.573,1101,2.573,1102,2.573,1103,2.573,1104,2.573,1105,2.573,1106,2.573,1107,2.573,1108,2.573,1109,2.573,1110,2.377,1111,2.377,1112,2.573,1113,2.573,1114,2.573,1115,2.573,1116,2.573,1117,6.638,1118,6.952,1119,4.067,1120,6.244,1121,2.573,1122,2.573,1123,2.573,1124,4.067,1125,2.573,1126,5.732,1127,6.244,1128,2.573,1129,2.573,1130,2.573,1131,2.573,1132,2.573,1133,2.573,1134,4.067,1135,2.573,1136,6.638,1137,2.573,1138,2.377,1139,4.143,1140,2.573,1141,3.757,1142,2.23,1143,2.573,1144,2.573,1145,4.305,1146,2.573,1147,4.067,1148,2.573,1149,5.044,1150,2.573,1151,6.658,1152,5.044,1153,5.044,1154,5.044,1155,5.044,1156,5.044,1157,4.659,1158,2.573,1159,2.573,1160,2.573,1161,2.573,1162,4.067,1163,2.377,1164,3.299,1165,4.067,1166,4.067,1167,2.66,1168,2.573,1169,2.573,1170,2.573,1171,5.044,1172,3.518,1173,4.067,1174,2.573,1175,4.067,1176,2.573,1177,3.757,1178,4.067,1179,4.067,1180,2.573,1181,2.573,1182,4.067,1183,4.067,1184,2.573,1185,2.573,1186,2.573,1187,2.573,1188,2.573,1189,2.573,1190,2.573,1191,2.573,1192,2.573,1193,2.573,1194,2.573,1195,2.573,1196,2.573,1197,2.573,1198,1.266,1199,2.573,1200,2.573,1201,2.573,1202,2.573,1203,2.573,1204,2.573,1205,2.573,1206,2.573,1207,2.377,1208,2.573,1209,3.34,1210,6.244,1211,2.573,1212,4.067,1213,5.295,1214,4.659,1215,2.573,1216,2.377,1217,2.573,1218,2.573,1219,2.939,1220,2.573,1221,4.067,1222,2.573,1223,4.067,1224,2.573,1225,2.23,1226,2.573,1227,2.573,1228,2.573,1229,2.573,1230,2.23,1231,2.573,1232,3.186,1233,2.573,1234,2.573,1235,2.573,1236,2.573,1237,2.573,1238,2.573,1239,2.573,1240,2.573,1241,2.573,1242,2.573,1243,2.573,1244,2.573,1245,2.573,1246,2.573,1247,2.573,1248,2.573,1249,2.573,1250,5.044,1251,4.067,1252,2.573,1253,2.573,1254,4.067,1255,4.067,1256,2.573,1257,2.573,1258,2.573,1259,2.573,1260,2.573,1261,2.573,1262,2.573,1263,2.377,1264,2.573,1265,2.573,1266,2.573,1267,2.23,1268,2.573,1269,2.573,1270,2.573,1271,2.573,1272,2.573,1273,2.573,1274,2.573,1275,4.067,1276,2.573,1277,2.573,1278,2.573,1279,2.573,1280,2.573,1281,2.573,1282,2.573,1283,2.573,1284,2.573,1285,2.573,1286,2.573,1287,2.377,1288,4.969,1289,4.067,1290,4.067,1291,3.525,1292,2.573,1293,4.067,1294,3.757,1295,2.174,1296,2.573,1297,2.377,1298,2.377,1299,2.573,2008,2.871,2009,2.871,2010,2.871,2011,2.871,2012,2.871]],["title/classes/ClearCard.html",[0,0.274,424,2.677]],["body/classes/ClearCard.html",[0,0.533,2,0.627,3,0.028,4,0.028,5,0.034,8,1.107,32,0.201,33,1.064,34,0.211,35,0.419,37,1.68,38,1.229,42,0.163,45,0.005,49,0.618,50,0.504,51,0.089,52,0.488,57,0.064,58,0.744,76,1.697,77,1.748,79,0.852,91,1.313,92,1.313,93,1.222,126,1.328,137,0.003,138,0.003,139,0.003,161,1.543,163,2.08,190,2.463,220,1.271,418,4.28,419,3.034,422,3.235,423,2.947,424,4.586,425,1.942,426,3.977,427,2.617,428,4.395,429,4.395,430,1.973,431,4.172,432,4.072,433,4.395,434,4.395,435,1.752,436,1.306,437,1.288,438,1.438,439,1.438,440,1.975,441,1.565,442,3.034,443,1.478,444,1.565,445,4.378,446,3.235,447,3.235,448,3.235,449,3.235,450,3.235,451,3.235,452,3.235,453,3.13,2013,5.176]],["title/classes/ClearLightCardSelection.html",[0,0.274,478,2.108]],["body/classes/ClearLightCardSelection.html",[0,0.548,2,0.481,3,0.022,4,0.022,5,0.026,8,1.135,10,2.205,11,1.044,12,1.397,32,0.203,33,1.086,34,0.162,35,0.347,37,1.602,38,1.248,39,0.415,42,0.183,45,0.005,49,0.474,50,0.387,51,0.096,52,0.375,57,0.065,58,0.571,62,1.293,76,0.963,77,1.694,79,0.737,88,1.293,91,1.273,92,1.273,93,1.185,126,1.232,134,1.569,137,0.002,138,0.003,139,0.002,161,1.403,165,0.789,168,1.784,205,2.218,220,0.976,301,1.313,331,1.507,425,1.491,427,2.161,430,1.637,435,1.518,436,1.003,437,0.989,438,1.104,439,1.104,440,1.516,441,2.434,443,1.135,444,1.202,454,3.032,455,3.156,456,1.824,460,1.903,461,2.366,462,1.202,463,1.184,464,1.863,465,1.788,466,1.686,467,3.093,468,4.654,469,3.032,470,1.788,471,2.918,472,2.669,473,1.863,474,1.516,475,3.093,476,3.032,477,1.293,478,3.211,479,3.155,480,1.686,481,3.032,482,1.824,483,3.032,484,3.032,485,1.863,486,1.863,487,3.032,488,2.974,489,3.032,490,1.686,491,1.719,492,3.032,493,1.419,494,3.032,495,1.863,496,3.032,497,1.824,498,3.032,499,1.626,500,1.542,501,1.903,502,1.903,503,1.903,504,1.686,505,1.903,506,1.903,507,1.903,508,1.569,509,2.784,510,1.903,511,1.903,512,1.903,513,1.542,514,1.903,515,1.903,516,1.903,517,1.903,518,1.903,519,1.903,520,1.903,521,1.903,522,1.903,523,1.903,524,1.824,2014,5.814]],["title/injectables/ConfigEffects.html",[794,4.111,841,1.439]],["body/injectables/ConfigEffects.html",[0,0.308,3,0.031,4,0.031,5,0.036,8,0.626,17,2.268,28,1.96,32,0.166,34,0.227,35,0.44,39,0.255,42,0.259,44,0.371,45,0.005,46,0.363,47,0.371,49,0.665,50,0.543,51,0.126,52,0.526,55,3.01,57,0.036,91,0.758,92,0.758,93,0.705,99,4.098,117,2.298,137,0.003,138,0.004,139,0.003,165,1.107,184,1.909,223,4.018,258,2.851,279,2.288,300,1.05,407,1.505,427,2.503,441,2.886,537,1.959,560,1.592,561,1.991,563,1.637,564,1.685,572,5.149,573,4.613,576,3.267,579,1.661,589,3.774,727,4.45,793,4.994,794,6.092,841,2.132,842,2.458,859,4.851,861,3.967,873,3.004,874,2.858,876,2.558,877,2.791,878,4.102,1030,2.28,1198,3.865,1295,2.669,1338,4.988,1363,4.953,1407,3.751,1677,4.953,1764,5.167,1775,4.613,1776,4.613,1777,4.613,1949,5.167,2015,5.573,2016,8.239,2017,8.239,2018,6.45,2019,8.239,2020,5.573,2021,7.359,2022,7.359,2023,7.359,2024,7.359,2025,7.359,2026,5.573,2027,7.853,2028,6.595,2029,5.573,2030,8.387,2031,6.595,2032,4.994,2033,4.994,2034,4.994,2035,3.609,2036,3.609,2037,5.573,2038,4.994,2039,5.573,2040,5.573,2041,5.573,2042,7.359,2043,7.359,2044,7.359,2045,7.359,2046,5.573]],["title/injectables/ConfigService.html",[841,1.439,2018,3.655]],["body/injectables/ConfigService.html",[0,0.389,3,0.039,4,0.039,5,0.046,17,2.286,32,0.172,34,0.288,35,0.51,39,0.322,42,0.288,44,0.468,45,0.005,46,0.459,47,0.468,51,0.126,52,0.664,57,0.046,79,0.916,117,2.47,137,0.003,138,0.004,139,0.003,184,1.535,279,2.651,281,2.096,297,1.707,300,1.327,560,2.012,563,2.07,564,2.13,579,2.1,651,4.011,751,4.011,752,4.13,841,2.473,842,3.107,1083,6.212,1907,4.946,2018,6.283,2047,7.045,2048,9.185,2049,9.547,2050,8.537,2051,7.045,2052,7.045,2053,7.045,2054,7.045]],["title/interfaces/ConfigState.html",[724,2.148,734,4.111]],["body/interfaces/ConfigState.html",[3,0.04,4,0.04,5,0.047,32,0.199,34,0.293,35,0.516,45,0.005,57,0.06,79,0.994,126,1.394,137,0.004,138,0.004,139,0.004,148,3.109,180,2.093,185,2.789,199,2.944,258,3.206,591,5.95,603,5.946,609,6.145,724,3.109,725,3.979,727,5.812,734,7.669,1030,2.94,2030,8.812,2038,6.441,2055,7.187,2056,7.187,2057,7.187]],["title/components/ConfirmModalComponent.html",[264,1.013,359,1.666]],["body/components/ConfirmModalComponent.html",[0,0.279,3,0.028,4,0.028,5,0.033,8,1.092,10,1.889,28,1.543,32,0.17,34,0.207,35,0.412,36,0.811,39,0.231,42,0.277,44,0.336,45,0.005,46,0.549,47,0.336,51,0.088,57,0.045,58,0.728,61,1.487,62,2.962,77,0.928,100,1.508,112,1.53,137,0.002,138,0.003,139,0.002,161,1.034,250,1.508,251,2.056,264,1.798,265,1.751,266,2.314,267,1.808,269,1.837,270,1.837,273,1.724,274,3.644,277,2.504,281,1.694,297,1.901,298,2.407,300,0.953,302,2.966,303,3.06,304,2.595,333,1.575,334,2.504,335,2.464,336,1.647,337,3.059,338,1.837,339,1.837,340,1.751,341,1.837,342,1.751,343,2.479,344,2.504,345,1.751,346,2.504,347,1.751,348,1.837,349,1.724,350,1.837,351,1.751,352,1.837,353,3.059,354,1.751,355,1.837,356,1.698,357,2.504,358,1.751,359,2.828,360,2.963,361,3.327,362,1.837,363,1.779,364,1.808,365,1.672,366,2.504,367,1.751,368,1.837,369,3.059,370,1.698,371,1.837,372,1.751,373,1.751,374,1.837,375,1.724,376,1.837,377,1.751,378,1.751,379,1.837,380,1.724,381,1.837,382,1.751,383,1.837,384,1.779,385,1.751,386,1.837,387,1.751,388,2.464,389,1.751,390,2.849,391,1.837,392,1.751,393,1.837,394,1.751,395,1.837,396,1.724,397,1.751,398,1.751,399,1.751,400,1.751,401,2.407,402,1.751,403,1.837,404,1.751,405,1.751,406,1.751,407,1.367,408,1.724,409,1.724,410,1.837,411,1.724,412,1.837,413,1.724,414,1.808,415,1.837,551,4.797,1230,5.358,1372,6.203,1582,6.182,1755,4.535,2005,6.698,2058,8.156,2059,4.535,2060,6.897,2061,7.553,2062,7.553,2063,5.06,2064,8.819,2065,5.06,2066,5.06,2067,5.06,2068,5.06,2069,5.06,2070,5.06,2071,5.06,2072,5.06,2073,5.06,2074,4.189,2075,5.06,2076,7.553,2077,6.897,2078,6.897,2079,6.897,2080,6.897]],["title/classes/CreateUserApplication.html",[0,0.274,2081,3.003]],["body/classes/CreateUserApplication.html",[0,0.516,2,0.67,3,0.03,4,0.03,5,0.036,8,1.087,27,3.933,32,0.205,33,1.038,34,0.226,35,0.438,36,0.861,37,1.726,38,1.206,39,0.253,40,1.397,42,0.258,44,0.368,45,0.005,46,0.361,47,0.368,49,0.661,50,0.54,51,0.093,52,0.522,57,0.063,58,0.796,66,3.641,76,1.342,77,1.714,91,1.27,92,1.27,93,1.182,126,1.351,137,0.003,138,0.004,139,0.003,435,1.813,436,1.397,437,1.378,438,1.538,439,1.538,457,2.1,543,4.554,1092,3.348,1167,4.295,1895,3.152,2081,5.285,2082,3.586,2083,7.327,2084,5.537,2085,5.144,2086,4.966,2087,4.966,2088,4.966,2089,4.966,2090,2.985,2091,3.586,2092,3.887,2093,3.887,2094,3.887,2095,3.887,2096,3.887,2097,3.586]],["title/classes/CreateUserApplicationOnFailure.html",[0,0.274,2089,3.003]],["body/classes/CreateUserApplicationOnFailure.html",[0,0.516,2,0.67,3,0.03,4,0.03,5,0.036,8,1.087,27,3.933,32,0.205,33,1.038,34,0.226,35,0.438,36,0.861,37,1.726,38,1.206,39,0.253,40,1.397,42,0.258,44,0.368,45,0.005,46,0.361,47,0.368,49,0.661,50,0.54,51,0.093,52,0.522,57,0.063,58,0.796,66,3.641,76,1.342,77,1.714,91,1.27,92,1.27,93,1.182,126,1.351,137,0.003,138,0.004,139,0.003,435,1.813,436,1.397,437,1.378,438,1.538,439,1.538,457,2.1,543,4.554,1092,3.348,1167,4.295,1895,3.152,2081,4.966,2082,3.586,2085,3.887,2086,4.966,2087,4.966,2088,4.966,2089,5.285,2090,2.985,2091,3.586,2092,3.887,2093,3.887,2094,3.887,2095,5.144,2096,3.887,2097,3.586,2098,7.327,2099,5.537]],["title/classes/CreateUserApplicationOnSuccess.html",[0,0.274,2088,3.003]],["body/classes/CreateUserApplicationOnSuccess.html",[0,0.516,2,0.67,3,0.03,4,0.03,5,0.036,8,1.087,27,3.933,32,0.205,33,1.038,34,0.226,35,0.438,36,0.861,37,1.726,38,1.206,39,0.253,40,1.397,42,0.258,44,0.368,45,0.005,46,0.361,47,0.368,49,0.661,50,0.54,51,0.093,52,0.522,57,0.063,58,0.796,66,3.641,76,1.342,77,1.714,91,1.27,92,1.27,93,1.182,126,1.351,137,0.003,138,0.004,139,0.003,435,1.813,436,1.397,437,1.378,438,1.538,439,1.538,457,2.1,543,4.554,1092,3.348,1167,4.295,1895,3.152,2081,4.966,2082,3.586,2085,3.887,2086,4.966,2087,4.966,2088,5.285,2089,4.966,2090,2.985,2091,3.586,2092,3.887,2093,3.887,2094,5.144,2095,3.887,2096,3.887,2097,3.586,2100,7.327,2101,5.537]],["title/injectables/CustomRouterEffects.html",[782,3.003,841,1.439]],["body/injectables/CustomRouterEffects.html",[0,0.256,3,0.025,4,0.025,5,0.03,8,0.842,17,2.403,28,2.179,29,4.908,30,3.805,32,0.184,34,0.385,35,0.388,37,1.144,39,0.212,42,0.268,44,0.498,45,0.005,46,0.423,47,0.308,49,0.968,50,0.791,51,0.123,52,0.437,57,0.03,117,2.233,137,0.002,138,0.003,139,0.002,165,0.92,168,2.49,180,2.146,184,2.153,188,2.476,223,4.158,279,1.287,300,0.873,407,1.252,426,2.321,431,2.436,441,2.851,476,2.044,478,3.179,537,1.629,560,1.324,561,1.655,563,1.362,564,1.401,579,1.381,708,5.373,728,4.266,744,3.254,782,3.925,841,1.88,842,2.044,848,6.83,861,4.376,873,2.498,874,2.377,877,2.321,882,3.836,1017,2.802,1331,5.373,1399,4.057,1405,3.925,1410,3.119,1411,2.896,1412,3.411,1764,6.218,1862,5.817,2102,8.856,2103,4.634,2104,7.491,2105,7.491,2106,7.491,2107,5.256,2108,4.634,2109,6.491,2110,9.279,2111,7.491,2112,6.491,2113,6.491,2114,4.634,2115,8.856,2116,9.093,2117,6.491,2118,8.856,2119,8.856,2120,6.491,2121,9.279,2122,6.491,2123,4.634,2124,6.491,2125,6.491,2126,4.634,2127,6.491,2128,6.491,2129,6.491,2130,4.203,2131,6.491,2132,6.491,2133,4.634,2134,7.491,2135,6.491,2136,6.491,2137,4.203,2138,5.256,2139,3.695,2140,5.817,2141,4.264,2142,3.925,2143,4.203,2144,3.805,2145,4.634,2146,4.634,2147,3.411]],["title/classes/CustomRouterStateSerializer.html",[0,0.274,2148,3.858]],["body/classes/CustomRouterStateSerializer.html",[0,0.427,2,0.728,3,0.033,4,0.042,5,0.039,11,2.246,13,4.062,28,1.344,32,0.156,33,0.842,34,0.245,38,1.066,39,0.275,42,0.243,44,0.6,45,0.005,46,0.503,47,0.514,51,0.098,57,0.056,79,0.645,88,1.956,91,0.817,92,0.817,93,0.76,117,1.898,137,0.003,138,0.004,139,0.003,180,2.186,184,1.684,188,3.441,220,1.898,230,4.347,240,3.01,255,2.703,279,2.373,281,1.898,297,2.07,401,1.716,474,2.293,493,2.147,698,3.421,729,3.756,744,4.219,745,6.638,1015,3.756,1030,2.458,1164,3.523,1232,4.219,1418,3.523,2142,4.674,2148,6.004,2149,5.386,2150,7.468,2151,7.73,2152,7.73,2153,6.927,2154,8.084,2155,6.01,2156,6.927,2157,7.726,2158,6.01,2159,6.927,2160,5.386,2161,5.386,2162,8.084,2163,5.386,2164,4.975,2165,5.386,2166,7.074,2167,5.386,2168,5.386,2169,6.399,2170,5.386,2171,5.386,2172,5.386,2173,5.386,2174,5.386,2175,5.386,2176,5.386,2177,5.386,2178,5.386,2179,5.386,2180,5.386,2181,5.386]],["title/classes/DateTimeNgb.html",[0,0.274,913,4.111]],["body/classes/DateTimeNgb.html",[0,0.295,2,0.647,3,0.029,4,0.029,5,0.035,24,3.233,32,0.145,34,0.218,39,0.244,42,0.282,44,0.476,45,0.005,46,0.466,47,0.476,50,0.786,51,0.068,57,0.056,79,1.043,83,4.165,91,0.726,92,0.726,93,0.676,137,0.004,138,0.004,139,0.003,160,3.761,180,2.088,184,2.158,185,3.344,258,2.477,279,1.484,281,1.757,297,2.088,302,3.132,303,3.231,304,2.741,401,2.697,588,2.677,720,4.634,913,5.924,916,8.288,917,7.723,1030,3.301,1294,4.424,1791,4.327,1829,4.424,1981,3.933,2182,9.247,2183,5.344,2184,8.068,2185,7.134,2186,8.618,2187,8.618,2188,6.414,2189,5.344,2190,5.344,2191,5.344,2192,5.344,2193,5.344,2194,7.156,2195,5.344,2196,5.344,2197,7.156,2198,5.344,2199,5.344,2200,5.344,2201,5.344,2202,4.424,2203,5.344,2204,5.344,2205,5.344,2206,8.068,2207,8.068,2208,6.268,2209,8.068,2210,7.231,2211,6.68,2212,7.156,2213,7.156,2214,3.752,2215,5.344,2216,5.344,2217,5.344,2218,5.344,2219,5.344,2220,5.344,2221,5.344,2222,4.789,2223,5.344,2224,5.344,2225,5.344,2226,5.344,2227,5.344,2228,4.789,2229,4.424,2230,4.424,2231,4.789,2232,5.344]],["title/components/DatetimeFilterComponent.html",[264,1.013,367,1.719]],["body/components/DatetimeFilterComponent.html",[0,0.197,3,0.02,4,0.02,5,0.023,24,1.341,28,1.81,32,0.185,33,0.585,34,0.146,35,0.321,36,0.951,39,0.295,42,0.294,44,0.538,45,0.005,46,0.575,47,0.574,49,0.857,50,0.7,51,0.068,55,1.462,57,0.023,61,1.05,79,0.576,83,2.37,87,3.249,91,1.174,92,1.174,93,1.093,100,1.065,112,1.08,137,0.002,138,0.003,139,0.002,148,2.01,151,2.281,152,2.281,161,0.805,184,0.778,185,2.506,199,2.2,218,1.711,250,1.065,251,1.602,264,1.317,265,1.237,266,1.803,267,1.276,268,1.576,269,1.297,270,1.297,272,1.341,273,1.218,274,3.571,275,2.519,277,1.951,281,1.32,297,2.034,298,2.874,300,0.673,315,1.411,333,1.112,334,1.951,335,1.919,336,1.163,337,2.608,338,1.297,339,1.297,340,1.237,341,1.297,342,1.237,343,2.04,344,1.951,345,1.237,346,1.951,347,1.237,348,1.297,349,1.218,350,1.297,351,1.237,352,1.297,353,2.608,354,1.237,355,1.297,356,1.199,357,1.951,358,1.237,359,1.199,360,1.256,361,1.276,362,1.297,363,1.256,364,1.276,365,1.181,366,1.951,367,2.989,368,3.135,369,2.608,370,1.199,371,1.297,372,1.237,373,1.237,374,1.297,375,1.218,376,1.297,377,1.237,378,1.237,379,1.297,380,1.218,381,1.297,382,1.237,383,1.297,384,1.256,385,1.237,386,1.297,387,1.237,388,2.89,389,1.237,390,2.344,391,1.297,392,1.237,393,1.297,394,1.237,395,1.297,396,1.218,397,1.237,398,1.237,399,1.237,400,1.237,401,2.524,402,1.237,403,1.297,404,1.237,405,1.237,406,1.237,407,1.744,408,1.218,409,1.218,410,1.297,411,1.218,412,1.297,413,1.218,414,1.276,415,1.297,613,3.955,624,4.174,630,3.15,658,1.79,691,5.287,888,6.64,902,4.264,911,4.814,932,4.11,961,3.202,962,4.816,963,4.816,964,3.202,1030,3.31,1057,8.476,1058,8.476,1139,2.63,1142,2.776,1928,2.405,2228,3.202,2229,5.346,2230,5.346,2233,2.63,2234,6.458,2235,6.458,2236,6.458,2237,7.183,2238,7.702,2239,6.458,2240,5.788,2241,3.955,2242,7.183,2243,5.346,2244,6.458,2245,5.374,2246,5.946,2247,5.374,2248,5.374,2249,5.374,2250,5.374,2251,5.788,2252,3.573,2253,3.202,2254,5.374,2255,3.202,2256,3.573,2257,5.374,2258,3.202,2259,6.458,2260,5.374,2261,3.573,2262,3.573,2263,3.573,2264,5.374,2265,5.374,2266,6.437,2267,3.573,2268,6.458,2269,5.374,2270,3.573,2271,5.788,2272,2.958,2273,2.776,2274,3.573,2275,2.776,2276,2.63,2277,3.573,2278,3.573,2279,2.509,2280,3.573,2281,3.573,2282,3.573,2283,3.573,2284,3.573,2285,3.573,2286,3.573,2287,3.573,2288,3.573,2289,5.374,2290,3.573,2291,4.816,2292,3.573,2293,3.573,2294,3.202,2295,3.573,2296,3.573,2297,3.573,2298,3.573]],["title/classes/DelayedLightCardUpdate.html",[0,0.274,496,2.19]],["body/classes/DelayedLightCardUpdate.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,3.306,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,1.867,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,2.745,522,1.867,523,1.867,524,1.789,2299,5.732,2300,3.898]],["title/classes/Detail.html",[0,0.274,162,2.547]],["body/classes/Detail.html",[0,0.448,2,0.785,3,0.036,4,0.036,5,0.042,11,1.703,32,0.131,38,1.311,39,0.404,42,0.204,44,0.431,45,0.005,46,0.422,47,0.431,51,0.103,57,0.058,58,0.932,79,1.117,91,1.102,92,1.102,93,1.026,137,0.003,138,0.004,139,0.003,146,3.594,161,0.971,162,4.539,164,2.976,181,3.173,190,2.279,258,3.21,268,3.903,462,1.96,463,1.932,474,2.473,536,6.511,620,4.551,1607,5.366,1609,3.799,1610,4.551,1611,4.771,1612,4.771,1613,4.771,1614,5.732,1615,5.035,1616,5.035,1617,4.771,1618,4.771,1619,4.771,1621,5.035,1622,8.064,1623,5.035,1624,4.362,1625,7.932,1626,7.327,2301,6.481,2302,6.481]],["title/components/DetailComponent.html",[264,1.013,370,1.666]],["body/components/DetailComponent.html",[0,0.19,3,0.019,4,0.019,5,0.022,8,0.931,11,1.372,28,1.576,32,0.183,33,0.569,34,0.14,35,0.312,36,0.742,38,0.787,39,0.157,42,0.302,44,0.468,45,0.005,46,0.54,47,0.468,49,0.623,50,0.509,51,0.119,52,0.324,57,0.022,61,1.01,79,0.677,89,2.079,100,1.025,105,2.972,112,1.04,117,2.035,137,0.002,138,0.003,139,0.002,145,2.972,146,2.599,151,2.215,152,2.678,161,1.336,162,4.378,163,1.382,164,1.579,168,2.324,180,2.16,184,1.374,188,1.312,190,1.209,191,1.517,199,1.779,220,0.844,243,2.079,250,1.556,251,1.556,264,1.436,265,1.19,266,1.751,267,1.228,269,1.895,270,1.248,272,2.367,273,1.172,274,3.561,277,1.895,279,2.716,281,1.282,282,2.734,297,2.068,298,2.682,300,0.648,301,1.136,315,2.061,333,1.071,334,2.29,335,2.516,336,1.119,337,2.557,338,1.248,339,1.248,340,1.19,341,1.248,342,1.19,343,1.993,344,1.895,345,1.19,346,1.895,347,1.19,348,1.248,349,1.172,350,1.248,351,1.19,352,1.248,353,2.557,354,1.19,355,1.248,356,1.154,357,1.895,358,1.19,359,1.154,360,1.209,361,1.228,362,1.248,363,1.209,364,1.228,365,1.136,366,1.895,367,1.19,368,1.248,369,2.557,370,2.364,371,1.248,372,1.19,373,1.19,374,1.248,375,1.172,376,1.248,377,1.19,378,1.19,379,1.248,380,1.172,381,1.248,382,1.19,383,1.248,384,1.209,385,1.19,386,1.248,387,1.19,388,1.865,389,1.19,390,2.29,391,1.248,392,1.19,393,1.248,394,1.19,395,1.248,396,1.172,397,1.19,398,1.19,399,1.19,400,1.19,401,1.491,402,1.19,403,1.248,404,1.19,405,1.19,406,1.19,407,0.929,408,1.172,409,1.172,410,1.248,411,1.172,412,1.248,413,1.172,414,1.228,415,1.248,479,1.29,560,0.982,563,1.01,564,1.04,569,2.314,579,1.025,645,2.531,646,2.414,668,1.764,669,1.764,836,3.943,1030,1.407,1498,2.671,1536,6.313,1609,2.016,1610,3.665,1639,3.263,1641,3.493,1642,4.562,1701,3.082,1732,3.9,1739,2.314,1743,3.082,1748,3.082,1753,3.082,1754,3.082,1928,3.513,1990,5.185,2001,3.082,2139,1.958,2246,5.223,2303,3.439,2304,5.22,2305,6.309,2306,6.309,2307,6.309,2308,6.436,2309,5.22,2310,5.22,2311,5.22,2312,7.044,2313,7.044,2314,6.313,2315,7.044,2316,6.309,2317,3.439,2318,4.901,2319,5.223,2320,5.655,2321,5.832,2322,5.22,2323,3.439,2324,3.439,2325,5.22,2326,6.309,2327,7.973,2328,3.439,2329,3.439,2330,3.439,2331,5.22,2332,3.439,2333,3.439,2334,3.439,2335,3.439,2336,3.439,2337,3.439,2338,6.309,2339,3.439,2340,3.439,2341,3.439,2342,4.321,2343,3.439,2344,3.439,2345,3.439,2346,3.082,2347,3.439,2348,3.082,2349,2.671,2350,3.082,2351,4.321,2352,3.439,2353,3.082,2354,5.22,2355,5.22,2356,3.439,2357,3.439,2358,3.439,2359,3.439,2360,3.439,2361,3.439,2362,3.439,2363,3.439,2364,3.439,2365,3.439,2366,3.439,2367,3.439,2368,3.439,2369,3.439,2370,4.678,2371,5.22,2372,3.439,2373,3.439,2374,3.439,2375,3.439,2376,3.439,2377,3.439,2378,3.439,2379,3.439,2380,3.439,2381,3.439,2382,3.439,2383,3.439,2384,5.22,2385,3.439,2386,3.082,2387,3.439,2388,3.439,2389,3.439,2390,3.439,2391,3.439,2392,3.439,2393,3.439,2394,3.439,2395,5.22,2396,3.439,2397,5.22,2398,3.439,2399,5.22,2400,3.439,2401,3.439,2402,3.439,2403,3.439,2404,3.439,2405,3.439,2406,3.439,2407,3.439,2408,3.082,2409,2.847,2410,3.439,2411,3.439,2412,3.439,2413,3.439,2414,3.439,2415,3.439,2416,3.439,2417,3.439,2418,3.082,2419,3.082,2420,3.439,2421,3.439,2422,2.847]],["title/classes/DetailContext.html",[0,0.274,2349,3.858]],["body/classes/DetailContext.html",[0,0.422,2,0.926,3,0.042,4,0.042,5,0.05,32,0.154,38,0.954,39,0.35,42,0.24,44,0.508,45,0.005,46,0.498,47,0.508,51,0.114,57,0.05,137,0.004,138,0.004,139,0.004,161,1.47,163,3.073,2202,6.331,2308,7.94,2349,6.964,2351,6.331,2353,6.854,2423,8.964,2424,6.854,2425,7.648,2426,7.648,2427,7.648]],["title/components/DetailsComponent.html",[264,1.013,372,1.719]],["body/components/DetailsComponent.html",[0,0.238,3,0.024,4,0.034,5,0.04,32,0.184,33,0.671,34,0.176,35,0.368,36,0.724,39,0.329,42,0.302,44,0.41,45,0.005,46,0.541,47,0.41,51,0.1,57,0.028,61,1.265,66,1.513,79,0.661,100,1.283,107,1.283,112,1.301,137,0.002,138,0.003,139,0.002,147,2.45,148,1.34,151,2.614,152,2.614,161,1.365,162,3.159,163,1.73,184,0.938,199,1.467,250,1.283,251,1.836,264,1.467,265,1.49,266,2.067,267,1.538,268,1.898,269,1.563,270,1.563,273,1.467,274,3.614,275,2.888,277,2.236,279,2.401,281,1.513,285,5.956,297,2.013,298,2.731,300,0.811,314,1.761,315,1.699,316,1.761,317,1.761,318,1.761,319,1.761,320,1.588,321,1.49,322,1.761,323,1.761,324,1.761,325,1.67,326,1.761,327,1.73,328,1.761,329,1.761,330,1.761,331,1.116,332,1.761,333,1.34,334,2.236,335,2.2,336,1.401,337,2.851,338,1.563,339,1.563,340,1.49,341,1.563,342,1.49,343,2.273,344,2.236,345,1.49,346,2.236,347,1.49,348,1.563,349,1.467,350,1.563,351,1.49,352,1.563,353,2.851,354,1.49,355,1.563,356,1.444,357,2.236,358,1.49,359,1.444,360,1.513,361,1.538,362,1.563,363,1.513,364,1.538,365,1.422,366,2.236,367,1.49,368,1.563,369,2.851,370,2.788,371,1.563,372,2.718,373,1.49,374,1.563,375,1.467,376,1.563,377,1.49,378,1.49,379,1.563,380,1.467,381,1.563,382,1.49,383,1.563,384,1.513,385,1.49,386,1.563,387,1.49,388,2.2,389,1.49,390,2.612,391,1.563,392,1.49,393,1.563,394,3.081,395,1.563,396,1.467,397,1.49,398,1.49,399,1.49,400,1.49,401,1.759,402,1.49,403,1.563,404,1.49,405,1.49,406,1.49,407,1.163,408,1.467,409,1.467,410,1.563,411,1.467,412,1.563,413,1.467,414,1.538,415,1.563,559,5.588,606,2.45,617,2.787,836,2.69,861,2.32,932,2.107,979,3.344,980,4.785,981,3.344,982,3.344,983,3.563,1030,1.761,1405,2.603,1533,4.325,1534,5.588,1619,6.363,1630,6.447,1639,3.85,1662,3.858,1669,5.521,1730,5.521,1791,3.725,1820,5.1,1821,6.915,1823,4.842,1824,3.858,1826,3.858,1827,3.858,1828,3.858,1829,3.563,2246,5.956,2314,5.521,2346,7.038,2386,3.858,2428,4.304,2429,7.194,2430,6.16,2431,7.853,2432,6.16,2433,4.304,2434,4.304,2435,6.16,2436,4.304,2437,4.304,2438,6.16,2439,4.304,2440,4.304,2441,7.194,2442,6.16,2443,4.304,2444,4.304,2445,4.304,2446,4.304,2447,6.16,2448,4.304,2449,4.304,2450,4.304,2451,4.304,2452,6.16,2453,2.383,2454,6.16,2455,4.304,2456,4.304,2457,4.304,2458,4.304,2459,4.304,2460,6.16,2461,4.304,2462,4.304,2463,6.16]],["title/directives/DraggableDirective.html",[336,1.616,411,1.692]],["body/directives/DraggableDirective.html",[0,0.306,3,0.031,4,0.031,5,0.036,28,1.839,32,0.166,34,0.227,35,0.439,42,0.299,45,0.005,49,0.662,50,0.541,51,0.071,57,0.036,137,0.003,138,0.004,139,0.003,184,1.791,199,2.981,250,1.655,273,1.891,274,2.54,279,2.284,298,2.684,300,1.046,320,2.048,336,2.389,408,1.891,411,2.501,442,3.254,477,1.807,578,4.972,932,4.668,1216,4.596,1334,7.262,1533,5.153,1545,4.312,1847,4.596,1928,6.88,2370,4.975,2453,3.073,2464,7.519,2465,8.674,2466,5.551,2467,7.34,2468,8.223,2469,6.578,2470,8.223,2471,8.223,2472,8.223,2473,7.34,2474,7.34,2475,7.34,2476,8.545,2477,5.551,2478,5.551,2479,5.551,2480,6.808,2481,5.551,2482,9.348,2483,5.551,2484,10.034,2485,5.153,2486,5.551,2487,5.551,2488,7.34,2489,5.551,2490,5.551,2491,5.153,2492,5.551,2493,7.841,2494,5.551,2495,5.551,2496,9.348,2497,5.551,2498,5.551,2499,5.551,2500,5.551,2501,5.551,2502,5.551,2503,5.551,2504,5.551,2505,5.551,2506,5.551,2507,4.975,2508,6.578,2509,5.551,2510,5.551,2511,5.551,2512,5.551,2513,5.551]],["title/components/EmailSettingComponent.html",[264,1.013,373,1.719]],["body/components/EmailSettingComponent.html",[0,0.219,3,0.022,4,0.022,5,0.026,28,0.887,32,0.195,33,0.632,34,0.162,35,0.347,39,0.181,42,0.318,44,0.577,45,0.005,46,0.601,47,0.577,49,0.693,50,0.819,51,0.102,52,0.374,57,0.026,61,1.165,79,0.737,100,1.182,107,1.73,112,1.199,117,2.064,137,0.002,138,0.003,139,0.002,148,2.617,151,2.464,152,2.464,161,0.87,180,0.961,184,0.864,218,1.9,250,1.73,251,1.73,264,1.4,265,1.373,266,1.948,267,1.417,269,1.44,270,1.44,272,2.576,273,1.351,274,3.596,277,2.108,279,2.334,281,1.426,282,2.665,297,2.316,298,2.579,300,0.747,321,1.373,333,1.235,334,2.108,335,2.074,336,1.291,337,2.744,338,1.44,339,1.44,340,1.373,341,1.44,342,1.373,343,2.17,344,2.108,345,1.373,346,2.108,347,1.373,348,1.44,349,1.351,350,1.44,351,3.402,352,1.44,353,2.744,354,1.373,355,1.44,356,1.331,357,2.108,358,1.373,359,1.331,360,1.394,361,1.417,362,1.44,363,1.394,364,1.417,365,1.311,366,2.108,367,1.373,368,1.44,369,2.744,370,1.331,371,1.44,372,1.373,373,2.616,374,2.92,375,1.351,376,1.44,377,1.373,378,1.373,379,1.44,380,1.351,381,1.44,382,1.373,383,1.44,384,1.394,385,1.373,386,1.44,387,1.373,388,2.074,389,1.373,390,2.493,391,1.44,392,1.373,393,1.44,394,1.373,395,1.44,396,1.351,397,1.373,398,1.373,399,3.195,400,1.373,401,1.658,402,1.373,403,1.44,404,1.373,405,1.373,406,1.373,407,1.071,408,1.351,409,1.351,410,1.44,411,1.351,412,1.44,413,1.351,414,1.417,415,1.44,537,1.394,563,1.165,564,1.199,658,1.987,902,3.214,1219,3.76,1437,3.081,1438,4.026,1439,5.307,1440,4.51,1441,4.076,1442,3.511,1443,6.649,1444,4.076,1445,3.511,1446,5.901,1447,5.307,1448,4.026,1449,4.822,1450,5.307,1451,4.076,1452,4.076,1453,4.076,1457,3.555,1458,2.785,1460,2.785,1463,4.076,1464,4.725,1466,4.076,1470,4.076,1485,2.785,1791,3.511,1823,6.757,2243,6.66,2276,5.055,2514,7.559,2515,6.775,2516,7.782,2517,5.203,2518,5.806,2519,3.966,2520,3.966,2521,2.919,2522,2.919,2523,2.919,2524,3.966,2525,3.966,2526,3.966,2527,3.966,2528,2.919,2529,2.919,2530,2.919,2531,2.919,2532,2.919,2533,2.919,2534,2.919,2535,2.919,2536,2.919,2537,2.919,2538,2.919,2539,2.919,2540,2.919,2541,3.283,2542,2.919,2543,2.919,2544,3.966,2545,3.966,2546,3.966,2547,4.51,2548,4.807,2549,4.807]],["title/classes/EmptyLightCards.html",[0,0.274,469,2.19]],["body/classes/EmptyLightCards.html",[0,0.548,2,0.483,3,0.022,4,0.022,5,0.026,8,1.135,10,2.209,11,1.049,12,1.403,32,0.203,33,1.087,34,0.163,35,0.349,37,1.604,38,1.249,39,0.398,42,0.125,45,0.005,49,0.476,50,0.389,51,0.096,52,0.376,57,0.065,58,0.574,62,1.299,76,0.967,77,1.696,79,0.739,88,1.299,91,1.274,92,1.274,93,1.186,126,1.234,134,1.576,137,0.002,138,0.003,139,0.002,161,1.405,165,0.793,168,1.79,205,2.225,220,0.98,301,1.319,331,1.512,425,1.498,427,2.166,430,1.643,435,1.522,436,1.007,437,0.994,438,1.109,439,1.109,440,1.523,441,2.439,443,1.14,444,1.207,454,3.04,455,2.678,456,1.833,460,1.912,461,2.37,462,1.207,463,1.19,464,1.871,465,1.796,466,1.694,467,3.101,468,4.657,469,3.344,470,1.796,471,2.926,472,2.678,473,1.871,474,1.523,475,3.101,476,3.04,477,1.299,478,2.926,479,3.16,480,1.694,481,3.04,482,1.833,483,3.04,484,3.04,485,1.871,486,1.871,487,3.04,488,2.982,489,3.04,490,1.694,491,1.727,492,3.04,493,1.426,494,3.04,495,1.871,496,3.04,497,1.833,498,3.04,499,1.633,500,1.549,501,1.912,502,2.794,503,1.912,504,1.694,505,1.912,506,1.912,507,1.912,508,1.576,509,1.912,510,1.912,511,1.912,512,1.912,513,1.549,514,1.912,515,1.912,516,1.912,517,1.912,518,1.912,519,1.912,520,1.912,521,1.912,522,1.912,523,1.912,524,1.833,2550,3.992]],["title/classes/FailToUpdateTimeReference.html",[0,0.274,2551,3.216]],["body/classes/FailToUpdateTimeReference.html",[0,0.496,2,0.721,3,0.033,4,0.033,5,0.039,7,2.479,8,1.07,10,2.33,16,2.79,32,0.201,33,0.979,34,0.243,35,0.459,36,1,37,1.64,38,1.16,39,0.272,40,1.501,42,0.267,44,0.396,45,0.005,46,0.388,47,0.396,49,0.71,50,0.58,51,0.114,52,0.561,55,3.142,56,2.914,57,0.062,58,0.856,71,2.981,77,1.649,83,2.625,88,2.5,116,4.253,126,1.206,137,0.003,138,0.004,139,0.003,258,2.06,266,1.997,401,2.721,430,1.676,457,2.175,493,2.126,543,3.848,550,5.654,833,3.489,1295,3.679,1317,4.005,1386,5.17,1445,3.599,1751,5.393,2551,5.508,2552,4.178,2553,5.393,2554,5.967,2555,6.982,2556,5.654,2557,5.967,2558,7.681,2559,5.951,2560,5.967,2561,3.854,2562,4.178,2563,3.854,2564,4.178,2565,4.623,2566,5.269,2567,4.623,2568,5.393,2569,4.623,2570,6.26,2571,6.26,2572,4.623,2573,4.623,2574,5.967,2575,4.38,2576,4.005,2577,4.623,2578,4.623,2579,4.38,2580,4.623,2581,4.005,2582,4.38,2583,4.974,2584,4.623,2585,4.623,2586,4.38]],["title/components/FeedComponent.html",[264,1.013,375,1.692]],["body/components/FeedComponent.html",[0,0.264,3,0.026,4,0.037,5,0.043,17,2.153,32,0.181,33,0.723,34,0.196,35,0.397,36,0.563,39,0.219,42,0.281,44,0.318,45,0.005,46,0.536,47,0.318,51,0.121,52,0.452,57,0.031,61,1.407,100,1.427,107,1.427,112,1.448,117,2.198,137,0.002,138,0.003,139,0.002,148,2.068,161,0.995,250,1.427,251,1.979,264,1.555,265,1.657,266,2.228,267,1.711,268,2.112,269,1.739,270,1.739,272,2.86,273,1.632,274,3.636,275,3.113,277,2.411,281,1.631,282,3.195,297,1.609,298,2.038,300,0.902,314,1.959,315,1.891,316,1.959,317,1.959,318,1.959,319,1.959,320,1.767,321,1.657,322,1.959,323,1.959,324,1.959,325,2.577,326,1.959,327,1.924,328,1.959,329,1.959,330,1.959,331,1.242,332,1.959,333,1.491,334,2.411,335,2.372,336,1.559,337,2.989,338,1.739,339,1.739,340,1.657,341,1.739,342,1.657,343,2.409,344,2.411,345,1.657,346,2.411,347,1.657,348,1.739,349,1.632,350,1.739,351,1.657,352,1.739,353,2.989,354,1.657,355,1.739,356,1.607,357,2.411,358,1.657,359,1.607,360,1.684,361,1.711,362,1.739,363,1.684,364,1.711,365,1.583,366,2.411,367,1.657,368,1.739,369,2.989,370,1.607,371,1.739,372,1.657,373,1.657,374,1.739,375,2.805,376,1.739,377,1.657,378,1.657,379,1.739,380,1.632,381,1.739,382,1.657,383,1.739,384,1.684,385,1.657,386,1.739,387,1.657,388,2.372,389,1.657,390,2.768,391,1.739,392,1.657,393,1.739,394,1.657,395,1.739,396,1.632,397,1.657,398,1.657,399,1.657,400,1.657,401,1.897,402,1.657,403,1.739,404,1.657,405,1.657,406,1.657,407,1.294,408,1.632,409,1.632,410,1.739,411,1.632,412,1.739,413,1.632,414,1.711,415,1.739,461,1.407,462,1.448,463,1.427,477,1.559,480,3.236,504,3.236,513,2.577,537,1.684,559,5.923,560,1.368,561,1.711,563,1.407,564,1.448,576,2.807,579,1.427,588,3.327,606,3.781,876,2.199,910,2.726,1000,3.72,1002,3.525,1038,3.965,1040,4.292,1295,3.181,1821,6.396,2208,3.72,2211,3.965,2587,4.789,2588,7.624,2589,6.641,2590,7.624,2591,6.641,2592,4.789,2593,4.789,2594,4.789,2595,4.789,2596,4.292,2597,3.223,2598,4.789,2599,4.789,2600,4.789,2601,4.789,2602,4.292,2603,6.833,2604,4.292,2605,5.498,2606,4.292,2607,4.292,2608,3.965,2609,4.292,2610,4.292,2611,4.292]],["title/injectables/FeedFiltersEffects.html",[790,4.111,841,1.439]],["body/injectables/FeedFiltersEffects.html",[0,0.214,3,0.021,4,0.021,5,0.025,8,0.968,9,2.037,12,2.007,17,2.146,28,1.672,32,0.168,34,0.158,35,0.341,39,0.177,42,0.271,44,0.258,45,0.005,46,0.441,47,0.258,49,1.055,50,0.813,51,0.121,52,0.366,57,0.025,62,1.858,66,2.007,91,0.527,92,0.527,93,0.491,99,3.049,117,2.047,137,0.002,138,0.003,139,0.002,161,0.856,165,1.346,180,2.02,184,2.091,185,3.563,199,1.945,223,3.901,258,1.976,260,3.161,264,0.79,279,2.586,300,0.73,325,3.656,401,2.381,407,2.153,441,2.607,470,2.568,537,1.363,548,3.209,560,1.107,561,1.385,563,1.139,564,1.172,576,2.272,579,1.155,620,2.722,727,3.452,790,4.727,823,3.973,830,2.344,831,2.423,836,4.673,837,2.722,841,1.654,842,1.71,861,3.654,873,2.09,874,1.988,878,2.853,910,2.207,932,3.318,981,3.011,1030,3.059,1198,3.677,1328,4.009,1334,4.435,1338,4.746,1372,4.202,1477,3.209,1866,5.117,1867,5.117,1868,4.435,1885,4.727,1890,2.853,1895,2.207,1896,2.853,2342,6.19,2453,2.146,2485,6.615,2491,6.211,2553,4.009,2564,2.722,2566,3.973,2575,4.989,2582,5.503,2597,2.609,2612,8.846,2613,3.877,2614,6.778,2615,5.611,2616,6.778,2617,6.778,2618,6.778,2619,7.477,2620,5.503,2621,5.709,2622,3.877,2623,3.877,2624,9.182,2625,5.709,2626,5.709,2627,5.709,2628,5.709,2629,5.709,2630,5.709,2631,5.709,2632,7.477,2633,5.709,2634,7.477,2635,5.709,2636,5.709,2637,4.727,2638,5.709,2639,5.709,2640,3.877,2641,5.709,2642,5.709,2643,3.877,2644,5.709,2645,5.709,2646,6.778,2647,5.709,2648,8.846,2649,5.709,2650,5.709,2651,7.477,2652,8.337,2653,5.709,2654,5.709,2655,5.709,2656,5.709,2657,5.709,2658,5.709,2659,7.477,2660,5.709,2661,8.337,2662,8.337,2663,5.709,2664,5.709,2665,5.709,2666,3.877,2667,2.207,2668,2.344,2669,3.474,2670,3.011,2671,3.877,2672,3.877,2673,3.474,2674,2.609,2675,3.877,2676,3.877,2677,3.877,2678,3.877,2679,3.877]],["title/modules/FeedModule.html",[625,2.148,2680,3.858]],["body/modules/FeedModule.html",[0,0.272,3,0.027,4,0.037,5,0.044,32,0.1,36,0.58,45,0.005,51,0.132,57,0.032,73,2.264,107,1.47,137,0.002,138,0.003,139,0.002,300,0.929,302,2.891,303,2.982,304,3.476,314,2.018,315,1.947,316,2.018,317,2.018,318,2.018,319,2.018,320,1.82,321,1.707,322,2.018,323,2.018,324,2.018,325,1.914,326,2.018,327,1.982,328,2.018,329,2.018,330,2.018,331,1.279,332,2.018,333,1.535,358,3.125,363,3.175,365,2.24,375,3.356,377,3.125,384,3.175,392,3.125,397,3.125,400,3.125,402,3.125,405,1.707,406,3.125,411,3.077,413,3.077,625,2.133,627,2.471,628,2.808,629,4.682,630,3.973,631,4.07,639,6.078,640,3.973,641,2.982,643,3.654,647,3.654,652,4.236,655,2.891,656,5.265,657,5.265,658,2.471,660,3.831,662,3.463,667,4.989,668,3.476,669,2.53,672,6.074,673,4.083,674,4.083,675,4.42,676,4.083,677,5.265,678,4.083,681,4.083,682,4.083,683,4.083,691,3.63,692,3.831,702,2.808,898,4.539,918,3.083,1047,6.34,1052,4.42,1056,6.94,1059,4.42,1819,4.42,1997,7.833,2002,4.42,2185,4.083,2465,4.42,2566,2.891,2680,8.149,2681,4.42,2682,4.42,2683,4.42,2684,4.42,2685,7.015,2686,6.646,2687,4.932,2688,4.42,2689,4.932,2690,4.42,2691,4.932,2692,9.03,2693,4.42,2694,4.932,2695,4.932,2696,4.42,2697,4.42,2698,4.42,2699,4.42,2700,4.932,2701,6.778,2702,6.778,2703,4.42,2704,4.42,2705,4.932,2706,4.932,2707,6.778,2708,4.42,2709,4.42,2710,4.42,2711,4.932,2712,4.42,2713,4.932,2714,4.932,2715,4.932,2716,4.932,2717,4.42,2718,4.42,2719,6.074,2720,4.932,2721,4.932]],["title/modules/FeedRoutingModule.html",[625,2.148,2686,3.655]],["body/modules/FeedRoutingModule.html",[0,0.365,3,0.036,4,0.045,5,0.053,36,0.777,45,0.005,51,0.124,57,0.043,107,1.97,137,0.003,138,0.004,139,0.003,180,1.602,264,1.904,300,1.245,314,2.705,315,2.61,316,2.705,317,2.705,318,2.705,319,2.705,320,2.439,321,2.288,322,2.705,323,2.705,324,2.705,325,2.565,326,2.705,327,2.657,328,2.705,329,2.705,330,2.705,331,1.714,332,2.705,356,2.996,370,2.755,375,2.797,513,3.186,627,3.312,631,3.475,643,3.564,647,4.426,694,4.866,696,6.043,697,5.783,698,3.763,699,6.378,700,5.473,701,7.205,705,5.136,712,5.473,1061,5.925,1062,5.136,1063,5.473,1064,5.925,1065,8.003,1066,5.925,1067,5.925,1068,5.925,1069,5.925,1070,5.136,2686,6.043,2688,5.925,2722,6.611]],["title/classes/Filter.html",[0,0.274,407,1.341]],["body/classes/Filter.html",[0,0.262,2,0.575,3,0.026,4,0.026,5,0.031,7,1.978,11,2.156,24,2.847,28,1.062,30,4.808,32,0.18,34,0.194,35,0.394,36,1.049,38,0.592,39,0.375,42,0.287,44,0.545,45,0.005,46,0.534,47,0.545,51,0.06,57,0.031,62,3.209,73,3.03,88,2.148,91,0.645,92,0.645,93,1.215,117,1.621,137,0.002,138,0.003,139,0.002,148,2.684,161,1.525,184,1.944,199,2.586,212,3.757,255,3.414,264,1.346,281,1.621,297,2.162,298,1.456,327,2.652,407,2.805,461,2.785,462,1.435,463,1.415,578,5.212,702,3.757,823,3.869,836,5.126,866,4.422,932,3.715,1030,2.7,1145,4.442,1177,5.464,1376,6.371,1676,4.634,2031,5.916,2164,5.464,2480,5.464,2637,5.464,2673,5.916,2723,9.334,2724,4.747,2725,6.601,2726,6.601,2727,6.601,2728,6.601,2729,9.334,2730,6.601,2731,6.601,2732,6.601,2733,6.601,2734,6.601,2735,6.601,2736,6.601,2737,6.601,2738,6.601,2739,5.916,2740,8.202,2741,7.588,2742,4.747,2743,4.747,2744,4.747,2745,4.747,2746,4.747,2747,6.601,2748,4.747,2749,6.601,2750,8.202,2751,4.747,2752,8.202,2753,6.601,2754,6.601,2755,6.601,2756,4.747,2757,6.601,2758,6.601,2759,4.747,2760,4.747,2761,4.747,2762,4.747,2763,4.747,2764,4.747,2765,4.747,2766,4.747,2767,4.747,2768,4.747,2769,4.747,2770,4.747,2771,6.601,2772,4.747]],["title/injectables/FilterService.html",[841,1.439,2620,3.655]],["body/injectables/FilterService.html",[0,0.3,3,0.03,4,0.03,5,0.035,8,0.914,28,2.122,34,0.222,35,0.433,36,0.957,39,0.372,42,0.303,45,0.005,49,0.649,50,0.53,51,0.11,57,0.047,58,0.782,62,2.825,137,0.004,138,0.004,139,0.003,161,1.22,165,1.846,180,2.252,184,2.099,199,2.773,210,2.398,279,2.842,281,1.778,297,2.252,300,1.024,398,1.882,407,2.441,461,1.598,462,1.644,463,1.621,528,4.502,828,3.66,829,3.522,830,3.289,837,5.715,841,2.097,842,2.398,866,3.904,932,4.425,1030,2.225,1091,3.011,1614,3.522,2620,5.329,2773,4.874,2774,8.14,2775,8.679,2776,8.679,2777,8.679,2778,8.679,2779,8.679,2780,7.241,2781,5.438,2782,5.438,2783,5.438,2784,5.438,2785,5.438,2786,5.438,2787,4.874,2788,7.241,2789,5.438,2790,5.991,2791,4.502,2792,4.502,2793,5.991,2794,4.502,2795,5.991,2796,4.502,2797,5.438,2798,8.679,2799,5.438,2800,5.438,2801,5.438,2802,5.438,2803,5.438,2804,5.438,2805,5.438,2806,5.438,2807,5.438,2808,5.438,2809,5.438,2810,5.438,2811,5.438,2812,5.438,2813,5.438,2814,5.438,2815,5.438,2816,4.874,2817,4.874,2818,4.874,2819,4.874,2820,4.874]],["title/components/FiltersComponent.html",[264,1.013,377,1.719]],["body/components/FiltersComponent.html",[0,0.3,3,0.03,4,0.03,5,0.035,17,2.026,32,0.175,33,0.789,34,0.222,35,0.433,39,0.249,42,0.256,44,0.362,45,0.005,46,0.565,47,0.362,51,0.115,52,0.513,57,0.035,61,1.598,100,1.621,112,1.644,117,2.282,137,0.003,138,0.004,139,0.003,161,1.085,250,1.621,251,2.158,264,1.66,265,1.882,266,2.429,267,1.943,269,1.974,270,1.974,272,3.054,273,1.853,274,3.659,277,2.628,281,1.778,282,3.368,297,1.318,298,1.668,300,1.024,333,1.693,334,2.628,335,2.586,336,1.77,337,3.15,338,1.974,339,1.974,340,1.882,341,1.974,342,1.882,343,2.572,344,2.628,345,1.882,346,2.628,347,1.882,348,1.974,349,1.853,350,1.974,351,1.882,352,1.974,353,3.15,354,1.882,355,1.974,356,1.825,357,2.628,358,1.882,359,1.825,360,1.912,361,1.943,362,1.974,363,1.912,364,1.943,365,1.797,366,2.628,367,1.882,368,1.974,369,3.15,370,1.825,371,1.974,372,1.882,373,1.882,374,1.974,375,1.853,376,1.974,377,3.003,378,1.882,379,1.974,380,1.853,381,1.974,382,1.882,383,1.974,384,1.912,385,1.882,386,1.974,387,1.882,388,2.586,389,1.882,390,2.955,391,1.974,392,1.882,393,1.974,394,1.882,395,1.974,396,1.853,397,1.882,398,1.882,399,1.882,400,1.882,401,2.068,402,1.882,403,1.974,404,1.882,405,1.882,406,1.882,407,1.469,408,1.853,409,1.853,410,1.974,411,1.853,412,1.974,413,1.853,414,1.943,415,1.974,537,1.912,560,1.553,563,1.598,564,1.644,579,1.621,866,3.904,892,6.489,910,3.096,998,4.502,1818,6.388,2821,5.438,2822,7.295,2823,7.241,2824,5.438,2825,4.874,2826,4.874]],["title/classes/GuidService.html",[0,0.274,1086,3.487]],["body/classes/GuidService.html",[0,0.395,2,0.867,3,0.039,4,0.039,5,0.047,32,0.145,34,0.292,35,0.515,38,1.154,39,0.423,42,0.301,45,0.005,51,0.11,53,5.385,54,3.764,57,0.047,79,0.768,137,0.004,138,0.004,139,0.004,184,1.878,279,2.569,281,2.117,297,2.089,300,1.349,528,5.93,1086,6.054,2032,7.728,2787,6.419,2827,7.163,2828,9.601,2829,9.251,2830,8.622,2831,7.163,2832,7.163,2833,8.622,2834,7.163,2835,7.163,2836,7.163]],["title/classes/HandleUnexpectedError.html",[0,0.274,435,1.096]],["body/classes/HandleUnexpectedError.html",[0,0.517,2,0.677,3,0.031,4,0.031,5,0.036,8,1.089,10,2.021,32,0.205,33,1.041,34,0.228,35,0.441,36,0.867,37,1.729,38,1.209,39,0.256,40,1.411,42,0.259,44,0.372,45,0.005,46,0.364,47,0.372,49,0.667,50,0.545,51,0.105,52,0.528,57,0.063,58,0.804,77,1.719,79,0.6,91,1.299,92,1.299,93,1.209,106,3.796,126,1.171,137,0.004,138,0.004,139,0.003,161,1.106,165,1.465,230,2.374,258,1.936,331,1.45,343,2.96,407,1.511,432,3.784,435,1.937,436,1.411,437,1.392,438,1.554,439,1.554,457,2.111,461,1.644,462,1.692,463,1.667,477,1.821,479,2.099,508,2.209,551,3.185,851,4.839,866,3.016,879,3.623,880,4.991,881,4.839,885,3.497,886,4.991,1011,3.623,1014,3.928,1015,5.159,1016,3.623,1017,4.991,1018,3.928,1019,3.928,1020,5.18,1021,3.765,1022,3.928,1023,3.928,1024,3.765,2837,7.378,2838,5.594]],["title/classes/HandleUnexpectedError-1.html",[0,0.228,435,0.912,588,2.07]],["body/classes/HandleUnexpectedError-1.html",[0,0.53,2,0.609,3,0.028,4,0.028,5,0.033,8,1.101,32,0.205,33,1.058,34,0.205,35,0.411,36,0.808,37,1.728,38,1.222,39,0.23,40,1.269,42,0.246,44,0.334,45,0.005,46,0.328,47,0.334,49,0.6,50,0.49,51,0.087,52,0.474,57,0.064,58,0.723,76,1.665,77,1.736,79,0.839,91,1.305,92,1.305,93,1.215,126,1.319,137,0.002,138,0.003,139,0.002,161,1.539,163,2.021,190,2.415,220,1.235,418,4.218,419,2.949,422,3.144,423,2.864,424,4.218,425,1.887,426,3.919,427,2.595,428,4.331,429,4.331,430,1.935,431,4.112,432,4.012,433,4.331,434,4.331,435,1.856,436,1.269,437,1.252,438,1.397,439,1.397,440,1.919,441,1.521,442,2.949,443,1.437,444,1.521,445,3.144,446,3.144,447,3.144,448,3.144,449,3.144,450,3.144,451,3.144,452,4.294,453,3.042,457,2.001,2839,6.87,2840,5.031]],["title/classes/HandleUnexpectedError-2.html",[0,0.228,435,0.912,720,2.676]],["body/classes/HandleUnexpectedError-2.html",[0,0.502,2,0.742,3,0.034,4,0.034,5,0.04,8,1.079,32,0.206,33,1.023,34,0.25,35,0.468,36,0.92,37,1.693,38,1.197,39,0.28,40,1.546,42,0.271,44,0.408,45,0.005,46,0.399,47,0.408,49,0.731,50,0.597,51,0.078,52,0.578,57,0.063,58,0.881,76,1.485,77,1.582,91,1.235,92,1.235,93,1.15,126,1.331,137,0.003,138,0.004,139,0.003,220,1.505,427,2.463,430,1.726,435,2.006,436,1.546,437,1.526,438,1.702,439,1.702,443,1.751,444,1.853,457,2.206,572,5.391,727,5.976,1407,4.125,1677,4.125,2035,5.586,2036,5.586,2841,4.304,2842,7.828,2843,6.13,2844,6.081,2845,4.762,2846,4.762,2847,4.762,2848,4.512]],["title/classes/HandleUnexpectedError-3.html",[0,0.228,435,0.912,2214,2.901]],["body/classes/HandleUnexpectedError-3.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.655,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,2.745,512,1.867,513,1.513,514,1.867,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,2849,5.732,2850,3.898]],["title/classes/HandleUnexpectedError-4.html",[0,0.228,435,0.912,2851,3.421]],["body/classes/HandleUnexpectedError-4.html",[0,0.51,2,0.595,3,0.027,4,0.027,5,0.032,8,1.106,14,2.462,16,2.304,17,1.223,32,0.203,33,1.025,34,0.201,35,0.404,36,0.795,37,1.735,38,1.191,39,0.309,40,1.24,42,0.243,44,0.554,45,0.005,46,0.32,47,0.327,49,0.586,50,0.479,51,0.086,52,0.464,57,0.062,58,0.707,76,1.638,77,1.655,79,0.893,91,1.256,92,1.256,93,1.169,126,1.335,132,2.462,137,0.002,138,0.003,139,0.002,168,1.508,188,2.58,189,2.925,190,2.377,191,2.168,220,1.207,301,1.624,427,2.208,430,1.384,435,1.838,436,1.24,437,1.223,443,1.404,444,1.486,457,1.977,477,2.516,493,2.761,728,5.383,782,2.972,1164,3.964,1172,3.072,1399,3.072,1405,2.972,2090,2.65,2107,3.183,2130,5.006,2137,5.006,2138,3.183,2139,4.969,2141,4.4,2142,2.972,2143,3.183,2144,4.531,2852,3.072,2853,6.762,2854,4.915,2855,4.551,2856,2.881,2857,4.4,2858,4.279,2859,4.531,2860,4.531,2861,4.531,2862,3.308,2863,3.308,2864,3.308,2865,3.308,2866,3.308,2867,3.183,2868,3.183,2869,5.202,2870,5.202,2871,4.551,2872,3.308,2873,3.308,2874,3.308,2875,3.308,2876,3.183]],["title/classes/HandleUnexpectedError-5.html",[0,0.228,435,0.912,591,3.421]],["body/classes/HandleUnexpectedError-5.html",[0,0.524,2,0.662,3,0.03,4,0.03,5,0.036,8,1.097,32,0.205,33,1.051,34,0.223,35,0.434,36,0.854,37,1.721,38,1.218,39,0.25,40,1.379,42,0.256,44,0.363,45,0.005,46,0.356,47,0.363,49,0.652,50,0.533,51,0.07,52,0.515,57,0.064,58,0.786,66,1.922,76,1.76,77,1.707,91,1.265,92,1.265,93,1.178,126,1.347,137,0.003,138,0.004,139,0.003,220,1.342,427,2.331,430,2.046,435,1.92,436,1.379,437,1.361,438,1.518,439,1.518,443,1.561,444,1.653,457,2.087,710,4.996,1476,4.645,2667,4.645,2668,3.305,2877,3.416,2878,7.265,2879,5.466,2880,4.89,2881,4.784,2882,4.784,2883,5.285,2884,4.784,2885,4.784,2886,3.679,2887,3.679,2888,3.679,2889,3.679,2890,3.54,2891,3.679,2892,3.679,2893,3.54]],["title/classes/HandleUnexpectedError-6.html",[0,0.228,435,0.912,2605,3.421]],["body/classes/HandleUnexpectedError-6.html",[0,0.516,2,0.67,3,0.03,4,0.03,5,0.036,8,1.087,27,3.933,32,0.205,33,1.038,34,0.226,35,0.438,36,0.861,37,1.726,38,1.206,39,0.253,40,1.397,42,0.258,44,0.368,45,0.005,46,0.361,47,0.368,49,0.661,50,0.54,51,0.093,52,0.522,57,0.063,58,0.796,66,3.641,76,1.342,77,1.714,91,1.27,92,1.27,93,1.182,126,1.351,137,0.003,138,0.004,139,0.003,435,1.929,436,1.397,437,1.378,438,1.538,439,1.538,457,2.1,543,4.554,1092,3.348,1167,4.295,1895,3.152,2081,4.966,2082,3.586,2085,3.887,2086,4.966,2087,4.966,2088,4.966,2089,4.966,2090,2.985,2091,3.586,2092,3.887,2093,3.887,2094,3.887,2095,3.887,2096,5.144,2097,3.586,2894,7.327,2895,5.537]],["title/injectables/HandlebarsService.html",[841,1.439,1990,3.655]],["body/injectables/HandlebarsService.html",[0,0.193,3,0.019,4,0.019,5,0.023,17,1.588,24,3.459,28,1.59,32,0.144,34,0.34,35,0.316,36,0.75,39,0.16,42,0.306,44,0.424,45,0.005,46,0.523,47,0.424,49,0.631,50,0.782,51,0.117,53,2.781,54,1.84,57,0.023,79,0.976,137,0.004,138,0.003,139,0.002,158,1.938,161,0.525,163,1.407,165,1.516,167,1.607,170,1.993,180,1.85,184,2.2,191,2.333,258,1.831,267,1.25,279,2.889,281,1.299,297,2.336,298,2.915,300,0.659,401,1,560,1,561,1.25,579,1.043,588,2.65,668,1.795,669,1.795,841,1.533,842,1.544,898,3.739,918,2.188,930,3.715,932,1.714,976,2.117,1030,3.284,1295,2.534,1416,2.188,1418,5.468,1421,5.137,1609,2.052,1626,2.898,1641,3.531,1642,4.604,1732,3.935,1990,3.894,2000,3.137,2214,3.715,2318,4.955,2319,2.898,2349,4.955,2350,3.137,2351,2.898,2851,2.898,2896,3.5,2897,5.291,2898,5.291,2899,5.291,2900,7.109,2901,7.109,2902,7.109,2903,7.109,2904,7.109,2905,6.378,2906,7.109,2907,7.109,2908,7.109,2909,7.109,2910,7.109,2911,7.109,2912,7.109,2913,7.109,2914,6.378,2915,3.5,2916,5.291,2917,5.291,2918,6.378,2919,3.5,2920,3.5,2921,3.5,2922,3.5,2923,3.5,2924,3.5,2925,3.5,2926,3.5,2927,3.5,2928,3.5,2929,3.5,2930,3.5,2931,3.5,2932,3.5,2933,3.5,2934,3.5,2935,3.5,2936,3.5,2937,3.5,2938,3.5,2939,3.5,2940,3.5,2941,3.5,2942,3.5,2943,3.5,2944,3.5,2945,3.5,2946,3.5,2947,3.5,2948,3.5,2949,3.5,2950,3.5,2951,3.5,2952,3.5,2953,3.5,2954,3.5,2955,3.5,2956,3.5,2957,3.5,2958,3.5,2959,3.5,2960,2.356,2961,3.137,2962,3.5,2963,3.5,2964,3.5,2965,3.5,2966,3.5,2967,3.5,2968,3.5,2969,3.5,2970,2.898,2971,3.5,2972,3.5,2973,8.786,2974,6.378,2975,8.786,2976,8.786,2977,3.5,2978,3.5,2979,3.5,2980,7.633,2981,5.291,2982,3.5,2983,3.5,2984,3.5,2985,3.5,2986,8.028,2987,3.5,2988,7.633,2989,3.5,2990,3.5,2991,3.5,2992,3.5,2993,5.291,2994,3.5,2995,3.5,2996,3.5,2997,3.5,2998,3.5,2999,3.5,3000,3.137,3001,3.5,3002,3.5,3003,3.5,3004,3.5,3005,3.5,3006,3.5,3007,3.5,3008,3.5,3009,3.5,3010,3.5,3011,3.5,3012,3.5,3013,3.5,3014,3.5,3015,3.5,3016,3.5,3017,3.5,3018,5.291,3019,6.378,3020,6.378,3021,3.5]],["title/classes/I18n.html",[0,0.274,146,1.832]],["body/classes/I18n.html",[0,0.418,2,0.918,3,0.042,4,0.042,5,0.049,32,0.153,38,1.112,39,0.408,42,0.238,44,0.65,45,0.005,46,0.494,47,0.504,51,0.096,57,0.049,79,1.016,91,1.03,92,1.03,93,0.959,137,0.004,138,0.004,139,0.004,146,3.291,158,4.937,160,3.984,165,1.943,167,3.48,3022,7.58,3023,7.58,3024,7.58]],["title/injectables/I18nService.html",[538,3.655,841,1.439]],["body/injectables/I18nService.html",[0,0.346,3,0.034,4,0.034,5,0.041,32,0.185,34,0.256,35,0.475,36,1.111,39,0.287,42,0.303,44,0.528,45,0.005,46,0.517,47,0.528,51,0.125,52,0.592,57,0.041,79,1.052,117,2.409,137,0.003,138,0.004,139,0.003,184,1.731,279,2.683,281,1.951,297,1.52,298,1.925,300,1.182,538,5.847,560,1.792,563,1.843,564,1.897,579,1.87,668,3.217,669,3.217,841,2.301,842,2.766,909,6.577,1295,3.805,1639,4.965,1641,4.398,1642,5.646,2563,6.538,2960,6.364,2961,5.622,3025,6.273,3026,7.944,3027,7.944,3028,7.944,3029,6.273,3030,7.944,3031,6.273,3032,6.273,3033,6.273,3034,6.273,3035,6.273,3036,6.273,3037,6.273,3038,5.622,3039,5.622,3040,6.273,3041,6.273,3042,6.273,3043,5.622,3044,5.622,3045,6.273,3046,6.273,3047,6.273,3048,6.273,3049,8.718,3050,6.273,3051,6.273,3052,6.273,3053,7.944,3054,6.273,3055,6.273]],["title/components/IconComponent.html",[264,1.013,378,1.719]],["body/components/IconComponent.html",[0,0.242,3,0.024,4,0.034,5,0.041,32,0.198,33,0.68,34,0.179,35,0.373,36,0.931,39,0.201,42,0.306,44,0.292,45,0.005,46,0.516,47,0.292,49,0.524,51,0.101,57,0.029,61,1.289,79,0.933,100,1.308,107,1.308,112,1.327,137,0.002,138,0.003,139,0.002,148,2.606,151,2.651,152,3.884,161,0.936,250,1.308,251,1.861,264,1.483,265,1.519,266,2.095,267,1.567,268,1.935,269,1.593,270,1.593,272,2.728,273,1.495,274,3.618,275,2.928,277,1.593,281,1.534,282,3.074,297,1.063,298,1.346,300,0.827,314,1.795,315,1.732,316,1.795,317,1.795,318,1.795,319,1.795,320,1.619,321,1.519,322,1.795,323,1.795,324,1.795,325,1.703,326,1.795,327,1.763,328,1.795,329,1.795,330,1.795,331,1.138,332,1.795,333,1.366,334,2.267,335,2.231,336,1.428,337,2.876,338,1.593,339,1.593,340,1.519,341,1.593,342,1.519,343,2.297,344,2.267,345,1.519,346,2.267,347,1.519,348,1.593,349,1.495,350,1.593,351,1.519,352,1.593,353,2.876,354,1.519,355,1.593,356,1.472,357,2.267,358,1.519,359,1.472,360,1.543,361,1.567,362,1.593,363,1.543,364,1.567,365,1.45,366,2.267,367,1.519,368,1.593,369,2.876,370,1.472,371,1.593,372,1.519,373,1.519,374,1.593,375,1.495,376,1.593,377,1.519,378,2.742,379,1.593,380,1.495,381,1.593,382,1.519,383,1.593,384,1.543,385,1.519,386,1.593,387,1.519,388,2.231,389,1.519,390,2.64,391,1.593,392,1.519,393,1.593,394,1.519,395,1.593,396,1.495,397,1.519,398,1.519,399,1.519,400,1.519,401,1.784,402,1.519,403,1.593,404,1.519,405,1.519,406,1.519,407,1.185,408,1.495,409,1.495,410,1.593,411,1.495,412,1.593,413,1.495,414,1.567,415,1.593,479,2.972,645,3.23,646,3.081,655,2.572,896,5.831,941,6.02,1416,2.742,1418,3.661,1421,4.203,1720,5.17,2321,6.93,2409,6.558,2422,6.93,3056,4.388,3057,7.922,3058,7.271,3059,4.388,3060,8.371,3061,6.245,3062,6.245,3063,7.271,3064,7.271,3065,7.271,3066,6.245,3067,8.371,3068,6.245,3069,4.388,3070,4.388,3071,4.388,3072,4.388,3073,4.388,3074,4.388,3075,4.388,3076,4.388,3077,4.388,3078,4.388,3079,4.388,3080,4.388,3081,4.388,3082,4.388,3083,4.388,3084,4.388,3085,4.388,3086,4.388,3087,4.388,3088,4.388,3089,4.388,3090,4.388,3091,4.388,3092,4.388,3093,4.388,3094,7.271,3095,7.271,3096,6.245,3097,7.271,3098,6.245,3099,4.388,3100,4.388,3101,4.388,3102,4.388,3103,4.388,3104,4.388,3105,4.388,3106,4.388,3107,3.932,3108,6.245]],["title/components/IframeDisplayComponent.html",[264,1.013,380,1.692]],["body/components/IframeDisplayComponent.html",[0,0.281,3,0.028,4,0.038,5,0.045,32,0.171,33,0.754,34,0.208,35,0.414,36,0.598,39,0.233,42,0.265,44,0.338,45,0.005,46,0.55,47,0.338,51,0.112,52,0.48,57,0.033,61,1.496,100,1.517,107,1.517,112,1.539,117,2.239,137,0.003,138,0.003,139,0.003,161,1.038,184,1.109,250,1.517,251,2.064,264,1.605,265,1.762,266,2.324,267,1.818,268,2.245,269,1.848,270,1.848,272,2.953,273,1.734,274,3.647,275,3.246,277,2.514,279,2.346,281,1.701,282,3.278,297,1.233,298,1.562,300,0.959,314,2.082,315,2.01,316,2.082,317,2.082,318,2.082,319,2.082,320,1.878,321,1.762,322,2.082,323,2.082,324,2.082,325,1.975,326,2.082,327,2.045,328,2.082,329,2.082,330,2.082,331,1.32,332,2.082,333,1.585,334,2.514,335,2.474,336,1.657,337,3.067,338,1.848,339,1.848,340,1.762,341,1.848,342,1.762,343,2.487,344,2.514,345,1.762,346,2.514,347,1.762,348,1.848,349,1.734,350,1.848,351,1.762,352,1.848,353,3.067,354,1.762,355,1.848,356,1.708,357,2.514,358,1.762,359,1.708,360,1.79,361,1.818,362,1.848,363,1.79,364,1.818,365,1.682,366,2.514,367,1.762,368,1.848,369,3.067,370,1.708,371,1.848,372,1.762,373,1.762,374,1.848,375,1.734,376,1.848,377,1.762,378,1.762,379,1.848,380,2.879,381,1.848,382,1.762,383,1.848,384,1.79,385,1.762,386,1.848,387,1.762,388,2.474,389,1.762,390,2.857,391,1.848,392,1.762,393,1.848,394,1.762,395,1.848,396,1.734,397,1.762,398,1.762,399,1.762,400,1.762,401,1.978,402,1.762,403,1.848,404,1.762,405,1.762,406,1.762,407,1.375,408,1.734,409,1.734,410,1.848,411,1.734,412,1.848,413,1.734,414,1.818,415,1.848,537,1.79,563,1.496,564,1.539,579,1.517,645,3.747,646,3.574,1639,4.328,2320,7.054,2321,6.994,3109,5.09,3110,6.925,3111,7.871,3112,6.925,3113,7.871,3114,7.871,3115,6.925,3116,5.09,3117,8.448,3118,5.09,3119,5.09,3120,5.09,3121,4.562,3122,5.09,3123,5.09,3124,6.925,3125,5.09]],["title/components/InfoComponent.html",[264,1.013,382,1.719]],["body/components/InfoComponent.html",[0,0.259,3,0.045,4,0.026,5,0.031,7,3.401,17,2.272,32,0.18,33,0.714,34,0.192,35,0.391,39,0.215,42,0.292,44,0.312,45,0.005,46,0.532,47,0.312,51,0.123,52,0.443,57,0.031,61,1.379,66,1.651,100,1.399,109,4.422,112,1.42,114,2.673,117,2.184,137,0.002,138,0.003,139,0.002,161,0.982,165,0.932,184,1.643,250,1.399,251,1.952,264,1.538,265,1.625,266,2.198,267,1.677,268,2.071,269,1.704,270,1.704,272,2.83,273,1.6,274,3.632,275,3.07,277,2.378,279,2.66,281,1.609,282,3.168,297,1.138,298,1.44,300,0.884,333,1.462,334,2.378,335,2.34,336,1.528,337,2.963,338,1.704,339,1.704,340,1.625,341,1.704,342,1.625,343,2.383,344,2.378,345,1.625,346,2.378,347,1.625,348,1.704,349,1.6,350,1.704,351,1.625,352,1.704,353,2.963,354,1.625,355,1.704,356,1.575,357,2.378,358,1.625,359,1.575,360,1.651,361,1.677,362,1.704,363,1.651,364,1.677,365,1.551,366,2.378,367,1.625,368,1.704,369,2.963,370,1.575,371,1.704,372,1.625,373,1.625,374,1.704,375,1.6,376,1.704,377,1.625,378,1.625,379,1.704,380,1.6,381,1.704,382,2.825,383,1.704,384,1.651,385,1.625,386,1.704,387,1.625,388,2.34,389,1.625,390,2.739,391,1.704,392,1.625,393,1.704,394,1.625,395,1.704,396,1.6,397,1.625,398,1.625,399,1.625,400,1.625,401,2.54,402,1.625,403,1.704,404,1.625,405,1.625,406,1.625,407,1.268,408,1.6,409,1.6,410,1.704,411,1.6,412,1.704,413,1.6,414,1.677,415,1.704,537,1.651,560,1.341,561,1.677,563,1.379,564,1.42,569,3.16,579,1.399,617,3.041,896,4.821,898,5.35,909,5.423,918,2.934,1198,2.071,1295,3.137,1377,2.934,1478,4.208,1479,4.208,1639,4.094,1718,5.87,1720,5.423,2507,5.87,3038,4.208,3039,4.208,3043,4.208,3044,4.208,3126,4.695,3127,7.544,3128,6.55,3129,7.544,3130,7.544,3131,7.544,3132,6.55,3133,4.695,3134,4.695,3135,4.695,3136,4.695,3137,4.695,3138,4.695,3139,4.695,3140,4.695,3141,4.695,3142,4.695,3143,4.695,3144,4.208,3145,6.55,3146,4.695,3147,6.55,3148,4.695,3149,6.55,3150,4.695,3151,4.695,3152,4.695,3153,6.55,3154,6.55,3155,6.55,3156,4.695,3157,3.296,3158,4.695]],["title/classes/InitAuthStatus.html",[0,0.274,60,2.749]],["body/classes/InitAuthStatus.html",[0,0.503,1,3.644,2,0.488,3,0.022,4,0.022,5,0.05,6,2.364,7,1.68,8,1.101,9,4.794,10,1.105,11,2.002,12,3.536,13,4.444,14,4.057,15,2.296,16,3.251,17,2.104,18,4.334,19,4.367,20,3.554,21,2.521,22,2.439,23,3.498,24,2.601,25,4.193,26,4.334,27,3.321,28,1.551,29,3.554,30,4.065,31,3.674,32,0.201,33,0.994,34,0.165,35,0.351,36,1.026,37,1.539,38,1.156,39,0.269,40,1.018,41,3.346,42,0.218,44,0.268,45,0.005,46,0.263,47,0.268,49,0.481,50,0.393,51,0.088,52,0.38,53,3.644,54,2.12,55,2.837,56,1.975,57,0.061,58,0.58,59,2.296,60,4.218,61,1.185,62,1.913,63,3.839,64,2.12,65,4.193,66,3.258,67,5.113,68,4.467,69,3.839,70,2.439,71,2.944,72,4.108,73,3.184,74,4.484,75,3.839,76,1.424,77,1.486,78,2.174,79,0.869,80,2.174,81,2.069,82,2.233,83,1.779,84,2.521,85,2.521,86,4.334,87,4.193,88,2.257,89,4.193,90,3.674,91,1.216,92,1.216,93,1.132,94,2.521,95,2.439,96,2.521,97,2.521,98,2.364,99,1.814,100,1.202,101,2.439,102,3.184,103,3.674,104,3.556,105,3.346,106,1.745,107,1.202,108,2.439,109,2.364,110,2.296,111,4.467,112,1.22,113,2.521,114,2.296,115,2.439,116,3.254,117,1.443,118,2.521,119,2.521,120,4.762,121,2.439,122,2.521,123,3.554,124,2.521,125,3.554,126,0.572,127,2.521,128,2.439,129,2.521,130,2.439,131,2.521,132,2.944,133,3.554,134,1.592,135,2.521,136,2.364,137,0.002,138,0.003,139,0.002,457,1.773,3159,5.878,3160,4.033]],["title/classes/InitFilters.html",[0,0.274,837,3.487]],["body/classes/InitFilters.html",[0,0.457,2,0.812,3,0.037,4,0.037,5,0.044,8,1.054,32,0.206,33,0.979,34,0.274,35,0.495,36,0.973,37,1.584,38,1.17,39,0.306,40,1.691,42,0.282,44,0.446,45,0.005,46,0.437,47,0.446,49,0.8,50,0.653,51,0.114,52,0.632,57,0.061,58,0.964,61,1.97,62,2.695,77,1.519,91,1.126,92,1.126,93,1.048,137,0.003,138,0.004,139,0.003,148,2.087,165,1.331,407,2.427,457,2.298,702,4.714,823,5.268,824,5.208,827,6.008,828,4.512,829,4.342,830,5.008,831,4.19,832,5.208,833,3.93,834,5.55,835,6.008,836,4.19,837,6.309,838,7.422,839,6.008,840,5.55,3161,8.281,3162,6.704]],["title/classes/InitTimeline.html",[0,0.274,3163,3.487]],["body/classes/InitTimeline.html",[0,0.467,2,0.841,3,0.038,4,0.038,5,0.045,8,1.067,32,0.207,33,0.994,34,0.283,35,0.506,36,0.995,37,1.609,38,1.185,39,0.317,40,1.752,42,0.287,44,0.462,45,0.005,46,0.452,47,0.462,49,0.828,50,0.677,51,0.088,52,0.655,57,0.062,58,0.998,61,2.04,77,1.552,137,0.003,138,0.004,139,0.003,161,1.041,365,3.016,457,2.334,474,2.649,2453,3.844,3163,6.67,3164,5.393,3165,8.461,3166,6.943,3167,7.583,3168,5.748,3169,6.408,3170,6.222,3171,6.222,3172,6.222,3173,5.748]],["title/classes/Input.html",[0,0.274,152,2.108]],["body/classes/Input.html",[0,0.511,2,0.519,3,0.024,4,0.024,5,0.028,8,0.482,11,1.127,23,1.968,24,1.608,28,1.753,32,0.168,36,0.504,38,1.313,39,0.429,42,0.135,44,0.285,45,0.005,46,0.511,47,0.285,50,0.764,51,0.091,57,0.064,58,0.883,79,1.089,91,1.236,92,1.236,93,1.151,102,1.968,137,0.004,138,0.003,139,0.002,142,2.513,143,3.842,144,3.714,145,5.414,146,3.417,147,2.44,148,3.078,149,3.839,150,3.839,151,2.607,152,3.327,153,3.839,154,3.839,155,3.839,156,3.839,157,3.839,161,0.643,162,2.199,163,1.723,164,1.968,165,0.851,166,2.679,167,1.968,168,1.315,169,2.679,170,2.44,171,2.679,172,2.679,173,2.679,174,2.679,175,2.679,176,2.679,177,2.679,178,2.679,179,3.839,180,2.092,181,3.007,182,2.679,183,3.839,184,1.564,185,1.664,186,3.601,187,2.679,188,1.635,189,1.854,190,1.507,191,1.891,192,2.592,193,2.679,194,2.679,195,2.679,196,2.679,197,2.679,198,2.679,199,3.274,200,2.679,201,2.679,202,2.679,203,2.592,204,2.592,205,2.343,206,2.679,207,2.679,208,2.679,209,2.679,210,1.891,211,2.679,212,2.44,213,2.679,214,2.679,215,2.679,216,2.679,217,2.592,218,2.053,219,2.679,220,1.053,221,2.44,222,2.592,223,1.891,224,2.592,225,2.311,226,2.679,227,2.679,228,2.679,229,2.679,230,1.82,231,2.679,232,2.679,233,2.679,234,2.679,235,2.679,236,2.679,237,2.679,238,2.679,239,2.679,240,2.147,241,2.679,242,2.679,243,2.592,244,2.679,245,2.679,246,2.679,247,2.679,248,2.679,249,4.74,250,1.278,251,1.278,252,2.592,253,2.592,254,2.592,255,1.929,256,4.486,257,4.486,258,2.988,259,4.486,260,3.974,261,4.74,262,4.486,263,4.486,3174,4.287]],["title/classes/LightCard.html",[0,0.274,461,1.459]],["body/classes/LightCard.html",[0,0.404,2,0.669,3,0.03,4,0.03,5,0.036,8,0.921,11,2.156,24,2.072,32,0.112,38,1.291,39,0.375,42,0.173,44,0.367,45,0.005,46,0.36,47,0.367,51,0.093,57,0.061,58,1.179,79,1.122,91,0.751,92,0.751,93,0.699,137,0.005,138,0.004,139,0.003,146,3.514,160,5.142,164,2.535,165,1.453,181,4.016,184,1.203,190,2.884,258,3.507,301,1.825,398,2.839,441,2.212,461,2.149,536,5.759,588,2.766,720,3.576,1030,2.259,1377,4.572,1416,3.452,1418,5.118,1421,5.877,1608,4.949,1609,4.808,1610,5.759,1611,6.037,1612,6.037,1613,6.037,1614,6.337,1615,6.371,1616,6.371,1617,6.037,1618,6.037,1621,5.682,2214,3.877,2485,3.877,2491,3.877,2576,5.877,2790,5.384,2791,4.572,2792,4.572,2793,6.037,2794,4.572,2795,6.037,2796,4.572,3157,3.877,3175,6.056,3176,4.572,3177,7.351,3178,5.522,3179,4.949,3180,4.949,3181,4.572,3182,4.572,3183,4.949]],["title/classes/LightCardAlreadyUpdated.html",[0,0.274,498,2.19]],["body/classes/LightCardAlreadyUpdated.html",[0,0.548,2,0.481,3,0.022,4,0.022,5,0.026,8,1.135,10,2.205,11,1.044,12,1.397,32,0.203,33,1.086,34,0.162,35,0.347,37,1.602,38,1.248,39,0.415,42,0.183,45,0.005,49,0.474,50,0.387,51,0.096,52,0.375,57,0.065,58,0.571,62,1.293,76,0.963,77,1.694,79,0.737,88,1.293,91,1.273,92,1.273,93,1.185,126,1.232,134,1.569,137,0.002,138,0.003,139,0.002,161,1.403,165,0.789,168,1.784,205,2.218,220,0.976,301,1.313,331,1.507,425,1.491,427,2.161,430,1.637,435,1.518,436,1.003,437,0.989,438,1.104,439,1.104,440,1.516,441,2.434,443,1.135,444,1.202,454,3.032,455,3.156,456,1.824,460,1.903,461,2.366,462,1.202,463,1.184,464,1.863,465,1.788,466,1.686,467,3.093,468,4.654,469,3.032,470,1.788,471,2.918,472,2.669,473,1.863,474,1.516,475,3.093,476,3.032,477,1.293,478,2.918,479,3.155,480,1.686,481,3.032,482,1.824,483,3.032,484,3.032,485,1.863,486,1.863,487,3.032,488,2.974,489,3.032,490,1.686,491,1.719,492,3.032,493,1.419,494,3.032,495,1.863,496,3.032,497,1.824,498,3.337,499,1.626,500,1.542,501,1.903,502,1.903,503,1.903,504,1.686,505,1.903,506,1.903,507,1.903,508,1.569,509,1.903,510,1.903,511,1.903,512,1.903,513,1.542,514,1.903,515,1.903,516,1.903,517,1.903,518,1.903,519,1.903,520,1.903,521,1.903,522,1.903,523,2.784,524,1.824,3184,5.814]],["title/injectables/LightCardEffects.html",[221,2.827,841,1.439]],["body/injectables/LightCardEffects.html",[0,0.214,3,0.021,4,0.021,5,0.025,8,0.841,17,2.249,28,2.148,32,0.161,34,0.159,35,0.342,39,0.177,42,0.25,44,0.258,45,0.005,46,0.253,47,0.258,49,0.893,50,0.729,51,0.121,52,0.366,57,0.025,91,0.528,92,0.528,93,0.491,117,2.049,137,0.002,138,0.003,139,0.002,161,1.122,165,1.347,180,2.427,184,2.207,205,2.588,210,1.713,221,3.254,222,4.103,223,3.984,279,1.588,286,6.195,300,0.732,301,1.283,423,2.211,426,1.945,441,2.993,461,2.654,462,1.174,463,1.158,464,1.821,466,1.648,484,2.992,487,1.713,488,2.935,489,2.992,490,2.426,492,2.992,494,2.992,496,2.992,498,2.992,537,1.365,560,1.109,561,1.387,563,1.141,564,1.174,579,1.158,841,1.656,842,1.713,850,5.813,858,4.014,859,4.143,861,4.034,873,2.094,874,1.992,876,1.783,877,1.945,1091,2.15,1198,3.903,1328,4.014,1338,5.038,1359,3.848,1410,2.614,1411,4.241,1412,2.859,1687,5.124,1732,4.143,1739,2.614,1764,4.014,1766,5.124,1770,5.124,2033,3.481,2597,2.614,3185,8.343,3186,3.884,3187,6.785,3188,6.785,3189,6.785,3190,5.617,3191,3.884,3192,5.717,3193,7.483,3194,8.343,3195,5.717,3196,5.717,3197,5.717,3198,8.343,3199,5.717,3200,3.884,3201,5.717,3202,5.717,3203,5.717,3204,5.717,3205,7.483,3206,5.717,3207,5.717,3208,8.343,3209,7.483,3210,5.717,3211,7.483,3212,5.717,3213,5.717,3214,7.483,3215,5.717,3216,8.851,3217,7.483,3218,3.884,3219,5.717,3220,5.717,3221,3.884,3222,5.717,3223,5.717,3224,5.717,3225,5.717,3226,5.717,3227,5.717,3228,5.717,3229,7.483,3230,5.717,3231,5.124,3232,3.884,3233,3.884,3234,3.481]],["title/components/ListSettingComponent.html",[264,1.013,385,1.719]],["body/components/ListSettingComponent.html",[0,0.194,3,0.019,4,0.019,5,0.023,17,1.321,28,1.43,32,0.192,33,0.578,34,0.143,35,0.317,39,0.161,42,0.314,44,0.555,45,0.005,46,0.584,47,0.555,49,0.633,50,0.857,51,0.109,52,0.331,57,0.023,61,1.033,79,0.943,100,1.048,102,1.614,107,1.582,112,1.063,117,1.975,137,0.002,138,0.003,139,0.002,145,4.353,146,1.958,148,2.38,151,2.252,152,2.252,161,0.795,164,1.614,184,1.552,199,1.198,218,1.683,250,1.048,251,2.397,260,3.54,264,1.304,265,1.216,266,1.781,267,1.256,269,1.276,270,1.276,272,2.399,273,1.198,274,3.567,277,1.927,279,2.489,281,1.303,282,3.239,297,2.284,298,2.561,300,0.662,321,1.216,325,2.481,333,1.094,334,1.927,335,1.896,336,1.144,337,2.586,338,1.276,339,1.276,340,1.216,341,1.276,342,1.216,343,2.02,344,1.927,345,1.216,346,1.927,347,1.216,348,1.276,349,1.198,350,1.276,351,3.395,352,1.927,353,2.586,354,1.216,355,1.276,356,1.179,357,1.927,358,1.216,359,1.179,360,1.236,361,1.256,362,1.276,363,1.236,364,1.256,365,1.161,366,1.927,367,1.216,368,1.276,369,2.586,370,1.179,371,1.276,372,1.216,373,1.216,374,1.276,375,1.198,376,1.276,377,1.216,378,1.216,379,1.276,380,1.198,381,1.276,382,1.216,383,1.276,384,1.236,385,2.465,386,1.276,387,1.216,388,1.896,389,1.216,390,2.321,391,1.276,392,1.216,393,1.276,394,1.216,395,1.276,396,1.198,397,1.216,398,1.216,399,1.216,400,1.216,401,1.516,402,1.216,403,1.276,404,1.216,405,1.216,406,1.216,407,0.949,408,1.198,409,1.198,410,1.276,411,1.198,412,1.276,413,1.198,414,1.256,415,1.276,457,1.357,537,1.236,560,1.004,563,1.033,564,1.063,658,1.761,668,1.803,669,1.803,833,2.06,902,3.944,911,3.317,930,3.726,1139,2.587,1219,3.437,1436,2.587,1437,2.73,1438,3.748,1439,5.369,1440,4.123,1441,3.726,1442,3.209,1443,6.602,1444,3.726,1445,3.209,1446,5.861,1447,5.001,1448,3.748,1449,4.489,1450,5.001,1451,3.726,1452,3.726,1453,3.726,1458,2.468,1460,2.468,1463,4.489,1464,4.779,1466,3.726,1470,4.489,1475,3.15,1485,2.468,1642,5.406,1791,3.209,1823,6.45,2266,4.756,2276,5.628,2279,2.468,2521,2.587,2522,2.587,2523,2.587,2528,2.587,2529,2.587,2530,2.587,2531,2.587,2532,2.587,2533,2.587,2534,2.587,2535,2.587,2536,2.587,2537,2.587,2538,2.587,2539,2.587,2540,2.587,2542,2.587,2543,2.587,2547,4.123,2548,4.394,2549,4.394,3235,8.964,3236,8.034,3237,5.73,3238,7.123,3239,7.123,3240,5.307,3241,3.515,3242,3.515,3243,3.515,3244,3.515,3245,3.515,3246,3.515,3247,5.307,3248,3.515,3249,3.15,3250,4.756,3251,4.756,3252,3.15,3253,3.15,3254,4.756,3255,3.15,3256,3.15,3257,3.15,3258,3.15,3259,3.515,3260,3.515,3261,3.515,3262,2.587,3263,2.91,3264,2.91,3265,3.515,3266,3.515,3267,3.15,3268,3.15,3269,3.515,3270,3.515,3271,4.756]],["title/classes/LoadArchivedCard.html",[0,0.274,431,2.61]],["body/classes/LoadArchivedCard.html",[0,0.53,2,0.609,3,0.028,4,0.028,5,0.033,8,1.101,32,0.205,33,1.058,34,0.205,35,0.411,36,0.808,37,1.728,38,1.222,39,0.23,40,1.269,42,0.246,44,0.334,45,0.005,46,0.328,47,0.334,49,0.6,50,0.49,51,0.087,52,0.474,57,0.064,58,0.723,76,1.665,77,1.736,79,0.839,91,1.305,92,1.305,93,1.215,126,1.319,137,0.002,138,0.003,139,0.002,161,1.539,163,2.021,190,2.415,220,1.235,418,4.218,419,2.949,422,3.144,423,2.864,424,4.218,425,1.887,426,3.919,427,2.595,428,4.331,429,4.331,430,1.935,431,4.418,432,4.012,433,4.331,434,4.331,435,1.727,436,1.269,437,1.252,438,1.397,439,1.397,440,1.919,441,1.521,442,2.949,443,1.437,444,1.521,445,3.144,446,3.144,447,3.144,448,3.144,449,4.294,450,3.144,451,3.144,452,3.144,453,3.042,457,2.001,3272,6.87,3273,5.031]],["title/classes/LoadArchivedCardFailure.html",[0,0.274,434,2.749]],["body/classes/LoadArchivedCardFailure.html",[0,0.53,2,0.609,3,0.028,4,0.028,5,0.033,8,1.101,32,0.205,33,1.058,34,0.205,35,0.411,36,0.808,37,1.728,38,1.222,39,0.23,40,1.269,42,0.246,44,0.334,45,0.005,46,0.328,47,0.334,49,0.6,50,0.49,51,0.087,52,0.474,57,0.064,58,0.723,76,1.665,77,1.736,79,0.839,91,1.305,92,1.305,93,1.215,126,1.319,137,0.002,138,0.003,139,0.002,161,1.539,163,2.021,190,2.415,220,1.235,418,4.218,419,2.949,422,3.144,423,2.864,424,4.218,425,1.887,426,3.919,427,2.595,428,4.331,429,4.331,430,1.935,431,4.112,432,4.012,433,4.331,434,4.654,435,1.727,436,1.269,437,1.252,438,1.397,439,1.397,440,1.919,441,1.521,442,2.949,443,1.437,444,1.521,445,3.144,446,3.144,447,3.144,448,3.144,449,3.144,450,4.294,451,3.144,452,3.144,453,3.042,457,2.001,3274,6.87,3275,5.031]],["title/classes/LoadArchivedCardSuccess.html",[0,0.274,433,2.749]],["body/classes/LoadArchivedCardSuccess.html",[0,0.53,2,0.609,3,0.028,4,0.028,5,0.033,8,1.101,32,0.205,33,1.058,34,0.205,35,0.411,36,0.808,37,1.728,38,1.222,39,0.23,40,1.269,42,0.246,44,0.334,45,0.005,46,0.328,47,0.334,49,0.6,50,0.49,51,0.087,52,0.474,57,0.064,58,0.723,76,1.665,77,1.736,79,0.839,91,1.305,92,1.305,93,1.215,126,1.319,137,0.002,138,0.003,139,0.002,161,1.539,163,2.021,190,2.415,220,1.235,418,4.218,419,2.949,422,3.144,423,2.864,424,4.218,425,1.887,426,3.919,427,2.595,428,4.331,429,4.331,430,1.935,431,4.112,432,4.012,433,4.654,434,4.331,435,1.727,436,1.269,437,1.252,438,1.397,439,1.397,440,1.919,441,1.521,442,2.949,443,1.437,444,1.521,445,3.144,446,3.144,447,3.144,448,3.144,449,3.144,450,3.144,451,4.294,452,3.144,453,3.042,457,2.001,3276,6.87,3277,5.031]],["title/classes/LoadCard.html",[0,0.274,426,2.488]],["body/classes/LoadCard.html",[0,0.53,2,0.609,3,0.028,4,0.028,5,0.033,8,1.101,32,0.205,33,1.058,34,0.205,35,0.411,36,0.808,37,1.728,38,1.222,39,0.23,40,1.269,42,0.246,44,0.334,45,0.005,46,0.328,47,0.334,49,0.6,50,0.49,51,0.087,52,0.474,57,0.064,58,0.723,76,1.665,77,1.736,79,0.839,91,1.305,92,1.305,93,1.215,126,1.319,137,0.002,138,0.003,139,0.002,161,1.539,163,2.021,190,2.415,220,1.235,418,4.218,419,2.949,422,3.144,423,2.864,424,4.218,425,1.887,426,4.211,427,2.595,428,4.331,429,4.331,430,1.935,431,4.112,432,4.012,433,4.331,434,4.331,435,1.727,436,1.269,437,1.252,438,1.397,439,1.397,440,1.919,441,1.521,442,2.949,443,1.437,444,1.521,445,3.144,446,4.294,447,3.144,448,3.144,449,3.144,450,3.144,451,3.144,452,3.144,453,3.042,457,2.001,3278,6.87,3279,5.031]],["title/classes/LoadCardFailure.html",[0,0.274,429,2.749]],["body/classes/LoadCardFailure.html",[0,0.53,2,0.609,3,0.028,4,0.028,5,0.033,8,1.101,32,0.205,33,1.058,34,0.205,35,0.411,36,0.808,37,1.728,38,1.222,39,0.23,40,1.269,42,0.246,44,0.334,45,0.005,46,0.328,47,0.334,49,0.6,50,0.49,51,0.087,52,0.474,57,0.064,58,0.723,76,1.665,77,1.736,79,0.839,91,1.305,92,1.305,93,1.215,126,1.319,137,0.002,138,0.003,139,0.002,161,1.539,163,2.021,190,2.415,220,1.235,418,4.218,419,2.949,422,3.144,423,2.864,424,4.218,425,1.887,426,3.919,427,2.595,428,4.331,429,4.654,430,1.935,431,4.112,432,4.012,433,4.331,434,4.331,435,1.727,436,1.269,437,1.252,438,1.397,439,1.397,440,1.919,441,1.521,442,2.949,443,1.437,444,1.521,445,3.144,446,3.144,447,4.294,448,3.144,449,3.144,450,3.144,451,3.144,452,3.144,453,3.042,457,2.001,3280,6.87,3281,5.031]],["title/classes/LoadCardSuccess.html",[0,0.274,428,2.749]],["body/classes/LoadCardSuccess.html",[0,0.53,2,0.609,3,0.028,4,0.028,5,0.033,8,1.101,32,0.205,33,1.058,34,0.205,35,0.411,36,0.808,37,1.728,38,1.222,39,0.23,40,1.269,42,0.246,44,0.334,45,0.005,46,0.328,47,0.334,49,0.6,50,0.49,51,0.087,52,0.474,57,0.064,58,0.723,76,1.665,77,1.736,79,0.839,91,1.305,92,1.305,93,1.215,126,1.319,137,0.002,138,0.003,139,0.002,161,1.539,163,2.021,190,2.415,220,1.235,418,4.218,419,2.949,422,3.144,423,2.864,424,4.218,425,1.887,426,3.919,427,2.595,428,4.654,429,4.331,430,1.935,431,4.112,432,4.012,433,4.331,434,4.331,435,1.727,436,1.269,437,1.252,438,1.397,439,1.397,440,1.919,441,1.521,442,2.949,443,1.437,444,1.521,445,3.144,446,3.144,447,3.144,448,4.294,449,3.144,450,3.144,451,3.144,452,3.144,453,3.042,457,2.001,3282,6.87,3283,5.031]],["title/classes/LoadConfig.html",[0,0.274,572,3.104]],["body/classes/LoadConfig.html",[0,0.508,2,0.769,3,0.035,4,0.035,5,0.041,8,1.088,32,0.199,33,1.034,34,0.259,35,0.478,37,1.545,38,1.208,42,0.199,45,0.005,49,0.757,50,0.619,51,0.081,52,0.599,57,0.063,58,0.913,76,1.538,77,1.608,91,1.251,92,1.251,93,1.165,126,1.346,137,0.003,138,0.004,139,0.003,220,1.559,427,2.504,430,1.788,435,1.935,436,1.601,437,1.58,438,1.763,439,1.763,443,1.813,444,1.919,572,5.753,727,6.017,1407,4.272,1677,4.272,2035,5.677,2036,5.677,2841,4.456,2844,4.931,2845,6.217,2846,4.931,2847,4.931,2848,4.672,3284,6.347]],["title/classes/LoadConfigFailure.html",[0,0.274,2035,3.216]],["body/classes/LoadConfigFailure.html",[0,0.502,2,0.742,3,0.034,4,0.034,5,0.04,8,1.079,32,0.206,33,1.023,34,0.25,35,0.468,36,0.92,37,1.693,38,1.197,39,0.28,40,1.546,42,0.271,44,0.408,45,0.005,46,0.399,47,0.408,49,0.731,50,0.597,51,0.078,52,0.578,57,0.063,58,0.881,76,1.485,77,1.582,91,1.235,92,1.235,93,1.15,126,1.331,137,0.003,138,0.004,139,0.003,220,1.505,427,2.463,430,1.726,435,1.904,436,1.546,437,1.526,438,1.702,439,1.702,443,1.751,444,1.853,457,2.206,572,5.391,727,5.976,1407,4.125,1677,4.125,2035,5.885,2036,5.586,2841,4.304,2844,4.762,2845,4.762,2846,6.081,2847,4.762,2848,4.512,3285,7.828,3286,6.13]],["title/classes/LoadConfigSuccess.html",[0,0.274,2036,3.216]],["body/classes/LoadConfigSuccess.html",[0,0.502,2,0.742,3,0.034,4,0.034,5,0.04,8,1.079,32,0.206,33,1.023,34,0.25,35,0.468,36,0.92,37,1.693,38,1.197,39,0.28,40,1.546,42,0.271,44,0.408,45,0.005,46,0.399,47,0.408,49,0.731,50,0.597,51,0.078,52,0.578,57,0.063,58,0.881,76,1.485,77,1.582,91,1.235,92,1.235,93,1.15,126,1.331,137,0.003,138,0.004,139,0.003,220,1.505,427,2.463,430,1.726,435,1.904,436,1.546,437,1.526,438,1.702,439,1.702,443,1.751,444,1.853,457,2.206,572,5.391,727,5.976,1407,4.125,1677,4.125,2035,5.586,2036,5.885,2841,4.304,2844,4.762,2845,4.762,2846,4.762,2847,6.081,2848,4.512,3287,7.828,3288,6.13]],["title/classes/LoadLightCards.html",[0,0.274,467,2.234]],["body/classes/LoadLightCards.html",[0,0.548,2,0.483,3,0.022,4,0.022,5,0.026,8,1.135,10,2.209,11,1.049,12,1.403,32,0.203,33,1.087,34,0.163,35,0.349,37,1.604,38,1.249,39,0.398,42,0.125,45,0.005,49,0.476,50,0.389,51,0.096,52,0.376,57,0.065,58,0.574,62,1.299,76,0.967,77,1.696,79,0.739,88,1.299,91,1.274,92,1.274,93,1.186,126,1.234,134,1.576,137,0.002,138,0.003,139,0.002,161,1.405,165,0.793,168,1.79,205,2.225,220,0.98,301,1.319,331,1.512,425,1.498,427,2.166,430,1.643,435,1.522,436,1.007,437,0.994,438,1.109,439,1.109,440,1.523,441,2.439,443,1.14,444,1.207,454,3.04,455,2.678,456,1.833,460,1.912,461,2.37,462,1.207,463,1.19,464,1.871,465,1.796,466,1.694,467,3.411,468,4.657,469,3.04,470,1.796,471,2.926,472,2.678,473,1.871,474,1.523,475,3.101,476,3.04,477,1.299,478,2.926,479,3.16,480,1.694,481,3.04,482,1.833,483,3.04,484,3.04,485,1.871,486,1.871,487,3.04,488,2.982,489,3.04,490,1.694,491,1.727,492,3.04,493,1.426,494,3.04,495,1.871,496,3.04,497,1.833,498,3.04,499,1.633,500,1.549,501,2.794,502,1.912,503,1.912,504,1.694,505,1.912,506,1.912,507,1.912,508,1.576,509,1.912,510,1.912,511,1.912,512,1.912,513,1.549,514,1.912,515,1.912,516,1.912,517,1.912,518,1.912,519,1.912,520,1.912,521,1.912,522,1.912,523,1.912,524,1.833,3289,3.992]],["title/classes/LoadLightCardsExtendedData.html",[0,0.274,472,2.28]],["body/classes/LoadLightCardsExtendedData.html",[0,0.548,2,0.481,3,0.022,4,0.022,5,0.026,8,1.135,10,2.205,11,1.044,12,1.397,32,0.203,33,1.086,34,0.162,35,0.347,37,1.602,38,1.248,39,0.415,42,0.183,45,0.005,49,0.474,50,0.387,51,0.096,52,0.375,57,0.065,58,0.571,62,1.293,76,0.963,77,1.694,79,0.737,88,1.293,91,1.273,92,1.273,93,1.185,126,1.232,134,1.569,137,0.002,138,0.003,139,0.002,161,1.403,165,0.789,168,1.784,205,2.218,220,0.976,301,1.313,331,1.507,425,1.491,427,2.161,430,1.637,435,1.518,436,1.003,437,0.989,438,1.104,439,1.104,440,1.516,441,2.434,443,1.135,444,1.202,454,3.032,455,3.156,456,1.824,460,1.903,461,2.366,462,1.202,463,1.184,464,1.863,465,1.788,466,1.686,467,3.093,468,4.654,469,3.032,470,1.788,471,2.918,472,3.156,473,1.863,474,1.516,475,3.093,476,3.032,477,1.293,478,2.918,479,3.155,480,1.686,481,3.032,482,1.824,483,3.032,484,3.032,485,1.863,486,1.863,487,3.032,488,2.974,489,3.032,490,1.686,491,1.719,492,3.032,493,1.419,494,3.032,495,1.863,496,3.032,497,1.824,498,3.032,499,1.626,500,1.542,501,1.903,502,1.903,503,1.903,504,1.686,505,2.784,506,1.903,507,1.903,508,1.569,509,1.903,510,1.903,511,1.903,512,1.903,513,1.542,514,1.903,515,1.903,516,1.903,517,1.903,518,1.903,519,1.903,520,1.903,521,1.903,522,1.903,523,1.903,524,1.824,3290,5.814]],["title/classes/LoadLightCardsFailure.html",[0,0.274,475,2.234]],["body/classes/LoadLightCardsFailure.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.372,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,2.745,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,1.867,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,3291,5.732,3292,3.898]],["title/classes/LoadLightCardsSuccess.html",[0,0.274,471,2.108]],["body/classes/LoadLightCardsSuccess.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,3.182,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,2.745,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,1.867,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,3293,5.732,3294,3.898]],["title/classes/LoadMenu.html",[0,0.274,2857,2.827]],["body/classes/LoadMenu.html",[0,0.513,2,0.609,3,0.028,4,0.028,5,0.033,8,1.11,14,2.52,16,2.358,17,1.252,32,0.196,33,1.031,34,0.205,35,0.411,37,1.692,38,1.197,39,0.358,42,0.216,44,0.52,45,0.005,49,0.6,50,0.49,51,0.087,52,0.474,57,0.063,58,0.723,76,1.665,77,1.667,79,0.902,91,1.264,92,1.264,93,1.177,126,1.342,132,2.52,137,0.002,138,0.003,139,0.002,168,1.543,188,2.621,189,2.972,190,2.415,191,2.219,220,1.235,301,1.662,427,2.234,430,1.417,435,1.727,436,1.269,437,1.252,443,1.437,444,1.521,477,2.546,493,2.795,728,5.395,782,3.042,1164,4.027,1172,3.144,1399,3.144,1405,3.042,2090,2.712,2107,3.258,2130,5.066,2137,5.066,2138,3.258,2139,5.01,2141,4.454,2142,3.042,2143,3.258,2144,4.586,2852,3.144,2855,3.386,2856,2.949,2857,4.786,2858,4.331,2859,4.586,2860,4.586,2861,4.586,2862,4.624,2863,3.386,2864,3.386,2865,3.386,2866,3.386,2867,3.258,2868,3.258,2869,5.265,2870,5.265,2871,4.624,2872,3.386,2873,3.386,2874,3.386,2875,3.386,2876,3.258,3295,6.87]],["title/classes/LoadMenuFailure.html",[0,0.274,2859,2.911]],["body/classes/LoadMenuFailure.html",[0,0.51,2,0.595,3,0.027,4,0.027,5,0.032,8,1.106,14,2.462,16,2.304,17,1.223,32,0.203,33,1.025,34,0.201,35,0.404,36,0.795,37,1.735,38,1.191,39,0.309,40,1.24,42,0.243,44,0.554,45,0.005,46,0.32,47,0.327,49,0.586,50,0.479,51,0.086,52,0.464,57,0.062,58,0.707,76,1.638,77,1.655,79,0.893,91,1.256,92,1.256,93,1.169,126,1.335,132,2.462,137,0.002,138,0.003,139,0.002,168,1.508,188,2.58,189,2.925,190,2.377,191,2.168,220,1.207,301,1.624,427,2.208,430,1.384,435,1.706,436,1.24,437,1.223,443,1.404,444,1.486,457,1.977,477,2.516,493,2.761,728,5.383,782,2.972,1164,3.964,1172,3.072,1399,3.072,1405,2.972,2090,2.65,2107,3.183,2130,5.006,2137,5.006,2138,3.183,2139,4.969,2141,4.4,2142,2.972,2143,3.183,2144,4.531,2852,3.072,2855,3.308,2856,2.881,2857,4.4,2858,4.279,2859,4.88,2860,4.531,2861,4.531,2862,3.308,2863,4.551,2864,3.308,2865,3.308,2866,3.308,2867,3.183,2868,3.183,2869,5.202,2870,5.202,2871,4.551,2872,3.308,2873,3.308,2874,3.308,2875,3.308,2876,3.183,3296,6.762,3297,4.915]],["title/classes/LoadMenuSuccess.html",[0,0.274,2858,2.749]],["body/classes/LoadMenuSuccess.html",[0,0.51,2,0.595,3,0.027,4,0.027,5,0.032,8,1.106,14,2.462,16,2.304,17,1.223,32,0.203,33,1.025,34,0.201,35,0.404,36,0.795,37,1.735,38,1.191,39,0.309,40,1.24,42,0.243,44,0.554,45,0.005,46,0.32,47,0.327,49,0.586,50,0.479,51,0.086,52,0.464,57,0.062,58,0.707,76,1.638,77,1.655,79,0.893,91,1.256,92,1.256,93,1.169,126,1.335,132,2.462,137,0.002,138,0.003,139,0.002,168,1.508,188,2.58,189,2.925,190,2.377,191,2.168,220,1.207,301,1.624,427,2.208,430,1.384,435,1.706,436,1.24,437,1.223,443,1.404,444,1.486,457,1.977,477,2.516,493,2.761,728,5.383,782,2.972,1164,3.964,1172,3.072,1399,3.072,1405,2.972,2090,2.65,2107,3.183,2130,5.006,2137,5.006,2138,3.183,2139,4.969,2141,4.4,2142,2.972,2143,3.183,2144,4.531,2852,3.072,2855,3.308,2856,2.881,2857,4.4,2858,4.609,2859,4.531,2860,4.531,2861,4.531,2862,3.308,2863,3.308,2864,4.551,2865,3.308,2866,3.308,2867,3.183,2868,3.183,2869,5.202,2870,5.202,2871,4.551,2872,3.308,2873,3.308,2874,3.308,2875,3.308,2876,3.183,3298,6.762,3299,4.915]],["title/classes/LoadSettings.html",[0,0.274,2881,2.911]],["body/classes/LoadSettings.html",[0,0.528,2,0.683,3,0.031,4,0.031,5,0.037,8,1.104,32,0.2,33,1.058,34,0.23,35,0.443,37,1.655,38,1.225,42,0.177,45,0.005,49,0.673,50,0.55,51,0.072,52,0.532,57,0.064,58,0.811,66,1.982,76,1.797,77,1.722,91,1.276,92,1.276,93,1.188,126,1.357,137,0.003,138,0.004,139,0.003,220,1.385,427,2.367,430,2.089,435,1.829,436,1.423,437,1.403,438,1.566,439,1.566,443,1.61,444,1.705,710,5.014,1476,4.717,2667,4.717,2668,3.41,2877,3.524,2880,3.795,2881,5.16,2882,4.858,2883,5.366,2884,4.858,2885,4.858,2886,4.991,2887,3.795,2888,3.795,2889,3.795,2890,3.652,2891,3.795,2892,3.795,2893,3.652,3300,5.638]],["title/classes/LoadSettingsFailure.html",[0,0.274,2882,2.911]],["body/classes/LoadSettingsFailure.html",[0,0.524,2,0.662,3,0.03,4,0.03,5,0.036,8,1.097,32,0.205,33,1.051,34,0.223,35,0.434,36,0.854,37,1.721,38,1.218,39,0.25,40,1.379,42,0.256,44,0.363,45,0.005,46,0.356,47,0.363,49,0.652,50,0.533,51,0.07,52,0.515,57,0.064,58,0.786,66,1.922,76,1.76,77,1.707,91,1.265,92,1.265,93,1.178,126,1.347,137,0.003,138,0.004,139,0.003,220,1.342,427,2.331,430,2.046,435,1.801,436,1.379,437,1.361,438,1.518,439,1.518,443,1.561,444,1.653,457,2.087,710,4.996,1476,4.645,2667,4.645,2668,3.305,2877,3.416,2880,3.679,2881,4.784,2882,5.098,2883,5.285,2884,4.784,2885,4.784,2886,3.679,2887,4.89,2888,3.679,2889,3.679,2890,3.54,2891,3.679,2892,3.679,2893,3.54,3301,7.265,3302,5.466]],["title/classes/LoadSettingsSuccess.html",[0,0.274,2667,2.827]],["body/classes/LoadSettingsSuccess.html",[0,0.524,2,0.662,3,0.03,4,0.03,5,0.036,8,1.097,32,0.205,33,1.051,34,0.223,35,0.434,36,0.854,37,1.721,38,1.218,39,0.25,40,1.379,42,0.256,44,0.363,45,0.005,46,0.356,47,0.363,49,0.652,50,0.533,51,0.07,52,0.515,57,0.064,58,0.786,66,1.922,76,1.76,77,1.707,91,1.265,92,1.265,93,1.178,126,1.347,137,0.003,138,0.004,139,0.003,220,1.342,427,2.331,430,2.046,435,1.801,436,1.379,437,1.361,438,1.518,439,1.518,443,1.561,444,1.653,457,2.087,710,4.996,1476,4.645,2667,4.95,2668,3.305,2877,3.416,2880,3.679,2881,4.784,2882,4.784,2883,5.285,2884,4.784,2885,4.784,2886,3.679,2887,3.679,2888,4.89,2889,3.679,2890,3.54,2891,3.679,2892,3.679,2893,3.54,3303,7.265,3304,5.466]],["title/components/LoginComponent.html",[100,1.48,264,1.013]],["body/components/LoginComponent.html",[0,0.248,3,0.025,4,0.025,5,0.029,17,1.994,19,2.425,28,1.649,32,0.186,33,0.692,34,0.184,35,0.38,39,0.29,42,0.298,44,0.299,45,0.005,46,0.522,47,0.299,51,0.122,52,0.424,55,3.015,56,2.202,57,0.029,61,1.322,78,2.425,91,0.611,92,0.611,93,0.569,99,3.316,100,2.388,101,4.844,104,3.26,109,3.726,110,4.56,112,1.36,117,2.154,137,0.002,138,0.003,139,0.002,148,1.979,161,0.953,165,0.893,180,1.54,250,1.341,251,1.894,264,1.503,265,1.557,266,2.133,267,1.607,268,3.251,269,1.633,270,1.633,272,2.765,273,1.533,274,3.623,277,2.307,279,1.765,281,1.561,282,3.109,297,1.941,298,2.766,300,0.847,320,1.66,333,1.4,334,2.307,335,2.27,336,1.464,337,2.908,338,1.633,339,1.633,340,1.557,341,1.633,342,1.557,343,2.329,344,2.307,345,1.557,346,2.307,347,1.557,348,1.633,349,1.533,350,1.633,351,1.557,352,1.633,353,2.908,354,1.557,355,1.633,356,1.509,357,2.307,358,1.557,359,1.509,360,1.581,361,1.607,362,1.633,363,1.581,364,1.607,365,1.486,366,2.307,367,1.557,368,1.633,369,2.908,370,1.509,371,1.633,372,1.557,373,1.557,374,1.633,375,1.533,376,1.633,377,1.557,378,1.557,379,1.633,380,1.533,381,1.633,382,1.557,383,1.633,384,1.581,385,1.557,386,1.633,387,1.557,388,2.27,389,1.557,390,2.676,391,1.633,392,1.557,393,1.633,394,1.557,395,1.633,396,1.533,397,1.557,398,1.557,399,1.557,400,1.557,401,1.815,402,1.557,403,1.633,404,1.557,405,1.557,406,1.557,407,1.717,408,1.533,409,1.533,410,1.633,411,1.533,412,1.633,413,1.533,414,1.607,415,1.633,537,1.581,560,1.285,561,1.607,562,3.158,563,1.322,564,1.36,569,3.027,571,4.031,576,2.637,589,2.307,613,5.425,614,5.726,615,6.606,658,2.253,902,4.435,910,2.561,911,4.607,932,2.202,1096,5.188,1409,3.311,3305,4.498,3306,7.371,3307,7.371,3308,6.356,3309,8.011,3310,7.371,3311,7.371,3312,7.371,3313,7.371,3314,8.011,3315,8.011,3316,6.356,3317,4.498,3318,4.498,3319,4.498,3320,4.498,3321,4.498,3322,4.498,3323,4.498,3324,4.498,3325,4.498,3326,4.498,3327,4.498,3328,4.498,3329,4.498,3330,4.498,3331,4.498,3332,4.498,3333,4.498,3334,4.498,3335,4.498,3336,4.498,3337,4.498,3338,4.498,3339,4.498,3340,4.498,3341,4.498,3342,6.356,3343,6.356,3344,6.356,3345,6.356,3346,6.356,3347,6.356]],["title/classes/Map.html",[0,0.274,165,0.986]],["body/classes/Map.html",[0,0.438,2,0.96,3,0.044,4,0.044,5,0.052,42,0.249,45,0.005,57,0.052,79,0.982,137,0.004,138,0.005,139,0.004,158,5.069,165,1.818,3348,7.93,3349,7.93,3350,7.112,3351,7.93]],["title/injectables/MenuEffects.html",[786,4.111,841,1.439]],["body/injectables/MenuEffects.html",[0,0.291,3,0.029,4,0.029,5,0.034,8,1.004,17,2.342,28,1.916,32,0.181,34,0.365,35,0.423,37,1.51,39,0.241,42,0.251,44,0.35,45,0.005,46,0.461,47,0.35,49,0.845,50,0.691,51,0.123,52,0.497,57,0.034,91,0.716,92,0.716,93,0.666,99,3.603,106,3.705,117,2.261,126,1.215,137,0.004,138,0.003,139,0.003,165,1.046,184,1.866,188,2.703,223,3.943,279,2.224,300,0.992,427,2.287,441,2.845,537,1.851,560,1.504,561,1.881,563,1.547,564,1.592,579,1.569,589,3.634,698,2.997,728,4.502,729,5.881,786,5.866,841,2.052,842,2.322,859,4.742,861,3.82,873,2.838,874,2.7,876,2.417,877,2.637,1002,5.215,1016,4.589,1141,5.866,1198,3.778,1288,5.504,1316,6.35,1331,5.866,1338,4.876,1359,4.769,1363,4.769,1364,7.677,1698,5.866,1732,5.098,1739,3.544,1764,6.014,2139,4.033,2140,7.677,2141,2.997,2147,3.875,2348,4.719,2856,3.086,2857,2.997,2858,2.915,2859,3.086,2860,4.694,2861,4.694,2868,4.589,3352,5.265,3353,8.566,3354,5.265,3355,7.085,3356,7.085,3357,7.085,3358,7.085,3359,7.085,3360,5.265,3361,7.085,3362,7.085,3363,7.085,3364,7.085,3365,7.085,3366,7.085,3367,7.085,3368,5.265,3369,7.085,3370,7.085]],["title/interfaces/MenuState.html",[724,2.148,736,4.111]],["body/interfaces/MenuState.html",[3,0.04,4,0.04,5,0.048,32,0.195,34,0.299,35,0.523,45,0.005,51,0.093,57,0.057,79,1.06,126,1.325,137,0.004,138,0.004,139,0.004,148,2.909,180,1.777,185,2.846,189,4.186,199,2.499,301,2.423,609,6.179,724,3.172,725,4.06,728,5.196,736,7.736,3371,7.334,3372,9.887,3373,6.573,3374,7.334,3375,6.573]],["title/classes/Message.html",[0,0.274,55,2.032]],["body/classes/Message.html",[0,0.409,2,0.897,3,0.048,4,0.041,5,0.048,32,0.15,38,1.17,39,0.402,42,0.233,44,0.493,45,0.005,46,0.483,47,0.493,51,0.094,55,3.972,57,0.057,58,1.066,79,1.007,91,1.007,92,1.007,93,0.938,126,1.051,137,0.004,138,0.004,139,0.004,146,3.749,160,3.894,164,3.402,1409,5.454,3376,6.641,3377,7.41,3378,8.412,3379,7.41,3380,7.41,3381,6.641]],["title/directives/MouseWheelDirective.html",[336,1.616,413,1.692]],["body/directives/MouseWheelDirective.html",[0,0.334,3,0.033,4,0.033,5,0.039,7,2.521,28,1.737,32,0.173,34,0.247,42,0.3,44,0.402,45,0.005,46,0.394,47,0.402,51,0.077,57,0.051,137,0.003,138,0.004,139,0.003,273,2.062,274,2.687,281,1.907,297,1.466,298,2.869,300,1.14,336,2.944,408,2.062,413,2.646,414,2.774,578,3.659,588,3.031,620,5.452,1030,3.176,1334,6.032,1533,5.452,1545,4.701,1623,6.032,1928,6.801,2464,7.56,2469,6.959,2476,8.382,2480,7.098,2493,7.684,2712,8.722,2867,3.919,3382,6.052,3383,9.044,3384,7.765,3385,7.765,3386,7.765,3387,8.573,3388,8.573,3389,7.765,3390,7.765,3391,6.052,3392,6.052,3393,6.052,3394,6.052,3395,6.052,3396,6.052,3397,6.052,3398,6.052,3399,7.765,3400,6.052,3401,7.765,3402,7.765,3403,6.052,3404,6.052,3405,8.573,3406,6.052,3407,6.052,3408,6.052,3409,6.052,3410,7.765,3411,9.044,3412,6.052,3413,6.052,3414,6.052,3415,6.052,3416,6.052]],["title/components/MultiFilterComponent.html",[264,1.013,387,1.719]],["body/components/MultiFilterComponent.html",[0,0.257,3,0.026,4,0.026,5,0.03,17,1.619,28,1.455,32,0.191,33,0.709,34,0.19,35,0.389,39,0.212,42,0.278,44,0.309,45,0.005,46,0.529,47,0.309,50,0.731,51,0.109,57,0.03,61,1.366,79,1.012,100,1.386,112,1.406,137,0.002,138,0.003,139,0.002,145,4.87,146,2.4,151,2.761,152,3.45,161,0.975,164,2.134,180,1.127,250,1.386,251,1.939,260,4.155,264,1.53,265,1.609,266,2.183,267,1.661,268,2.05,269,1.688,270,1.688,272,2.815,273,1.584,274,3.63,275,3.05,277,2.362,281,1.598,282,3.154,297,1.127,298,1.426,300,0.876,325,2.912,333,1.447,334,2.362,335,2.324,336,1.513,337,2.951,338,1.688,339,1.688,340,1.609,341,1.688,342,1.609,343,2.371,344,2.362,345,1.609,346,2.362,347,1.609,348,1.688,349,1.584,350,1.688,351,1.609,352,1.688,353,2.951,354,1.609,355,1.688,356,1.56,357,2.362,358,1.609,359,1.56,360,1.635,361,1.661,362,1.688,363,1.635,364,1.661,365,1.536,366,2.362,367,1.609,368,1.688,369,2.951,370,1.56,371,1.688,372,1.609,373,1.609,374,1.688,375,1.584,376,1.688,377,1.609,378,1.609,379,1.688,380,1.584,381,1.688,382,1.609,383,1.688,384,1.635,385,1.609,386,1.688,387,2.813,388,3.371,389,1.609,390,2.724,391,1.688,392,1.609,393,1.688,394,1.609,395,1.688,396,1.584,397,1.609,398,1.609,399,1.609,400,1.609,401,1.858,402,1.609,403,1.688,404,1.609,405,1.609,406,1.609,407,2.027,408,1.584,409,1.584,410,1.688,411,1.584,412,1.688,413,1.584,414,1.661,415,1.688,457,1.664,560,1.328,579,1.386,658,2.329,668,2.384,669,2.384,888,6.39,902,4.5,911,4.066,930,4.568,1054,8.157,1055,8.157,1642,5.741,2233,3.422,2240,6.725,2241,4.788,2251,6.725,2291,5.83,3237,6.725,3249,4.167,3250,5.83,3251,5.83,3252,4.167,3253,4.167,3254,5.83,3255,4.167,3256,4.167,3257,4.167,3258,4.167,3271,5.83,3417,7.504,3418,4.649,3419,6.505,3420,4.649,3421,4.649,3422,4.649,3423,4.649,3424,4.649,3425,4.649]],["title/components/MultiSettingsComponent.html",[264,1.013,389,1.719]],["body/components/MultiSettingsComponent.html",[0,0.228,3,0.023,4,0.023,5,0.027,28,1.571,32,0.191,33,0.651,34,0.168,35,0.357,39,0.188,42,0.314,44,0.566,45,0.005,46,0.597,47,0.566,49,0.712,50,0.83,51,0.104,52,0.389,57,0.027,61,1.211,79,0.64,100,1.229,107,1.78,112,1.247,117,2.092,137,0.002,138,0.003,139,0.002,148,1.859,151,2.534,161,0.895,184,1.301,218,1.974,250,1.229,251,1.78,264,1.432,265,1.427,266,2.004,267,1.473,269,1.496,270,1.496,272,2.634,273,1.405,274,3.605,277,2.168,279,2.366,281,1.466,282,2.725,297,2.286,298,2.614,300,0.777,321,1.427,333,1.283,334,2.168,335,2.133,336,1.342,337,2.795,338,1.496,339,1.496,340,1.427,341,1.496,342,1.427,343,2.218,344,2.168,345,1.427,346,2.168,347,1.427,348,1.496,349,1.405,350,1.496,351,3.466,352,2.168,353,2.795,354,1.427,355,1.496,356,1.383,357,2.168,358,1.427,359,1.383,360,1.449,361,1.473,362,1.496,363,1.449,364,1.473,365,1.362,366,2.168,367,1.427,368,1.496,369,2.795,370,1.383,371,1.496,372,1.427,373,1.427,374,1.496,375,1.405,376,1.496,377,1.427,378,1.427,379,1.496,380,1.405,381,1.496,382,1.427,383,1.496,384,1.449,385,1.427,386,1.496,387,1.427,388,3.215,389,2.664,390,2.549,391,1.496,392,1.427,393,1.496,394,1.427,395,1.496,396,1.405,397,1.427,398,1.427,399,1.427,400,1.427,401,1.706,402,1.427,403,1.496,404,1.427,405,1.427,406,1.427,407,1.114,408,1.405,409,1.405,410,1.496,411,1.405,412,1.496,413,1.405,414,1.473,415,1.496,537,1.449,563,1.211,564,1.247,658,2.065,710,3.769,833,2.417,902,4.262,911,2.577,1219,3.867,1436,3.034,1438,4.116,1439,4.93,1441,4.193,1442,3.611,1443,6.652,1444,4.193,1445,3.611,1446,6.169,1447,4.193,1448,4.116,1449,4.93,1450,5.405,1451,4.193,1452,4.193,1453,4.193,1458,2.894,1460,2.894,1463,2.894,1464,3.732,1466,2.894,1470,4.93,1485,2.894,1525,4.639,1791,3.611,1823,6.616,2276,5.666,2521,3.034,2522,3.034,2523,3.034,2528,3.034,2529,3.034,2530,3.034,2531,3.034,2532,3.034,2533,3.034,2534,3.034,2535,3.034,2536,3.034,2537,3.034,2538,3.034,2539,3.034,2540,3.034,2542,3.034,2543,3.034,3262,3.034,3263,3.413,3264,3.413,3426,8.171,3427,6.764,3428,3.695,3429,4.944,3430,6.899,3431,3.695,3432,4.122,3433,4.122,3434,4.122,3435,4.122,3436,4.122,3437,4.122]],["title/components/NavbarComponent.html",[112,1.502,264,1.013]],["body/components/NavbarComponent.html",[0,0.225,3,0.022,4,0.033,5,0.039,17,1.738,32,0.181,33,0.646,34,0.242,35,0.354,36,0.48,39,0.187,42,0.302,44,0.394,45,0.005,46,0.53,47,0.394,49,0.914,50,0.747,51,0.122,52,0.385,57,0.027,61,1.2,72,3.197,79,0.822,100,1.217,107,1.217,111,4.493,112,2.317,114,3.376,117,2.085,137,0.002,138,0.003,139,0.002,148,1.271,161,0.889,168,1.253,184,0.889,189,1.766,199,1.391,210,1.801,250,2.081,251,1.768,258,2.052,264,1.424,265,1.413,266,1.99,267,1.459,268,1.801,269,1.482,270,1.482,272,2.62,273,1.391,274,3.603,275,2.78,277,2.153,279,1.939,281,1.456,282,2.974,297,1.857,298,2.351,300,0.769,301,1.349,314,1.67,315,1.612,316,1.67,317,1.67,318,1.67,319,1.67,320,1.507,321,1.413,322,1.67,323,1.67,324,1.67,325,1.584,326,1.67,327,1.641,328,1.67,329,1.67,330,1.67,331,1.059,332,1.67,333,1.271,334,2.153,335,2.118,336,1.329,337,2.782,338,1.482,339,1.482,340,1.413,341,1.482,342,1.413,343,2.206,344,2.153,345,1.413,346,2.153,347,1.413,348,1.482,349,1.391,350,1.482,351,1.413,352,1.482,353,2.782,354,1.413,355,1.482,356,1.37,357,2.153,358,1.413,359,1.37,360,1.436,361,1.459,362,1.482,363,1.436,364,1.459,365,1.349,366,2.153,367,1.413,368,1.482,369,2.782,370,1.37,371,1.482,372,1.413,373,1.413,374,1.482,375,1.391,376,1.482,377,1.413,378,1.413,379,1.482,380,1.391,381,1.482,382,1.413,383,1.482,384,1.436,385,1.413,386,1.482,387,1.413,388,2.118,389,1.413,390,2.535,391,1.482,392,1.413,393,1.482,394,1.413,395,1.482,396,1.391,397,1.413,398,1.413,399,1.413,400,1.413,401,1.694,402,1.413,403,1.482,404,1.413,405,1.413,406,1.413,407,1.103,408,1.391,409,1.391,410,1.482,411,1.391,412,1.482,413,1.391,414,1.459,415,1.482,474,2.262,532,5.425,537,1.436,546,3.38,560,1.166,561,1.459,562,2.867,563,1.2,564,1.235,565,3.005,567,3.659,579,1.217,588,4.253,589,3.041,593,3.172,624,4.607,662,2.867,718,7.61,728,2.146,910,2.324,932,2.904,976,2.469,998,3.38,1091,2.261,1624,3.991,1639,3.707,1641,3.283,1671,3.172,1673,3.172,2139,3.975,2144,2.394,2147,3.005,2294,5.315,2857,3.376,3121,3.659,3438,4.083,3439,6.983,3440,5.93,3441,6.983,3442,6.983,3443,5.93,3444,5.93,3445,6.983,3446,5.93,3447,7.664,3448,6.983,3449,5.93,3450,4.083,3451,4.083,3452,4.083,3453,4.083,3454,4.083,3455,4.083,3456,4.083,3457,4.083,3458,4.083,3459,4.083,3460,4.083,3461,4.083,3462,4.083,3463,4.083,3464,4.083,3465,4.083,3466,4.083,3467,4.083,3468,4.083,3469,4.083,3470,4.083,3471,4.083,3472,4.083,3473,4.083,3474,4.083,3475,4.083,3476,4.083,3477,4.083,3478,4.083,3479,4.083,3480,4.083,3481,4.083,3482,4.083,3483,4.083,3484,5.93,3485,5.93,3486,5.93,3487,5.93,3488,5.93,3489,5.93,3490,5.93,3491,4.083,3492,6.345,3493,7.664,3494,5.315,3495,4.083,3496,5.93,3497,4.083,3498,4.083,3499,5.315,3500,5.93,3501,5.93,3502,4.083,3503,4.083]],["title/components/NoSelectionComponent.html",[264,1.013,392,1.719]],["body/components/NoSelectionComponent.html",[0,0.316,3,0.031,4,0.031,5,0.037,32,0.151,33,0.816,34,0.234,39,0.381,42,0.235,45,0.005,46,0.544,51,0.073,57,0.037,61,1.681,100,1.705,112,1.73,137,0.003,138,0.004,139,0.003,161,1.122,250,1.705,251,2.232,264,1.702,265,1.98,266,2.512,267,2.044,269,2.077,270,2.077,272,3.131,273,1.949,274,3.668,277,2.718,281,1.839,282,3.435,297,1.386,298,1.755,300,1.078,333,1.781,334,2.718,335,2.674,336,1.862,337,3.214,338,2.077,339,2.077,340,1.98,341,2.077,342,1.98,343,2.637,344,2.718,345,1.98,346,2.718,347,1.98,348,2.077,349,1.949,350,2.077,351,1.98,352,2.077,353,3.214,354,1.98,355,2.077,356,1.92,357,2.718,358,1.98,359,1.92,360,2.011,361,2.044,362,2.077,363,2.011,364,2.044,365,1.891,366,2.718,367,1.98,368,2.077,369,3.214,370,1.92,371,2.077,372,1.98,373,1.98,374,2.077,375,1.949,376,2.077,377,1.98,378,1.98,379,2.077,380,1.949,381,2.077,382,1.98,383,2.077,384,2.011,385,1.98,386,2.077,387,1.98,388,2.674,389,1.98,390,3.03,391,2.077,392,3.064,393,2.077,394,1.98,395,2.077,396,1.949,397,1.98,398,1.98,399,1.98,400,1.98,401,2.138,402,1.98,403,2.077,404,1.98,405,1.98,406,1.98,407,1.545,408,1.949,409,1.949,410,2.077,411,1.949,412,2.077,413,1.949,414,2.044,415,2.077,480,3.758,1525,5.816,2690,7.479,3504,8.346,3505,5.721,3506,7.487,3507,5.721,3508,5.721]],["title/classes/Page.html",[0,0.274,106,2.148]],["body/classes/Page.html",[0,0.41,2,0.9,3,0.041,4,0.041,5,0.048,32,0.15,38,1.172,39,0.403,42,0.233,44,0.494,45,0.005,46,0.484,47,0.494,51,0.112,57,0.048,91,1.011,92,1.011,93,0.941,106,3.814,137,0.004,138,0.004,139,0.004,146,2.744,164,3.414,258,3.483,462,2.248,463,2.216,616,6.326,1614,4.815,3350,7.302,3509,7.436,3510,7.436,3511,9.399,3512,7.436,3513,8.817]],["title/classes/ParameterListItem.html",[0,0.274,261,3.003]],["body/classes/ParameterListItem.html",[0,0.515,2,0.536,3,0.024,4,0.024,5,0.029,8,0.497,11,1.164,23,2.033,24,1.661,28,1.779,32,0.161,36,0.521,38,1.315,39,0.432,42,0.139,44,0.294,45,0.005,46,0.409,47,0.294,50,0.775,51,0.093,57,0.064,58,0.904,79,1.071,91,1.247,92,1.247,93,1.161,102,2.033,137,0.004,138,0.003,139,0.002,142,2.596,144,3.801,145,5.386,146,3.443,147,2.521,148,3.056,149,3.929,150,3.929,151,2.668,152,3.102,153,3.929,154,3.929,155,3.929,156,3.929,157,3.929,161,0.664,162,2.271,163,1.78,164,2.033,165,0.88,166,2.768,167,2.033,168,1.359,169,2.768,170,2.521,171,2.768,172,2.768,173,2.768,174,2.768,175,2.768,176,2.768,177,2.768,178,2.768,179,3.929,180,2.115,181,3.078,182,2.768,183,3.929,184,1.592,185,1.719,186,3.685,187,2.768,188,1.689,189,1.916,190,1.557,191,1.953,192,2.678,193,2.768,194,2.768,195,2.768,196,2.768,197,2.768,198,2.768,199,3.293,200,2.768,201,2.768,202,2.768,203,2.678,204,2.678,205,2.398,206,2.768,207,2.768,208,2.768,209,2.768,210,1.953,211,2.768,212,2.521,213,2.768,214,2.768,215,2.768,216,2.768,217,2.678,218,2.121,219,2.768,220,1.088,221,2.521,222,2.678,223,1.953,224,2.678,225,2.387,226,2.768,227,2.768,228,2.768,229,2.768,230,1.88,231,2.768,232,2.768,233,2.768,234,2.768,235,2.768,236,2.768,237,2.768,238,2.768,239,2.768,240,2.218,241,2.768,242,2.768,243,2.678,244,2.768,245,2.768,246,2.768,247,2.768,248,2.768,249,3.801,250,1.32,251,1.32,252,2.678,253,2.678,254,2.678,255,1.992,256,2.768,257,2.768,258,2.176,259,2.768,260,2.452,261,4.419,262,2.768,263,2.768,416,3.969,3514,4.429]],["title/classes/PatchSettings.html",[0,0.274,1476,2.827]],["body/classes/PatchSettings.html",[0,0.524,2,0.662,3,0.03,4,0.03,5,0.036,8,1.097,32,0.205,33,1.051,34,0.223,35,0.434,36,0.854,37,1.721,38,1.218,39,0.25,40,1.379,42,0.256,44,0.363,45,0.005,46,0.356,47,0.363,49,0.652,50,0.533,51,0.07,52,0.515,57,0.064,58,0.786,66,1.922,76,1.76,77,1.707,91,1.265,92,1.265,93,1.178,126,1.347,137,0.003,138,0.004,139,0.003,220,1.342,427,2.331,430,2.046,435,1.801,436,1.379,437,1.361,438,1.518,439,1.518,443,1.561,444,1.653,457,2.087,710,4.996,1476,4.95,2667,4.645,2668,3.305,2877,3.416,2880,3.679,2881,4.784,2882,4.784,2883,5.285,2884,4.784,2885,4.784,2886,3.679,2887,3.679,2888,3.679,2889,4.89,2890,3.54,2891,3.679,2892,3.679,2893,3.54,3515,7.265,3516,5.466]],["title/classes/PatchSettingsFailure.html",[0,0.274,2885,2.911]],["body/classes/PatchSettingsFailure.html",[0,0.524,2,0.662,3,0.03,4,0.03,5,0.036,8,1.097,32,0.205,33,1.051,34,0.223,35,0.434,36,0.854,37,1.721,38,1.218,39,0.25,40,1.379,42,0.256,44,0.363,45,0.005,46,0.356,47,0.363,49,0.652,50,0.533,51,0.07,52,0.515,57,0.064,58,0.786,66,1.922,76,1.76,77,1.707,91,1.265,92,1.265,93,1.178,126,1.347,137,0.003,138,0.004,139,0.003,220,1.342,427,2.331,430,2.046,435,1.801,436,1.379,437,1.361,438,1.518,439,1.518,443,1.561,444,1.653,457,2.087,710,4.996,1476,4.645,2667,4.645,2668,3.305,2877,3.416,2880,3.679,2881,4.784,2882,4.784,2883,5.285,2884,4.784,2885,5.098,2886,3.679,2887,3.679,2888,3.679,2889,3.679,2890,3.54,2891,4.89,2892,3.679,2893,3.54,3517,7.265,3518,5.466]],["title/classes/PatchSettingsSuccess.html",[0,0.274,2884,2.911]],["body/classes/PatchSettingsSuccess.html",[0,0.524,2,0.662,3,0.03,4,0.03,5,0.036,8,1.097,32,0.205,33,1.051,34,0.223,35,0.434,36,0.854,37,1.721,38,1.218,39,0.25,40,1.379,42,0.256,44,0.363,45,0.005,46,0.356,47,0.363,49,0.652,50,0.533,51,0.07,52,0.515,57,0.064,58,0.786,66,1.922,76,1.76,77,1.707,91,1.265,92,1.265,93,1.178,126,1.347,137,0.003,138,0.004,139,0.003,220,1.342,427,2.331,430,2.046,435,1.801,436,1.379,437,1.361,438,1.518,439,1.518,443,1.561,444,1.653,457,2.087,710,4.996,1476,4.645,2667,4.645,2668,3.305,2877,3.416,2880,3.679,2881,4.784,2882,4.784,2883,5.285,2884,5.098,2885,4.784,2886,3.679,2887,3.679,2888,3.679,2889,3.679,2890,3.54,2891,3.679,2892,4.89,2893,3.54,3519,7.265,3520,5.466]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.274,41,2.827]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.497,1,3.542,2,0.465,3,0.021,4,0.021,5,0.048,6,2.25,7,1.599,8,1.085,9,4.734,10,1.051,11,1.956,12,3.516,13,4.366,14,3.976,15,2.185,16,3.159,17,2.068,18,4.212,19,4.279,20,3.427,21,2.399,22,2.321,23,3.416,24,2.528,25,4.075,26,4.212,27,3.227,28,1.507,29,3.427,30,3.95,31,3.543,32,0.2,33,0.961,34,0.157,35,0.339,36,1.15,37,1.399,38,1.1,39,0.259,41,3.836,42,0.27,44,0.255,45,0.005,46,0.25,47,0.528,51,0.086,52,0.362,53,4.366,54,2.017,55,2.757,56,1.879,57,0.061,58,0.552,59,2.185,60,3.731,61,1.128,62,1.845,63,3.731,64,2.017,65,4.075,66,3.221,67,5.023,68,4.362,69,3.731,70,2.321,71,2.839,72,4.012,73,3.094,74,4.395,75,3.731,76,1.633,77,1.456,78,4.012,79,1.049,80,4.279,81,4.071,82,4.395,83,3.282,84,2.399,85,2.399,86,3.543,87,3.427,88,1.845,89,3.427,90,2.399,91,1.199,92,1.199,93,1.116,94,2.399,95,2.321,96,2.399,97,2.399,98,2.25,99,1.727,100,1.144,101,2.321,102,3.094,103,3.543,104,3.456,105,3.227,106,1.66,107,1.144,108,2.321,109,2.25,110,2.185,111,4.362,112,1.161,113,2.399,114,2.185,115,2.321,116,3.138,117,1.392,118,2.399,119,2.399,120,4.651,121,2.321,122,2.399,123,3.427,124,2.399,125,3.427,126,0.544,127,2.399,128,2.321,129,2.399,130,2.321,131,2.399,132,2.839,133,3.427,134,1.516,135,2.399,136,2.25,137,0.002,138,0.003,139,0.002,160,2.979,1301,5.78,1302,5.78,3521,3.839,3522,3.839,3523,3.839,3524,3.839,3525,3.839,3526,3.839,3527,3.839,3528,3.839]],["title/classes/Process.html",[0,0.274,181,2.431]],["body/classes/Process.html",[0,0.515,2,0.538,3,0.024,4,0.024,5,0.029,8,0.499,11,1.167,23,2.039,24,1.667,28,1.782,32,0.161,36,0.522,38,1.315,39,0.433,42,0.139,44,0.295,45,0.005,46,0.41,47,0.295,50,0.614,51,0.093,57,0.064,58,0.906,79,1.06,91,1.248,92,1.248,93,1.162,102,2.039,137,0.004,138,0.003,139,0.002,142,2.604,144,3.81,145,5.316,146,3.315,147,2.529,148,3.057,149,3.938,150,3.938,151,2.674,152,3.107,153,3.938,154,3.938,155,3.938,156,3.938,157,3.938,160,2.335,161,0.666,162,2.278,163,1.785,164,2.039,165,0.882,166,4.576,167,2.039,168,1.363,169,2.777,170,2.529,171,2.777,172,2.777,173,2.777,174,2.777,175,2.777,176,2.777,177,2.777,178,2.777,179,3.938,180,2.117,181,3.584,182,2.777,183,3.938,184,1.595,185,1.724,186,3.693,187,2.777,188,1.695,189,1.922,190,1.562,191,1.959,192,2.686,193,2.777,194,2.777,195,2.777,196,2.777,197,2.777,198,2.777,199,3.295,200,2.777,201,2.777,202,2.777,203,2.686,204,2.686,205,2.404,206,2.777,207,2.777,208,2.777,209,2.777,210,1.959,211,2.777,212,2.529,213,2.777,214,2.777,215,2.777,216,2.777,217,2.686,218,2.128,219,2.777,220,1.091,221,2.529,222,2.686,223,1.959,224,2.686,225,2.395,226,2.777,227,2.777,228,2.777,229,2.777,230,1.885,231,2.777,232,2.777,233,2.777,234,2.777,235,2.777,236,2.777,237,2.777,238,2.777,239,2.777,240,2.225,241,2.777,242,2.777,243,2.686,244,2.777,245,2.777,246,2.777,247,2.777,248,2.777,249,3.81,250,1.324,251,1.324,252,2.686,253,2.686,254,2.686,255,1.998,256,2.777,257,2.777,258,2.18,259,2.777,260,2.459,261,3.81,262,2.777,263,2.777,3529,4.442,3530,4.442,3531,4.442]],["title/classes/RefreshTranslation.html",[0,0.274,3532,3.003]],["body/classes/RefreshTranslation.html",[0,0.524,2,0.77,3,0.035,4,0.035,5,0.041,8,1.105,10,2.194,32,0.201,33,1.056,34,0.259,35,0.479,37,1.546,38,1.227,42,0.2,45,0.005,49,0.758,50,0.62,51,0.102,52,0.599,57,0.064,58,0.914,77,1.609,79,0.682,126,1.136,137,0.003,138,0.004,139,0.003,146,3.503,165,1.591,167,2.918,240,3.184,499,2.6,500,2.467,603,3.844,730,5.756,1641,3.519,2674,4.278,3532,5.569,3533,4.278,3534,5.896,3535,6.357,3536,4.117,3537,5.304,3538,5.304,3539,4.463,3540,5.304,3541,4.463,3542,5.304,3543,4.463,3544,4.463,3545,4.679,3546,4.278,3547,4.679,3548,4.679,3549,4.679,3550,4.679,3551,4.117]],["title/classes/RejectLogIn.html",[0,0.274,69,2.749]],["body/classes/RejectLogIn.html",[0,0.5,1,3.585,2,0.475,3,0.022,4,0.022,5,0.052,6,2.297,7,1.633,8,1.102,9,4.905,10,1.073,11,2.104,12,3.536,13,4.546,14,4.01,15,2.231,16,3.523,17,2.209,18,4.698,19,4.512,20,4.124,21,2.45,22,2.37,23,3.675,24,2.82,25,4.545,26,4.698,27,3.6,28,1.681,29,4.124,30,4.406,31,3.597,32,0.201,33,0.986,34,0.16,35,0.344,36,1.017,37,1.525,38,1.148,39,0.263,40,0.989,41,3.276,42,0.214,44,0.261,45,0.005,46,0.255,47,0.261,49,0.468,50,0.382,51,0.087,52,0.37,53,3.585,54,2.06,55,3.075,56,1.919,57,0.061,58,0.564,59,2.231,60,3.776,61,1.152,62,1.873,63,3.776,64,2.06,65,4.124,66,3.237,67,5.061,68,4.406,69,4.161,70,2.37,71,2.883,72,4.052,73,3.131,74,4.432,75,3.776,76,1.395,77,1.469,78,2.113,79,0.859,80,2.113,81,2.01,82,2.17,83,1.728,84,2.45,85,2.45,86,3.597,87,3.48,88,1.873,89,3.48,90,2.45,91,1.206,92,1.206,93,1.123,94,2.45,95,2.37,96,2.45,97,2.45,98,2.297,99,1.763,100,1.168,101,2.37,102,3.451,103,3.597,104,3.855,105,3.276,106,1.695,107,1.168,108,2.37,109,2.297,110,2.231,111,4.406,112,1.185,113,2.45,114,2.231,115,2.37,116,3.776,117,1.675,118,3.597,119,3.597,120,5.004,121,3.48,122,3.597,123,4.124,124,3.597,125,4.545,126,0.556,127,2.45,128,2.37,129,2.45,130,2.37,131,2.45,132,2.883,133,3.48,134,1.547,135,2.45,136,2.297,137,0.002,138,0.003,139,0.002,457,1.744,3552,5.755,3553,3.919]],["title/classes/RemoveLightCard.html",[0,0.274,483,2.19]],["body/classes/RemoveLightCard.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,3.306,484,2.998,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,2.745,513,1.513,514,1.867,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,3554,5.732,3555,3.898]],["title/components/ResizableComponent.html",[264,1.013,394,1.719]],["body/components/ResizableComponent.html",[0,0.287,3,0.029,4,0.029,5,0.034,24,1.951,32,0.161,33,0.766,34,0.212,35,0.42,39,0.364,42,0.268,45,0.005,46,0.518,51,0.066,57,0.034,61,1.528,100,1.55,112,1.573,137,0.003,138,0.003,139,0.003,148,2.188,161,1.053,180,1.26,199,1.772,250,1.55,251,2.095,264,1.623,265,1.8,266,2.358,267,1.858,268,2.294,269,1.888,270,1.888,273,1.772,274,3.651,275,3.294,277,2.551,281,1.726,297,1.26,298,1.596,300,0.98,333,1.619,334,2.551,335,2.51,336,1.693,337,3.094,338,1.888,339,1.888,340,1.8,341,1.888,342,1.8,343,2.514,344,2.551,345,1.8,346,2.551,347,1.8,348,1.888,349,1.772,350,1.888,351,1.8,352,1.888,353,3.094,354,1.8,355,1.888,356,1.745,357,2.551,358,1.8,359,1.745,360,1.829,361,1.858,362,1.888,363,1.829,364,1.858,365,1.719,366,2.551,367,1.8,368,1.888,369,3.094,370,1.745,371,1.888,372,1.8,373,1.8,374,1.888,375,1.772,376,1.888,377,1.8,378,1.8,379,1.888,380,1.772,381,1.888,382,1.8,383,1.888,384,1.829,385,1.8,386,1.888,387,1.8,388,2.51,389,1.8,390,2.889,391,1.888,392,1.8,393,1.888,394,2.95,395,1.888,396,1.772,397,1.8,398,1.8,399,1.8,400,1.8,401,2.007,402,1.8,403,1.888,404,1.8,405,1.8,406,1.8,407,1.405,408,1.772,409,1.772,410,1.888,411,1.772,412,1.888,413,1.772,414,1.858,415,1.888,490,2.208,542,4.04,548,4.306,559,6.182,617,4.551,932,3.441,1030,2.128,1525,5.459,1533,4.934,1534,6.182,1545,4.04,1554,4.661,1555,4.661,1557,4.661,1575,4.661,1599,4.661,1820,6.589,1821,6.621,1928,3.501,2408,4.661,3556,5.201,3557,8.524,3558,7.959,3559,7.027,3560,7.027,3561,5.201,3562,5.201,3563,5.201,3564,5.201,3565,5.201,3566,5.201,3567,5.201,3568,5.201,3569,5.201,3570,7.027,3571,7.959,3572,5.201,3573,5.201,3574,5.201,3575,5.201,3576,5.201,3577,5.201,3578,5.201,3579,5.201,3580,5.201,3581,5.201,3582,5.201]],["title/classes/RouterStateUrl.html",[0,0.274,745,3.858]],["body/classes/RouterStateUrl.html",[0,0.418,2,0.706,3,0.032,4,0.046,5,0.038,7,2.429,11,2.213,13,4.687,28,1.304,32,0.118,33,0.635,38,1.05,39,0.346,42,0.183,44,0.615,45,0.005,46,0.38,47,0.388,51,0.096,57,0.055,79,0.903,88,2.467,91,0.793,92,0.793,93,0.738,117,2.068,137,0.003,138,0.004,139,0.003,180,2.161,184,1.651,188,3.615,220,2.19,230,4.398,240,3.797,255,3.41,279,1.619,297,1.837,401,2.165,474,2.892,493,2.707,698,3.319,729,4.737,744,4.093,745,6.542,1015,4.737,1030,2.385,1164,4.443,1232,5.322,1418,4.443,2142,5.392,2148,4.529,2149,5.225,2150,7.383,2153,5.225,2154,6.793,2156,5.225,2157,7.383,2159,5.225,2160,5.225,2161,5.225,2162,8.492,2163,5.225,2164,6.275,2165,6.793,2166,7.844,2167,6.793,2168,6.793,2169,7.383,2170,6.793,2171,6.793,2172,6.793,2173,6.793,2174,6.793,2175,5.225,2176,5.225,2177,5.225,2178,5.225,2179,5.225,2180,5.225,2181,5.225,3583,5.83,3584,5.83]],["title/classes/SelectArchivedLightCard.html",[0,0.274,1017,3.003]],["body/classes/SelectArchivedLightCard.html",[0,0.517,2,0.677,3,0.031,4,0.031,5,0.036,8,1.089,10,2.021,32,0.205,33,1.041,34,0.228,35,0.441,36,0.867,37,1.729,38,1.209,39,0.256,40,1.411,42,0.259,44,0.372,45,0.005,46,0.364,47,0.372,49,0.667,50,0.545,51,0.105,52,0.528,57,0.063,58,0.804,77,1.719,79,0.6,91,1.299,92,1.299,93,1.209,106,3.796,126,1.171,137,0.004,138,0.004,139,0.003,161,1.106,165,1.465,230,2.374,258,1.936,331,1.45,343,2.96,407,1.511,432,3.784,435,1.822,436,1.411,437,1.392,438,1.554,439,1.554,457,2.111,461,1.644,462,1.692,463,1.667,477,1.821,479,2.099,508,2.209,551,3.185,851,4.839,866,3.016,879,3.623,880,4.991,881,4.839,885,3.497,886,4.991,1011,3.623,1014,3.928,1015,5.159,1016,3.623,1017,5.307,1018,3.928,1019,3.928,1020,3.928,1021,3.765,1022,3.928,1023,5.18,1024,3.765,3585,7.378,3586,5.594]],["title/classes/SelectLightCard.html",[0,0.274,476,2.19]],["body/classes/SelectLightCard.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,3.306,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,2.998,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,2.745,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,1.867,515,1.867,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,3587,5.732,3588,3.898]],["title/classes/SelectMenuLink.html",[0,0.274,2141,2.827]],["body/classes/SelectMenuLink.html",[0,0.505,2,0.574,3,0.026,4,0.026,5,0.031,7,1.975,8,1.107,14,3.304,16,3.092,17,1.642,32,0.202,33,1.017,34,0.194,35,0.394,36,0.775,37,1.737,38,1.182,39,0.301,40,1.196,42,0.238,44,0.573,45,0.005,46,0.309,47,0.315,49,0.566,50,0.462,51,0.084,52,0.447,57,0.062,58,0.682,76,1.598,77,1.636,79,0.879,91,1.244,92,1.244,93,1.158,126,1.323,132,3.304,137,0.002,138,0.003,139,0.002,168,2.023,188,2.516,189,2.853,190,2.882,191,2.909,220,1.164,301,1.567,427,2.166,430,1.335,435,1.674,436,1.196,437,1.18,443,1.354,444,1.434,457,1.939,477,2.468,493,2.928,728,5.424,782,3.988,1164,3.866,1172,2.964,1399,4.122,1405,3.988,2090,2.556,2107,4.271,2130,4.911,2137,5.309,2138,4.271,2139,5.078,2141,4.667,2142,3.988,2143,4.271,2144,5.051,2852,2.964,2855,3.191,2856,2.78,2857,4.317,2858,4.199,2859,4.446,2860,4.446,2861,4.446,2862,3.191,2863,3.191,2864,3.191,2865,4.439,2866,4.439,2867,4.271,2868,4.271,2869,5.104,2870,5.104,2871,4.439,2872,3.191,2873,3.191,2874,3.191,2875,3.191,2876,3.071,3589,6.595,3590,4.742]],["title/classes/SelectMenuLinkFailure.html",[0,0.274,2861,2.911]],["body/classes/SelectMenuLinkFailure.html",[0,0.508,2,0.586,3,0.027,4,0.027,5,0.032,7,2.015,8,1.111,14,2.423,16,2.268,17,1.204,32,0.202,33,1.022,34,0.197,35,0.4,36,0.786,37,1.743,38,1.187,39,0.306,40,1.221,42,0.241,44,0.577,45,0.005,46,0.315,47,0.322,49,0.577,50,0.472,51,0.085,52,0.456,57,0.062,58,0.696,76,1.62,77,1.647,79,0.887,91,1.251,92,1.251,93,1.164,126,1.35,132,2.423,137,0.002,138,0.003,139,0.002,168,1.484,188,2.551,189,2.893,190,2.351,191,2.134,220,1.188,301,1.599,427,2.189,430,1.362,435,1.692,436,1.221,437,1.204,443,1.382,444,1.463,457,1.96,477,2.495,493,2.954,728,5.388,782,2.925,1164,4.493,1172,3.024,1399,3.024,1405,2.925,2090,2.608,2107,3.133,2130,5.355,2137,5.355,2138,3.133,2139,4.941,2141,4.363,2142,2.925,2143,3.133,2144,4.847,2852,3.024,2855,3.256,2856,2.836,2857,4.363,2858,4.244,2859,4.493,2860,4.493,2861,4.847,2862,3.256,2863,3.256,2864,3.256,2865,3.256,2866,3.256,2867,3.133,2868,3.133,2869,5.565,2870,5.565,2871,4.501,2872,3.256,2873,3.256,2874,4.501,2875,4.501,2876,3.133,3591,6.688,3592,4.838]],["title/classes/SelectMenuLinkSuccess.html",[0,0.274,2860,2.911]],["body/classes/SelectMenuLinkSuccess.html",[0,0.507,2,0.584,3,0.027,4,0.027,5,0.031,7,2.009,8,1.11,14,2.415,16,2.26,17,1.2,32,0.202,33,1.021,34,0.197,35,0.399,36,0.784,37,1.742,38,1.186,39,0.305,40,1.216,42,0.24,44,0.576,45,0.005,46,0.314,47,0.321,49,0.575,50,0.47,51,0.085,52,0.455,57,0.062,58,0.693,76,1.617,77,1.645,79,0.886,91,1.25,92,1.25,93,1.163,126,1.329,132,2.415,137,0.002,138,0.003,139,0.002,168,1.479,188,3.15,189,2.886,190,2.346,191,2.126,220,1.184,301,1.593,427,2.185,430,1.358,435,1.689,436,1.216,437,1.2,443,1.377,444,1.458,457,1.957,477,2.49,493,2.95,728,5.386,782,2.915,1164,4.485,1172,4.17,1399,3.014,1405,2.915,2090,2.599,2107,3.122,2130,5.347,2137,5.347,2138,3.122,2139,5.105,2141,4.356,2142,2.915,2143,3.122,2144,4.485,2852,3.014,2855,3.245,2856,2.826,2857,4.356,2858,4.236,2859,4.485,2860,4.84,2861,4.485,2862,3.245,2863,3.245,2864,3.245,2865,3.245,2866,3.245,2867,3.122,2868,3.122,2869,5.557,2870,5.557,2871,5.557,2872,4.491,2873,3.245,2874,3.245,2875,3.245,2876,3.122,3593,6.672,3594,4.822]],["title/classes/SendArchiveQuery.html",[0,0.274,851,2.911]],["body/classes/SendArchiveQuery.html",[0,0.517,2,0.677,3,0.031,4,0.031,5,0.036,8,1.089,10,2.021,32,0.205,33,1.041,34,0.228,35,0.441,36,0.867,37,1.729,38,1.209,39,0.256,40,1.411,42,0.259,44,0.372,45,0.005,46,0.364,47,0.372,49,0.667,50,0.545,51,0.105,52,0.528,57,0.063,58,0.804,77,1.719,79,0.6,91,1.299,92,1.299,93,1.209,106,3.796,126,1.171,137,0.004,138,0.004,139,0.003,161,1.106,165,1.465,230,2.374,258,1.936,331,1.45,343,2.96,407,1.511,432,3.784,435,1.822,436,1.411,437,1.392,438,1.554,439,1.554,457,2.111,461,1.644,462,1.692,463,1.667,477,1.821,479,2.099,508,2.209,551,3.185,851,5.145,866,3.016,879,3.623,880,4.991,881,4.839,885,3.497,886,4.991,1011,3.623,1014,3.928,1015,5.159,1016,3.623,1017,4.991,1018,3.928,1019,5.18,1020,3.928,1021,3.765,1022,3.928,1023,3.928,1024,3.765,3595,7.378,3596,5.594]],["title/modules/ServicesModule.html",[625,2.148,637,3.655]],["body/modules/ServicesModule.html",[0,0.304,3,0.03,4,0.04,5,0.048,28,1.234,36,0.648,39,0.252,42,0.173,45,0.005,47,0.486,51,0.13,57,0.036,73,2.532,107,1.644,126,0.782,137,0.003,138,0.004,139,0.003,184,1.201,225,5.03,255,3.288,281,1.354,297,1.336,300,1.039,304,2.829,305,4.943,306,4.943,314,2.256,315,2.178,316,2.256,317,2.256,318,2.256,319,2.256,320,2.035,321,1.909,322,2.256,323,2.256,324,2.256,325,2.14,326,2.256,327,2.216,328,2.256,329,2.256,330,2.256,331,1.43,332,2.256,333,1.717,359,1.851,388,1.97,499,2.256,538,6.868,577,4.943,603,3.335,625,2.386,626,4.06,627,2.763,628,3.14,629,3.335,630,4.805,631,2.899,637,7.715,640,4.284,641,3.335,643,2.973,647,4.419,651,3.14,652,4.568,655,3.233,691,4.06,692,4.284,831,3.447,846,6.043,898,5.47,918,3.447,932,2.7,1086,5.131,1087,4.284,1096,6.043,1489,4.943,1732,5.166,1739,3.712,1929,4.566,1993,6.786,1995,6.786,2005,4.06,2006,4.566,2018,6.868,2034,4.943,2620,6.868,3597,4.943,3598,4.943,3599,6.868,3600,7.248,3601,6.868,3602,5.515,3603,5.515,3604,7.308,3605,7.308,3606,5.515,3607,5.515,3608,4.943,3609,5.515,3610,4.943,3611,7.308]],["title/classes/SetCardDataTimeline.html",[0,0.274,3169,3.487]],["body/classes/SetCardDataTimeline.html",[0,0.467,2,0.841,3,0.038,4,0.038,5,0.045,8,1.067,32,0.207,33,0.994,34,0.283,35,0.506,36,0.995,37,1.609,38,1.185,39,0.317,40,1.752,42,0.287,44,0.462,45,0.005,46,0.452,47,0.462,49,0.828,50,0.677,51,0.088,52,0.655,57,0.062,58,0.998,61,2.04,77,1.552,137,0.003,138,0.004,139,0.003,161,1.041,365,3.016,457,2.334,474,2.649,2453,3.844,3163,6.408,3164,5.393,3167,6.222,3168,5.748,3169,6.67,3170,6.222,3171,7.583,3172,6.222,3173,5.748,3612,8.461,3613,6.943]],["title/components/SettingsComponent.html",[264,1.013,396,1.692]],["body/components/SettingsComponent.html",[0,0.291,3,0.029,4,0.029,5,0.034,17,2.413,32,0.19,33,0.772,34,0.215,35,0.424,39,0.241,42,0.289,44,0.351,45,0.005,46,0.558,47,0.351,51,0.114,52,0.497,57,0.034,61,1.549,100,1.571,112,1.594,117,2.262,137,0.003,138,0.004,139,0.003,161,1.063,250,1.571,251,2.114,264,1.634,265,1.824,266,2.379,267,1.883,269,1.914,270,1.914,272,3.006,273,1.796,274,3.654,277,2.574,281,1.741,282,3.326,297,1.277,298,1.617,300,0.993,333,1.641,334,2.574,335,2.533,336,1.716,337,3.111,338,1.914,339,1.914,340,1.824,341,1.914,342,1.824,343,2.532,344,2.574,345,1.824,346,2.574,347,1.824,348,1.914,349,1.796,350,1.914,351,1.824,352,1.914,353,3.111,354,1.824,355,1.914,356,1.769,357,2.574,358,1.824,359,1.769,360,1.853,361,1.883,362,1.914,363,1.853,364,1.883,365,1.742,366,2.574,367,1.824,368,1.914,369,3.111,370,1.769,371,1.914,372,1.824,373,1.824,374,1.914,375,1.796,376,1.914,377,1.824,378,1.824,379,1.914,380,1.796,381,1.914,382,1.824,383,1.914,384,1.853,385,1.824,386,1.914,387,1.824,388,2.533,389,1.824,390,2.909,391,1.914,392,1.824,393,1.914,394,1.824,395,1.914,396,2.92,397,1.824,398,1.824,399,1.824,400,1.824,401,2.025,402,1.824,403,1.914,404,1.824,405,1.824,406,1.824,407,1.424,408,1.796,409,1.796,410,1.914,411,1.796,412,1.914,413,1.796,414,1.883,415,1.914,537,1.853,560,1.506,563,1.549,564,1.594,576,3.09,579,1.571,710,3.472,910,3.001,2822,7.182,2825,4.724,2826,4.724,3429,5.871,3614,5.272,3615,8.013,3616,6.225,3617,8.013,3618,7.091,3619,5.272,3620,5.272,3621,5.272,3622,5.272,3623,5.272,3624,5.272,3625,5.272,3626,5.272,3627,5.272,3628,5.272,3629,5.272]],["title/injectables/SettingsEffects.html",[798,4.111,841,1.439]],["body/injectables/SettingsEffects.html",[0,0.308,1,2.929,3,0.031,4,0.031,5,0.036,8,0.626,17,2.375,28,1.96,32,0.177,34,0.227,35,0.44,39,0.255,42,0.275,44,0.371,45,0.005,46,0.363,47,0.371,49,0.983,50,0.803,51,0.126,52,0.526,57,0.036,91,0.758,92,0.758,93,0.705,99,4.098,117,2.298,137,0.003,138,0.004,139,0.003,165,1.107,184,1.603,223,4.209,279,2.044,300,1.05,427,2.102,441,2.886,537,1.959,560,1.592,561,1.991,563,1.637,564,1.685,579,1.661,710,4.29,798,6.092,841,2.132,842,2.458,848,6.45,859,4.851,861,4.442,873,3.004,874,2.858,876,2.558,877,2.791,1198,3.245,1295,2.669,1338,4.189,1359,5.898,1363,5.898,1476,4.988,1477,4.613,1764,5.167,1775,4.613,1776,4.613,1777,4.613,1868,5.716,1895,3.172,1896,4.102,1949,5.167,2027,6.595,2028,6.595,2667,3.172,2668,3.37,2881,5.486,2882,3.267,2884,3.267,2885,3.267,3599,6.45,3608,4.994,3630,5.573,3631,8.239,3632,5.573,3633,7.359,3634,7.359,3635,7.359,3636,7.359,3637,7.359,3638,5.573,3639,7.359,3640,5.573,3641,7.359,3642,7.359,3643,7.359,3644,7.359,3645,7.359,3646,5.573,3647,4.994]],["title/modules/SettingsModule.html",[625,2.148,3648,3.858]],["body/modules/SettingsModule.html",[0,0.333,3,0.033,4,0.043,5,0.05,32,0.122,36,0.708,45,0.005,51,0.13,57,0.039,73,2.767,107,1.796,137,0.003,138,0.004,139,0.003,300,1.135,304,3.091,314,2.465,315,2.379,316,2.465,317,2.465,318,2.465,319,2.465,320,2.224,321,2.086,322,2.465,323,2.465,324,2.465,325,2.339,326,2.465,327,2.422,328,2.465,329,2.465,330,2.465,331,1.562,332,2.465,333,1.876,351,3.308,373,3.308,385,3.308,389,3.308,396,3.257,399,3.308,404,3.308,405,2.961,625,2.607,627,3.019,628,3.431,629,5.174,630,3.533,631,3.167,640,4.539,641,3.644,643,4.175,647,4.175,652,4.84,655,3.533,656,6.015,657,6.015,658,3.019,662,4.231,667,5.7,668,3.971,669,3.091,710,2.951,1436,4.436,2515,5.401,2541,4.989,2542,6.647,2719,6.94,3236,5.401,3427,4.989,3648,8.09,3649,5.401,3650,5.401,3651,5.401,3652,7.036,3653,6.026,3654,5.401,3655,6.026,3656,6.026,3657,6.026,3658,6.026,3659,6.026,3660,6.94,3661,6.026,3662,5.401]],["title/modules/SettingsRoutingModule.html",[625,2.148,3652,3.655]],["body/modules/SettingsRoutingModule.html",[0,0.399,3,0.04,4,0.048,5,0.057,36,0.85,45,0.005,51,0.118,57,0.047,107,2.156,137,0.004,138,0.004,139,0.004,180,1.753,264,1.475,300,1.363,314,2.96,315,2.857,316,2.96,317,2.96,318,2.96,319,2.96,320,2.67,321,2.504,322,2.96,323,2.96,324,2.96,325,2.808,326,2.96,327,2.907,328,2.96,329,2.96,330,2.96,331,1.876,332,2.96,396,2.956,627,3.624,631,3.802,643,3.901,647,4.677,694,5.325,696,6.385,697,6.017,698,4.119,699,5.62,701,5.325,705,5.62,1070,5.62,3652,6.385,3654,6.484,3663,7.235]],["title/injectables/SettingsService.html",[841,1.439,3599,3.655]],["body/injectables/SettingsService.html",[0,0.367,3,0.037,4,0.037,5,0.043,17,2.394,32,0.189,34,0.271,35,0.492,39,0.304,42,0.302,44,0.547,45,0.005,46,0.536,47,0.547,51,0.126,52,0.626,57,0.043,79,1.003,117,2.44,137,0.003,138,0.004,139,0.003,184,1.794,279,2.759,281,2.022,297,1.995,300,1.251,560,1.897,563,1.952,564,2.008,569,4.47,579,1.98,651,3.781,710,4.031,751,3.781,752,3.893,841,2.385,842,2.929,1083,6.125,1484,5.953,1907,4.663,3599,6.06,3664,6.642,3665,8.949,3666,8.949,3667,9.355,3668,8.234,3669,8.234,3670,6.642,3671,6.642,3672,6.642,3673,6.642,3674,6.642,3675,5.953,3676,6.642,3677,6.642,3678,6.642,3679,6.642]],["title/interfaces/SettingsState.html",[724,2.148,738,4.111]],["body/interfaces/SettingsState.html",[3,0.041,4,0.041,5,0.048,32,0.196,34,0.301,35,0.525,45,0.005,57,0.057,79,1.005,126,1.405,137,0.004,138,0.004,139,0.004,148,3.128,180,1.789,185,2.866,199,2.992,603,5.989,609,6.191,710,4.748,724,3.194,725,4.088,738,7.759,2890,4.782,3680,7.384,3681,7.384]],["title/classes/State.html",[0,0.274,11,1.305]],["body/classes/State.html",[0,0.515,2,0.535,3,0.024,4,0.024,5,0.029,8,0.496,11,1.65,23,2.029,24,1.658,28,1.778,32,0.161,36,0.519,38,1.315,39,0.432,42,0.139,44,0.294,45,0.005,46,0.409,47,0.294,50,0.612,51,0.093,57,0.064,58,0.903,79,1.059,91,1.246,92,1.246,93,1.16,102,2.029,137,0.004,138,0.003,139,0.002,142,2.591,144,3.796,145,5.309,146,3.31,147,2.516,148,3.055,149,3.923,150,3.923,151,2.664,152,3.098,153,3.923,154,3.923,155,3.923,156,3.923,157,3.923,160,3.299,161,0.662,162,3.744,163,1.776,164,2.029,165,0.878,166,4.563,167,2.029,168,1.356,169,2.762,170,2.516,171,2.762,172,2.762,173,2.762,174,2.762,175,2.762,176,2.762,177,2.762,178,2.762,179,3.923,180,2.113,181,3.073,182,2.762,183,3.923,184,1.59,185,1.715,186,3.68,187,2.762,188,1.686,189,1.912,190,1.554,191,1.949,192,2.672,193,2.762,194,2.762,195,2.762,196,2.762,197,2.762,198,2.762,199,3.292,200,2.762,201,2.762,202,2.762,203,2.672,204,2.672,205,2.395,206,2.762,207,2.762,208,2.762,209,2.762,210,1.949,211,2.762,212,2.516,213,2.762,214,2.762,215,2.762,216,2.762,217,2.672,218,2.117,219,2.762,220,1.085,221,2.516,222,2.672,223,1.949,224,2.672,225,2.383,226,2.762,227,2.762,228,2.762,229,2.762,230,1.876,231,2.762,232,2.762,233,2.762,234,2.762,235,2.762,236,2.762,237,2.762,238,2.762,239,2.762,240,2.214,241,2.762,242,2.762,243,2.672,244,2.762,245,2.762,246,2.762,247,2.762,248,2.762,249,3.796,250,1.317,251,1.317,252,2.672,253,2.672,254,2.672,255,1.988,256,2.762,257,2.762,258,2.172,259,2.762,260,2.447,261,3.796,262,2.762,263,2.762,441,1.898,1619,3.253,3682,4.419,3683,4.419]],["title/modules/StateModule.html",[625,2.148,638,3.655]],["body/modules/StateModule.html",[0,0.343,3,0.034,4,0.043,5,0.051,9,3.263,34,0.253,36,0.73,42,0.195,45,0.005,51,0.127,52,0.744,57,0.04,73,2.851,107,1.851,117,1.938,137,0.003,138,0.004,139,0.003,184,1.353,255,3.551,281,1.525,297,1.505,300,1.17,304,3.185,314,2.54,315,2.452,316,2.54,317,2.54,318,2.54,319,2.54,320,2.291,321,2.149,322,2.54,323,2.54,324,2.54,325,2.41,326,2.54,327,2.495,328,2.54,329,2.54,330,2.54,331,1.61,332,2.54,333,1.933,364,2.218,625,2.686,627,3.11,628,3.535,629,4.773,630,4.627,631,3.263,638,7.205,640,4.627,641,3.755,643,4.255,647,4.678,652,4.933,655,3.64,691,4.57,692,4.824,729,3.881,744,5.542,746,5.565,751,5.366,752,3.64,816,5.565,817,5.565,820,5.565,821,7.074,874,3.185,1560,7.074,1993,7.184,1995,7.184,2148,6.741,2150,7.184,2157,6.534,2166,5.141,2169,5.141,2188,5.565,3684,5.565,3685,5.565,3686,6.209,3687,6.209,3688,6.209,3689,6.209,3690,6.209,3691,5.565,3692,7.893,3693,6.209,3694,6.209,3695,6.209,3696,6.209,3697,6.209,3698,6.209,3699,6.209,3700,6.209,3701,6.209,3702,6.209,3703,6.209,3704,6.209,3705,6.209]],["title/components/TagsFilterComponent.html",[264,1.013,397,1.719]],["body/components/TagsFilterComponent.html",[0,0.245,3,0.024,4,0.024,5,0.029,17,1.82,28,1.636,32,0.17,33,0.685,34,0.181,35,0.376,39,0.203,42,0.282,44,0.295,45,0.005,46,0.547,47,0.295,49,0.529,50,0.432,51,0.122,52,0.418,57,0.029,61,1.303,62,1.443,93,0.561,100,1.321,107,1.321,112,1.34,117,2.205,137,0.002,138,0.003,139,0.002,161,0.943,184,1.37,199,2.144,210,1.955,250,1.321,251,1.875,264,1.491,265,1.534,266,2.111,267,1.584,268,1.955,269,1.609,270,1.609,272,2.743,273,1.511,274,3.62,275,2.949,277,2.284,279,2.592,281,1.545,282,3.088,297,1.772,298,1.93,300,0.835,321,2.531,333,1.38,334,2.284,335,2.247,336,1.443,337,2.889,338,1.609,339,1.609,340,1.534,341,1.609,342,1.534,343,2.31,344,2.284,345,1.534,346,2.284,347,1.534,348,1.609,349,1.511,350,1.609,351,1.534,352,1.609,353,2.889,354,1.534,355,1.609,356,1.487,357,2.284,358,1.534,359,1.487,360,1.559,361,1.584,362,1.609,363,1.559,364,1.584,365,1.465,366,2.284,367,1.534,368,1.609,369,2.889,370,1.487,371,1.609,372,1.534,373,1.534,374,1.609,375,1.511,376,1.609,377,1.534,378,1.534,379,1.609,380,1.511,381,1.609,382,1.534,383,1.609,384,1.559,385,1.534,386,1.609,387,1.534,388,2.247,389,1.534,390,2.655,391,1.609,392,1.534,393,1.609,394,1.534,395,1.609,396,1.511,397,2.754,398,3.275,399,1.534,400,1.534,401,1.797,402,1.534,403,1.609,404,1.534,405,1.534,406,1.534,407,2.27,408,1.511,409,1.511,410,1.609,411,1.511,412,1.609,413,1.511,414,1.584,415,1.609,560,1.266,561,1.584,563,1.303,564,1.34,579,1.321,606,2.524,658,2.221,823,3.688,828,2.984,829,2.871,830,2.681,831,2.771,836,2.771,902,4.048,1091,2.454,1198,1.955,1377,2.771,1438,4.287,1442,4.422,1448,4.665,1464,2.771,1480,3.444,1481,4.887,1482,3.263,1483,3.113,1500,3.444,1502,3.444,1504,3.444,1512,3.444,1513,3.444,1624,2.984,1818,6.753,1890,3.263,2233,3.263,2241,4.63,2253,5.638,2255,3.973,2273,3.444,2275,3.444,2279,4.417,2597,2.984,2670,3.444,2717,8.223,2718,8.223,3492,3.67,3706,6.554,3707,6.054,3708,7.312,3709,6.589,3710,4.433,3711,8.404,3712,4.433,3713,4.433,3714,4.433,3715,6.291,3716,3.67,3717,3.67,3718,4.433,3719,3.67,3720,4.433,3721,4.433,3722,3.973,3723,3.67,3724,4.433,3725,4.433,3726,3.67,3727,3.67,3728,4.433,3729,4.433,3730,4.433,3731,3.973,3732,3.67,3733,3.973]],["title/components/TextSettingComponent.html",[264,1.013,399,1.719]],["body/components/TextSettingComponent.html",[0,0.213,3,0.021,4,0.021,5,0.025,28,1.513,32,0.192,33,0.62,34,0.158,35,0.34,39,0.177,42,0.315,44,0.573,45,0.005,46,0.598,47,0.573,49,0.679,50,0.812,51,0.101,52,0.364,57,0.025,61,1.135,79,0.801,100,1.151,102,1.773,107,1.697,112,1.168,117,2.045,137,0.002,138,0.003,139,0.002,148,2.592,151,2.417,152,2.871,161,0.854,180,1.38,184,1.473,199,1.316,218,1.85,250,2.372,251,1.697,264,1.379,265,1.337,266,1.911,267,1.38,269,1.402,270,1.402,272,2.537,273,1.316,274,3.59,277,2.067,279,2.312,281,1.398,282,2.625,283,3.198,297,2.281,298,2.554,300,0.728,321,1.337,333,1.202,334,2.067,335,2.034,336,1.257,337,2.71,338,1.402,339,1.402,340,1.337,341,1.402,342,1.337,343,2.137,344,2.067,345,1.337,346,2.067,347,1.337,348,1.402,349,1.316,350,1.402,351,3.438,352,2.067,353,2.71,354,1.337,355,1.402,356,1.296,357,2.067,358,1.337,359,1.296,360,1.358,361,1.38,362,1.402,363,1.358,364,1.38,365,1.276,366,2.067,367,1.337,368,1.402,369,2.71,370,1.296,371,1.402,372,1.337,373,1.337,374,1.402,375,1.316,376,1.402,377,1.337,378,1.337,379,1.402,380,1.316,381,1.402,382,1.337,383,1.402,384,1.358,385,1.337,386,1.402,387,1.337,388,2.034,389,1.337,390,2.455,391,1.402,392,1.337,393,1.402,394,1.337,395,1.402,396,1.316,397,1.337,398,1.337,399,2.583,400,1.337,401,1.626,402,1.337,403,1.402,404,1.337,405,1.337,406,1.337,407,1.043,408,1.316,409,1.316,410,1.402,411,1.316,412,1.402,413,1.316,414,1.38,415,1.402,537,1.358,563,1.135,564,1.168,658,1.935,902,4.132,911,2.414,1219,3.688,1436,2.843,1437,3.001,1438,3.965,1439,5.588,1440,4.423,1441,3.998,1442,3.443,1443,6.686,1444,3.998,1445,3.443,1446,6.046,1447,5.24,1448,3.965,1449,4.749,1450,5.24,1451,3.998,1452,3.998,1453,3.998,1456,3.462,1458,2.712,1460,2.712,1463,4.749,1464,4.974,1466,3.998,1470,4.749,1485,2.712,1791,3.443,1823,6.55,2243,5.599,2276,5.858,2279,2.712,2516,6.689,2517,6.061,2521,2.843,2522,2.843,2523,2.843,2528,2.843,2529,2.843,2530,2.843,2531,2.843,2532,2.843,2533,2.843,2534,2.843,2535,2.843,2536,2.843,2537,2.843,2538,2.843,2539,2.843,2540,2.843,2541,7.316,2542,2.843,2543,2.843,2547,4.423,2548,4.714,2549,4.714,3262,2.843,3263,3.198,3264,3.198,3267,3.462,3268,3.462,3734,8.837,3735,5.694,3736,3.863,3737,3.863,3738,3.863,3739,3.863,3740,3.863,3741,3.863,3742,3.863,3743,3.863,3744,3.863,3745,3.863]],["title/classes/Third.html",[0,0.274,168,1.524]],["body/classes/Third.html",[0,0.509,2,0.51,3,0.023,4,0.023,5,0.027,8,0.473,11,1.594,23,1.933,24,1.58,28,1.739,32,0.166,34,0.172,36,0.835,38,1.312,39,0.428,42,0.19,44,0.403,45,0.005,46,0.506,47,0.403,50,0.591,51,0.09,57,0.063,58,0.872,79,1.098,91,1.23,92,1.23,93,1.145,102,1.933,137,0.004,138,0.003,139,0.002,142,2.469,144,3.667,145,5.248,146,3.263,147,2.397,148,3.031,149,3.79,150,3.79,151,2.574,152,3.016,153,3.79,154,3.79,155,3.79,156,3.79,157,3.79,160,4.33,161,1.165,162,2.16,163,1.692,164,1.933,165,0.836,166,4.442,167,1.933,168,1.86,169,2.632,170,2.397,171,4.442,172,2.632,173,2.632,174,2.632,175,2.632,176,2.632,177,2.632,178,2.632,179,3.79,180,2.079,181,2.969,182,2.632,183,3.79,184,1.548,185,1.634,186,4.558,187,2.632,188,1.607,189,1.822,190,1.481,191,3.134,192,2.547,193,2.632,194,2.632,195,2.632,196,2.632,197,2.632,198,2.632,199,3.263,200,2.632,201,2.632,202,2.632,203,2.547,204,2.547,205,2.314,206,2.632,207,2.632,208,2.632,209,2.632,210,1.857,211,2.632,212,2.397,213,2.632,214,2.632,215,2.632,216,2.632,217,2.547,218,2.017,219,2.632,220,1.034,221,2.397,222,2.547,223,1.857,224,2.547,225,2.27,226,2.632,227,2.632,228,2.632,229,2.632,230,1.787,231,2.632,232,2.632,233,2.632,234,2.632,235,2.632,236,2.632,237,2.632,238,2.632,239,2.632,240,2.109,241,2.632,242,2.632,243,2.547,244,2.632,245,2.632,246,2.632,247,2.632,248,2.632,249,3.667,250,1.255,251,1.255,252,2.547,253,2.547,254,2.547,255,1.894,256,2.632,257,2.632,258,2.099,259,2.632,260,2.332,261,3.667,262,2.632,263,2.632,281,1.489,297,1.02,895,5.435,3616,4.711,3746,6.064,3747,4.211,3748,6.064,3749,6.064,3750,6.064,3751,4.211,3752,4.211,3753,4.211]],["title/classes/ThirdActionAlreadyLoaded.html",[0,0.274,492,2.19]],["body/classes/ThirdActionAlreadyLoaded.html",[0,0.548,2,0.481,3,0.022,4,0.022,5,0.026,8,1.135,10,2.205,11,1.044,12,1.397,32,0.203,33,1.086,34,0.162,35,0.347,37,1.602,38,1.248,39,0.415,42,0.183,45,0.005,49,0.474,50,0.387,51,0.096,52,0.375,57,0.065,58,0.571,62,1.293,76,0.963,77,1.694,79,0.737,88,1.293,91,1.273,92,1.273,93,1.185,126,1.232,134,1.569,137,0.002,138,0.003,139,0.002,161,1.403,165,0.789,168,1.784,205,2.218,220,0.976,301,1.313,331,1.507,425,1.491,427,2.161,430,1.637,435,1.518,436,1.003,437,0.989,438,1.104,439,1.104,440,1.516,441,2.434,443,1.135,444,1.202,454,3.032,455,3.156,456,1.824,460,1.903,461,2.366,462,1.202,463,1.184,464,1.863,465,1.788,466,1.686,467,3.093,468,4.654,469,3.032,470,1.788,471,2.918,472,2.669,473,1.863,474,1.516,475,3.093,476,3.032,477,1.293,478,2.918,479,3.155,480,1.686,481,3.032,482,1.824,483,3.032,484,3.032,485,1.863,486,1.863,487,3.032,488,2.974,489,3.032,490,1.686,491,1.719,492,3.337,493,1.419,494,3.032,495,1.863,496,3.032,497,1.824,498,3.032,499,1.626,500,1.542,501,1.903,502,1.903,503,1.903,504,1.686,505,1.903,506,1.903,507,1.903,508,1.569,509,1.903,510,1.903,511,1.903,512,1.903,513,1.542,514,1.903,515,1.903,516,1.903,517,1.903,518,1.903,519,2.784,520,1.903,521,1.903,522,1.903,523,1.903,524,1.824,3754,5.814]],["title/classes/ThirdActionAlreadyUpdated.html",[0,0.274,494,2.19]],["body/classes/ThirdActionAlreadyUpdated.html",[0,0.548,2,0.481,3,0.022,4,0.022,5,0.026,8,1.135,10,2.205,11,1.044,12,1.397,32,0.203,33,1.086,34,0.162,35,0.347,37,1.602,38,1.248,39,0.415,42,0.183,45,0.005,49,0.474,50,0.387,51,0.096,52,0.375,57,0.065,58,0.571,62,1.293,76,0.963,77,1.694,79,0.737,88,1.293,91,1.273,92,1.273,93,1.185,126,1.232,134,1.569,137,0.002,138,0.003,139,0.002,161,1.403,165,0.789,168,1.784,205,2.218,220,0.976,301,1.313,331,1.507,425,1.491,427,2.161,430,1.637,435,1.518,436,1.003,437,0.989,438,1.104,439,1.104,440,1.516,441,2.434,443,1.135,444,1.202,454,3.032,455,3.156,456,1.824,460,1.903,461,2.366,462,1.202,463,1.184,464,1.863,465,1.788,466,1.686,467,3.093,468,4.654,469,3.032,470,1.788,471,2.918,472,2.669,473,1.863,474,1.516,475,3.093,476,3.032,477,1.293,478,2.918,479,3.155,480,1.686,481,3.032,482,1.824,483,3.032,484,3.032,485,1.863,486,1.863,487,3.032,488,2.974,489,3.032,490,1.686,491,1.719,492,3.032,493,1.419,494,3.337,495,1.863,496,3.032,497,1.824,498,3.032,499,1.626,500,1.542,501,1.903,502,1.903,503,1.903,504,1.686,505,1.903,506,1.903,507,1.903,508,1.569,509,1.903,510,1.903,511,1.903,512,1.903,513,1.542,514,1.903,515,1.903,516,1.903,517,1.903,518,1.903,519,1.903,520,2.784,521,1.903,522,1.903,523,1.903,524,1.824,3755,5.814]],["title/injectables/ThirdActionService.html",[225,2.677,841,1.439]],["body/injectables/ThirdActionService.html",[0,0.244,3,0.024,4,0.024,5,0.029,8,1.121,10,1.212,17,2.234,28,1.634,32,0.185,34,0.181,35,0.375,38,0.911,39,0.202,42,0.288,44,0.597,45,0.005,46,0.584,47,0.597,49,0.528,51,0.123,52,0.417,57,0.029,62,2.84,79,1.083,91,0.601,92,0.601,93,0.56,117,2.204,126,1.036,137,0.003,138,0.003,139,0.002,148,1.956,165,0.879,180,2.114,184,1.732,205,3.423,210,1.951,224,3.798,225,3.387,279,1.229,280,8.042,281,1.543,283,5.2,286,6.952,288,8.478,297,2.114,298,2.241,300,0.833,301,1.462,302,2.593,303,2.675,304,2.269,359,1.484,361,1.58,488,4.035,560,1.264,561,1.58,563,1.3,564,1.338,579,1.319,651,2.518,751,2.518,752,2.593,841,1.82,842,1.951,1083,5.453,1091,2.449,1230,3.437,1410,2.978,1411,2.765,1416,2.765,1418,3.682,1421,4.228,1498,3.437,1907,3.106,2005,3.256,2006,3.662,2074,3.662,2556,4.624,3234,3.965,3610,3.965,3756,9.329,3757,4.424,3758,7.304,3759,6.282,3760,6.282,3761,6.282,3762,6.282,3763,6.282,3764,6.282,3765,9.329,3766,8.724,3767,4.424,3768,9.329,3769,6.282,3770,8.724,3771,4.424,3772,6.282,3773,4.424,3774,4.424,3775,6.282,3776,4.424,3777,6.282,3778,4.424,3779,6.282,3780,4.424,3781,4.424,3782,4.424,3783,4.424,3784,4.424,3785,6.282,3786,4.424,3787,7.951,3788,4.424,3789,8.398,3790,4.424,3791,4.424,3792,6.282,3793,6.282,3794,4.424,3795,6.282,3796,6.282,3797,4.424,3798,4.424,3799,7.304,3800,4.424,3801,4.424,3802,4.424,3803,4.424,3804,4.424,3805,4.424,3806,4.424,3807,4.424,3808,4.424,3809,4.424,3810,4.424,3811,4.424,3812,4.424,3813,4.424,3814,4.424,3815,4.424]],["title/classes/ThirdMenu.html",[0,0.274,189,2.148]],["body/classes/ThirdMenu.html",[0,0.514,2,0.532,3,0.024,4,0.024,5,0.029,8,0.493,11,1.154,23,2.016,24,1.648,28,1.773,32,0.16,36,0.516,38,1.314,39,0.432,42,0.138,44,0.292,45,0.005,46,0.407,47,0.292,50,0.609,51,0.093,57,0.064,58,0.899,79,1.086,91,1.244,92,1.244,93,1.158,102,2.016,137,0.004,138,0.003,139,0.002,142,2.575,144,3.779,145,5.44,146,3.304,147,2.5,148,3.052,149,3.906,150,3.906,151,2.653,152,3.088,153,3.906,154,3.906,155,3.906,156,3.906,157,3.906,161,0.658,162,2.253,163,1.765,164,2.016,165,0.872,166,2.745,167,2.016,168,1.348,169,2.745,170,2.5,171,2.745,172,2.745,173,2.745,174,2.745,175,2.745,176,2.745,177,2.745,178,2.745,179,3.906,180,2.109,181,3.06,182,2.745,183,3.906,184,1.585,185,1.704,186,4.646,187,2.745,188,1.676,189,2.703,190,2.197,191,3.209,192,4.399,193,2.745,194,2.745,195,2.745,196,2.745,197,2.745,198,2.745,199,3.288,200,2.745,201,2.745,202,2.745,203,2.656,204,2.656,205,2.384,206,2.745,207,2.745,208,2.745,209,2.745,210,1.937,211,2.745,212,2.5,213,2.745,214,2.745,215,2.745,216,2.745,217,2.656,218,2.104,219,2.745,220,1.079,221,2.5,222,2.656,223,1.937,224,2.656,225,2.368,226,2.745,227,2.745,228,2.745,229,2.745,230,1.864,231,2.745,232,2.745,233,2.745,234,2.745,235,2.745,236,2.745,237,2.745,238,2.745,239,2.745,240,2.2,241,2.745,242,2.745,243,2.656,244,2.745,245,2.745,246,2.745,247,2.745,248,2.745,249,3.779,250,1.309,251,1.309,252,2.656,253,2.656,254,2.656,255,1.976,256,2.745,257,2.745,258,2.163,259,2.745,260,2.432,261,3.779,262,2.745,263,2.745,3816,3.936,3817,4.392]],["title/classes/ThirdMenuEntry.html",[0,0.274,186,2.911]],["body/classes/ThirdMenuEntry.html",[0,0.515,2,0.534,3,0.024,4,0.024,5,0.029,8,0.495,11,1.159,23,2.025,24,1.655,28,1.776,32,0.16,36,0.518,38,1.314,39,0.432,42,0.138,44,0.293,45,0.005,46,0.408,47,0.293,50,0.611,51,0.093,57,0.064,58,0.901,79,1.086,91,1.246,92,1.246,93,1.159,102,2.025,137,0.004,138,0.003,139,0.002,142,2.585,144,3.79,145,5.444,146,3.308,147,2.511,148,3.054,149,3.918,150,3.918,151,2.66,152,3.095,153,3.918,154,3.918,155,3.918,156,3.918,157,3.918,161,0.661,162,2.262,163,1.772,164,2.025,165,0.876,166,2.757,167,2.025,168,1.353,169,2.757,170,2.511,171,2.757,172,2.757,173,2.757,174,2.757,175,2.757,176,2.757,177,2.757,178,2.757,179,3.918,180,2.112,181,3.069,182,2.757,183,3.918,184,1.588,185,1.711,186,4.274,187,2.757,188,2.782,189,1.908,190,2.204,191,1.945,192,2.667,193,2.757,194,2.757,195,2.757,196,2.757,197,2.757,198,2.757,199,3.291,200,2.757,201,2.757,202,2.757,203,2.667,204,2.667,205,2.391,206,2.757,207,2.757,208,2.757,209,2.757,210,1.945,211,2.757,212,2.511,213,2.757,214,2.757,215,2.757,216,2.757,217,2.667,218,2.112,219,2.757,220,1.083,221,2.511,222,2.667,223,1.945,224,2.667,225,2.378,226,2.757,227,2.757,228,2.757,229,2.757,230,1.872,231,2.757,232,2.757,233,2.757,234,2.757,235,2.757,236,2.757,237,2.757,238,2.757,239,2.757,240,2.209,241,2.757,242,2.757,243,2.667,244,2.757,245,2.757,246,2.757,247,2.757,248,2.757,249,3.79,250,1.315,251,1.315,252,2.667,253,2.667,254,2.667,255,1.984,256,2.757,257,2.757,258,2.169,259,2.757,260,2.442,261,3.79,262,2.757,263,2.757,3816,3.953,3818,4.41]],["title/modules/ThirdpartyModule.html",[625,2.148,3819,3.858]],["body/modules/ThirdpartyModule.html",[0,0.385,3,0.038,4,0.047,5,0.055,36,0.82,45,0.005,51,0.121,57,0.045,73,3.203,107,2.079,137,0.003,138,0.004,139,0.003,300,1.314,304,3.578,314,2.854,315,2.754,316,2.854,317,2.854,318,2.854,319,2.854,320,2.574,321,2.414,322,2.854,323,2.854,324,2.854,325,2.707,326,2.854,327,2.803,328,2.854,329,2.854,330,2.854,331,1.809,332,2.854,333,2.172,380,3.379,625,3.018,627,3.495,628,3.971,629,5.53,630,4.09,631,3.667,640,4.975,641,4.219,643,4.575,647,4.575,652,5.304,655,4.09,662,4.898,708,5.776,3819,7.869,3820,6.252,3821,6.252,3822,6.252,3823,7.299,3824,6.976,3825,6.252]],["title/modules/ThirdpartyRoutingModule.html",[625,2.148,3823,3.655]],["body/modules/ThirdpartyRoutingModule.html",[0,0.401,3,0.04,4,0.048,5,0.057,36,0.855,45,0.005,51,0.118,57,0.047,107,2.167,137,0.004,138,0.004,139,0.004,180,1.762,264,1.483,300,1.37,314,2.975,315,2.871,316,2.975,317,2.975,318,2.975,319,2.975,320,2.683,321,2.517,322,2.975,323,2.975,324,2.975,325,2.822,326,2.975,327,2.922,328,2.975,329,2.975,330,2.975,331,1.885,332,2.975,380,2.965,627,3.643,631,3.822,643,3.92,647,4.691,694,5.352,696,6.404,697,6.03,698,4.14,701,5.352,1070,5.649,3823,6.404,3825,6.517,3826,7.272,3827,7.272]],["title/classes/ThirdsI18nLoader.html",[0,0.274,3828,4.111]],["body/classes/ThirdsI18nLoader.html",[0,0.342,2,0.526,3,0.024,4,0.024,5,0.028,8,0.488,11,1.141,17,2.345,24,1.629,28,2.133,32,0.125,33,0.675,34,0.177,38,0.542,39,0.199,42,0.195,44,0.412,45,0.005,46,0.471,47,0.412,51,0.118,57,0.047,79,1.103,126,0.616,137,0.002,138,0.003,139,0.002,146,1.603,158,2.405,161,0.929,163,1.745,165,1.231,168,2.419,180,2.211,181,2.127,184,2.202,188,1.657,189,3.128,191,4.284,218,2.969,220,1.067,230,4.047,250,1.848,279,2.19,281,1.523,297,1.052,300,0.818,301,1.435,407,1.173,461,1.822,462,1.313,463,1.295,560,1.241,561,1.552,579,1.295,588,2.176,651,2.473,668,2.228,669,2.228,714,3.596,728,3.259,751,2.473,752,2.546,841,1.796,859,2.405,876,1.994,877,2.176,976,2.626,1083,4.519,1085,3.374,1145,2.923,1198,2.734,1232,3.05,1363,2.923,1371,3.596,1490,3.05,1609,4.238,1676,3.05,1732,4.801,1752,3.596,1930,7.179,1949,3.05,1963,3.596,2144,4.238,2453,2.405,2960,6.007,2970,3.596,3350,5.617,3828,5.133,3829,3.893,3830,7.067,3831,6.2,3832,5.557,3833,4.343,3834,5.557,3835,4.343,3836,4.343,3837,6.48,3838,3.893,3839,3.893,3840,3.893,3841,3.893,3842,3.893,3843,3.893,3844,3.893,3845,3.893,3846,3.893,3847,5.557,3848,3.893,3849,3.893,3850,3.893,3851,3.893,3852,3.893,3853,5.557,3854,3.893,3855,3.893,3856,3.893,3857,3.893,3858,5.557,3859,3.893,3860,3.893,3861,3.893,3862,5.557,3863,3.893,3864,3.893,3865,3.893,3866,3.893,3867,3.893,3868,3.893,3869,3.893,3870,3.893,3871,3.893,3872,3.893,3873,3.893,3874,3.893,3875,3.893,3876,3.893,3877,3.893,3878,5.557,3879,3.893,3880,3.893,3881,3.893,3882,3.893,3883,3.893,3884,3.893,3885,3.893,3886,3.893,3887,3.893,3888,3.893,3889,5.557,3890,3.893,3891,3.893,3892,3.893,3893,3.893,3894,3.893,3895,3.893,3896,3.893,3897,3.893,3898,3.893,3899,3.893,3900,3.893,3901,3.893,3902,3.893,3903,3.197,3904,3.893,3905,3.596,3906,3.893,3907,3.893,3908,3.893,3909,3.893,3910,5.557,3911,3.893,3912,3.893,3913,3.893,3914,3.893,3915,3.893,3916,3.893,3917,3.596,3918,3.893,3919,3.893,3920,3.893,3921,3.893,3922,3.893,3923,6.48,3924,3.893,3925,3.893,3926,3.893,3927,3.893,3928,3.893,3929,3.893,3930,3.893]],["title/injectables/ThirdsService.html",[841,1.439,1732,2.749]],["body/injectables/ThirdsService.html",[0,0.29,3,0.019,4,0.019,5,0.023,8,0.39,11,1.667,17,2.38,24,1.302,28,2.058,32,0.188,33,0.378,34,0.142,35,0.314,38,0.791,39,0.159,42,0.298,44,0.604,45,0.005,46,0.612,47,0.604,49,0.414,50,0.338,51,0.111,57,0.041,79,1.129,126,0.492,137,0.002,138,0.003,139,0.002,146,1.28,158,1.921,160,2.762,161,1.199,163,1.394,165,1.26,168,2.171,180,2.074,181,3.106,184,2.143,188,1.324,189,2.744,191,4.402,218,2.517,220,0.852,230,3.853,250,1.566,279,2.556,281,1.291,297,2.2,300,0.654,301,1.146,407,0.937,461,2.079,462,1.049,463,1.034,560,0.991,561,1.239,579,1.034,588,1.738,651,1.975,668,1.779,669,1.779,714,2.872,728,2.762,751,1.975,752,2.034,841,1.522,842,1.53,859,1.921,876,1.593,877,1.738,976,2.098,1083,5,1085,2.695,1145,2.335,1198,2.318,1232,2.436,1363,2.335,1371,2.872,1490,2.436,1609,5.237,1676,2.436,1732,3.918,1752,2.872,1907,2.436,1930,6.623,1949,2.436,1963,2.872,2144,3.719,2453,1.921,2960,6.194,2970,2.872,3350,4.928,3828,2.872,3829,3.109,3830,5.685,3832,3.109,3834,3.109,3837,6.342,3838,3.109,3839,5.685,3840,5.685,3841,5.685,3842,3.109,3843,3.109,3844,3.109,3845,4.71,3846,3.109,3847,4.71,3848,4.71,3849,3.109,3850,3.109,3851,3.109,3852,3.109,3853,4.71,3854,3.109,3855,3.109,3856,3.109,3857,4.71,3858,4.71,3859,3.109,3860,4.71,3861,5.685,3862,6.342,3863,3.109,3864,3.109,3865,3.109,3866,3.109,3867,3.109,3868,3.109,3869,3.109,3870,3.109,3871,3.109,3872,3.109,3873,3.109,3874,3.109,3875,4.71,3876,3.109,3877,3.109,3878,4.71,3879,4.71,3880,5.685,3881,3.109,3882,3.109,3883,3.109,3884,3.109,3885,3.109,3886,3.109,3887,3.109,3888,4.71,3889,5.685,3890,3.109,3891,3.109,3892,4.71,3893,3.109,3894,3.109,3895,3.109,3896,3.109,3897,3.109,3898,3.109,3899,3.109,3900,3.109,3901,3.109,3902,3.109,3903,2.554,3904,3.109,3905,5.858,3906,3.109,3907,3.109,3908,3.109,3909,3.109,3910,4.71,3911,3.109,3912,3.109,3913,3.109,3914,3.109,3915,3.109,3916,3.109,3917,2.872,3918,4.71,3919,3.109,3920,3.109,3921,3.109,3922,4.71,3923,6.814,3924,3.109,3925,3.109,3926,3.109,3927,3.109,3928,3.109,3929,3.109,3930,3.109,3931,5.255,3932,5.255,3933,5.255,3934,5.255,3935,5.255,3936,5.255,3937,5.255,3938,5.255,3939,5.255,3940,5.255,3941,5.255,3942,3.469,3943,3.469,3944,3.469,3945,3.469,3946,3.469,3947,3.469,3948,3.469,3949,3.469,3950,3.469,3951,3.469,3952,3.469,3953,3.469,3954,3.469,3955,3.469,3956,3.469]],["title/classes/ThirdsServiceMock.html",[0,0.274,3957,4.451]],["body/classes/ThirdsServiceMock.html",[0,0.403,2,0.885,3,0.04,4,0.04,5,0.048,17,2.323,28,2.162,34,0.298,42,0.274,45,0.005,51,0.111,57,0.048,137,0.004,138,0.004,139,0.004,184,1.592,186,4.285,189,3.162,281,2.143,297,2.115,301,2.415,560,2.088,588,4.372,3905,8.002,3957,7.822,3958,7.309,3959,9.331,3960,7.309,3961,7.309,3962,7.309,3963,7.309,3964,7.309,3965,7.309,3966,7.309,3967,7.309,3968,7.309,3969,7.309,3970,7.309,3971,7.309,3972,7.309,3973,7.309,3974,7.309,3975,7.309,3976,7.309,3977,7.309]],["title/classes/Tick.html",[0,0.274,2566,2.911]],["body/classes/Tick.html",[0,0.495,2,0.716,3,0.032,4,0.032,5,0.038,7,2.462,8,1.068,10,2.322,16,3.585,32,0.192,33,0.977,34,0.241,35,0.457,36,0.996,37,1.637,38,1.158,39,0.27,40,1.491,42,0.266,44,0.393,45,0.005,46,0.385,47,0.393,49,0.705,50,0.576,51,0.114,52,0.557,55,3.128,56,2.894,57,0.062,58,0.85,71,2.96,77,1.644,83,3.372,88,2.759,116,3.272,126,1.084,137,0.003,138,0.004,139,0.003,258,2.045,266,2.566,401,2.716,430,1.664,493,2.732,543,4.246,550,4.35,833,4.483,1295,3.662,1317,5.147,1386,3.978,1445,3.574,1751,4.15,2551,4.952,2552,4.15,2553,4.15,2554,4.591,2555,6.963,2556,4.35,2557,4.591,2560,4.591,2561,3.828,2562,4.15,2563,3.828,2564,4.15,2565,4.591,2566,5.442,2567,4.591,2568,5.369,2569,4.591,2570,6.833,2571,6.833,2572,5.94,2573,5.94,2574,6.585,2575,5.629,2576,5.147,2577,4.591,2578,4.591,2579,6.598,2580,4.591,2581,3.978,2582,4.35,2583,4.952,2584,4.591,2585,4.591,2586,4.35,3978,7.647,3979,5.91,3980,5.91]],["title/classes/TickPayload.html",[0,0.274,2579,3.655]],["body/classes/TickPayload.html",[0,0.498,2,0.729,3,0.033,4,0.033,5,0.039,7,2.507,8,1.049,10,2.342,16,2.821,32,0.189,33,0.931,34,0.246,35,0.462,36,1.097,37,1.507,38,1.066,39,0.275,42,0.268,44,0.4,45,0.005,46,0.392,47,0.4,51,0.115,52,0.568,55,3.165,56,2.946,57,0.062,58,0.865,71,3.014,77,1.656,83,2.654,88,2.518,116,3.332,126,1.097,137,0.003,138,0.004,139,0.003,258,3.123,266,2.019,401,2.667,430,1.695,493,2.15,543,3.875,550,4.429,833,3.528,1295,3.705,1317,4.05,1386,4.05,1445,3.639,1751,4.225,2551,5.01,2552,4.225,2553,4.225,2554,4.675,2555,6.642,2556,4.429,2557,4.675,2560,4.675,2561,3.897,2562,4.225,2563,3.897,2564,4.225,2565,4.675,2566,5.473,2567,4.675,2568,5.432,2569,4.675,2570,6.643,2571,6.643,2572,4.675,2573,4.675,2574,6.642,2575,4.429,2576,4.05,2577,4.675,2578,4.675,2579,5.694,2580,7.011,2581,6.074,2582,6.872,2583,5.01,2584,4.675,2585,4.675,2586,4.429,3981,6.018,3982,6.018,3983,6.018,3984,6.018]],["title/injectables/TimeEffects.html",[801,4.111,841,1.439]],["body/injectables/TimeEffects.html",[0,0.284,3,0.028,4,0.028,5,0.034,8,0.579,10,2.325,17,2.401,28,2.182,32,0.172,34,0.21,35,0.417,39,0.235,42,0.267,44,0.343,45,0.005,46,0.335,47,0.343,49,0.833,50,0.68,51,0.128,52,0.486,55,3.24,56,2.522,57,0.034,99,3.992,117,2.247,126,1.204,137,0.003,138,0.003,139,0.003,146,1.901,164,2.365,165,1.686,167,2.365,180,1.692,184,1.849,223,3.913,279,2.464,300,0.97,401,2.613,441,2.829,537,1.811,543,4.253,551,3.974,560,1.471,561,1.84,563,1.514,564,1.558,579,1.535,801,5.78,841,2.022,842,2.272,861,3.764,873,2.777,874,2.642,876,2.365,877,4.445,898,4.977,918,3.22,1198,3.744,1207,5.78,1288,5.423,1338,4.833,1351,6.257,1359,4.699,1386,4.699,1409,3.792,1751,4.902,1787,5.78,1868,6.595,1895,2.932,1896,3.792,2551,5.129,2553,4.902,2561,5.129,2562,3.617,2566,4.642,2568,4.902,2570,5.139,2571,5.139,2583,3.336,2669,4.617,3144,4.617,3903,5.139,3985,5.151,3986,7.92,3987,7.92,3988,7.92,3989,6.982,3990,6.982,3991,6.982,3992,6.982,3993,5.151,3994,6.982,3995,6.982,3996,6.982,3997,8.49,3998,8.49,3999,6.982,4000,6.982,4001,5.151,4002,6.982,4003,6.982,4004,5.151,4005,5.151,4006,5.151]],["title/components/TimeFilterComponent.html",[264,1.013,400,1.719]],["body/components/TimeFilterComponent.html",[0,0.226,3,0.022,4,0.022,5,0.027,8,0.46,10,1.626,11,1.075,17,1.909,28,1.901,32,0.165,33,0.647,34,0.167,35,0.355,39,0.187,42,0.282,44,0.272,45,0.005,46,0.531,47,0.272,49,0.488,50,0.399,51,0.122,52,0.386,57,0.027,61,1.202,62,1.332,93,0.518,100,1.219,107,1.219,112,1.237,117,2.087,137,0.002,138,0.003,139,0.002,161,0.89,184,1.523,185,2.304,199,2.776,210,1.804,250,1.219,251,1.77,260,2.265,264,1.426,265,1.416,266,1.992,267,1.461,269,1.485,270,1.485,272,2.623,273,1.394,274,3.603,277,2.156,279,2.582,281,1.458,282,2.977,297,1.694,298,1.822,300,0.771,321,2.419,333,1.274,334,2.156,335,2.121,336,1.332,337,2.785,338,1.485,339,1.485,340,1.416,341,1.485,342,1.416,343,2.209,344,2.156,345,1.416,346,2.156,347,1.416,348,1.485,349,1.394,350,1.485,351,1.416,352,1.485,353,2.785,354,1.416,355,1.485,356,1.373,357,2.156,358,1.416,359,1.373,360,1.438,361,1.461,362,1.485,363,1.438,364,1.461,365,1.962,366,2.156,367,1.416,368,1.485,369,2.785,370,1.373,371,1.485,372,1.416,373,1.416,374,1.485,375,1.394,376,1.485,377,1.416,378,1.416,379,1.485,380,1.394,381,1.485,382,1.416,383,1.485,384,1.438,385,1.416,386,1.485,387,1.416,388,2.121,389,1.416,390,2.538,391,1.485,392,1.416,393,1.485,394,1.416,395,1.485,396,1.394,397,1.416,398,1.416,399,1.416,400,2.655,401,2.427,402,1.416,403,1.485,404,1.416,405,1.416,406,1.416,407,2.512,408,1.394,409,1.394,410,1.485,411,1.394,412,1.485,413,1.394,414,1.461,415,1.485,537,1.438,542,3.178,560,1.168,561,1.461,563,1.202,564,1.237,579,1.219,606,2.329,658,2.049,823,4.098,828,2.753,829,2.649,830,2.474,831,2.557,833,2.398,836,2.557,898,5.139,902,4.247,911,4.369,918,2.557,1091,2.265,1198,1.804,1295,2.844,1438,4.098,1442,4.227,1448,4.497,1464,3.712,1480,3.178,1481,4.613,1482,3.011,1483,2.872,1500,3.178,1502,3.178,1504,3.178,1512,3.178,1513,3.178,1523,3.666,1639,3.712,1818,6.738,1885,3.387,1890,3.011,2076,3.666,2233,3.011,2241,4.371,2272,3.387,2273,3.178,2275,3.178,2279,5.719,2485,4.169,2491,4.169,2597,2.753,2615,3.387,2670,3.178,2698,8.204,2699,8.204,3262,3.011,3707,5.788,3709,6.35,3716,3.387,3717,4.916,3719,3.387,3723,4.916,3726,3.387,3727,3.387,4007,6.991,4008,5.322,4009,4.091,4010,4.091,4011,4.091,4012,3.666,4013,5.938,4014,4.091,4015,4.091,4016,4.091,4017,5.938,4018,4.091,4019,4.091,4020,4.091,4021,4.091,4022,4.091,4023,4.091,4024,5.938,4025,4.091,4026,4.091,4027,4.091,4028,4.091,4029,5.938,4030,4.091,4031,4.091,4032,4.091,4033,4.091,4034,5.938,4035,5.938,4036,4.091,4037,4.091,4038,5.938,4039,5.938,4040,5.938]],["title/components/TimeLineComponent.html",[264,1.013,402,1.719]],["body/components/TimeLineComponent.html",[0,0.132,3,0.013,4,0.013,5,0.016,9,1.259,11,1.514,17,1.24,24,1.472,28,0.536,32,0.152,33,0.427,34,0.098,35,0.234,36,0.802,39,0.109,42,0.236,44,0.261,45,0.005,46,0.414,47,0.261,51,0.102,52,0.226,57,0.016,61,1.153,83,1.056,100,0.714,112,0.724,117,1.676,137,0.001,138,0.002,139,0.001,148,1.551,158,2.758,161,0.863,180,2.356,184,1.085,199,2.652,210,1.056,218,1.879,250,0.714,251,1.717,264,1.016,265,0.829,266,1.316,267,0.856,269,0.869,270,0.869,272,1.869,273,0.816,274,3.451,277,1.424,281,0.963,282,2.235,297,1.207,298,1.203,300,0.451,333,0.746,334,1.424,335,1.401,336,0.78,337,2.091,338,0.869,339,0.869,340,0.829,341,0.869,342,0.829,343,1.574,344,1.424,345,0.829,346,1.424,347,0.829,348,0.869,349,0.816,350,0.869,351,0.829,352,0.869,353,2.091,354,0.829,355,0.869,356,0.804,357,1.424,358,0.829,359,0.804,360,0.842,361,0.856,362,0.869,363,0.842,364,0.856,365,1.903,366,1.424,367,0.829,368,0.869,369,2.091,370,0.804,371,0.869,372,0.829,373,0.829,374,0.869,375,0.816,376,0.869,377,0.829,378,0.829,379,0.869,380,0.816,381,0.869,382,0.829,383,0.869,384,0.842,385,0.829,386,0.869,387,0.829,388,1.401,389,0.829,390,1.808,391,0.869,392,0.829,393,0.869,394,0.829,395,0.869,396,0.816,397,0.829,398,0.829,399,0.829,400,0.829,401,2.287,402,1.993,403,0.869,404,0.829,405,0.829,406,0.829,407,0.647,408,0.816,409,0.816,410,0.869,411,0.816,412,0.869,413,0.816,414,0.856,415,0.869,440,1.9,461,0.704,462,0.724,463,0.714,474,1.9,477,1.277,504,2.114,537,0.842,549,6.116,560,0.684,561,0.856,563,0.704,564,0.724,578,2.372,579,0.714,588,4.268,589,2.555,606,2.233,702,2.836,720,3.226,876,1.1,932,4.818,982,1.86,1000,1.86,1002,1.763,1030,4.302,1038,1.983,1091,1.326,1157,1.983,1295,3.836,1297,1.983,1298,6.444,1438,2.92,1448,3.376,1482,2.887,1546,2.146,1578,2.146,1609,2.299,1610,2.754,1611,2.887,1612,2.887,1613,2.887,1614,2.54,1618,2.887,1676,4.043,1978,3.515,2208,7.204,2210,8.252,2211,7.678,2229,7.563,2230,7.563,2231,8.188,2271,2.146,2453,1.326,2464,6.046,2485,4.461,2491,4.043,2508,2.146,2581,2.64,2596,2.146,2597,1.612,2602,2.146,2603,8.507,2604,2.146,2605,4.124,2606,3.515,2607,2.146,2608,1.983,2609,2.146,2610,2.146,2611,2.146,2615,5.649,2637,1.983,2693,6.976,2739,3.515,2851,3.247,2960,1.612,3000,2.146,3157,2.754,3163,3.498,3169,2.754,4041,2.395,4042,3.923,4043,8.372,4044,4.982,4045,3.923,4046,3.923,4047,2.395,4048,2.395,4049,3.923,4050,2.395,4051,3.923,4052,3.923,4053,3.923,4054,7.205,4055,4.982,4056,3.923,4057,3.923,4058,2.395,4059,2.395,4060,2.395,4061,2.395,4062,3.923,4063,2.395,4064,2.395,4065,2.395,4066,2.395,4067,2.395,4068,7.205,4069,6.354,4070,2.395,4071,7.205,4072,2.395,4073,2.395,4074,2.395,4075,2.395,4076,2.395,4077,2.395,4078,2.395,4079,2.395,4080,2.395,4081,2.395,4082,2.395,4083,2.395,4084,2.395,4085,2.395,4086,2.395,4087,2.395,4088,2.395,4089,2.395,4090,2.395,4091,2.395,4092,3.923,4093,3.923,4094,4.982,4095,6.354,4096,2.146,4097,3.923,4098,4.982,4099,2.395,4100,2.395,4101,2.395,4102,4.982,4103,3.923,4104,3.923,4105,2.395,4106,3.923,4107,2.395,4108,2.395,4109,2.395,4110,2.395,4111,2.395,4112,2.395,4113,2.395,4114,2.395,4115,2.395,4116,2.395,4117,6.824,4118,6.824,4119,6.824,4120,6.824,4121,3.923,4122,6.824,4123,2.395,4124,6.824,4125,6.354,4126,2.395,4127,2.395,4128,2.395,4129,3.923,4130,3.923,4131,2.395,4132,2.395,4133,2.395,4134,2.395,4135,2.395,4136,2.146,4137,2.395,4138,2.395,4139,2.395,4140,2.395,4141,2.395,4142,2.395,4143,3.923,4144,2.395,4145,2.395,4146,2.395,4147,3.923,4148,2.395,4149,2.395,4150,2.395,4151,2.395,4152,3.923,4153,4.982,4154,6.824,4155,2.395,4156,4.982,4157,3.923,4158,3.923,4159,3.923,4160,2.395,4161,3.923,4162,4.982,4163,2.395,4164,2.395,4165,2.395,4166,2.395,4167,2.395,4168,2.395,4169,2.395,4170,3.923,4171,2.395,4172,2.395,4173,2.395,4174,2.395,4175,2.395,4176,2.395,4177,2.395,4178,2.395]],["title/classes/TimeReference.html",[0,0.274,2561,3.216]],["body/classes/TimeReference.html",[0,0.291,2,0.638,3,0.029,4,0.029,5,0.034,32,0.186,34,0.215,38,0.999,39,0.241,42,0.295,44,0.612,45,0.005,46,0.6,47,0.612,50,0.835,51,0.09,57,0.052,58,0.757,79,0.988,137,0.004,138,0.003,139,0.003,148,1.639,158,3.923,180,2.231,184,2.05,185,3.108,255,3.603,258,3.466,279,2.557,281,1.74,297,2.231,401,1.504,588,2.637,720,3.41,930,4.975,1295,3.835,1981,3.875,2202,4.359,2418,4.719,2419,4.719,2422,5.866,2561,4.589,2563,3.41,2581,6.592,4179,4.719,4180,9.208,4181,7.085,4182,7.085,4183,8.566,4184,5.265,4185,8.566,4186,8.008,4187,8.94,4188,7.677,4189,5.265,4190,8.008,4191,5.265,4192,5.265,4193,5.265,4194,5.265,4195,5.265,4196,5.265,4197,5.265,4198,5.265,4199,5.265,4200,7.085,4201,5.265,4202,8.566,4203,7.085,4204,5.265,4205,5.265,4206,5.265,4207,5.265,4208,5.265,4209,5.265,4210,5.265,4211,5.265,4212,5.265,4213,5.265,4214,5.265,4215,5.265,4216,5.265,4217,5.265,4218,7.085,4219,5.265,4220,5.265,4221,5.265,4222,5.265,4223,5.265,4224,5.265,4225,5.265,4226,5.265,4227,5.265,4228,5.265,4229,5.265,4230,5.265,4231,5.265,4232,5.265,4233,5.265,4234,5.265,4235,7.085,4236,4.719,4237,4.719,4238,4.719,4239,4.719,4240,4.719,4241,4.719,4242,4.719,4243,4.719,4244,4.719,4245,5.265,4246,5.265]],["title/classes/TimeSpan.html",[0,0.274,2576,3.342]],["body/classes/TimeSpan.html",[0,0.429,2,0.735,3,0.033,4,0.033,5,0.04,8,0.964,11,1.595,24,2.277,32,0.123,38,1.302,39,0.392,42,0.191,44,0.404,45,0.005,46,0.395,47,0.404,51,0.099,57,0.062,58,1.234,79,1.068,91,0.825,92,0.825,93,0.768,137,0.005,138,0.004,139,0.003,146,3.168,160,3.19,164,2.786,181,2.971,184,1.322,190,2.134,258,3.475,301,2.005,398,2.1,461,1.783,536,4.261,588,3.04,720,3.93,1030,2.483,1377,5.659,1416,3.793,1418,5.307,1421,6.094,1609,3.558,1610,4.261,1611,4.467,1612,4.467,1613,4.467,1614,6.062,1615,4.714,1616,4.714,1617,4.467,1618,4.467,1621,4.714,2214,4.261,2485,5.461,2491,6.027,2576,5.778,2790,5.725,2791,5.024,2792,5.024,2793,6.319,2794,5.024,2795,6.319,2796,5.024,3157,4.261,3175,6.44,3176,5.024,3177,5.439,3179,5.439,3180,5.439,3181,5.024,3182,5.024,3183,5.439,4247,6.069,4248,6.069]],["title/interfaces/TimeState.html",[724,2.148,739,4.111]],["body/interfaces/TimeState.html",[3,0.04,4,0.04,5,0.048,32,0.189,34,0.299,35,0.522,45,0.005,51,0.119,55,3.956,56,3.585,57,0.057,126,1.401,137,0.004,138,0.004,139,0.004,180,1.774,185,2.841,724,3.167,725,4.053,739,7.731,1295,4.472,2561,6.617,2562,5.14,2563,4.741,2581,6.285,4249,7.321,4250,9.882,4251,7.321,4252,7.321,4253,7.321]],["title/interfaces/TimelineState.html",[724,2.148,740,4.111]],["body/interfaces/TimelineState.html",[3,0.033,4,0.033,5,0.039,7,2.511,11,2.512,13,4.07,32,0.189,34,0.246,35,0.463,45,0.005,51,0.109,55,3.168,57,0.05,79,1.025,126,1.411,137,0.003,138,0.004,139,0.003,148,2.664,161,1.433,180,1.46,185,2.339,190,2.722,199,2.053,258,2.68,365,2.559,461,2.894,462,1.822,463,1.796,465,2.711,474,3.795,491,3.349,500,3.005,508,3.839,513,3.005,607,5.7,609,6.077,702,4.408,724,2.607,725,3.336,740,7.083,762,5.401,1377,4.84,1676,5.437,1779,6.94,1780,8.371,1781,8.713,1782,8.093,1783,6.411,1785,6.94,1786,6.94,1787,6.411,1788,6.94,1791,4.682,1814,5.401,1817,5.401,2342,6.411,4254,6.026,4255,7.744,4256,7.744,4257,7.744,4258,7.744,4259,7.744,4260,6.026]],["title/interceptors/TokenInjector.html",[1951,4.451,3600,3.858]],["body/interceptors/TokenInjector.html",[0,0.37,3,0.037,4,0.037,5,0.044,10,1.836,17,2.237,32,0.167,33,0.73,34,0.274,39,0.411,42,0.282,44,0.551,45,0.005,46,0.539,47,0.551,51,0.119,57,0.044,91,0.911,92,0.911,93,1.188,137,0.003,138,0.004,139,0.003,180,2.177,184,1.804,188,2.558,281,2.034,297,2.007,300,1.263,560,1.915,651,3.816,841,2.399,1096,4.342,1929,5.55,1949,6.59,1954,6.008,3600,6.433,4261,6.704,4262,6.704,4263,8.281,4264,8.281,4265,6.704,4266,8.281,4267,10.136,4268,6.704,4269,8.281,4270,9.385,4271,6.704,4272,6.704,4273,8.281,4274,6.704,4275,6.704,4276,8.281,4277,6.704,4278,6.704,4279,6.704,4280,6.704,4281,6.704]],["title/classes/TransitionalThirdWithItSVersion.html",[0,0.274,4282,4.111]],["body/classes/TransitionalThirdWithItSVersion.html",[0,0.326,2,0.492,3,0.022,4,0.022,5,0.026,8,0.457,10,1.113,17,2.178,28,2.077,32,0.141,34,0.166,35,0.353,36,0.899,39,0.186,42,0.219,44,0.27,45,0.005,46,0.265,47,0.27,51,0.125,52,0.383,57,0.026,77,0.746,79,0.98,117,1.71,126,0.838,137,0.003,138,0.003,139,0.002,146,1.5,165,1.936,167,1.866,168,2.346,170,2.313,180,2.377,184,2.2,185,1.577,189,1.758,191,3.739,210,1.792,223,3.583,255,3.655,279,2.256,300,0.766,301,1.343,441,2.106,461,2.046,462,1.229,463,1.211,466,1.725,471,2.508,500,1.577,513,1.577,551,2.313,560,1.161,561,1.452,563,1.194,564,1.229,579,1.211,668,2.084,669,2.084,730,2.54,813,3.157,841,1.712,858,2.853,859,3.272,873,2.191,874,2.084,876,1.866,877,2.036,932,2.894,1030,2.849,1091,2.25,1198,3.372,1209,5.126,1225,5.41,1317,2.735,1328,2.853,1338,4.353,1359,2.735,1410,2.735,1411,2.54,1490,2.853,1609,2.382,1641,2.25,1642,3.827,1732,3.272,1739,2.735,1852,3.364,2147,2.991,2318,4.591,2453,2.25,2856,2.382,2858,2.25,2960,2.735,3190,3.364,3532,3.574,3536,2.632,3537,3.574,3538,3.574,3540,2.457,3542,3.574,3546,5.147,3551,3.827,3616,3.157,3903,2.991,4282,4.893,4283,3.642,4284,4.064,4285,4.064,4286,5.91,4287,3.642,4288,5.297,4289,3.642,4290,3.642,4291,3.642,4292,3.642,4293,3.642,4294,3.642,4295,3.642,4296,3.642,4297,3.642,4298,3.642,4299,3.642,4300,3.642,4301,3.642,4302,3.642,4303,3.642,4304,6.242,4305,3.642,4306,3.642,4307,3.642,4308,3.642,4309,3.642,4310,3.642,4311,6.242,4312,5.297,4313,3.642,4314,3.642,4315,3.642,4316,3.642,4317,3.642,4318,3.642,4319,3.642,4320,3.642,4321,3.642,4322,3.642,4323,3.642,4324,3.642,4325,3.642,4326,3.642,4327,3.642,4328,3.642,4329,3.642,4330,3.642,4331,3.642,4332,3.642,4333,3.642,4334,5.297,4335,3.642,4336,3.642,4337,3.642,4338,3.642,4339,3.642,4340,3.642,4341,3.642,4342,3.642,4343,3.642,4344,3.642,4345,3.642,4346,5.297,4347,3.642,4348,3.642,4349,3.642,4350,3.642,4351,3.642,4352,3.642,4353,3.642,4354,3.642,4355,3.642,4356,3.642,4357,3.642,4358,3.642,4359,5.297,4360,3.642,4361,3.642,4362,3.642,4363,3.642,4364,6.242,4365,3.642,4366,5.297,4367,3.642,4368,5.297,4369,3.642,4370,5.297,4371,3.642,4372,5.297,4373,3.642,4374,3.642,4375,5.297,4376,3.642,4377,3.642,4378,3.642,4379,3.642,4380,3.642,4381,3.642,4382,3.642,4383,5.297,4384,3.642,4385,3.642,4386,3.642,4387,3.642,4388,3.642,4389,5.297,4390,3.642,4391,3.642,4392,5.297,4393,3.642,4394,3.642]],["title/injectables/TranslateEffects.html",[813,3.858,841,1.439]],["body/injectables/TranslateEffects.html",[0,0.266,3,0.017,4,0.017,5,0.02,8,0.54,10,1.318,17,2.287,28,2.004,32,0.186,34,0.126,35,0.287,39,0.141,42,0.288,44,0.576,45,0.005,46,0.564,47,0.576,49,0.795,50,0.649,51,0.119,52,0.292,57,0.02,77,0.567,79,0.909,117,1.877,126,0.945,137,0.003,138,0.002,139,0.002,146,1.141,165,1.995,167,1.419,168,0.949,170,1.76,180,2.287,184,2.172,185,1.2,189,2.554,191,2.604,210,1.364,223,3.737,255,4.175,279,2.353,281,1.181,297,2.053,300,0.582,301,1.022,441,2.412,461,2.245,462,0.935,463,0.922,466,1.312,471,2.506,500,1.867,513,2.291,537,1.087,551,2.738,560,0.883,561,1.104,563,0.908,564,0.935,579,0.922,668,1.586,669,1.586,730,3.007,813,3.737,841,1.393,842,1.364,858,3.377,859,3.688,861,3.591,873,1.667,874,1.586,876,1.419,877,1.549,932,2.355,1030,2.415,1091,1.712,1198,3.638,1209,5.625,1225,4.587,1317,3.238,1328,3.377,1338,4.696,1359,3.238,1410,2.081,1411,1.933,1490,3.377,1609,3.461,1641,3.269,1642,4.314,1732,3.688,1739,2.081,1852,3.982,2147,2.276,2318,3.737,2453,3.269,2856,1.813,2858,1.712,2960,3.974,3190,4.888,3532,3.57,3536,2.002,3537,3.57,3538,3.57,3540,1.87,3542,2.909,3546,5.369,3551,3.824,3616,2.402,3903,3.541,3917,2.56,4282,4.888,4283,2.771,4287,2.771,4288,5.292,4289,2.771,4290,2.771,4291,2.771,4292,2.771,4293,5.292,4294,4.311,4295,4.311,4296,4.311,4297,4.311,4298,4.311,4299,4.311,4300,4.311,4301,4.311,4302,4.311,4303,4.311,4304,5.292,4305,2.771,4306,2.771,4307,4.311,4308,2.771,4309,2.771,4310,2.771,4311,6.468,4312,4.311,4313,4.311,4314,5.292,4315,2.771,4316,2.771,4317,2.771,4318,2.771,4319,4.311,4320,2.771,4321,2.771,4322,2.771,4323,2.771,4324,5.292,4325,4.311,4326,4.311,4327,5.292,4328,4.311,4329,4.311,4330,4.311,4331,4.311,4332,4.311,4333,4.311,4334,5.97,4335,4.311,4336,4.311,4337,4.311,4338,4.311,4339,2.771,4340,2.771,4341,2.771,4342,2.771,4343,4.311,4344,2.771,4345,2.771,4346,4.311,4347,2.771,4348,4.311,4349,4.311,4350,4.311,4351,4.311,4352,4.311,4353,4.311,4354,2.771,4355,2.771,4356,2.771,4357,2.771,4358,2.771,4359,4.311,4360,2.771,4361,2.771,4362,4.311,4363,5.292,4364,5.292,4365,2.771,4366,4.311,4367,2.771,4368,4.311,4369,2.771,4370,4.311,4371,2.771,4372,4.311,4373,2.771,4374,2.771,4375,4.311,4376,2.771,4377,2.771,4378,2.771,4379,2.771,4380,2.771,4381,2.771,4382,2.771,4383,4.311,4384,2.771,4385,2.771,4386,2.771,4387,2.771,4388,2.771,4389,4.311,4390,2.771,4391,4.311,4392,5.292,4393,2.771,4394,2.771,4395,4.81,4396,4.81,4397,4.81,4398,4.81,4399,4.81,4400,4.81,4401,4.81,4402,4.81,4403,4.81,4404,4.81,4405,3.092,4406,3.092,4407,3.092,4408,3.092,4409,3.092,4410,3.092,4411,3.092,4412,3.092,4413,3.092,4414,3.092,4415,3.092,4416,3.092,4417,3.092,4418,3.092,4419,3.092,4420,3.092]],["title/interfaces/TranslationState.html",[724,2.148,741,4.111]],["body/interfaces/TranslationState.html",[3,0.041,4,0.041,5,0.049,32,0.19,34,0.305,35,0.529,45,0.005,51,0.095,57,0.058,79,0.949,126,1.336,137,0.004,138,0.004,139,0.004,148,2.753,165,1.974,167,3.431,180,1.811,609,5.888,724,3.233,725,4.138,741,7.798,3373,6.699,3375,6.699,4421,7.474,4422,9.737,4423,7.474,4424,7.474,4425,7.474,4426,7.474]],["title/classes/TranslationUpToDate.html",[0,0.274,3542,3.003]],["body/classes/TranslationUpToDate.html",[0,0.524,2,0.77,3,0.035,4,0.035,5,0.041,8,1.105,10,2.194,32,0.201,33,1.056,34,0.259,35,0.479,37,1.546,38,1.227,42,0.2,45,0.005,49,0.758,50,0.62,51,0.102,52,0.599,57,0.064,58,0.914,77,1.609,79,0.682,126,1.136,137,0.003,138,0.004,139,0.003,146,3.503,165,1.591,167,2.918,240,3.184,499,2.6,500,2.467,603,3.844,730,5.756,1641,3.519,2674,4.278,3532,5.304,3533,4.278,3534,4.679,3536,4.117,3537,5.304,3538,5.304,3539,4.463,3540,5.304,3541,4.463,3542,5.569,3543,4.463,3544,4.463,3545,4.679,3546,4.278,3547,5.896,3548,4.679,3549,4.679,3550,4.679,3551,4.117,4427,6.357]],["title/classes/TryToLogIn.html",[0,0.274,19,2.677]],["body/classes/TryToLogIn.html",[0,0.502,1,3.617,2,0.482,3,0.022,4,0.022,5,0.049,6,2.334,7,1.658,8,1.105,9,4.856,10,1.09,11,1.99,12,3.531,13,4.423,14,4.216,15,2.266,16,3.226,17,2.095,18,4.302,19,4.537,20,3.52,21,2.488,22,2.407,23,3.699,24,2.582,25,4.162,26,4.302,27,3.296,28,1.539,29,3.52,30,4.035,31,3.639,32,0.201,33,0.99,34,0.163,35,0.348,36,1.022,37,1.532,38,1.152,39,0.266,40,1.004,41,3.314,42,0.216,44,0.265,45,0.005,46,0.259,47,0.265,49,0.475,50,0.388,51,0.088,52,0.375,53,3.617,54,2.092,55,2.816,56,1.949,57,0.061,58,0.572,59,2.266,60,3.81,61,1.17,62,1.895,63,3.81,64,2.092,65,4.162,66,3.292,67,5.089,68,4.439,69,3.81,70,2.407,71,2.916,72,4.082,73,3.16,74,4.461,75,3.81,76,1.411,77,1.478,78,2.146,79,0.864,80,2.146,81,2.042,82,2.204,83,1.756,84,2.488,85,2.488,86,3.639,87,3.52,88,1.895,89,3.52,90,2.488,91,1.212,92,1.212,93,1.128,94,2.488,95,2.407,96,3.639,97,3.639,98,3.413,99,2.619,100,1.735,101,3.52,102,3.476,103,4.302,104,4.132,105,3.918,106,2.518,107,1.735,108,3.52,109,2.334,110,2.266,111,4.439,112,1.204,113,2.488,114,2.266,115,2.407,116,3.223,117,1.43,118,2.488,119,2.488,120,4.733,121,2.407,122,2.488,123,3.52,124,2.488,125,3.52,126,0.565,127,2.488,128,2.407,129,2.488,130,2.407,131,2.488,132,2.916,133,3.52,134,1.572,135,2.488,136,2.334,137,0.002,138,0.003,139,0.002,457,1.76,4428,5.822,4429,3.981]],["title/classes/TryToLogOut.html",[0,0.274,72,2.677]],["body/classes/TryToLogOut.html",[0,0.505,1,3.672,2,0.495,3,0.022,4,0.022,5,0.05,6,2.396,7,1.703,8,1.109,9,4.886,10,1.119,11,2.015,12,3.53,13,4.464,14,4.255,15,2.327,16,3.275,17,2.114,18,4.367,19,4.39,20,3.588,21,2.554,22,2.471,23,3.738,24,2.621,25,4.225,26,4.367,27,3.346,28,1.563,29,3.588,30,4.096,31,3.709,32,0.196,33,0.997,34,0.167,35,0.355,36,0.957,37,1.352,38,1.159,39,0.187,41,3.378,42,0.128,45,0.005,49,0.488,50,0.398,51,0.089,52,0.385,53,3.672,54,2.148,55,2.858,56,2.001,57,0.061,58,0.588,59,2.327,60,3.868,61,1.201,62,1.932,63,3.868,64,2.148,65,4.225,66,3.347,67,5.136,68,4.495,69,3.868,70,2.471,71,2.973,72,4.39,73,3.208,74,4.508,75,3.868,76,1.438,77,1.494,78,2.203,79,0.873,80,2.203,81,2.096,82,2.263,83,1.802,84,2.554,85,2.554,86,3.709,87,3.588,88,1.932,89,3.588,90,2.554,91,1.22,92,1.22,93,1.136,94,2.554,95,2.471,96,2.554,97,2.554,98,2.396,99,1.839,100,1.218,101,2.471,102,3.52,103,4.367,104,3.583,105,3.978,106,1.768,107,1.218,108,2.471,109,2.396,110,2.327,111,5.137,112,1.794,113,3.709,114,3.378,115,3.588,116,3.285,117,1.457,118,2.554,119,2.554,120,4.792,121,2.471,122,2.554,123,3.588,124,2.554,125,3.588,126,0.58,127,2.554,128,2.471,129,2.554,130,2.471,131,2.554,132,2.973,133,3.588,134,1.614,135,2.554,136,2.396,137,0.002,138,0.003,139,0.002,4430,4.087]],["title/components/TypeAheadSettingsComponent.html",[264,1.013,404,1.719]],["body/components/TypeAheadSettingsComponent.html",[0,0.192,3,0.019,4,0.019,5,0.023,28,1.179,32,0.202,33,0.574,34,0.142,35,0.315,39,0.159,42,0.321,44,0.595,45,0.005,46,0.607,47,0.595,49,0.846,50,0.886,51,0.09,52,0.328,57,0.023,61,1.024,79,0.761,100,1.038,107,2.113,112,1.053,117,1.968,137,0.002,138,0.003,139,0.002,148,2.207,151,2.237,161,0.79,218,2.525,250,1.038,251,1.571,264,1.297,265,1.206,266,1.769,267,1.244,268,1.536,269,1.265,270,1.265,272,2.386,273,1.187,274,3.564,275,2.471,277,1.914,279,2.558,281,1.295,282,3.109,297,2.362,298,2.788,300,0.656,321,1.824,333,1.084,334,1.914,335,1.883,336,1.134,337,2.574,338,1.265,339,1.265,340,1.206,341,1.265,342,1.206,343,2.009,344,1.914,345,1.206,346,1.914,347,1.206,348,1.265,349,1.187,350,1.265,351,3.334,352,1.265,353,2.574,354,1.206,355,1.265,356,1.169,357,1.914,358,1.206,359,1.169,360,1.225,361,1.244,362,1.265,363,1.225,364,1.244,365,1.151,366,1.914,367,1.206,368,1.265,369,2.574,370,1.169,371,1.265,372,1.206,373,1.206,374,1.265,375,1.187,376,1.265,377,1.206,378,1.206,379,1.265,380,1.187,381,1.265,382,1.206,383,1.265,384,1.225,385,1.206,386,1.265,387,1.206,388,2.272,389,3.433,390,2.308,391,1.265,392,1.206,393,1.265,394,1.206,395,1.265,396,1.187,397,1.206,398,1.824,399,1.206,400,1.206,401,1.506,402,1.206,403,1.265,404,2.454,405,3.188,406,1.206,407,0.941,408,1.187,409,1.187,410,1.265,411,1.187,412,1.265,413,1.187,414,1.244,415,1.265,537,1.225,563,1.024,564,1.053,710,2.581,902,3.926,1219,4.592,1377,2.177,1438,3.728,1439,4.979,1441,4.979,1442,4.288,1443,6.81,1444,4.979,1445,4.288,1446,6.16,1447,4.979,1448,4.697,1449,5.626,1450,5.626,1451,4.979,1452,4.979,1453,4.979,1458,3.701,1460,3.701,1463,3.701,1464,4.432,1466,3.701,1470,4.465,1485,2.446,1624,2.344,1791,3.187,1823,6.874,2521,2.564,2522,2.564,2523,2.564,2528,2.564,2529,2.564,2530,2.564,2531,2.564,2532,2.564,2533,2.564,2534,2.564,2535,2.564,2536,2.564,2537,2.564,2538,2.564,2539,2.564,2540,2.564,2543,2.564,2547,4.095,3427,2.884,3428,3.122,3429,4.364,3430,5.699,3431,3.122,3492,2.884,3660,3.122,3662,4.724,3731,3.122,3732,2.884,3733,3.122,4431,5.271,4432,6.359,4433,3.483,4434,3.483,4435,3.483,4436,5.271,4437,3.483,4438,3.483,4439,3.483,4440,3.483,4441,3.483,4442,3.483,4443,3.483,4444,3.483,4445,3.483,4446,3.483,4447,3.483,4448,3.483,4449,3.483,4450,3.483]],["title/components/TypeFilterComponent.html",[264,1.013,406,1.719]],["body/components/TypeFilterComponent.html",[0,0.212,3,0.021,4,0.031,5,0.037,8,0.432,17,1.977,28,1.974,32,0.195,33,0.618,34,0.157,35,0.339,36,0.452,39,0.176,42,0.277,44,0.256,45,0.005,46,0.517,47,0.256,49,0.459,50,0.375,51,0.12,52,0.363,57,0.025,61,1.13,62,1.252,93,0.487,100,1.146,107,1.692,112,1.163,117,2.041,137,0.002,138,0.003,139,0.002,161,0.851,184,1.469,199,3.007,210,1.696,250,1.146,251,1.692,264,1.376,265,1.331,266,1.904,267,1.374,268,1.696,269,1.396,270,1.396,272,2.531,273,1.31,274,3.589,275,2.66,277,2.06,279,2.503,281,1.394,282,2.89,297,1.634,298,1.741,300,0.724,314,1.573,315,1.518,316,1.573,317,1.573,318,1.573,319,1.573,320,1.419,321,2.577,322,1.573,323,1.573,324,1.573,325,1.492,326,1.573,327,1.545,328,1.573,329,1.573,330,1.573,331,0.997,332,1.573,333,1.197,334,2.06,335,2.027,336,1.252,337,2.704,338,1.396,339,1.396,340,1.331,341,1.396,342,1.331,343,2.131,344,2.06,345,1.331,346,2.06,347,1.331,348,1.396,349,1.31,350,1.396,351,1.331,352,1.396,353,2.704,354,1.331,355,1.396,356,1.29,357,2.06,358,1.331,359,1.29,360,1.352,361,1.374,362,1.396,363,1.352,364,1.374,365,1.271,366,2.06,367,1.331,368,1.396,369,2.704,370,1.29,371,1.396,372,1.331,373,1.331,374,1.396,375,1.31,376,1.396,377,1.331,378,1.331,379,1.396,380,1.31,381,1.396,382,1.331,383,1.396,384,1.352,385,1.331,386,1.396,387,1.331,388,2.027,389,1.331,390,2.449,391,1.396,392,1.331,393,1.396,394,1.331,395,1.396,396,1.31,397,1.331,398,1.331,399,1.331,400,1.331,401,1.621,402,1.331,403,1.396,404,1.331,405,1.331,406,2.577,407,2.434,408,1.31,409,1.31,410,1.396,411,1.31,412,1.396,413,1.31,414,1.374,415,1.396,479,2.129,537,1.352,560,1.098,561,1.374,563,1.13,564,1.163,579,1.146,606,2.189,614,2.987,617,2.49,622,3.446,658,1.926,823,3.327,828,2.588,829,2.49,830,2.325,831,2.403,833,2.254,836,2.403,902,4.123,911,4.965,967,3.183,1091,2.129,1198,1.696,1267,2.987,1377,4.216,1438,3.954,1442,4.079,1448,4.366,1464,2.403,1480,2.987,1481,4.409,1482,2.83,1483,2.7,1500,2.987,1502,2.987,1504,2.987,1512,2.987,1513,2.987,1639,3.547,1713,6.675,1818,6.632,1890,2.83,1981,2.83,2233,2.83,2241,4.177,2258,3.446,2272,3.183,2273,2.987,2275,2.987,2279,5.229,2409,5.584,2453,2.129,2597,2.588,2670,2.987,2696,8.076,2697,8.076,2790,2.83,2793,2.83,2795,2.83,3107,3.446,3262,2.83,3499,7.119,3706,6.046,3707,5.584,3709,6.166,3716,3.183,3717,5.584,3719,3.183,3722,3.446,3723,3.183,3726,3.183,3727,3.183,3732,3.183,4008,3.446,4012,3.446,4451,6.746,4452,3.845,4453,3.845,4454,3.845,4455,3.845,4456,5.675,4457,3.845,4458,3.845,4459,3.845,4460,3.845,4461,3.845,4462,3.845,4463,3.845,4464,3.845,4465,3.845,4466,3.845,4467,3.845,4468,3.845,4469,3.845,4470,3.845,4471,3.845,4472,3.845,4473,3.845,4474,3.845,4475,3.845,4476,5.675,4477,5.675,4478,5.675,4479,5.675,4480,5.675,4481,7.944,4482,3.845,4483,6.746,4484,5.675,4485,5.675,4486,6.746,4487,5.675,4488,3.845]],["title/classes/UpdateALightCard.html",[0,0.274,487,2.19]],["body/classes/UpdateALightCard.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,3.306,488,2.941,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,1.867,515,2.745,516,1.867,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,4489,5.732,4490,3.898]],["title/classes/UpdateAnAction.html",[0,0.274,488,2.148]],["body/classes/UpdateAnAction.html",[0,0.547,2,0.472,3,0.021,4,0.021,5,0.025,8,1.133,10,2.188,11,1.024,12,1.37,32,0.205,33,1.083,34,0.159,35,0.343,36,0.674,37,1.663,38,1.245,39,0.405,40,0.983,42,0.213,44,0.259,45,0.005,46,0.254,47,0.259,49,0.465,50,0.38,51,0.095,52,0.368,57,0.065,58,0.56,62,1.269,76,0.944,77,1.687,79,0.729,88,1.269,91,1.267,92,1.267,93,1.18,126,1.225,134,1.539,137,0.002,138,0.003,139,0.002,161,1.397,165,0.774,168,1.759,205,2.187,220,0.957,301,1.288,331,1.486,425,1.462,427,2.141,430,1.614,435,1.501,436,0.983,437,0.97,438,1.082,439,1.082,440,1.487,441,2.415,443,1.113,444,1.179,454,2.998,455,3.442,456,1.789,457,1.739,460,1.867,461,2.347,462,1.179,463,1.162,464,1.827,465,1.753,466,1.654,467,3.059,468,4.642,469,2.998,470,1.753,471,2.886,472,2.632,473,1.827,474,1.487,475,3.059,476,2.998,477,1.269,478,2.886,479,3.134,480,1.654,481,2.998,482,1.789,483,2.998,484,2.998,485,1.827,486,1.827,487,2.998,488,3.243,489,2.998,490,1.654,491,1.686,492,2.998,493,1.392,494,2.998,495,1.827,496,2.998,497,1.789,498,2.998,499,1.595,500,1.513,501,1.867,502,1.867,503,1.867,504,1.654,505,1.867,506,1.867,507,1.867,508,1.539,509,1.867,510,1.867,511,1.867,512,1.867,513,1.513,514,1.867,515,1.867,516,2.745,517,1.867,518,1.867,519,1.867,520,1.867,521,1.867,522,1.867,523,1.867,524,1.789,4491,5.732,4492,3.898]],["title/classes/UpdateAnActionFailure.html",[0,0.274,489,2.19]],["body/classes/UpdateAnActionFailure.html",[0,0.548,2,0.481,3,0.022,4,0.022,5,0.026,8,1.135,10,2.205,11,1.044,12,1.397,32,0.203,33,1.086,34,0.162,35,0.347,37,1.602,38,1.248,39,0.415,42,0.183,45,0.005,49,0.474,50,0.387,51,0.096,52,0.375,57,0.065,58,0.571,62,1.293,76,0.963,77,1.694,79,0.737,88,1.293,91,1.273,92,1.273,93,1.185,126,1.232,134,1.569,137,0.002,138,0.003,139,0.002,161,1.403,165,0.789,168,1.784,205,2.218,220,0.976,301,1.313,331,1.507,425,1.491,427,2.161,430,1.637,435,1.518,436,1.003,437,0.989,438,1.104,439,1.104,440,1.516,441,2.434,443,1.135,444,1.202,454,3.032,455,3.156,456,1.824,460,1.903,461,2.366,462,1.202,463,1.184,464,1.863,465,1.788,466,1.686,467,3.093,468,4.654,469,3.032,470,1.788,471,2.918,472,2.669,473,1.863,474,1.516,475,3.093,476,3.032,477,1.293,478,2.918,479,3.155,480,1.686,481,3.032,482,1.824,483,3.032,484,3.032,485,1.863,486,1.863,487,3.032,488,2.974,489,3.337,490,1.686,491,1.719,492,3.032,493,1.419,494,3.032,495,1.863,496,3.032,497,1.824,498,3.032,499,1.626,500,1.542,501,1.903,502,1.903,503,1.903,504,1.686,505,1.903,506,1.903,507,1.903,508,1.569,509,1.903,510,1.903,511,1.903,512,1.903,513,1.542,514,1.903,515,1.903,516,1.903,517,1.903,518,2.784,519,1.903,520,1.903,521,1.903,522,1.903,523,1.903,524,1.824,4493,5.814]],["title/classes/UpdateArchiveFilter.html",[0,0.274,886,3.003]],["body/classes/UpdateArchiveFilter.html",[0,0.517,2,0.677,3,0.031,4,0.031,5,0.036,8,1.089,10,2.021,32,0.205,33,1.041,34,0.228,35,0.441,36,0.867,37,1.729,38,1.209,39,0.256,40,1.411,42,0.259,44,0.372,45,0.005,46,0.364,47,0.372,49,0.667,50,0.545,51,0.105,52,0.528,57,0.063,58,0.804,77,1.719,79,0.6,91,1.299,92,1.299,93,1.209,106,3.796,126,1.171,137,0.004,138,0.004,139,0.003,161,1.106,165,1.465,230,2.374,258,1.936,331,1.45,343,2.96,407,1.511,432,3.784,435,1.822,436,1.411,437,1.392,438,1.554,439,1.554,457,2.111,461,1.644,462,1.692,463,1.667,477,1.821,479,2.099,508,2.209,551,3.185,851,4.839,866,3.016,879,3.623,880,4.991,881,4.839,885,3.497,886,5.307,1011,3.623,1014,3.928,1015,5.159,1016,3.623,1017,4.991,1018,5.18,1019,3.928,1020,3.928,1021,3.765,1022,3.928,1023,3.928,1024,3.765,4494,7.378,4495,5.594]],["title/classes/UpdateArchivePage.html",[0,0.274,881,2.911]],["body/classes/UpdateArchivePage.html",[0,0.517,2,0.677,3,0.031,4,0.031,5,0.036,8,1.089,10,2.021,32,0.205,33,1.041,34,0.228,35,0.441,36,0.867,37,1.729,38,1.209,39,0.256,40,1.411,42,0.259,44,0.372,45,0.005,46,0.364,47,0.372,49,0.667,50,0.545,51,0.105,52,0.528,57,0.063,58,0.804,77,1.719,79,0.6,91,1.299,92,1.299,93,1.209,106,3.796,126,1.171,137,0.004,138,0.004,139,0.003,161,1.106,165,1.465,230,2.374,258,1.936,331,1.45,343,2.96,407,1.511,432,3.784,435,1.822,436,1.411,437,1.392,438,1.554,439,1.554,457,2.111,461,1.644,462,1.692,463,1.667,477,1.821,479,2.099,508,2.209,551,3.185,851,4.839,866,3.016,879,3.623,880,4.991,881,5.145,885,3.497,886,4.991,1011,3.623,1014,3.928,1015,5.159,1016,3.623,1017,4.991,1018,3.928,1019,3.928,1020,3.928,1021,3.765,1022,5.18,1023,3.928,1024,3.765,4496,7.378,4497,5.594]],["title/classes/UpdateTimeReference.html",[0,0.274,2583,3.216]],["body/classes/UpdateTimeReference.html",[0,0.497,2,0.725,3,0.033,4,0.033,5,0.039,7,2.493,8,1.09,10,2.467,16,2.805,32,0.201,33,0.981,34,0.244,35,0.461,36,1.002,37,1.643,38,1.162,39,0.273,40,1.51,42,0.268,44,0.398,45,0.005,46,0.39,47,0.398,49,0.714,50,0.583,51,0.115,52,0.564,55,3.154,56,2.93,57,0.062,58,0.861,71,2.998,77,1.652,83,2.639,88,2.776,116,3.313,126,1.093,137,0.003,138,0.004,139,0.003,258,2.071,266,2.008,401,2.725,430,1.685,457,2.181,493,2.138,543,4.272,550,4.405,833,3.508,1295,3.692,1317,4.028,1386,4.028,1445,4.661,1751,4.202,2551,4.992,2552,4.202,2553,4.202,2554,4.649,2555,6.996,2556,4.405,2557,4.649,2560,4.649,2561,3.876,2562,4.202,2563,3.876,2564,4.202,2565,4.649,2566,5.28,2567,4.649,2568,5.412,2569,4.649,2570,6.277,2571,6.277,2572,4.649,2573,4.649,2574,5.988,2575,4.405,2576,4.028,2577,4.649,2578,4.649,2579,4.405,2580,4.649,2581,4.028,2582,4.405,2583,5.523,2584,4.649,2585,4.649,2586,4.405,4498,7.709,4499,5.984,4500,5.984]],["title/classes/UpdateTranslation.html",[0,0.274,3537,3.003]],["body/classes/UpdateTranslation.html",[0,0.518,2,0.743,3,0.034,4,0.034,5,0.04,8,1.097,10,2.146,32,0.207,33,1.046,34,0.251,35,0.468,36,0.921,37,1.693,38,1.218,39,0.281,40,1.549,42,0.271,44,0.408,45,0.005,46,0.4,47,0.408,49,0.732,50,0.598,51,0.1,52,0.579,57,0.064,58,0.883,77,1.583,79,0.658,126,1.111,137,0.003,138,0.004,139,0.003,146,3.466,165,1.556,167,2.818,240,3.075,457,2.207,499,2.511,500,2.382,603,3.712,730,5.683,1641,3.398,2674,4.131,3532,5.219,3533,4.131,3534,4.518,3536,3.975,3537,5.498,3538,5.219,3539,4.31,3540,5.219,3541,4.31,3542,5.219,3543,4.31,3544,4.31,3545,5.767,3546,4.131,3547,4.518,3548,4.518,3549,4.518,3550,4.518,3551,3.975,4501,7.835,4502,6.138]],["title/classes/UpdateTranslationFailed.html",[0,0.274,3540,3.003]],["body/classes/UpdateTranslationFailed.html",[0,0.518,2,0.743,3,0.034,4,0.034,5,0.04,8,1.097,10,2.146,32,0.207,33,1.046,34,0.251,35,0.468,36,0.921,37,1.693,38,1.218,39,0.281,40,1.549,42,0.271,44,0.408,45,0.005,46,0.4,47,0.408,49,0.732,50,0.598,51,0.1,52,0.579,57,0.064,58,0.883,77,1.583,79,0.658,126,1.111,137,0.003,138,0.004,139,0.003,146,3.466,165,1.556,167,2.818,240,3.075,457,2.207,499,2.511,500,2.382,603,3.712,730,5.683,1641,3.398,2674,4.131,3532,5.219,3533,4.131,3534,4.518,3536,3.975,3537,5.219,3538,5.219,3539,4.31,3540,5.498,3541,4.31,3542,5.219,3543,4.31,3544,4.31,3545,4.518,3546,4.131,3547,4.518,3548,4.518,3549,4.518,3550,5.767,3551,3.975,4503,7.835,4504,6.138]],["title/classes/UpdateTranslationSuccessful.html",[0,0.274,3538,3.003]],["body/classes/UpdateTranslationSuccessful.html",[0,0.518,2,0.743,3,0.034,4,0.034,5,0.04,8,1.097,10,2.146,32,0.207,33,1.046,34,0.251,35,0.468,36,0.921,37,1.693,38,1.218,39,0.281,40,1.549,42,0.271,44,0.408,45,0.005,46,0.4,47,0.408,49,0.732,50,0.598,51,0.1,52,0.579,57,0.064,58,0.883,77,1.583,79,0.658,126,1.111,137,0.003,138,0.004,139,0.003,146,3.466,165,1.556,167,2.818,240,3.075,457,2.207,499,2.511,500,2.382,603,3.712,730,5.683,1641,3.398,2674,4.131,3532,5.219,3533,4.131,3534,4.518,3536,3.975,3537,5.219,3538,5.498,3539,4.31,3540,5.219,3541,4.31,3542,5.219,3543,4.31,3544,4.31,3545,4.518,3546,4.131,3547,4.518,3548,5.767,3549,4.518,3550,4.518,3551,3.975,4505,7.835,4506,6.138]],["title/classes/UpdatedSubscription.html",[0,0.274,481,2.19]],["body/classes/UpdatedSubscription.html",[0,0.548,2,0.481,3,0.022,4,0.022,5,0.026,8,1.135,10,2.205,11,1.044,12,1.397,32,0.203,33,1.086,34,0.162,35,0.347,37,1.602,38,1.248,39,0.415,42,0.183,45,0.005,49,0.474,50,0.387,51,0.096,52,0.375,57,0.065,58,0.571,62,1.293,76,0.963,77,1.694,79,0.737,88,1.293,91,1.273,92,1.273,93,1.185,126,1.232,134,1.569,137,0.002,138,0.003,139,0.002,161,1.403,165,0.789,168,1.784,205,2.218,220,0.976,301,1.313,331,1.507,425,1.491,427,2.161,430,1.637,435,1.518,436,1.003,437,0.989,438,1.104,439,1.104,440,1.516,441,2.434,443,1.135,444,1.202,454,3.032,455,3.156,456,1.824,460,1.903,461,2.366,462,1.202,463,1.184,464,1.863,465,1.788,466,1.686,467,3.093,468,4.654,469,3.032,470,1.788,471,2.918,472,2.669,473,1.863,474,1.516,475,3.093,476,3.032,477,1.293,478,2.918,479,3.155,480,1.686,481,3.337,482,1.824,483,3.032,484,3.032,485,1.863,486,1.863,487,3.032,488,2.974,489,3.032,490,1.686,491,1.719,492,3.032,493,1.419,494,3.032,495,1.863,496,3.032,497,1.824,498,3.032,499,1.626,500,1.542,501,1.903,502,1.903,503,1.903,504,1.686,505,1.903,506,1.903,507,1.903,508,1.569,509,1.903,510,2.784,511,1.903,512,1.903,513,1.542,514,1.903,515,1.903,516,1.903,517,1.903,518,1.903,519,1.903,520,1.903,521,1.903,522,1.903,523,1.903,524,1.824,4507,5.814]],["title/classes/User.html",[0,0.274,66,1.746]],["body/classes/User.html",[0,0.421,2,0.924,3,0.042,4,0.042,5,0.05,32,0.154,36,1.053,38,1.185,39,0.409,42,0.24,44,0.508,45,0.005,46,0.497,47,0.508,57,0.05,66,3.148,79,1.086,104,3.915,137,0.004,138,0.004,139,0.004,1301,6.956,1302,6.956,4508,7.634,4509,6.842,4510,7.634,4511,6.842,4512,6.842,4513,6.842]],["title/classes/UserApplicationNotRegistered.html",[0,0.274,2087,3.003]],["body/classes/UserApplicationNotRegistered.html",[0,0.516,2,0.67,3,0.03,4,0.03,5,0.036,8,1.087,27,3.933,32,0.205,33,1.038,34,0.226,35,0.438,36,0.861,37,1.726,38,1.206,39,0.253,40,1.397,42,0.258,44,0.368,45,0.005,46,0.361,47,0.368,49,0.661,50,0.54,51,0.093,52,0.522,57,0.063,58,0.796,66,3.641,76,1.342,77,1.714,91,1.27,92,1.27,93,1.182,126,1.351,137,0.003,138,0.004,139,0.003,435,1.813,436,1.397,437,1.378,438,1.538,439,1.538,457,2.1,543,4.554,1092,3.348,1167,4.295,1895,3.152,2081,4.966,2082,3.586,2085,3.887,2086,4.966,2087,5.285,2088,4.966,2089,4.966,2090,2.985,2091,3.586,2092,3.887,2093,5.144,2094,3.887,2095,3.887,2096,3.887,2097,3.586,4514,7.327,4515,5.537]],["title/classes/UserApplicationRegistered.html",[0,0.274,2086,3.003]],["body/classes/UserApplicationRegistered.html",[0,0.516,2,0.67,3,0.03,4,0.03,5,0.036,8,1.087,27,3.933,32,0.205,33,1.038,34,0.226,35,0.438,36,0.861,37,1.726,38,1.206,39,0.253,40,1.397,42,0.258,44,0.368,45,0.005,46,0.361,47,0.368,49,0.661,50,0.54,51,0.093,52,0.522,57,0.063,58,0.796,66,3.641,76,1.342,77,1.714,91,1.27,92,1.27,93,1.182,126,1.351,137,0.003,138,0.004,139,0.003,435,1.813,436,1.397,437,1.378,438,1.538,439,1.538,457,2.1,543,4.554,1092,3.348,1167,4.295,1895,3.152,2081,4.966,2082,3.586,2085,3.887,2086,5.285,2087,4.966,2088,4.966,2089,4.966,2090,2.985,2091,3.586,2092,5.144,2093,3.887,2094,3.887,2095,3.887,2096,3.887,2097,3.586,4516,7.327,4517,5.537]],["title/classes/UserContext.html",[0,0.274,2308,3.858]],["body/classes/UserContext.html",[0,0.418,2,0.916,3,0.042,4,0.042,5,0.049,32,0.153,38,1.219,39,0.407,42,0.238,44,0.503,45,0.005,46,0.493,47,0.503,57,0.049,79,1.102,81,4.569,104,3.881,137,0.004,138,0.004,139,0.004,1301,6.92,1302,6.92,2308,6.92,2424,6.781,4509,6.781,4511,6.781,4512,6.781,4513,6.781,4518,8.909,4519,7.567,4520,7.567]],["title/injectables/UserEffects.html",[809,4.111,841,1.439]],["body/injectables/UserEffects.html",[0,0.229,1,3.706,3,0.023,4,0.023,5,0.027,8,1.048,17,2.287,27,2.876,28,2.087,32,0.166,34,0.17,35,0.359,39,0.19,42,0.257,44,0.276,45,0.005,46,0.271,47,0.276,49,0.922,50,0.753,51,0.119,52,0.392,57,0.027,59,2.365,66,3.577,81,3.08,117,2.098,126,1.096,137,0.002,138,0.003,139,0.002,165,0.825,180,2.261,184,2.116,223,4.052,279,1.668,300,0.783,401,1.715,441,2.478,499,2.457,537,1.461,543,4.674,560,1.187,561,1.484,563,1.221,564,1.256,579,1.238,589,3.962,606,3.418,809,4.971,841,1.739,842,1.832,850,6.002,852,4.971,858,5.424,859,5.165,861,4.165,873,2.24,874,2.131,876,1.907,877,2.081,1092,2.512,1167,3.52,1198,4.212,1328,5.424,1338,5.134,1895,2.365,1896,3.058,2081,5.165,2086,4.956,2087,4.264,2088,5.326,2089,4.264,2091,5.84,2097,2.69,2453,3.325,3231,5.382,3601,6.483,3647,3.723,4521,4.154,4522,7.052,4523,7.052,4524,7.052,4525,4.154,4526,6.005,4527,7.726,4528,6.005,4529,6.005,4530,6.005,4531,6.924,4532,6.005,4533,6.005,4534,6.005,4535,6.005,4536,4.154,4537,6.005,4538,6.005,4539,6.005,4540,7.726,4541,7.726,4542,6.005,4543,8.542,4544,6.005,4545,6.005,4546,6.005,4547,6.005,4548,6.005,4549,6.005,4550,4.154,4551,6.005,4552,9.018,4553,6.005,4554,6.005,4555,4.154,4556,7.726,4557,6.005,4558,6.005,4559,4.154,4560,4.154,4561,4.154]],["title/injectables/UserService.html",[841,1.439,3601,3.655]],["body/injectables/UserService.html",[0,0.351,3,0.035,4,0.035,5,0.041,7,2.648,17,2.363,32,0.186,34,0.259,35,0.479,38,1.094,39,0.366,42,0.289,44,0.583,45,0.005,46,0.571,47,0.583,51,0.121,57,0.041,66,3.408,79,1.018,99,3.604,137,0.003,138,0.004,139,0.003,184,1.745,281,1.967,297,1.941,300,1.197,560,1.816,578,3.844,579,1.895,651,3.619,751,3.619,752,3.726,841,2.321,842,2.803,1083,6.15,1084,5.262,1092,3.844,1110,6.632,1111,6.632,1907,4.463,3601,5.896,3675,5.697,4531,7.18,4562,6.357,4563,8.772,4564,8.772,4565,8.772,4566,8.011,4567,8.011,4568,6.357,4569,8.011,4570,6.357,4571,6.357,4572,8.011,4573,6.357,4574,6.357,4575,6.357]],["title/interfaces/UserState.html",[724,2.148,742,4.111]],["body/interfaces/UserState.html",[3,0.041,4,0.041,5,0.049,32,0.18,34,0.308,35,0.531,45,0.005,57,0.058,79,1.014,137,0.004,138,0.004,139,0.004,148,2.943,180,1.827,185,2.926,199,2.569,724,3.261,725,4.174,742,7.827,1167,5.839,4576,7.54,4577,9.96,4578,7.54]],["title/modules/UtilitiesModule.html",[625,2.148,639,3.342]],["body/modules/UtilitiesModule.html",[0,0.365,3,0.036,4,0.045,5,0.054,36,0.778,45,0.005,51,0.119,57,0.043,73,3.773,107,1.974,137,0.003,138,0.004,139,0.003,300,1.247,304,3.396,314,2.709,315,2.614,316,2.709,317,2.709,318,2.709,319,2.709,320,2.443,321,2.291,322,2.709,323,2.709,324,2.709,325,2.569,326,2.709,327,2.661,328,2.709,329,2.709,330,2.709,331,1.717,332,2.709,333,2.061,336,2.155,394,3.559,409,3.504,625,2.864,627,3.317,628,3.769,629,5.404,630,3.881,631,4.697,639,6.853,640,4.817,641,4.004,643,3.57,647,4.43,652,5.136,655,3.881,713,5.934,979,5.144,1263,5.482,4579,5.934,4580,5.934,4581,5.934,4582,6.621,4583,6.621,4584,6.621,4585,6.621,4586,6.621]],["title/pipes/XAxisTickFormatPipe.html",[1198,2.19,2685,3.858]],["body/pipes/XAxisTickFormatPipe.html",[0,0.226,3,0.023,4,0.023,5,0.027,9,3.125,24,2.231,32,0.141,33,0.446,42,0.22,44,0.465,45,0.005,46,0.531,47,0.465,49,0.71,50,0.957,51,0.089,57,0.027,79,1.095,83,3.386,137,0.002,138,0.003,139,0.002,180,1.86,184,2.268,273,1.397,281,1.007,297,1.696,300,0.772,331,1.542,470,3.454,578,5.141,579,1.222,898,4.103,918,2.562,930,4.175,1030,3.478,1198,2.623,1295,2.848,1416,3.717,1418,5.817,2185,7.039,2208,4.619,2222,3.673,2464,5.964,2566,4.501,2685,4.619,2708,6.881,2709,6.881,2710,6.881,3157,4.175,3378,7.62,4096,5.33,4136,3.673,4587,4.099,4588,4.099,4589,5.947,4590,5.947,4591,10.044,4592,4.099,4593,8.502,4594,7.677,4595,8.502,4596,4.099,4597,5.947,4598,4.099,4599,5.947,4600,5.947,4601,5.947,4602,5.947,4603,4.099,4604,5.947,4605,4.099,4606,5.947,4607,6.999,4608,6.999,4609,6.999,4610,10.136,4611,5.947,4612,8.152,4613,6.999,4614,6.999,4615,5.947,4616,5.947,4617,5.947,4618,5.947,4619,6.999,4620,5.947,4621,5.947,4622,7.677,4623,4.099,4624,4.099,4625,4.099,4626,4.099,4627,6.999,4628,6.999,4629,4.099,4630,4.099,4631,4.099,4632,4.099,4633,7.677,4634,5.947,4635,5.947,4636,4.099,4637,4.099,4638,4.099,4639,4.099,4640,4.099,4641,4.099,4642,5.947]],["title/dependencies.html",[628,3.405,4643,4.132]],["body/dependencies.html",[4,0.035,32,0.13,45,0.005,52,0.763,53,3.391,54,3.391,117,1.584,137,0.003,138,0.004,139,0.003,210,2.845,300,1.215,302,4.74,303,3.901,304,4.147,405,2.233,443,1.843,465,2.902,560,1.843,628,3.673,640,3.782,645,5.952,646,5.678,655,3.782,658,3.232,668,4.53,669,3.309,673,5.341,674,5.341,676,5.341,677,6.861,678,6.694,681,5.341,682,5.341,683,5.341,698,3.673,729,4.033,744,4.53,874,3.309,1089,5.341,1090,6.694,1295,3.873,1928,4.343,2319,5.341,2563,4.178,2703,5.783,2704,5.783,3691,5.783,4644,6.452,4645,10.07,4646,6.452,4647,6.452,4648,6.452,4649,6.452,4650,6.452,4651,6.452,4652,6.452,4653,6.452,4654,8.086,4655,9.535,4656,6.452,4657,6.452,4658,6.452,4659,6.452,4660,6.452,4661,6.452,4662,6.452,4663,6.452,4664,6.452,4665,6.452,4666,6.452,4667,6.452,4668,6.452,4669,6.452,4670,6.452,4671,6.452,4672,8.086,4673,6.452,4674,6.452,4675,6.452,4676,6.452,4677,6.452,4678,6.452,4679,6.452]],["title/miscellaneous/enumerations.html",[4680,3.21,4681,5.361]],["body/miscellaneous/enumerations.html",[1,1.705,3,0.018,6,1.902,8,0.768,10,2.446,11,0.853,12,3.14,19,1.749,27,2.915,34,0.132,45,0.005,50,1.031,59,2.842,60,1.796,61,1.788,62,1.981,63,1.796,64,1.705,65,3.68,66,3.39,67,4.712,68,4.006,69,1.796,70,1.962,71,3.048,72,1.749,73,2.794,74,1.796,75,1.796,76,2.127,78,2.691,80,2.691,81,2.56,82,2.764,88,1.056,106,1.403,126,1.188,134,1.281,137,0.002,138,0.002,139,0.002,142,1.902,144,3.019,146,2.723,148,1.01,161,1.498,168,1.532,188,1.905,240,1.625,249,3.019,250,0.967,251,0.967,252,1.962,253,1.962,254,1.962,255,1.459,331,1.578,343,2.462,365,2.011,401,2.107,407,1.644,418,1.749,419,1.902,423,2.842,424,1.749,425,1.873,426,1.625,427,2.754,428,1.796,429,1.796,430,2.421,431,1.705,432,3.784,433,1.796,434,1.796,435,1.792,436,2.048,437,2.021,438,2.164,439,2.164,440,2.322,441,2.231,442,1.902,454,1.431,455,1.489,456,2.292,461,0.953,466,2.119,467,1.459,468,4.52,469,1.431,470,1.459,471,1.377,472,1.489,473,1.521,474,1.905,475,1.459,476,1.431,477,2.402,478,1.377,479,3.045,480,1.377,481,1.431,482,1.489,483,1.431,484,1.431,485,1.521,486,1.521,487,1.431,488,1.403,489,1.431,490,1.377,491,1.403,492,1.431,493,1.159,494,1.431,495,1.521,496,1.431,497,1.489,498,1.431,499,2.042,500,1.937,543,3.696,551,1.847,572,2.027,588,1.625,603,1.962,620,2.278,702,2.842,710,4.543,720,2.101,727,4.909,728,4.824,730,4.271,823,1.902,824,2.52,830,3.019,832,3.878,833,1.902,834,2.685,851,1.902,879,3.233,880,1.962,881,1.902,886,1.962,888,2.278,889,2.685,890,4.474,919,4.474,920,2.907,921,2.907,922,2.907,923,2.907,924,2.907,925,2.907,926,2.907,927,2.907,1011,2.101,1015,3.804,1016,2.101,1017,1.962,1072,2.685,1093,4.133,1167,2.927,1372,2.388,1377,3.12,1407,3.36,1409,3.675,1476,1.847,1607,2.685,1614,3.233,1622,4.133,1623,2.52,1624,2.183,1641,1.796,1677,2.183,1833,2.907,1834,4.474,1838,4.133,1847,2.685,1895,2.842,1981,2.388,2005,2.388,2035,2.101,2036,2.101,2058,2.907,2059,4.474,2061,2.907,2062,2.907,2074,4.133,2081,1.962,2082,2.101,2086,1.962,2087,1.962,2088,1.962,2089,1.962,2090,2.691,2091,2.101,2139,3.464,2141,1.847,2453,1.796,2551,2.101,2552,2.278,2564,3.505,2566,2.927,2568,3.505,2583,2.101,2667,1.847,2668,3.019,2674,2.183,2773,2.907,2790,3.675,2793,4.479,2795,4.479,2816,2.907,2817,2.907,2818,2.907,2819,2.907,2820,2.907,2841,2.278,2852,2.027,2856,2.927,2857,1.847,2858,1.796,2859,1.902,2860,1.902,2861,1.902,2877,2.027,2881,1.902,2882,1.902,2883,3.941,2884,1.902,2885,1.902,3157,2.278,3163,2.278,3164,2.52,3168,4.133,3169,2.278,3175,2.685,3176,5.658,3181,4.133,3182,2.685,3376,2.907,3381,2.907,3494,4.474,3532,1.962,3533,2.183,3536,3.233,3537,1.962,3538,1.962,3539,2.278,3540,1.962,3541,2.278,3542,1.962,3543,2.278,3544,2.278,4179,2.907,4188,4.474,4236,2.907,4237,2.907,4238,2.907,4239,2.907,4240,2.907,4241,2.907,4242,2.907,4243,2.907,4244,2.907,4680,2.52,4681,2.907,4682,4.474,4683,2.907,4684,2.907,4685,2.907,4686,3.244,4687,2.907,4688,6.125,4689,2.907,4690,3.244,4691,3.244,4692,3.244,4693,2.907,4694,3.244,4695,2.907,4696,3.244,4697,2.907,4698,2.907,4699,3.244,4700,3.244,4701,2.907,4702,2.907,4703,4.992]],["title/index.html",[34,0.203,4704,4.451]],["body/index.html",[2,0.507,45,0.005,73,1.922,100,2.111,112,2.142,137,0.002,138,0.003,139,0.002,225,3.819,265,2.451,266,1.405,304,2.147,333,1.303,340,3.055,342,2.451,345,2.451,347,2.451,349,2.413,351,2.451,354,3.055,356,2.962,358,2.451,359,2.962,363,2.49,367,2.451,370,2.962,372,3.055,373,2.451,375,3.008,377,2.451,378,2.451,380,2.413,382,2.451,384,2.49,385,2.451,387,2.451,389,2.451,392,2.451,394,3.055,396,2.413,397,2.451,399,2.451,400,2.451,402,2.451,404,2.451,406,2.451,408,1.427,409,3.008,411,2.413,413,2.413,538,5.214,588,2.097,625,1.811,626,7.411,627,2.097,628,2.383,629,2.532,630,2.454,631,2.2,632,3.752,633,3.752,634,3.752,635,3.752,636,5.214,637,7.495,638,6.051,639,6.37,640,3.54,641,2.532,697,2.711,725,2.318,751,4.032,842,1.846,846,4.587,898,4.152,1042,7.731,1043,3.752,1044,3.752,1045,3.752,1046,5.214,1047,7.15,1096,4.587,1198,1.846,1732,3.921,1985,3.752,1986,3.752,1988,3.752,1989,3.752,1990,5.214,2018,5.214,2214,2.94,2608,3.466,2620,5.214,2680,8.048,2681,3.752,2682,3.752,2683,3.752,2684,3.752,2685,5.502,2686,5.214,3597,3.752,3598,3.752,3599,5.214,3600,5.502,3601,5.214,3648,7.731,3649,3.752,3650,3.752,3651,3.752,3652,5.214,3684,3.752,3685,3.752,3819,6.653,3820,3.752,3821,3.752,3822,3.752,3823,5.214,4579,3.752,4580,3.752,4581,3.752,4704,3.752,4705,4.187,4706,4.187,4707,4.187,4708,4.187,4709,4.187]],["title/modules.html",[627,3.411]],["body/modules.html",[45,0.004,137,0.004,138,0.004,139,0.004,490,4.192,626,5.38,627,3.661,636,5.38,637,5.38,638,5.38,639,4.919,646,7.217,677,7.985,1042,5.678,1046,5.38,1047,5.132,2680,5.678,2686,5.38,3648,5.678,3652,5.38,3819,5.678,3823,5.38,4710,10.279,4711,10.469,4712,9.878]],["title/routes.html",[697,4.41]],["body/routes.html",[45,0.005,137,0.004,138,0.005,139,0.004,697,5.322]],["title/miscellaneous/typealiases.html",[4680,3.21,4713,5.981]],["body/miscellaneous/typealiases.html",[1,3.123,6,3.484,19,3.204,32,0.12,34,0.243,45,0.005,60,3.29,63,3.29,69,3.29,72,3.204,74,3.29,75,3.29,136,4.499,137,0.003,138,0.004,139,0.003,142,3.484,203,4.641,204,3.594,418,3.204,419,3.484,424,3.204,426,2.977,428,3.29,429,3.29,431,3.123,433,3.29,434,3.29,435,2.139,453,4.641,454,2.621,455,2.728,456,3.523,467,2.673,469,2.621,471,2.522,475,2.673,476,2.621,478,2.522,481,2.621,483,2.621,484,2.621,487,2.621,488,2.571,489,2.621,492,2.621,494,2.621,496,2.621,498,2.621,524,3.523,572,3.714,823,3.484,824,4.617,837,4.173,840,6.353,851,3.484,880,3.594,881,3.484,886,3.594,1011,3.849,1017,3.594,1024,5.165,1476,3.383,2035,3.849,2036,3.849,2081,3.594,2082,3.849,2086,3.594,2087,3.594,2088,3.594,2089,3.594,2097,4.97,2141,3.383,2551,3.849,2552,4.173,2566,3.484,2583,3.849,2586,5.649,2667,3.383,2841,4.173,2848,5.649,2852,3.714,2857,3.383,2858,3.29,2859,3.484,2860,3.484,2861,3.484,2876,4.97,2877,3.714,2881,3.484,2882,3.484,2884,3.484,2885,3.484,2893,4.97,3163,4.173,3164,4.617,3169,4.173,3173,6.353,3532,3.594,3533,4,3537,3.594,3538,3.594,3540,3.594,3542,3.594,3551,4.97,4680,4.617,4682,5.326,4683,5.326,4684,5.326,4685,5.326,4687,5.326,4688,5.326,4689,5.326,4693,5.326,4695,5.326,4697,5.326,4698,5.326,4701,5.326,4702,5.326,4714,5.943]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1030,"title":{},"body":{"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0${value}`.slice",{"_index":2198,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["0.3.0",{"_index":4651,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":4244,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.25",{"_index":4670,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":3496,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.8.29",{"_index":4679,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":588,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1)?location.pathname",{"_index":1283,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["1.0.14",{"_index":4671,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":4665,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":4652,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":4677,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1981,"title":{},"body":{"injectables/CardService.html":{},"classes/DateTimeNgb.html":{},"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["10.1.0",{"_index":4659,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":618,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["1000",{"_index":1095,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["11.0.1",{"_index":4656,"title":{},"body":{"dependencies.html":{}}}],["1100",{"_index":4100,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["112",{"_index":4708,"title":{},"body":{"index.html":{}}}],["12",{"_index":2608,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{},"index.html":{}}}],["14",{"_index":4705,"title":{},"body":{"index.html":{}}}],["1400",{"_index":4099,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16",{"_index":4105,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":3102,"title":{},"body":{"components/IconComponent.html":{}}}],["1m",{"_index":2676,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["2",{"_index":720,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/DateTimeNgb.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["2*60*60*1000",{"_index":1943,"title":{},"body":{"injectables/CardService.html":{}}}],["2.0",{"_index":326,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["2.0.1",{"_index":4672,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":4667,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":4661,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":4669,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":4664,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4101,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["2018",{"_index":316,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["24",{"_index":4707,"title":{},"body":{"index.html":{}}}],["2px",{"_index":4484,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2214,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"classes/DateTimeNgb.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"index.html":{}}}],["3.6.0",{"_index":4675,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4709,"title":{},"body":{"index.html":{}}}],["30px",{"_index":1725,"title":{},"body":{"components/CardComponent.html":{}}}],["32px",{"_index":3101,"title":{},"body":{"components/IconComponent.html":{}}}],["36",{"_index":4706,"title":{},"body":{"index.html":{}}}],["3600",{"_index":4242,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["362",{"_index":3568,"title":{},"body":{"components/ResizableComponent.html":{}}}],["4",{"_index":2851,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":4654,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":4666,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":4668,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":4662,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1714,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1419,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["404",{"_index":3230,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["5",{"_index":591,"title":{"classes/HandleUnexpectedError-5.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{}}}],["5.8.1",{"_index":4653,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1422,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":2040,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["5px",{"_index":1716,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":2605,"title":{"classes/HandleUnexpectedError-6.html":{}},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["6.3.3",{"_index":4673,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":4240,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["60000",{"_index":2644,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["600000",{"_index":1956,"title":{},"body":{"injectables/CardService.html":{}}}],["64px",{"_index":3100,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":2611,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["7.1.0",{"_index":4655,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":4645,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":4647,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":4128,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["8",{"_index":1157,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/TimeLineComponent.html":{}}}],["8px",{"_index":615,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["90",{"_index":3158,"title":{},"body":{"components/InfoComponent.html":{}}}],["9999px",{"_index":2295,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["_",{"_index":1091,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(tmpmoment",{"_index":4171,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":4146,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(array.from(currentinputversions",{"_index":4384,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":3724,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":3725,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(inputpublishers",{"_index":4369,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.difference(uncachedpublishers",{"_index":4377,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":3471,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":1118,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":2802,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1523,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":4470,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.isequal(status",{"_index":3788,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["_.isequal(thirdactionstatus",{"_index":3213,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["_defaultfilters",{"_index":2774,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":3129,"title":{},"body":{"components/InfoComponent.html":{}}}],["_domsanitizationservice",{"_index":3060,"title":{},"body":{"components/IconComponent.html":{}}}],["_filter",{"_index":3707,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":2305,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1630,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":3026,"title":{},"body":{"injectables/I18nService.html":{}}}],["_locale:string",{"_index":3040,"title":{},"body":{"injectables/I18nService.html":{}}}],["_modalservice",{"_index":291,"title":{},"body":{"components/ActionComponent.html":{}}}],["_resizesubject",{"_index":1528,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["_selectediframeurl",{"_index":3113,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":3441,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":3130,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":3027,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":3041,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":3131,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":1854,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":3019,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["above",{"_index":2655,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["abstractcontrol",{"_index":2266,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["accept",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(auth",{"_index":1358,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authenticationinfo",{"_index":1346,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":1360,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":74,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":75,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":1335,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":1075,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["accessors",{"_index":1639,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":4594,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":1317,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["account",{"_index":216,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["accumulated",{"_index":2675,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["accumulation",{"_index":2654,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["action'},{'name",{"_index":339,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["action(null,null",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["action).pipe",{"_index":3791,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.buttonstyle",{"_index":2400,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":2401,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.component.html",{"_index":278,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.component.scss",{"_index":276,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.contentstyle",{"_index":2403,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":2404,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.key",{"_index":3796,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.label.key",{"_index":313,"title":{},"body":{"components/ActionComponent.html":{}}}],["action.payload",{"_index":852,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/UserEffects.html":{}}}],["action.payload.actionkey",{"_index":3204,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.actions",{"_index":3220,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.card",{"_index":3194,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.cardid",{"_index":3202,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.event.url.indexof(\"/archives/cards/\")>=0",{"_index":2117,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":2113,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":2124,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":2127,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.id",{"_index":3222,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":3364,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":3363,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":2119,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":2112,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":2631,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":2630,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.user",{"_index":4543,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload.versions",{"_index":4297,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["action.service",{"_index":306,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["action.service.ts",{"_index":3757,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:115",{"_index":3776,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:26",{"_index":3763,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:33",{"_index":3773,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:42",{"_index":3778,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:58",{"_index":3771,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:73",{"_index":3767,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.service.ts:97",{"_index":3780,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["action.updatestatebeforeaction",{"_index":3812,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actioncomponent",{"_index":265,"title":{"components/ActionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["actionid",{"_index":2327,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionkey",{"_index":3770,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actionreducermap",{"_index":749,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":441,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["actions$:actions",{"_index":4561,"title":{},"body":{"injectables/UserEffects.html":{}}}],["actions/archive.actions",{"_index":887,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["actions?:map",{"_index":3179,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["actions?:ofmap",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actionsappear",{"_index":1631,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardState.html":{}}}],["actionservice",{"_index":289,"title":{},"body":{"components/ActionComponent.html":{}}}],["actionstatus",{"_index":205,"title":{"classes/ActionStatus.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["actionstatus(null",{"_index":208,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actionsurlpath",{"_index":1632,"title":{},"body":{"components/CardComponent.html":{}}}],["actiontype",{"_index":144,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["actionurl",{"_index":3758,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["actionurlpath",{"_index":284,"title":{},"body":{"components/ActionComponent.html":{}}}],["activate",{"_index":2454,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":2154,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":836,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":2761,"title":{},"body":{"classes/Filter.html":{}}}],["active_from_param",{"_index":924,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["active_to_param",{"_index":926,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activedetail",{"_index":2449,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":2455,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activefrom",{"_index":925,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["activeto",{"_index":927,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":415,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["actualizedaction",{"_index":3214,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["add",{"_index":440,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CardOperation.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addactionsappear",{"_index":418,"title":{"classes/AddActionsAppear.html":{}},"body":{"classes/AddActionsAppear.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addactionsappear(this.lightcard.id",{"_index":1697,"title":{},"body":{"components/CardComponent.html":{}}}],["addactionsappear(urlparts[3",{"_index":1831,"title":{},"body":{"components/CardListComponent.html":{}}}],["addauthheadersifnecessary",{"_index":4263,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":4266,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["added",{"_index":1783,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["addlightcardfailure",{"_index":454,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":1880,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["adds",{"_index":485,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addthirdactions",{"_index":484,"title":{"classes/AddThirdActions.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addthirdactions({card",{"_index":3228,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["af.payload.name",{"_index":1884,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.status.end",{"_index":1888,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["aftercontentinit",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["afterviewinit",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ahead",{"_index":405,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["alarm",{"_index":2790,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1524,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":2413,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":4714,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1726,"title":{},"body":{"components/CardComponent.html":{}}}],["allowed",{"_index":1568,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["allows",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":499,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":2170,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":1110,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/UserService.html":{}}}],["angular/animations",{"_index":4644,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":4646,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":651,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":4648,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":300,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":658,"title":{},"body":{"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":4649,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":698,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":1582,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ConfirmModalComponent.html":{}}}],["anyway",{"_index":2080,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["api",{"_index":3899,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["apiversion",{"_index":3923,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["app",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["app/modules/utilities/components/resizable/resizable.component",{"_index":1828,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["appcomponent",{"_index":340,"title":{"components/AppComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":2467,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":412,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":442,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"directives/DraggableDirective.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["appeffects",{"_index":816,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["application/x",{"_index":1153,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["applies",{"_index":2758,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":1376,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{}}}],["applyfilter",{"_index":823,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":2747,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":2639,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":819,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":626,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":414,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":817,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":1264,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["approutingmodule",{"_index":636,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":563,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["archive",{"_index":343,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archive.filters.{{filterpath",{"_index":2291,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["archive.search",{"_index":960,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveactions",{"_index":1024,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/typealiases.html":{}}}],["archiveactiontypes",{"_index":879,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveactiontypes.archivequerysuccess",{"_index":1014,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.handleunexpectederror",{"_index":1020,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.selectarchivedlightcard",{"_index":1023,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.sendarchivequery",{"_index":1019,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivefilter",{"_index":1018,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archiveactiontypes.updatearchivepage",{"_index":1022,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["archived",{"_index":432,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["archiveeffects",{"_index":804,"title":{"injectables/ArchiveEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{}}}],["archivefilterscomponent",{"_index":342,"title":{"components/ArchiveFiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archiveform",{"_index":893,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveinitialstate",{"_index":1028,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["archivelistcomponent",{"_index":345,"title":{"components/ArchiveListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivelistpagecomponent",{"_index":347,"title":{"components/ArchiveListPageComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivequerysuccess",{"_index":880,"title":{"classes/ArchiveQuerySuccess.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["archivequerysuccess({resultpage",{"_index":857,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["archivereducer",{"_index":778,"title":{},"body":{"interfaces/AppState.html":{}}}],["archives",{"_index":706,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":350,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":1051,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":1033,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":1032,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":349,"title":{"components/ArchivesComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivesmodule",{"_index":1042,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":1046,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["archivestate",{"_index":731,"title":{"interfaces/ArchiveState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{}}}],["archivesurl",{"_index":1898,"title":{},"body":{"injectables/CardService.html":{}}}],["args",{"_index":2980,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1",{"_index":2982,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1])[args[2",{"_index":2983,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":2992,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":2480,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["array",{"_index":2342,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":3470,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array.from(actions.entries",{"_index":1706,"title":{},"body":{"components/CardComponent.html":{}}}],["array.from(calcelements",{"_index":1603,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(currentcachedversions",{"_index":4385,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["array.from(fixedelements",{"_index":1591,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(versions.values()).map(version",{"_index":4320,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["arrow::after",{"_index":4488,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["ask",{"_index":1099,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["askcreateuser",{"_index":4564,"title":{},"body":{"injectables/UserService.html":{}}}],["askcreateuser(userdata",{"_index":4567,"title":{},"body":{"injectables/UserService.html":{}}}],["askfori18njson",{"_index":3931,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["askfori18njson(publisher",{"_index":3892,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["asktokenfromcode(code",{"_index":1170,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfrompassword(login",{"_index":1184,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenurl",{"_index":1100,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["askuserapplicationregistered",{"_index":4565,"title":{},"body":{"injectables/UserService.html":{}}}],["askuserapplicationregistered(user",{"_index":4569,"title":{},"body":{"injectables/UserService.html":{}}}],["assets/styles/_variables.scss",{"_index":3107,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":1116,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["async",{"_index":1005,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["attachaction",{"_index":2309,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":2325,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["attribute",{"_index":213,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["auth",{"_index":1204,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.firstname",{"_index":1200,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.lastname",{"_index":1202,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticate",{"_index":1396,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["authentication.reducer.ts",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authentication.service",{"_index":1929,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologin",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologout",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffect",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationguard",{"_index":699,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationreducer",{"_index":747,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":1096,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["authenticationservice.clearauthenticationinformation",{"_index":1383,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.computeredirecturi",{"_index":1181,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.decodetoken(payload.access_token",{"_index":1253,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.extractidentificationinformation",{"_index":1355,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.extracttoken",{"_index":1271,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.getsecurityheader",{"_index":1954,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationservice.isexpirationdateover",{"_index":1353,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.verifyexpirationdate",{"_index":1227,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authentificated",{"_index":4537,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authinfo",{"_index":1354,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":1303,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authobject",{"_index":1071,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization",{"_index":1269,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization_code",{"_index":1176,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authservice",{"_index":1310,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":732,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authstate.firstname",{"_index":2360,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.identifier",{"_index":2358,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.lastname",{"_index":2361,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.token",{"_index":2359,"title":{},"body":{"components/DetailComponent.html":{}}}],["auto",{"_index":983,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["autonomousticks",{"_index":4123,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["autoscale",{"_index":4111,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":490,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["availableheight",{"_index":1600,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["availableheight}px",{"_index":1606,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["axis",{"_index":2710,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":3020,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":1141,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{}}}],["background",{"_index":4487,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["backwardconf",{"_index":4121,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["badge",{"_index":1724,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":352,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["base64",{"_index":3063,"title":{},"body":{"components/IconComponent.html":{}}}],["based",{"_index":1570,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["basehref",{"_index":3090,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":3093,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":4234,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":4231,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":4233,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":351,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:26",{"_index":2523,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:27",{"_index":2521,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":2522,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":2538,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":2540,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":2539,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":2537,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":2536,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:39",{"_index":2533,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:69",{"_index":2532,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:74",{"_index":2535,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:78",{"_index":2530,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:82",{"_index":2528,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:87",{"_index":2529,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:93",{"_index":2531,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:97",{"_index":2534,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1441,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basically",{"_index":3896,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["bearer",{"_index":1270,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["bearing",{"_index":1577,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["beat",{"_index":2571,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":4256,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["behaviour",{"_index":2727,"title":{},"body":{"classes/Filter.html":{}}}],["best",{"_index":4586,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["beware",{"_index":1177,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["big",{"_index":3064,"title":{},"body":{"components/IconComponent.html":{}}}],["big:boolean",{"_index":3084,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":2310,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":2329,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":2507,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":622,"title":{},"body":{"components/AppComponent.html":{},"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"components/TypeAheadSettingsComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":304,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":303,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["border",{"_index":967,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":2726,"title":{},"body":{"classes/Filter.html":{}}}],["bottom",{"_index":1715,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1421,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/LightCard.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{}}}],["browse",{"_index":4711,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":646,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":3571,"title":{},"body":{"components/ResizableComponent.html":{}}}],["btn",{"_index":3306,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3182,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["bug",{"_index":4168,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["build",{"_index":1111,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/UserService.html":{}}}],["buildconfigselector",{"_index":910,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{}}}],["buildfilterselector",{"_index":2670,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":3038,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["buildsettingsselector",{"_index":1478,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":1314,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1693,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["button.addeventlistener('click",{"_index":2412,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":2395,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":2406,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":2405,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].textcontent",{"_index":2410,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":2399,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":2402,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1701,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":149,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["buttontitle",{"_index":4119,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["c",{"_index":315,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["cachedpublishers",{"_index":4366,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification",{"_index":4375,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedpublishersforversionverification.foreach(third",{"_index":4378,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions",{"_index":4363,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cachedversions[third",{"_index":4382,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["calc",{"_index":979,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"modules/UtilitiesModule.html":{}}}],["calcelements",{"_index":1586,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight",{"_index":1529,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight(parentid",{"_index":1543,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightclass",{"_index":1530,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightdirective",{"_index":409,"title":{"directives/CalcHeightDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["calcheightdirective]'},{'name",{"_index":410,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["calculate",{"_index":1596,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calculated",{"_index":1575,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["calculation",{"_index":1572,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["call",{"_index":1137,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["call.pipe",{"_index":1189,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["called",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["calling",{"_index":1374,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{}}}],["callmodalandhandleresponse",{"_index":3759,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalandhandleresponse(modalservice",{"_index":3764,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary",{"_index":3760,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["callmodalifnecessary(lightcardid",{"_index":3769,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["canactivate",{"_index":705,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["cancel",{"_index":2061,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cancel,ok,dismiss",{"_index":2075,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["caps",{"_index":1721,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":161,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":355,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card.actions",{"_index":1411,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["card.actions.ts",{"_index":456,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:106",{"_index":2849,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:109",{"_index":2850,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:114",{"_index":3554,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:116",{"_index":3555,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:121",{"_index":525,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:123",{"_index":526,"title":{},"body":{"classes/AddThirdActions.html":{}}}],["card.actions.ts:128",{"_index":4489,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:129",{"_index":4490,"title":{},"body":{"classes/UpdateALightCard.html":{}}}],["card.actions.ts:134",{"_index":4491,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:136",{"_index":4492,"title":{},"body":{"classes/UpdateAnAction.html":{}}}],["card.actions.ts:141",{"_index":4493,"title":{},"body":{"classes/UpdateAnActionFailure.html":{}}}],["card.actions.ts:147",{"_index":3754,"title":{},"body":{"classes/ThirdActionAlreadyLoaded.html":{}}}],["card.actions.ts:152",{"_index":3755,"title":{},"body":{"classes/ThirdActionAlreadyUpdated.html":{}}}],["card.actions.ts:157",{"_index":2299,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:158",{"_index":2300,"title":{},"body":{"classes/DelayedLightCardUpdate.html":{}}}],["card.actions.ts:162",{"_index":3184,"title":{},"body":{"classes/LightCardAlreadyUpdated.html":{}}}],["card.actions.ts:38",{"_index":3289,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:43",{"_index":2550,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:47",{"_index":3293,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:50",{"_index":3294,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:55",{"_index":3290,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:63",{"_index":3291,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:66",{"_index":3292,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:72",{"_index":3587,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:75",{"_index":3588,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:82",{"_index":2014,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:89",{"_index":458,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:92",{"_index":459,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:97",{"_index":4507,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.component.html",{"_index":1629,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1628,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1744,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":789,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":3186,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:117",{"_index":3200,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:33",{"_index":3191,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:43",{"_index":3221,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:56",{"_index":3218,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:91",{"_index":3232,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":2806,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id",{"_index":1687,"title":{},"body":{"components/CardComponent.html":{},"injectables/LightCardEffects.html":{}}}],["card.id.indexof(selectedcardid",{"_index":1859,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":463,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3176,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:11",{"_index":3178,"title":{},"body":{"classes/LightCard.html":{}}}],["card.model.ts:67",{"_index":4248,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.process",{"_index":3920,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":3847,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisher}.${card.publisherversion",{"_index":1670,"title":{},"body":{"components/CardComponent.html":{}}}],["card.reducer",{"_index":767,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":3607,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":2798,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":2807,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.state",{"_index":3921,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card1.lttd",{"_index":1803,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1806,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1797,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2",{"_index":1796,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.lttd",{"_index":1804,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1807,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1798,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card:card",{"_index":2427,"title":{},"body":{"classes/DetailContext.html":{}}}],["card:lightcard",{"_index":2803,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":453,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":423,"title":{},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.addactionsappear",{"_index":422,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.clearcard",{"_index":445,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":452,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcard",{"_index":449,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardfailure",{"_index":450,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardsuccess",{"_index":451,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":446,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":447,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":448,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":354,"title":{"components/CardComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":356,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":755,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":735,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardid",{"_index":3795,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["cardid:string,actionkey",{"_index":517,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cardids",{"_index":1839,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardinitialstate",{"_index":1984,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":358,"title":{"components/CardListComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":1832,"title":{"classes/CardOperation.html":{}},"body":{"classes/CardOperation.html":{},"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":757,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":1899,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":1838,"title":{},"body":{"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"miscellaneous/enumerations.html":{}}}],["cardoperationtype.add",{"_index":1873,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype.delete",{"_index":1876,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype[value",{"_index":1846,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardreducer",{"_index":768,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":513,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["cards'},{'name",{"_index":376,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards.map(card",{"_index":4344,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["cards/cards.module",{"_index":1059,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1061,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1064,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1738,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":846,"title":{"injectables/CardService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":1047,"title":{"modules/CardsModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":733,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardstimeline",{"_index":4166,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["cardsurl",{"_index":1900,"title":{},"body":{"injectables/CardService.html":{}}}],["care",{"_index":2733,"title":{},"body":{"classes/Filter.html":{}}}],["case",{"_index":1418,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/LightCard.html":{},"classes/RouterStateUrl.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["catch",{"_index":1287,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["catch(error",{"_index":3803,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["catcherror",{"_index":876,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror((err",{"_index":1363,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((error",{"_index":858,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(authenticationservice.handleerror",{"_index":1162,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(e=>of(auth",{"_index":1205,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(err",{"_index":1002,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":3903,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["catcherror(errorresponse",{"_index":1347,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["category",{"_index":1320,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":859,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["causes",{"_index":3576,"title":{},"body":{"components/ResizableComponent.html":{}}}],["cell",{"_index":4481,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1727,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":4117,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["chain",{"_index":2752,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":2740,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":2750,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":833,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changed",{"_index":2076,"title":{},"body":{"components/ConfirmModalComponent.html":{},"components/TimeFilterComponent.html":{}}}],["changelocale",{"_index":3028,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":3031,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":3047,"title":{},"body":{"injectables/I18nService.html":{}}}],["changes",{"_index":2437,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":2462,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changing",{"_index":2554,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":3881,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":1156,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["chart",{"_index":4258,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":366,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":2707,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":2706,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":2716,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":2701,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":2704,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["checauthentication",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["check",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["checkauthentication(token",{"_index":1146,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checkauthenticationstatus",{"_index":63,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":1307,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checkelement",{"_index":928,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkelement(filterdatetypes",{"_index":947,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone",{"_index":224,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["checkifreceivedstatusisdifferentfromcurrentone(formerstatus",{"_index":3772,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["checking",{"_index":1290,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checks",{"_index":1138,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenresponse",{"_index":1291,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenurl",{"_index":1097,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checkuserapplication",{"_index":4522,"title":{},"body":{"injectables/UserEffects.html":{}}}],["child",{"_index":2179,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1065,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cid",{"_index":1068,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["claim",{"_index":1126,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":3484,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"index.html":{}}}],["clear",{"_index":425,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":1228,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clearcard",{"_index":424,"title":{"classes/ClearCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearcardselection",{"_index":1757,"title":{},"body":{"injectables/CardEffects.html":{}}}],["clearlightcardselection",{"_index":478,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["clicked",{"_index":1405,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1399,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":80,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":1104,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clock",{"_index":2574,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["clone",{"_index":2741,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":2762,"title":{},"body":{"classes/Filter.html":{}}}],["closedetails",{"_index":1731,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cluster",{"_index":4595,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":633,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":1043,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":1044,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":1045,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":1985,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":1986,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":1988,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_imports",{"_index":1987,"title":{},"body":{"modules/CardsModule.html":{}}}],["cluster_cardsmodule_providers",{"_index":1989,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":2681,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":2682,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":2684,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":2683,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":3597,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":3598,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":3649,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3650,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":3651,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":3684,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":3685,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":3820,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":3821,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":3822,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule",{"_index":4579,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_declarations",{"_index":4580,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":4581,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":4591,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":4118,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":320,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["codeflow",{"_index":3314,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":3309,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1789,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["collectionsize",{"_index":988,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["collectionsize]=\"collectionsize",{"_index":1006,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["color",{"_index":3499,"title":{},"body":{"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["color:inherit",{"_index":3495,"title":{},"body":{"components/NavbarComponent.html":{}}}],["combinelatest",{"_index":909,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["commonmodule",{"_index":652,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{}}}],["comparebylttd(card1",{"_index":1802,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1811,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1805,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1813,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1799,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1809,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1808,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1795,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["complex",{"_index":2169,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["component",{"_index":264,"title":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component'},{'name",{"_index":362,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":338,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":266,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"index.html":{}}}],["components/action/action.component",{"_index":2003,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/action/confirm",{"_index":2004,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/archive",{"_index":1049,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["components/card",{"_index":1997,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":1996,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/detail/detail.component",{"_index":1999,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":1998,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/icon/icon.component",{"_index":666,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.component",{"_index":665,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/info/info.component",{"_index":684,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":664,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":2689,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/resizable/resizable.component",{"_index":4584,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["components/settings/base",{"_index":3655,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":3657,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":3658,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":3659,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":3654,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":3656,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":3661,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":2692,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":4215,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":217,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["computed",{"_index":2871,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computeddate",{"_index":1682,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates",{"_index":1634,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1646,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":4186,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":4229,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":4226,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":3238,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":3430,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":4180,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":4194,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":4209,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":4197,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":4210,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":4191,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":4208,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":4181,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":4200,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":1278,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["computetextvalidators",{"_index":2516,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":3932,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":3879,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":3905,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["concatall",{"_index":4288,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["conf",{"_index":4043,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key",{"_index":4175,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key].foreach(value",{"_index":4173,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":727,"title":{},"body":{"interfaces/AppState.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["config:any",{"_index":2056,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":2038,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":2848,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1407,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":2844,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":2845,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":2846,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":2847,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":794,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":2057,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":770,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":2018,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":734,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":2632,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":2633,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configue",{"_index":4052,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["configuration",{"_index":1677,"title":{},"body":{"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configured",{"_index":4305,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["configurl",{"_index":2048,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":360,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["confirmmodalcomponent",{"_index":359,"title":{"components/ConfirmModalComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["confzoom",{"_index":4044,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connection",{"_index":1165,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["consequence",{"_index":1336,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1779,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error('error",{"_index":4299,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["console.error(`error",{"_index":1963,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(err",{"_index":1364,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":1207,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1428,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(\"calcheightdirective",{"_index":1602,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["console.log(\"ok",{"_index":4546,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"transitioncreateuserapplication",{"_index":4553,"title":{},"body":{"injectables/UserEffects.html":{}}}],["console.log(\"user",{"_index":4572,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('card",{"_index":2416,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log('listsettingcomponent.isequal",{"_index":3266,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":3745,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["console.log('unknown",{"_index":3810,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["console.log(`card",{"_index":2417,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(`location",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`no",{"_index":3217,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.log(`something",{"_index":1750,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["console.log(`this",{"_index":2375,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":3871,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.log(error",{"_index":3231,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["console.log(this.disabled",{"_index":2544,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["consolidatethirdandversions",{"_index":4396,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions",{"_index":4406,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["consolidatethirdandversions(thirdsandversions:transitionalthirdwithitsversion",{"_index":4357,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["const",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constants",{"_index":2671,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(_modalservice",{"_index":287,"title":{},"body":{"components/ActionComponent.html":{}}}],["constructor(access_token",{"_index":1077,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(card",{"_index":2425,"title":{},"body":{"classes/DetailContext.html":{}}}],["constructor(currenttime",{"_index":3981,"title":{},"body":{"classes/TickPayload.html":{}}}],["constructor(date",{"_index":2189,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["constructor(details",{"_index":3682,"title":{},"body":{"classes/State.html":{}}}],["constructor(el",{"_index":1535,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["constructor(element",{"_index":2317,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":3710,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":2742,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":1907,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["constructor(id",{"_index":3816,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":3521,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":3023,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":416,"title":{},"body":{"classes/ActionStatus.html":{},"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":4509,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["constructor(message",{"_index":3377,"title":{},"body":{"classes/Message.html":{}}}],["constructor(modal",{"_index":2063,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["constructor(name",{"_index":3747,"title":{},"body":{"classes/Third.html":{}}}],["constructor(number",{"_index":1836,"title":{},"body":{"classes/CardOperation.html":{}}}],["constructor(payload",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(platformlocation",{"_index":3066,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor(protected",{"_index":1485,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":77,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["constructor(readonly",{"_index":2202,"title":{},"body":{"classes/DateTimeNgb.html":{},"classes/DetailContext.html":{},"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":4184,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1640,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(start",{"_index":4247,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":3529,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["constructor(sub",{"_index":2008,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(third",{"_index":4284,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["constructor(thirdsservice",{"_index":3832,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":2915,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":2301,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(totalpages",{"_index":3510,"title":{},"body":{"classes/Page.html":{}}}],["constructor(translate",{"_index":3029,"title":{},"body":{"injectables/I18nService.html":{}}}],["constructor(translateservice",{"_index":3418,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["constructor(type",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1608,"title":{},"body":{"classes/Card.html":{},"classes/LightCard.html":{}}}],["constructor(url",{"_index":3583,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["consume",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contain",{"_index":2609,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["containing",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contains",{"_index":493,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["content",{"_index":616,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"classes/AuthObject.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Page.html":{}}}],["contentchildren",{"_index":2445,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":2442,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":150,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["context",{"_index":2918,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["context.model",{"_index":2351,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["context.model.ts",{"_index":2424,"title":{},"body":{"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["context.model.ts:11",{"_index":2426,"title":{},"body":{"classes/DetailContext.html":{}}}],["context.model.ts:8",{"_index":4519,"title":{},"body":{"classes/UserContext.html":{}}}],["control",{"_index":3247,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["controlvalueaccessor",{"_index":2234,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["convert",{"_index":1219,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":1252,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["convert(value",{"_index":1458,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1516,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["convertjsontoi18nobject",{"_index":3933,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["convertjsontoi18nobject(locale",{"_index":3888,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["convertspeedintoenum",{"_index":4182,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":4203,"title":{},"body":{"classes/TimeReference.html":{}}}],["converttypeintoenum",{"_index":1835,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key",{"_index":1841,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key:string",{"_index":1843,"title":{},"body":{"classes/CardOperation.html":{}}}],["copy",{"_index":327,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["copyright",{"_index":314,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["core",{"_index":678,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correct",{"_index":4602,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["correctly",{"_index":1172,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":1288,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["createentityadapter",{"_index":1792,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["createformgroup",{"_index":3709,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["createuserapplication",{"_index":2081,"title":{"classes/CreateUserApplication.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplication({user",{"_index":4554,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonfailure",{"_index":2089,"title":{"classes/CreateUserApplicationOnFailure.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonfailure({error:error",{"_index":4549,"title":{},"body":{"injectables/UserEffects.html":{}}}],["createuserapplicationonsuccess",{"_index":2088,"title":{"classes/CreateUserApplicationOnSuccess.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["createuserapplicationonsuccess({user",{"_index":4548,"title":{},"body":{"injectables/UserEffects.html":{}}}],["creation",{"_index":2091,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["css",{"_index":2370,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":3749,"title":{},"body":{"classes/Third.html":{}}}],["csses?:string",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":2365,"title":{},"body":{"components/DetailComponent.html":{}}}],["curr",{"_index":1594,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["current",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["currentactionpath",{"_index":280,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["currentcachedversions",{"_index":4381,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currentcard",{"_index":2306,"title":{},"body":{"components/DetailComponent.html":{}}}],["currentdate",{"_index":4250,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currentinputversions",{"_index":4379,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["currently",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentmoment",{"_index":4067,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["currentpage",{"_index":994,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["currentpath",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["currentselected",{"_index":1686,"title":{},"body":{"components/CardComponent.html":{}}}],["currentstatus",{"_index":3789,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["currenttime",{"_index":2580,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["currenttimefilter",{"_index":2659,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.active",{"_index":2660,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.end",{"_index":2662,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.start",{"_index":2661,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimereference",{"_index":3986,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["custom",{"_index":364,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customlogo",{"_index":3442,"title":{},"body":{"components/NavbarComponent.html":{}}}],["customroutereffects",{"_index":782,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":2148,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":363,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["d.end",{"_index":4155,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.includes(currentselected",{"_index":1688,"title":{},"body":{"components/CardComponent.html":{}}}],["d.start",{"_index":4153,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dark",{"_index":2409,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dark:boolean",{"_index":3085,"title":{},"body":{"components/IconComponent.html":{}}}],["dat",{"_index":4615,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["data",{"_index":474,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["data:image/svg+xml;base64,${data",{"_index":3474,"title":{},"body":{"components/NavbarComponent.html":{}}}],["date",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date().valueof",{"_index":1942,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1249,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(0",{"_index":1304,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":1260,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(minus2hour.valueof()+48*60*60*1000",{"_index":1945,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":1941,"title":{},"body":{"injectables/CardService.html":{}}}],["date(value",{"_index":3002,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.format",{"_index":4629,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format(clusterlevel",{"_index":4621,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hour",{"_index":4635,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":4632,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes",{"_index":4634,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.now",{"_index":1255,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date.seconds",{"_index":4636,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.valueof",{"_index":4627,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.year",{"_index":2217,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateinsidetooltipsmonth",{"_index":4620,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateinsidetooltipsweek",{"_index":4611,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonday",{"_index":4633,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateondaynewyear",{"_index":4637,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonmonth",{"_index":4641,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonweek",{"_index":4640,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonyear",{"_index":4642,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateparts",{"_index":2203,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["dateparts.length",{"_index":2206,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["datesimplifliedonday",{"_index":4639,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datesimplifliedondaynewyear",{"_index":4638,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datestring",{"_index":948,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetime",{"_index":368,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["datetimefiltercomponent",{"_index":367,"title":{"components/DatetimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["datetimeform",{"_index":2242,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["datetimengb",{"_index":913,"title":{"classes/DateTimeNgb.html":{}},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["datetimengb(date",{"_index":934,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["datetodisplay",{"_index":1633,"title":{},"body":{"components/CardComponent.html":{}}}],["day",{"_index":2208,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["dd",{"_index":4136,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["dd/mm",{"_index":4138,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deactivate",{"_index":2457,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1481,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":1546,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["debouncetime(300",{"_index":1549,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["debug",{"_index":3381,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declaration",{"_index":215,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["declarations",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["decode",{"_index":1090,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":1285,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["decoration",{"_index":3501,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decorators",{"_index":861,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["deep",{"_index":3732,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defaultfilters",{"_index":2775,"title":{},"body":{"injectables/FilterService.html":{}}}],["defaultpublisher').set('size",{"_index":1980,"title":{},"body":{"injectables/CardService.html":{}}}],["define",{"_index":1569,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":1178,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delay",{"_index":2033,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["delay(500",{"_index":3199,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delay(this.retrydelay",{"_index":2046,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delayedlightcardupdate",{"_index":496,"title":{"classes/DelayedLightCardUpdate.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["delayupdatelightcard",{"_index":3187,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["delegateurl",{"_index":1107,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delete",{"_index":1847,"title":{},"body":{"classes/CardOperation.html":{},"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":3411,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dentifier",{"_index":1243,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["dependencies",{"_index":628,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":4051,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deprecation",{"_index":3577,"title":{},"body":{"components/ResizableComponent.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserService.html":{}}}],["description$|async",{"_index":3154,"title":{},"body":{"components/InfoComponent.html":{}}}],["deserializable",{"_index":1143,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["desired",{"_index":3704,"title":{},"body":{"modules/StateModule.html":{}}}],["detail",{"_index":162,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":371,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":2460,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":2304,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":2446,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":370,"title":{"components/DetailComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detailcontext",{"_index":2349,"title":{"classes/DetailContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["detailcontext(this.card,null",{"_index":2383,"title":{},"body":{"components/DetailComponent.html":{}}}],["detailcontext):observable",{"_index":2955,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["details",{"_index":1619,"title":{},"body":{"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/State.html":{}}}],["details'},{'name",{"_index":357,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1063,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1730,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":2429,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1729,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1736,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1737,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":1733,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":1735,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:61",{"_index":1734,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1069,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1062,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details?:detail",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detailscomponent",{"_index":372,"title":{"components/DetailsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detect",{"_index":4539,"title":{},"body":{"injectables/UserEffects.html":{}}}],["devtools",{"_index":3691,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["didn't",{"_index":1562,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["directive",{"_index":336,"title":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["directives",{"_index":408,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["disabled",{"_index":2243,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["disableinfos",{"_index":3615,"title":{},"body":{"components/SettingsComponent.html":{}}}],["dismiss",{"_index":2062,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dispatch",{"_index":1445,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1460,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1517,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["dispatched",{"_index":4019,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["dispatchupdatethirdaction",{"_index":3761,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["dispatchupdatethirdaction(updatethirdaction",{"_index":3775,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["display",{"_index":1377,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3183,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["displaydate",{"_index":4152,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["displays",{"_index":2677,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["distinctuntilchanged",{"_index":1482,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1502,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distributed",{"_index":329,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["divide",{"_index":1584,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":2996,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["document.getelementbyid(this.parentid",{"_index":1559,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["doesn't",{"_index":2418,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["dom",{"_index":269,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":4062,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domain7dayconf",{"_index":4066,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainmonthconf",{"_index":4064,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainweekconf",{"_index":4065,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainyearconf",{"_index":4063,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":3389,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":3393,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizer",{"_index":2321,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":2604,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["down",{"_index":1623,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":2607,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["drag",{"_index":2484,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":2470,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":2513,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":2714,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":2466,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:11",{"_index":2492,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":2483,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:28",{"_index":2487,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:40",{"_index":2490,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:7",{"_index":2479,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:8",{"_index":2478,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:9",{"_index":2477,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":411,"title":{"directives/DraggableDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":2468,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":2471,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":2472,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":3492,"title":{},"body":{"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":3485,"title":{},"body":{"components/NavbarComponent.html":{}}}],["duration",{"_index":4224,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":4227,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1787,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":4650,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":4055,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["effect",{"_index":223,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["effects",{"_index":1776,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":3689,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":3698,"title":{},"body":{"modules/StateModule.html":{}}}],["el",{"_index":1538,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["elapsed",{"_index":2572,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsincelast",{"_index":2582,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsofar",{"_index":2614,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["element",{"_index":335,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["element.length",{"_index":952,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["elementref",{"_index":1536,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/DetailComponent.html":{}}}],["elements",{"_index":1567,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["email",{"_index":374,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":373,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emit",{"_index":1334,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2279,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emitevent:false",{"_index":4017,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["emits",{"_index":1394,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["emittedby",{"_index":1373,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["empty",{"_index":470,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptyaction=new",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptyactionstatus",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["emptylightcards",{"_index":469,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["emptylightcards(),new",{"_index":1402,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["enabledrag",{"_index":4108,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":722,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":4109,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":3882,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":2491,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/LightCard.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddate",{"_index":1613,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":4071,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.valueof",{"_index":4130,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2",{"_index":4081,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.valueof",{"_index":4134,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3",{"_index":4085,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.valueof",{"_index":4140,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4",{"_index":4089,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.valueof",{"_index":4127,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainuse",{"_index":4076,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainuse.add(16",{"_index":4078,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomainuse.valueof",{"_index":4116,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":2168,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":444,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1793,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["entitystate",{"_index":1780,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entries.map(([key",{"_index":1707,"title":{},"body":{"components/CardComponent.html":{}}}],["entry",{"_index":2144,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":3867,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.length",{"_index":3868,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entrycomponents",{"_index":1992,"title":{},"body":{"modules/CardsModule.html":{}}}],["enum",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["enumeration",{"_index":929,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["enumerations",{"_index":4681,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":752,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":751,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["environment.production",{"_index":820,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.urls.actions",{"_index":3782,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["environment.urls.auth}/check_token",{"_index":1098,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/code/redirect_uri=${authenticationservice.computeredirecturi",{"_index":1276,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/token",{"_index":1101,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.cards}/archives",{"_index":1938,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cards",{"_index":1936,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":1934,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":2053,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":3844,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":3675,"title":{},"body":{"injectables/SettingsService.html":{},"injectables/UserService.html":{}}}],["environment.urls.users}/users",{"_index":1103,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["equality",{"_index":219,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["equally",{"_index":1585,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["equals",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["err",{"_index":1366,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["error('no",{"_index":3870,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":1879,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.status",{"_index":3229,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["error.tostring",{"_index":1966,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":3375,"title":{},"body":{"interfaces/MenuState.html":{},"interfaces/TranslationState.html":{}}}],["error:string",{"_index":3373,"title":{},"body":{"interfaces/MenuState.html":{},"interfaces/TranslationState.html":{}}}],["errormsg",{"_index":1325,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":1322,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1427,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1417,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":1965,"title":{},"body":{"injectables/CardService.html":{}}}],["etc",{"_index":4016,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["evaluate",{"_index":2731,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":1928,"title":{},"body":{"injectables/CardService.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{},"dependencies.html":{}}}],["event('resize",{"_index":3573,"title":{},"body":{"components/ResizableComponent.html":{}}}],["event.detail",{"_index":3415,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.target.value",{"_index":2290,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["event.wheeldelta",{"_index":3414,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":2476,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":1914,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":1970,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":1969,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":1962,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":1959,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":1968,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":1912,"title":{},"body":{"injectables/CardService.html":{}}}],["evt",{"_index":3578,"title":{},"body":{"components/ResizableComponent.html":{}}}],["evt.inituievent('resize",{"_index":3580,"title":{},"body":{"components/ResizableComponent.html":{}}}],["example",{"_index":2867,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":3385,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":2898,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":2917,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":2419,"title":{},"body":{"components/DetailComponent.html":{},"classes/TimeReference.html":{}}}],["existing",{"_index":486,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["exists",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["exp",{"_index":1136,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expandedmenu",{"_index":3443,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":3464,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":3444,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":3465,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":1213,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["expirationdate",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["expireclaim",{"_index":1106,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expired",{"_index":1361,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":1076,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["extended",{"_index":473,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1791,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":3494,"title":{},"body":{"components/NavbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["external='external",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extract",{"_index":1209,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus",{"_index":3234,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(action.payload.status",{"_index":3206,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extractactionstatusfrompseudoactionstatus(currentstatus",{"_index":3786,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(formerstatus",{"_index":3783,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["extractactionstatusfrompseudoactionstatus(taction:object):actionstatus",{"_index":226,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractactionstatusfrompseudoactionstatus(thirdactiontoupdate",{"_index":3212,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["extracti18ntoupdate",{"_index":4397,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extracti18ntoupdate(versions",{"_index":4338,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractidentificationinformation",{"_index":1244,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["extractparams",{"_index":2151,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":2153,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom",{"_index":4398,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4353,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards",{"_index":4399,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4343,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extractstate",{"_index":3746,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":3752,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card:card):state",{"_index":177,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extractthirdtoupdate",{"_index":4400,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["extractthirdtoupdate(versioninput",{"_index":4362,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["extracttoken",{"_index":1211,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["f5",{"_index":612,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":2407,"title":{},"body":{"components/DetailComponent.html":{}}}],["faclock",{"_index":2700,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":679,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":430,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":3541,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["failtoupdatetimereference",{"_index":2551,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":2569,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2090,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["fallback",{"_index":1564,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["false",{"_index":199,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeFilterComponent.html":{},"interfaces/UserState.html":{}}}],["family_name",{"_index":1133,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["familynameclaim",{"_index":1109,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["fasignoutalt",{"_index":680,"title":{},"body":{"modules/AppModule.html":{}}}],["fctargs[fctargs.length",{"_index":2995,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":702,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":2688,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":2589,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":2588,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":4039,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":4038,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":4040,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":4477,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":4476,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.notification.label",{"_index":4479,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.question.label",{"_index":4478,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":4480,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.timefilter.followclocktick",{"_index":2672,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["feedactions",{"_index":840,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":832,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":827,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":838,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":375,"title":{"components/FeedComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":790,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":1816,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":2680,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":2686,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":2596,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1752,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmap",{"_index":3934,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmap(publisher",{"_index":3922,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard",{"_index":3935,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchactionmapfromlightcard(card",{"_index":3918,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetcharchivedcards",{"_index":1902,"title":{},"body":{"injectables/CardService.html":{}}}],["fetcharchivedcards(filters",{"_index":1909,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation",{"_index":1903,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":1911,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":2049,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":3936,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":3875,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchlightcard",{"_index":3233,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["fetchthird",{"_index":3937,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":3857,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":3667,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":3731,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["fields",{"_index":2287,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":3108,"title":{},"body":{"components/IconComponent.html":{}}}],["filter",{"_index":407,"title":{"classes/Filter.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":4455,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":369,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1501,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":2045,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter(([elapsedsincelast",{"_index":2658,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter((action",{"_index":2110,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af",{"_index":1883,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t",{"_index":3909,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(time",{"_index":2653,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(v=>!!v",{"_index":2636,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(x",{"_index":2645,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":1056,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["filter.component.css",{"_index":2240,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filter.component.html",{"_index":2241,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":3706,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2233,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":3423,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":3421,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:16",{"_index":3420,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:18",{"_index":3419,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:25",{"_index":3422,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":2273,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":2275,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":2253,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":2272,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":4454,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":2252,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":4008,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:35",{"_index":3713,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:38",{"_index":2274,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2270,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:41",{"_index":4010,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":2258,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:46",{"_index":4011,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:48",{"_index":2261,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:52",{"_index":2263,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":4452,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:56",{"_index":2267,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":4453,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:60",{"_index":2256,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":3712,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:68",{"_index":2255,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TagsFilterComponent.html":{}}}],["filter.component.ts:96",{"_index":4009,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":829,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":2724,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:22",{"_index":2744,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:27",{"_index":2745,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":2746,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:32",{"_index":2759,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:43",{"_index":2748,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:56",{"_index":2751,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:67",{"_index":2756,"title":{},"body":{"classes/Filter.html":{}}}],["filter/datetime",{"_index":1058,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filter/multi",{"_index":1055,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filter/tags",{"_index":2718,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":2699,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":2697,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filterdatetypes",{"_index":919,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtered",{"_index":2637,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["filterpath",{"_index":2251,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{}}}],["filters",{"_index":866,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["filters'},{'name",{"_index":344,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component",{"_index":1053,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["filters.component.css",{"_index":891,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.html",{"_index":892,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/FiltersComponent.html":{}}}],["filters.component.ts",{"_index":890,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filters.component.ts:46",{"_index":908,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:47",{"_index":906,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:48",{"_index":907,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:49",{"_index":905,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:51",{"_index":899,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:65",{"_index":900,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:75",{"_index":903,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:97",{"_index":901,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.effects",{"_index":792,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":2613,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:25",{"_index":2623,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:28",{"_index":2622,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:31",{"_index":2621,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:44",{"_index":2643,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:54",{"_index":2640,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:75",{"_index":2666,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.foreach((values",{"_index":1975,"title":{},"body":{"injectables/CardService.html":{}}}],["filters.set('page",{"_index":869,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["filters.set(filtertype.recipient_filter",{"_index":2810,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":2814,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":2812,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":2808,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters/archive",{"_index":889,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"miscellaneous/enumerations.html":{}}}],["filters/datetime",{"_index":1057,"title":{},"body":{"modules/ArchivesModule.html":{},"components/DatetimeFilterComponent.html":{}}}],["filters/multi",{"_index":1054,"title":{},"body":{"modules/ArchivesModule.html":{},"components/MultiFilterComponent.html":{}}}],["filters[key",{"_index":946,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filterscomponent",{"_index":377,"title":{"components/FiltersComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":2620,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filterstomap",{"_index":894,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filtertype",{"_index":830,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":3728,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":1885,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":4471,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["find",{"_index":4585,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["fires",{"_index":2140,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":1864,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":606,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["first.tostring",{"_index":959,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["firstmovestartofunit",{"_index":4124,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["firstname",{"_index":1301,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname:string",{"_index":4512,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname?:string",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["fixed",{"_index":1571,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedelements",{"_index":1573,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedheightclass",{"_index":1531,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["flow",{"_index":1169,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["fluent",{"_index":3898,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fn",{"_index":2259,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["followclocktick",{"_index":2615,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["font",{"_index":1718,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":674,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":672,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["foreach((x",{"_index":1604,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["forkjoin",{"_index":4287,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.maplanguages(thirdswiththeirversions)).pipe",{"_index":4298,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapthirds(locale",{"_index":4310,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["forkjoin(this.mapversions(locale",{"_index":4317,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["form",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["form.action",{"_index":4473,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":4472,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":4035,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.notification",{"_index":4475,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.question",{"_index":4474,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":4034,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":3729,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1466,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.setting",{"_index":3267,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":2185,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":2711,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":4588,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:16",{"_index":4605,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:55",{"_index":4598,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:79",{"_index":4592,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatdatetime",{"_index":2186,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formatted",{"_index":4593,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":3006,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":3009,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatticks",{"_index":4135,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formattime",{"_index":2187,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["formattooltipsdate",{"_index":4137,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formb",{"_index":1464,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1522,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["formb.setting",{"_index":3268,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":3711,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":3714,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":911,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":3436,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null",{"_index":3741,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":1148,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["former",{"_index":3808,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formerstatus",{"_index":3774,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["formgroup",{"_index":902,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":2174,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":656,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":1993,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":673,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":676,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":681,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forward",{"_index":4091,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardconf",{"_index":4120,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwarddayconf",{"_index":4095,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardmonthconf",{"_index":4093,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardref",{"_index":2238,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["forwardweekconf",{"_index":4094,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardyearconf",{"_index":4092,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":2874,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["france.com",{"_index":319,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["freeze",{"_index":754,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(ts",{"_index":3908,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":743,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":818,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":1067,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["function",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":3017,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":2985,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":2729,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":1292,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["future",{"_index":1298,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/TimeLineComponent.html":{}}}],["g",{"_index":3014,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":2725,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":1166,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["gently",{"_index":717,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getactions",{"_index":1635,"title":{},"body":{"components/CardComponent.html":{}}}],["getcardoperation",{"_index":1904,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":2828,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":2829,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring():string",{"_index":2835,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":3138,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":4012,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":2344,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1662,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getitem",{"_index":1247,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getlocale",{"_index":3034,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":1268,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getselectediframeurl",{"_index":3118,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":3461,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":3140,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":3036,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":3831,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":3834,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":3136,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":1164,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["given_name",{"_index":1130,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["givennameclaim",{"_index":1108,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["gives",{"_index":1140,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["graph",{"_index":4712,"title":{},"body":{"modules.html":{}}}],["group",{"_index":4577,"title":{},"body":{"interfaces/UserState.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["guid.create",{"_index":2834,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":1246,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["guidservice",{"_index":1086,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"modules/ServicesModule.html":{}}}],["h",{"_index":4612,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["half",{"_index":4243,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handelactionbuttontext",{"_index":2311,"title":{},"body":{"components/DetailComponent.html":{}}}],["handelactionbuttontext(label",{"_index":2331,"title":{},"body":{"components/DetailComponent.html":{}}}],["handle",{"_index":436,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":2319,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":2984,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":3012,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":2998,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":2989,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":2977,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":2972,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":2999,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('json",{"_index":2969,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":3010,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":3005,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":2991,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":2994,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":2979,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.safestring(json.stringify(obj",{"_index":2971,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":2937,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":1990,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1636,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1649,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerror(error",{"_index":1206,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handleerrorontokengeneration",{"_index":1308,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":1319,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse,category:string",{"_index":1415,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handleloginattempt(payload",{"_index":1432,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlenewtoken(call",{"_index":1188,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handler",{"_index":3544,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["handlerejectedlogin",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handlerejectedlogin(errormsg",{"_index":1323,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":435,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{}},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":860,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":243,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["haschanged",{"_index":3787,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["hashlocationstrategy",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["header",{"_index":1267,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":1151,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["headers}).pipe",{"_index":1160,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["heart",{"_index":2570,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":3987,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":1955,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":617,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/InfoComponent.html":{},"components/ResizableComponent.html":{},"components/TypeFilterComponent.html":{}}}],["height.directive",{"_index":4583,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["height.directive.ts",{"_index":1527,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:21",{"_index":1541,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:24",{"_index":1540,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:27",{"_index":1539,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:29",{"_index":1537,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:41",{"_index":1542,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:45",{"_index":1544,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height:auto",{"_index":2297,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["heights",{"_index":1589,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["helper",{"_index":1250,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["here",{"_index":1947,"title":{},"body":{"injectables/CardService.html":{}}}],["hidden",{"_index":147,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hidden:boolean=false",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":3310,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetags",{"_index":2822,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{}}}],["hidetimeline",{"_index":2590,"title":{},"body":{"components/FeedComponent.html":{}}}],["homedomainextraticks",{"_index":4125,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["horizontal",{"_index":4601,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hostlistener",{"_index":1545,"title":{},"body":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlistener('document:dragstart",{"_index":2511,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":3406,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":3403,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":3408,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":2494,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":2498,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":2501,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('window:resize",{"_index":1554,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["hostlisteners",{"_index":1533,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/ResizableComponent.html":{}}}],["hou",{"_index":4614,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hour",{"_index":2229,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["hoursonly",{"_index":4622,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":2369,"title":{},"body":{"components/DetailComponent.html":{}}}],["hrefsofcsslink",{"_index":2307,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":334,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":2326,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":2316,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlelement",{"_index":1558,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["http",{"_index":1266,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":332,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http://www.rte",{"_index":318,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http_interceptors",{"_index":3605,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpclient",{"_index":1083,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":4272,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":4270,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":1084,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":1152,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpinterceptor",{"_index":4273,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":1930,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set(\"apiversion",{"_index":3924,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('locale",{"_index":3893,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('publisher",{"_index":1979,"title":{},"body":{"injectables/CardService.html":{}}}],["httpparams().set('version",{"_index":3886,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams.set",{"_index":3895,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":4267,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":2173,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":3384,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":3837,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":146,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["i18n('login.error.token.expiration",{"_index":1362,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":1352,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":1368,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":4000,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(i18n['key",{"_index":235,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18n(i18n['key'],params",{"_index":234,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18n(key",{"_index":1431,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n['parameters",{"_index":231,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nbundleversionloaded",{"_index":4422,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["i18nbundleversionloaded:new",{"_index":4425,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["i18nlabelkey",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":3998,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":3999,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nprefix",{"_index":285,"title":{},"body":{"components/ActionComponent.html":{},"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":2463,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nservice",{"_index":538,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["i18nservice:i18nservice",{"_index":581,"title":{},"body":{"components/AppComponent.html":{}}}],["iarchivefilter",{"_index":1026,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["icon",{"_index":3057,"title":{},"body":{"components/IconComponent.html":{}}}],["icon'},{'name",{"_index":379,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":3059,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":3058,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":3081,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":378,"title":{"components/IconComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":3061,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":3089,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":683,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":2396,"title":{},"body":{"components/DetailComponent.html":{}}}],["id:string",{"_index":187,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["identifier",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":2143,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["ie",{"_index":3574,"title":{},"body":{"components/ResizableComponent.html":{}}}],["if(!!control.value",{"_index":3269,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":4027,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":4022,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!parent",{"_index":1565,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["if(!this.delegateurl",{"_index":1274,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["if(!this.form",{"_index":1488,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":3021,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":2629,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(args.length",{"_index":2981,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(card.process",{"_index":178,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(card.state",{"_index":182,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(changes['card'].currentvalue",{"_index":2461,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(i",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["if(i18n",{"_index":229,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(ismoment(realnow",{"_index":4211,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(key",{"_index":1845,"title":{},"body":{"classes/CardOperation.html":{}}}],["if(locale",{"_index":3048,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(newelapsedsofar>=this.refreshthreshold",{"_index":2650,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(params",{"_index":232,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(result",{"_index":1812,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1810,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":2964,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(this.active",{"_index":2767,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":2769,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.dark||this.light",{"_index":3103,"title":{},"body":{"components/IconComponent.html":{}}}],["if(this.expandedmenu[index",{"_index":3478,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":3481,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":4232,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":4219,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":3052,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":3018,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":3466,"title":{},"body":{"components/NavbarComponent.html":{}}}],["iframe_url",{"_index":2873,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":3110,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":381,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":3825,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":3112,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":3111,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":380,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":3123,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["implementation",{"_index":2735,"title":{},"body":{"classes/Filter.html":{}}}],["implemented",{"_index":2415,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":1313,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["imports",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["include",{"_index":3703,"title":{},"body":{"modules/StateModule.html":{}}}],["incorrect",{"_index":2548,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":3349,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":383,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":3128,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":3127,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":382,"title":{"components/InfoComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["informatios",{"_index":1231,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["inherit",{"_index":3500,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inheritance",{"_index":2737,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":1823,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["iniitialized",{"_index":1273,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["init",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initauthstatus",{"_index":60,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code:window.location.href.substring(i",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["initchartcomponent",{"_index":384,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":834,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":837,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":2642,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1446,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1515,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["initialized",{"_index":1173,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["initializehandlebarstemplates",{"_index":2312,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":2313,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialstate",{"_index":2160,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["initrecipientfilter",{"_index":2776,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilter",{"_index":2777,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":2616,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":2778,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":3163,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittypefilter",{"_index":2779,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":2032,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":2039,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":841,"title":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["injectables",{"_index":842,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["injected",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["inline",{"_index":3156,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":152,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["inputpublishers",{"_index":4364,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["inputs",{"_index":151,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/ArchiveListComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":249,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":2506,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":1251,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["instanciate",{"_index":1491,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":2736,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":2368,"title":{},"body":{"components/DetailComponent.html":{}}}],["intercept",{"_index":4264,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":4269,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":1950,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":1951,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":4261,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":3606,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":724,"title":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{}}}],["interfaces",{"_index":725,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["internal",{"_index":3498,"title":{},"body":{"components/NavbarComponent.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":3054,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this.translate.getbrowserlang",{"_index":3007,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":1142,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{}}}],["invalidform",{"_index":2286,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isauth",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["isdisabled",{"_index":2264,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["isequal",{"_index":1447,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1463,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":1226,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["isinthefuture(expirationdate",{"_index":1224,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture(time",{"_index":1299,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ismoment",{"_index":4206,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":1222,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnan(tointeger(value",{"_index":2201,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnotanumber",{"_index":1221,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnumber(date.day",{"_index":2220,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(date.month",{"_index":2218,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[0",{"_index":2207,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[1",{"_index":2212,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(dateparts[2",{"_index":2215,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.hour",{"_index":2224,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(time.minute",{"_index":2226,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["isnumber(value",{"_index":2197,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["issue",{"_index":439,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["istanbul",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["isused",{"_index":1248,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isvirtualtimeundefine",{"_index":4183,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":1371,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["item",{"_index":3493,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":2171,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["iterate",{"_index":4304,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["january",{"_index":2610,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["jnlp",{"_index":4703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["jnlp='jnlp",{"_index":197,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["js",{"_index":4663,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json",{"_index":3927,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["jwt",{"_index":1089,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":1135,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.family",{"_index":1132,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.given",{"_index":1129,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.login",{"_index":1125,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.expireclaim",{"_index":1256,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.familynameclaim",{"_index":1262,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.givennameclaim",{"_index":1261,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode",{"_index":1088,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode(token",{"_index":1286,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["keep",{"_index":1860,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":158,"title":{},"body":{"classes/Action.html":{},"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Map.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{}}}],["key?:string",{"_index":200,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label.parameters",{"_index":2421,"title":{},"body":{"components/DetailComponent.html":{}}}],["label1",{"_index":3966,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":3969,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":3974,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label=new",{"_index":227,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lang",{"_index":3836,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["language",{"_index":3549,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["languages",{"_index":4306,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["large",{"_index":3701,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1722,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1782,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1781,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastname",{"_index":1302,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname:string",{"_index":4513,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname?:string",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["later",{"_index":497,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["latest",{"_index":2627,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":468,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["leaves",{"_index":3807,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["left",{"_index":2294,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/NavbarComponent.html":{}}}],["left:0",{"_index":962,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["legend",{"_index":333,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["legend.accessibility",{"_index":2292,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["less",{"_index":4257,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":3378,"title":{},"body":{"classes/Message.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":675,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["library.add(faclock",{"_index":2720,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":686,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":687,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":324,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["light",{"_index":479,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["light:boolean",{"_index":3086,"title":{},"body":{"components/IconComponent.html":{}}}],["lightcard",{"_index":461,"title":{"classes/LightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcard):boolean",{"_index":2766,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":2760,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.actions",{"_index":3225,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["lightcard.id",{"_index":1863,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcard.summary.key",{"_index":1711,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.title.key",{"_index":1710,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcardactions",{"_index":524,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":466,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":460,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.addthirdactions",{"_index":514,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":509,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.delayedlightcardupdate",{"_index":521,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":502,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":511,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.lightcardalreadyupdated",{"_index":523,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":501,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":505,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":506,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":503,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.removelightcard",{"_index":512,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":507,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyloaded",{"_index":519,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.thirdactionalreadyupdated",{"_index":520,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatealightcard",{"_index":515,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanaction",{"_index":516,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updateanactionfailure",{"_index":518,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":510,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1814,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1817,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardalreadyupdated",{"_index":498,"title":{"classes/LightCardAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardeffects",{"_index":221,"title":{"injectables/LightCardEffects.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/AppState.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lightcardid",{"_index":286,"title":{},"body":{"components/ActionComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{}}}],["lightcardreducer",{"_index":765,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":504,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter(card",{"_index":1858,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["line",{"_index":3157,"title":{},"body":{"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":403,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":2694,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":4042,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":4041,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:24",{"_index":4059,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:25",{"_index":4060,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:27",{"_index":4058,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":4046,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:32",{"_index":4048,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:423",{"_index":4050,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:445",{"_index":4047,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/custom",{"_index":2705,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/directives/app",{"_index":2465,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/directives/mouse",{"_index":2712,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/init",{"_index":2715,"title":{},"body":{"modules/FeedModule.html":{}}}],["line/tick",{"_index":2708,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["line/time",{"_index":2693,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["link",{"_index":2139,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link/button",{"_index":1404,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link1",{"_index":3967,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":3970,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":3975,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["list",{"_index":251,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":346,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1052,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["list.component.html",{"_index":972,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.scss",{"_index":971,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":970,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:23",{"_index":974,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:24",{"_index":973,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:25",{"_index":1822,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:28",{"_index":975,"title":{},"body":{"components/ArchiveListComponent.html":{}}}],["list.component.ts:31",{"_index":1825,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/archive",{"_index":969,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["list/card",{"_index":1819,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/filters.component",{"_index":2695,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":2821,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:20",{"_index":2823,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:24",{"_index":2824,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/tags",{"_index":2717,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":2698,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":2696,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":252,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1392,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":1331,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listsettingcomponent",{"_index":385,"title":{"components/ListSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":457,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiFilterComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/TryToLogIn.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["little",{"_index":2510,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":427,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadarchivedbyid",{"_index":1758,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcard",{"_index":431,"title":{"classes/LoadArchivedCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcard(id",{"_index":1916,"title":{},"body":{"injectables/CardService.html":{}}}],["loadarchivedcard({id",{"_index":2120,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadarchivedcardfailure",{"_index":434,"title":{"classes/LoadArchivedCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardfailure(err",{"_index":1768,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcardsuccess",{"_index":433,"title":{"classes/LoadArchivedCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardsuccess({card",{"_index":1767,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadbyid",{"_index":1759,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcard",{"_index":426,"title":{"classes/LoadCard.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":1918,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":1862,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":429,"title":{"classes/LoadCardFailure.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1773,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":428,"title":{"classes/LoadCardSuccess.html":{}},"body":{"classes/AddActionsAppear.html":{},"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1772,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":703,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":572,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":2035,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":2025,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":2036,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":2024,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfiguration",{"_index":2016,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"classes/RefreshTranslation.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["loadedcardaction.payload.lightcards",{"_index":4329,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["loader",{"_index":4658,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":2617,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nformenuentries",{"_index":3959,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":3976,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loading",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{},"interfaces/TranslationState.html":{}}}],["loading:boolean",{"_index":4423,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["loading:false",{"_index":4426,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["loadlightcards",{"_index":467,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":472,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":475,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":471,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":1874,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadmenu",{"_index":2857,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":2859,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":3359,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":2858,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":3358,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":1866,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":2881,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":2882,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":3637,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":3631,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":2667,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":3636,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth:payloadforsuccessfulauthentication):observable",{"_index":1196,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["local",{"_index":2379,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":2960,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales",{"_index":3616,"title":{},"body":{"components/SettingsComponent.html":{},"classes/Third.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales.map(locale",{"_index":4309,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["locales?:string",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["localestorage",{"_index":1215,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage",{"_index":1210,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.clear",{"_index":1229,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1220,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":1245,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":1212,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":1240,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":1238,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":1234,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":1236,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorageauthcontent",{"_index":1093,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":1280,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["location.pathname.length",{"_index":1282,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["locationstrategy",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":153,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":210,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["login'},{'name",{"_index":386,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":3308,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1420,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1424,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1425,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":3342,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":3343,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":3345,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":3346,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":3344,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["login:id",{"_index":1510,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":4511,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["loginclaim",{"_index":1105,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["logincomponent",{"_index":100,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["loginmessage",{"_index":3311,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":3347,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["longtext",{"_index":254,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["lttd",{"_index":1617,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":2988,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":3000,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["m.format(options.hash.format",{"_index":3004,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level==messagelevel.error",{"_index":3330,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this.translate.getbrowserlang",{"_index":3003,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":1615,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":3564,"title":{},"body":{"components/ResizableComponent.html":{}}}],["makes",{"_index":1579,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["manage",{"_index":714,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":4003,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":1306,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manager",{"_index":1312,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":2027,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["mandatory",{"_index":256,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":165,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"injectables/UserEffects.html":{}}}],["map(([action",{"_index":865,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(([action,configtags",{"_index":2628,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([elapsedsincelast",{"_index":2665,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([haschanged",{"_index":3793,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map((a",{"_index":1853,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":1328,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["map((auth",{"_index":1192,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map((card",{"_index":1766,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["map((cards",{"_index":4331,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((config",{"_index":2023,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((loadedcardaction",{"_index":4328,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((loadedmenusaction:loadmenusuccess)=>loadedmenusaction.payload.menu",{"_index":4349,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((menus:thirdmenu[])=>translateeffects.extractpublisherassociatedwithdistinctversionsfrom(menus",{"_index":4350,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversion",{"_index":4336,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((publisherandversions:map>)=>translateeffects.sendtranslateaction(publisherandversions",{"_index":4352,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((referencedtranslation",{"_index":4340,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map((resultpage",{"_index":856,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map((settings",{"_index":3635,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map((storedcard",{"_index":3196,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["map((user",{"_index":4529,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(a=>new",{"_index":3639,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(action",{"_index":1384,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(auth",{"_index":1357,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(authenticationinfo",{"_index":1345,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(check",{"_index":1161,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(currentstatus",{"_index":3784,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["map(data",{"_index":1190,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(elem",{"_index":4300,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["map(id=>{return",{"_index":1509,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["map(lightcard",{"_index":1861,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(menu",{"_index":3357,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(menuentry",{"_index":3873,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(object.entries(obj",{"_index":3928,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":1871,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(params",{"_index":855,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map(s=>handlebars.compile(s",{"_index":2967,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":3643,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":3911,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(context",{"_index":2957,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(this.convertjsontoi18nobject(locale",{"_index":3902,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(timeref",{"_index":3995,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":1199,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(url",{"_index":3365,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(user",{"_index":4545,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(v=>new",{"_index":2638,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":3151,"title":{},"body":{"components/InfoComponent.html":{}}}],["map(x",{"_index":1592,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["map>)=>this.extracti18ntoupdate(versions",{"_index":4351,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["maplanguages",{"_index":4401,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["maplanguages(thirdsandversions",{"_index":4307,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapped",{"_index":2634,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["mapthirds",{"_index":4402,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapthirds(locale",{"_index":4313,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mapversions",{"_index":4403,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["mapversions(locale",{"_index":4319,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["margin",{"_index":613,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/LoginComponent.html":{}}}],["matching",{"_index":138,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["materials",{"_index":3543,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["math.max",{"_index":3412,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":3413,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1712,"title":{},"body":{"components/CardComponent.html":{}}}],["maxedretries",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":257,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["maxsize]=\"3",{"_index":1009,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["means",{"_index":4015,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["medium",{"_index":3065,"title":{},"body":{"components/IconComponent.html":{}}}],["medium:boolean",{"_index":3083,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":132,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["menu",{"_index":728,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":3483,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":3502,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout",{"_index":3503,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":3491,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":3490,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu_entry_id",{"_index":2870,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":2869,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":3827,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":2130,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":2876,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":2856,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":2855,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":2862,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":2863,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":2864,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":2868,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":2875,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":2872,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":786,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":3750,"title":{},"body":{"classes/Third.html":{}}}],["menuentries?:thirdmenuentry",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry.url",{"_index":3874,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":3374,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menureducer",{"_index":774,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":3917,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TranslateEffects.html":{}}}],["menus.map(menu",{"_index":4355,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["menus.push(menu",{"_index":3916,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menustate",{"_index":736,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["mergemap",{"_index":4289,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["mergemap((action",{"_index":4295,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["message('the",{"_index":1350,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":1367,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1430,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1409,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":3380,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":1351,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceholder",{"_index":1451,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":273,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":750,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":822,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["methods",{"_index":281,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["min",{"_index":4608,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["minus",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["minus2hour",{"_index":1940,"title":{},"body":{"injectables/CardService.html":{}}}],["minute",{"_index":2230,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["minutes",{"_index":2678,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["minutesonly",{"_index":4613,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["miscellaneous",{"_index":4680,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmm",{"_index":4630,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["modal",{"_index":361,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["modal.component",{"_index":2006,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"injectables/ThirdActionService.html":{}}}],["modal.component.html",{"_index":2060,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts",{"_index":2059,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["modal.component.ts:10",{"_index":2067,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:14",{"_index":2068,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:18",{"_index":2066,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:8",{"_index":2065,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal.component.ts:9",{"_index":2069,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["modal/confirm",{"_index":2005,"title":{},"body":{"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"modules/ServicesModule.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["modalservice",{"_index":3768,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["modern",{"_index":3570,"title":{},"body":{"components/ResizableComponent.html":{}}}],["modification",{"_index":1786,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["modify",{"_index":868,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["module",{"_index":625,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["modules",{"_index":627,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":707,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/cards/components/action/confirm",{"_index":3610,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/ThirdActionService.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":704,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/settings/settings.module#settingsmodule",{"_index":711,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":709,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/utilities/utilities.module",{"_index":685,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":1995,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":1295,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment(currentmoment",{"_index":4069,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(date).startof('year",{"_index":4626,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":3001,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(startdomainuse",{"_index":4077,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["moment(this.referencetime",{"_index":4223,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":4607,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":4230,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":4225,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(this._locale",{"_index":3050,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.moment",{"_index":2581,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["moment.tz.setdefault(timezone",{"_index":3055,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":2602,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["momentnow",{"_index":4196,"title":{},"body":{"classes/TimeReference.html":{}}}],["mon",{"_index":4617,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["mono.svg",{"_index":3105,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":2210,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/TimeLineComponent.html":{}}}],["more",{"_index":716,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":3401,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":3383,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":3395,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":413,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":3387,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":3386,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":3399,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":3388,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":2488,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["movement",{"_index":2508,"title":{},"body":{"directives/DraggableDirective.html":{},"components/TimeLineComponent.html":{}}}],["movetocodeflowloginpage",{"_index":1272,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["mozilla",{"_index":323,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["mpl",{"_index":328,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["multi",{"_index":388,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multifiltercomponent",{"_index":387,"title":{"components/MultiFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent",{"_index":389,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:24",{"_index":4437,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:26",{"_index":4435,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":4433,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":4434,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":4449,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":4450,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":4436,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":4448,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":4447,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:38",{"_index":4438,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":4444,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:69",{"_index":4443,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:74",{"_index":4446,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:78",{"_index":4441,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:82",{"_index":4439,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:87",{"_index":4440,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:93",{"_index":4442,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:97",{"_index":4445,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":4147,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":4165,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimelinetimespans",{"_index":4160,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":4163,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimelinetimespans",{"_index":4151,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["myticksresponsiveconf",{"_index":4097,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["myticksyearconf",{"_index":4132,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["name:string",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["navbar",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["navbar'},{'name",{"_index":391,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":3440,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":3439,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcollapsed",{"_index":3445,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":112,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["navigate",{"_index":1333,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":2104,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":3370,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetoarchivedcard",{"_index":2105,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetocard",{"_index":2106,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":2107,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":2135,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":2865,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":3692,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":3696,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":2163,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":718,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["nbofpublishers",{"_index":4389,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["nbw",{"_index":4619,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["necessary",{"_index":1700,"title":{},"body":{"components/CardComponent.html":{}}}],["need",{"_index":240,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["needed",{"_index":220,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["needing",{"_index":4333,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["needsconfirm",{"_index":157,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["neutraltimereference",{"_index":4251,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":4245,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["newdate",{"_index":4170,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.add(conf[key",{"_index":4176,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.startof(value",{"_index":4174,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.subtract(conf[key",{"_index":4177,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newelapsedsofar",{"_index":2648,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["next",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":4274,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":2770,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":4461,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":4459,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":4026,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.notification",{"_index":4465,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.question",{"_index":4463,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":4021,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":2771,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":2772,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":302,"title":{},"body":{"components/ActionComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/ConfirmModalComponent.html":{},"classes/DateTimeNgb.html":{},"modules/FeedModule.html":{},"injectables/ThirdActionService.html":{},"dependencies.html":{}}}],["ng_validators",{"_index":2239,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ng_value_accessor",{"_index":2236,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["ngafterviewinit",{"_index":1821,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/ResizableComponent.html":{}}}],["ngb.model",{"_index":915,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ngb.model.ts",{"_index":2183,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:16",{"_index":2190,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:22",{"_index":2195,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:35",{"_index":2191,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:43",{"_index":2193,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngb.model.ts:49",{"_index":2192,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbactivemodal",{"_index":2064,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":3487,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbdateparserformatter",{"_index":2184,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["ngbdatestruct",{"_index":916,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngbmodal",{"_index":288,"title":{},"body":{"components/ActionComponent.html":{},"injectables/ThirdActionService.html":{}}}],["ngbmodule",{"_index":660,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":2721,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngbtimestruct",{"_index":917,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/DateTimeNgb.html":{}}}],["ngmodule",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["ngonchanges",{"_index":2314,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":2435,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1448,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":282,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":443,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":874,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":465,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":744,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1442,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":668,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":2702,"title":{},"body":{"modules/FeedModule.html":{}}}],["nomarginrow",{"_index":961,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["none",{"_index":1624,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["nopaddingrow",{"_index":964,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["normal",{"_index":4217,"title":{},"body":{"classes/TimeReference.html":{}}}],["normalizedcurrentstatus",{"_index":3785,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["noselectioncomponent",{"_index":392,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":4276,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":2556,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["notification",{"_index":2795,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notify",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["now",{"_index":1576,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["null",{"_index":185,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/UserState.html":{}}}],["number",{"_index":258,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/DateTimeNgb.html":{},"classes/Detail.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/NavbarComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{}}}],["oauth2.client",{"_index":1119,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["oauth2.flow.delagate",{"_index":1123,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["obj",{"_index":2970,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object",{"_index":218,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/BaseSettingComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object.keys(cachedversions",{"_index":4367,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(conf).foreach(key",{"_index":4172,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object.keys(filters).foreach(key",{"_index":945,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object.keys(thirdsandversion",{"_index":4315,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(translationreferencestoupdate).length",{"_index":4390,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(untrackedversions).length",{"_index":4386,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.keys(versioninput",{"_index":4365,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["object.setprototypeof(params,ofmap.prototype",{"_index":233,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["object.setprototypeof(t",{"_index":3854,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object.values(enumeration).includes(value",{"_index":931,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["object[publisher",{"_index":3890,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[publisher][version",{"_index":3891,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["observable.create(observer",{"_index":1958,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":1967,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":1960,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data,cardoperation.converttypeintoenum",{"_index":1961,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":330,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["oc",{"_index":3567,"title":{},"body":{"components/ResizableComponent.html":{}}}],["occurred",{"_index":1964,"title":{},"body":{"injectables/CardService.html":{}}}],["of(0",{"_index":1003,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["of([new",{"_index":3962,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(new",{"_index":1359,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["of(null",{"_index":1163,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["of(template",{"_index":2965,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":3851,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":1349,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":3977,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":3252,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["of(v.label",{"_index":3255,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["ofactions/archive.actions",{"_index":882,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/authentication.actions",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ofactions/card.actions",{"_index":1412,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/config.actions",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":1890,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1410,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/ThirdActionService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/menu.actions",{"_index":2147,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofactions/settings.actions",{"_index":1477,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":2669,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":4061,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofactions/translate.actions",{"_index":4290,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofeffects/archive.effects",{"_index":805,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/authentication.effects",{"_index":760,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":758,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":756,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":795,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":783,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":791,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":788,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":787,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":799,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":802,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/translate.effects",{"_index":814,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/user.effects",{"_index":810,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":166,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/archive",{"_index":1027,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["ofmodel/card",{"_index":1893,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":163,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofmodel/datetime",{"_index":914,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofmodel/detail",{"_index":2350,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["ofmodel/feed",{"_index":828,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":164,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":462,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/Page.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/page.model",{"_index":885,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/CardService.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["ofmodel/thirds.model",{"_index":301,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/time.model",{"_index":2562,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user",{"_index":2353,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{}}}],["ofmodel/user.model",{"_index":1092,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["ofselectors/archive.selectors",{"_index":884,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchivesComponent.html":{}}}],["ofselectors/authentication.selectors",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":1892,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":576,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["ofselectors/feed.selectors",{"_index":2597,"title":{},"body":{"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":3121,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1479,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":3039,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["ofselectors/time.selectors",{"_index":3144,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofselectors/translation.selectors",{"_index":4292,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/authentication.service",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["ofservices/card.service",{"_index":875,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":2034,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":831,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":700,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":1087,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":577,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":661,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":3608,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/third",{"_index":305,"title":{},"body":{"components/ActionComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/thirds.service",{"_index":1739,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["ofservices/time.service",{"_index":918,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ofservices/user.service",{"_index":4560,"title":{},"body":{"injectables/UserEffects.html":{}}}],["ofstates/archive.state",{"_index":803,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/authentication.state",{"_index":780,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":781,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":793,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":762,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":785,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":797,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":800,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":796,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/translation.state",{"_index":815,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/user.state",{"_index":808,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/actions/archive.actions",{"_index":912,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["ofstore/actions/authentication.actions",{"_index":3647,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/actions/card.actions",{"_index":1665,"title":{},"body":{"components/CardComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/actions/light",{"_index":1740,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{}}}],["ofstore/actions/user.actions",{"_index":1896,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"injectables/UserEffects.html":{}}}],["ofstore/index",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["ofstore/reducers/archive.reducer",{"_index":779,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":748,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":769,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":771,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":766,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":775,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":773,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":777,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":764,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/translation.reducer",{"_index":812,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/user.reducer",{"_index":807,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/archive.selectors",{"_index":978,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1667,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/config.selectors",{"_index":998,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/FiltersComponent.html":{},"components/NavbarComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1664,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["ofstore/state.module",{"_index":659,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":746,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":873,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(archiveactiontypes.sendarchivequery",{"_index":849,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(archiveactiontypes.updatearchivepage",{"_index":863,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":4526,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":1327,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":1339,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":1387,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1400,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadarchivedcard",{"_index":1763,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1770,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":2021,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":2043,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":1378,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":1882,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.addthirdactions",{"_index":3219,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.clearlightcardselection",{"_index":1761,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(lightcardactiontypes.delayedlightcardupdate",{"_index":3192,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":1852,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(lightcardactiontypes.updateanaction",{"_index":3201,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":3355,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.loadmenusuccess",{"_index":4348,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":3361,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":2115,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":2109,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":3633,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":2625,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":3641,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(timeactiontypes.tick",{"_index":2647,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(translateactionstypes.updatetranslation",{"_index":4294,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(translateactionstypes.updatetranslationsuccessful",{"_index":4325,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["oftype(useractionstypes.createuserapplication",{"_index":4542,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.createuserapplicationonsuccess",{"_index":4557,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationnotregistered",{"_index":4551,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractionstypes.userapplicationregistered",{"_index":1868,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oidc",{"_index":1168,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ok",{"_index":1372,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"components/ConfirmModalComponent.html":{},"injectables/FeedFiltersEffects.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":3575,"title":{},"body":{"components/ResizableComponent.html":{}}}],["omit",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/ResizableComponent.html":{}}}],["onchange",{"_index":2245,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchange(event",{"_index":2254,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["onchanges",{"_index":2246,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1438,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":2512,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":331,"title":{},"body":{"components/ActionComponent.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":1094,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ongoing",{"_index":1785,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":272,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":3390,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":3397,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":3404,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":3407,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":3409,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":2495,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":2499,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":2502,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onresize",{"_index":1555,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["onsubmit",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["ontouched",{"_index":2244,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["open",{"_index":1638,"title":{},"body":{"components/CardComponent.html":{}}}],["open(confirmmodalcomponent",{"_index":3800,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["operation",{"_index":2078,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["operation.cardids",{"_index":1878,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.cards",{"_index":1875,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":759,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":1849,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:32",{"_index":1851,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:41",{"_index":1881,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:73",{"_index":1889,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:92",{"_index":1865,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":1894,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":1834,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["operation.model.ts:10",{"_index":1840,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.model.ts:21",{"_index":1842,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.type",{"_index":1872,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":1867,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":2974,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":1583,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":2976,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":3008,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["order",{"_index":214,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["otherwise",{"_index":1145,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"modules/UtilitiesModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":2493,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":2469,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":1225,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["overflow",{"_index":980,"title":{},"body":{"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["overflow:hidden",{"_index":2298,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["override",{"_index":3894,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["overview",{"_index":4704,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":4643,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":624,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/NavbarComponent.html":{}}}],["padnumber(date.day",{"_index":2221,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(date.month",{"_index":2219,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.hour",{"_index":2225,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(time.minute",{"_index":2227,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["padnumber(value",{"_index":2196,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["page",{"_index":106,"title":{"classes/Page.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError.html":{},"classes/InitAuthStatus.html":{},"injectables/MenuEffects.html":{},"classes/Page.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["page'},{'name",{"_index":348,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["page(1",{"_index":1029,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["page.component",{"_index":1050,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["page.component.html",{"_index":987,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.scss",{"_index":986,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts",{"_index":985,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:24",{"_index":995,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:25",{"_index":996,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:26",{"_index":990,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:28",{"_index":991,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.component.ts:37",{"_index":993,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["page.tostring",{"_index":870,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["page/archive",{"_index":984,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"modules/ArchivesModule.html":{}}}],["page]=\"first",{"_index":1007,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pagechange)=\"updateresultpage($event",{"_index":1008,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["pair",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["paload",{"_index":1397,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":4674,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":261,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":1365,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":2728,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":230,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["params.append('client_secret",{"_index":1187,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('clientid",{"_index":1179,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('code",{"_index":1174,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('grant_type",{"_index":1175,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('password",{"_index":1186,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('redirect_uri",{"_index":1180,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('username",{"_index":1185,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append(key",{"_index":1977,"title":{},"body":{"injectables/CardService.html":{}}}],["params.set('page",{"_index":958,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('size",{"_index":955,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.set('version",{"_index":3900,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.set(key",{"_index":950,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["params.tostring",{"_index":1183,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params['error",{"_index":1426,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parent",{"_index":1557,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["parent.clientheight",{"_index":1601,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(calcheightclass",{"_index":1587,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(fixedheightclass",{"_index":1574,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentform",{"_index":3417,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["parentid",{"_index":1532,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentmodule",{"_index":3611,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2188,"title":{},"body":{"classes/DateTimeNgb.html":{},"modules/StateModule.html":{}}}],["parse(value",{"_index":2194,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["parseint(`${value",{"_index":2200,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["party",{"_index":2138,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":2739,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["passes",{"_index":2749,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["patch",{"_index":2883,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1476,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1521,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":2885,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":3645,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":2884,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":3644,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":3668,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":3671,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":3678,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":701,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":1281,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pathmatch",{"_index":1066,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["pattern",{"_index":2517,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["payload",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["payload.access_token",{"_index":1259,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid",{"_index":1258,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid.tostring",{"_index":1241,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":1239,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expires_in",{"_index":1254,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.identifier",{"_index":1235,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.password).pipe",{"_index":1389,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":1237,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload:tickpayload",{"_index":2578,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{card:lightcard",{"_index":522,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["payload:{cardstimeline",{"_index":3172,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payload:{data",{"_index":3170,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filters",{"_index":839,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":835,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{timereference:timereference",{"_index":2585,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":41,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":1257,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["perform",{"_index":2077,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["performpost",{"_index":3802,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["periodstarttoend",{"_index":4045,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["periodstarttoend(conf",{"_index":4049,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["pertinent",{"_index":2165,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pick",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/typealiases.html":{}}}],["pieces",{"_index":3705,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":1198,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":1341,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(concatall",{"_index":4312,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(first",{"_index":1497,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(map((actions",{"_index":3227,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["pipe(map((json",{"_index":3926,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(map(config",{"_index":1678,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(flowmode=>flowmode",{"_index":3328,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(i18n",{"_index":4322,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["pipe(map(pulse",{"_index":3991,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1494,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{}}}],["pipe(tap(menus",{"_index":3468,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe/x",{"_index":2709,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["pipes",{"_index":4587,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":4606,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["placeholder",{"_index":1444,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":3067,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":3091,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":1944,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":2167,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":2473,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":2481,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":2482,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":2474,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":2486,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":2475,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":2489,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":4486,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["position:absolute",{"_index":2293,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["possible",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["postaction",{"_index":3765,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postaction$.subscribe",{"_index":3799,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary",{"_index":3762,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postactionandupdateifnecessary(lightcardid",{"_index":3777,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["postdata",{"_index":1147,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.append('token",{"_index":1150,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.tostring",{"_index":1159,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["preloadallmodules",{"_index":695,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":723,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":3237,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["present",{"_index":1294,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{}}}],["prev",{"_index":1595,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["previous",{"_index":2573,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["primary",{"_index":3307,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":279,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["process",{"_index":181,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/ArchiveFiltersComponent.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["process.states[card.state",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":895,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/Third.html":{}}}],["processes?:ofmap",{"_index":176,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1616,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1788,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["proper",{"_index":241,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["properties",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/ActionComponent.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["property",{"_index":2673,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{}}}],["protected",{"_index":1443,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["prototype",{"_index":242,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["provide",{"_index":691,"title":{},"body":{"modules/AppModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":1560,"title":{},"body":{"directives/CalcHeightDirective.html":{},"modules/StateModule.html":{}}}],["providedin",{"_index":2787,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providers",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"components/DatetimeFilterComponent.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":3700,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"modules/UtilitiesModule.html":{}}}],["publication",{"_index":1691,"title":{},"body":{"components/CardComponent.html":{}}}],["publicationdate",{"_index":1837,"title":{},"body":{"classes/CardOperation.html":{}}}],["publish_date_from_param",{"_index":920,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publish_date_to_param",{"_index":922,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdate",{"_index":1611,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publishdatefrom",{"_index":921,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publishdateto",{"_index":923,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["publisher",{"_index":1609,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/LightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["publisher/${card.publisher}/process/${card.processid}/states/${card.state}/actions",{"_index":1684,"title":{},"body":{"components/CardComponent.html":{}}}],["publisherversion",{"_index":1610,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":2962,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["push",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["put",{"_index":1263,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"modules/UtilitiesModule.html":{}}}],["query",{"_index":1015,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["queryarchivedcards",{"_index":844,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["queryarchivedcardspage",{"_index":845,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["querylist",{"_index":2441,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":3938,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":3860,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":2162,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":2899,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":2920,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":2958,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":3939,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":3848,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["querythirdfromcard",{"_index":3940,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythirdfromcard(card",{"_index":3845,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["question",{"_index":2793,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["r",{"_index":3889,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["radius",{"_index":966,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["radius:5px",{"_index":968,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["raise",{"_index":4540,"title":{},"body":{"injectables/UserEffects.html":{}}}],["rangeend",{"_index":1922,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":1924,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart:rangestart,rangeend",{"_index":1973,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":657,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":1381,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":4216,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnow",{"_index":4199,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":4202,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":4213,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":4212,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":4113,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":2738,"title":{},"body":{"classes/Filter.html":{}}}],["reasons",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["received",{"_index":4142,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["receivedcard",{"_index":3193,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["recipient_filter",{"_index":2817,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":2754,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":2753,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":1316,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":712,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["reduce",{"_index":3838,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus",{"_index":3915,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["ref",{"_index":4222,"title":{},"body":{"classes/TimeReference.html":{}}}],["reference",{"_index":2568,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencedtranslation",{"_index":4342,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["referencetime",{"_index":4190,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":1703,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["refreshed",{"_index":2674,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["refreshifselectedcard",{"_index":1850,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshlanguageusedbytranslation",{"_index":4324,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["refreshthreshold",{"_index":2618,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["refreshtranslation",{"_index":3532,"title":{"classes/RefreshTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["regarding",{"_index":1293,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registerarrayatindex",{"_index":2900,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":2901,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":2902,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":2903,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":2904,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":1167,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["registeri18n",{"_index":2905,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerjson",{"_index":2906,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":2907,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":2908,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":2909,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registeronchange",{"_index":2247,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registeronchange(fn",{"_index":2257,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched",{"_index":2248,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerontouched(fn",{"_index":2260,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["registerpreservespace",{"_index":2910,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":2911,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":2912,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":2913,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":2914,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":2315,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":1375,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rejectlogin",{"_index":69,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1429,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["related",{"_index":438,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":1242,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["reload",{"_index":611,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["removelightcard",{"_index":483,"title":{"classes/RemoveLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["removelightcard({cards",{"_index":1877,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["removes",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rendered",{"_index":1790,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":2371,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":2732,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":2557,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1949,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":4281,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":4275,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requiredfield",{"_index":1452,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["reset",{"_index":641,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resetform",{"_index":3315,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":1309,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resizable",{"_index":3557,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable'},{'name",{"_index":395,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["resizable.component.css",{"_index":3558,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizable.component.html",{"_index":3559,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resizablecomponent",{"_index":394,"title":{"components/ResizableComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resizablecomponent:10",{"_index":1827,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:12",{"_index":1826,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resizablecomponent:27",{"_index":1824,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["resize",{"_index":3563,"title":{},"body":{"components/ResizableComponent.html":{}}}],["resized",{"_index":1820,"title":{},"body":{"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["resolvethirdpartylink",{"_index":3353,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":2377,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":3883,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":3887,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":1289,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["responsetype",{"_index":3878,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result[u.third",{"_index":4359,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["resultpage",{"_index":1021,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{}}}],["results",{"_index":139,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":1855,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":2030,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":2017,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":2019,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":184,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":2172,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":297,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"components/ConfirmModalComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"injectables/TranslateEffects.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserService.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["reverse",{"_index":2205,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["right",{"_index":614,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["right:0",{"_index":963,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/DatetimeFilterComponent.html":{}}}],["right:7px",{"_index":965,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["root",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":341,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["rotate]=\"true",{"_index":1010,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["route",{"_index":2142,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":729,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":784,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":2103,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:27",{"_index":2108,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:34",{"_index":2126,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:49",{"_index":2123,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:71",{"_index":2133,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:85",{"_index":2114,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigated",{"_index":2145,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":2134,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":2146,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":761,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":696,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1070,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":721,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":2116,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":737,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":2111,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":2159,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":2121,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":2132,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":2129,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":2131,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":2176,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":2118,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":2150,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":2157,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":745,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":2177,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":697,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":719,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":662,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":694,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":4485,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":259,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":317,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["rules",{"_index":1315,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":1217,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["rvalue",{"_index":2986,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{}}}],["safe",{"_index":2376,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":2372,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":2380,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":2378,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":2338,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":2347,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":3117,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["same",{"_index":1578,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":2320,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":2606,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["save",{"_index":1230,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{}}}],["saveauthenticationinformation(payload",{"_index":1233,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["scope",{"_index":2734,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":2390,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":2393,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":2392,"title":{},"body":{"components/DetailComponent.html":{}}}],["search",{"_index":1561,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sec",{"_index":4609,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["second",{"_index":2231,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/TimeLineComponent.html":{}}}],["secondedsonly",{"_index":4623,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["secret",{"_index":1121,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["security",{"_index":1946,"title":{},"body":{"injectables/CardService.html":{}}}],["see",{"_index":3566,"title":{},"body":{"components/ResizableComponent.html":{}}}],["select",{"_index":477,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"components/TimeLineComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfeed",{"_index":4141,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":2598,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(selectarchivecount",{"_index":1001,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["select(selectarchivelightcards",{"_index":1039,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["select(selectconfigloaded",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["selectarchivecount",{"_index":997,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["selectarchivedlightcard",{"_index":1017,"title":{"classes/SelectArchivedLightCard.html":{}},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectarchivedlightcard({selectedcardid",{"_index":2122,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectarchivefilters",{"_index":883,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["selectarchivelightcards",{"_index":977,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{}}}],["selectarchivelightcardselection",{"_index":1037,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["selectauthenticationstate",{"_index":2352,"title":{},"body":{"components/DetailComponent.html":{}}}],["selectcardactionsappearstate",{"_index":1666,"title":{},"body":{"components/CardComponent.html":{}}}],["selectcardstateselectedid",{"_index":1891,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1408,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":2037,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":3143,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":2430,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":2438,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":491,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selected_iframe_url",{"_index":3372,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":508,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":3114,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":262,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["selecti18nuploaded",{"_index":4291,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["selectidentifier",{"_index":1484,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":480,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":393,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":2691,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":3506,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3505,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":3507,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":3508,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":2690,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":4482,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectlightcard",{"_index":476,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":2125,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":2141,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":2128,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":2861,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":3367,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":2860,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":3366,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":3463,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":3120,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":3325,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":274,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selector:'confirm",{"_index":2070,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["selectrouterstate",{"_index":566,"title":{},"body":{"components/AppComponent.html":{}}}],["selecttimereference",{"_index":4004,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectusernameoridentifier",{"_index":3142,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ConfirmModalComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["sendarchivequery",{"_index":851,"title":{"classes/SendArchiveQuery.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendarchivequery({params",{"_index":871,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{}}}],["sendquery",{"_index":897,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["sendtranslateaction",{"_index":4404,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["sendtranslateaction(versiontoupdate",{"_index":4391,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["sense",{"_index":1580,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sent",{"_index":2664,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["sequentially",{"_index":2757,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":2152,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":2156,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":3697,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"injectables/UserService.html":{}}}],["services/authentication.service",{"_index":1406,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["services/handlebars.service",{"_index":2001,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":2000,"title":{},"body":{"modules/CardsModule.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":637,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":689,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":2453,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":3876,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":3858,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set([u.version",{"_index":4361,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["set(untrackedversions",{"_index":4388,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["setcarddatatimeline",{"_index":3169,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setdisabledstate",{"_index":2249,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2262,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2282,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["setheaders",{"_index":4280,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["settimeout",{"_index":2386,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":3479,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":3482,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1439,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":353,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":2542,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1440,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1437,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:20",{"_index":2518,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:21",{"_index":3736,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:22",{"_index":3735,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:23",{"_index":3241,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":3240,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:26",{"_index":1457,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1455,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1456,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1473,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1475,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1474,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1472,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1454,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:35",{"_index":3737,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:39",{"_index":1468,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:46",{"_index":3739,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:49",{"_index":3243,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":3738,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:57",{"_index":3242,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:64",{"_index":3245,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:68",{"_index":3244,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:69",{"_index":1467,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:73",{"_index":3246,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:74",{"_index":1471,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:78",{"_index":1462,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:82",{"_index":1459,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:87",{"_index":1461,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:93",{"_index":1465,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:97",{"_index":1469,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1436,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":2515,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":3236,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":2541,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1453,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":710,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":390,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":3660,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.html",{"_index":3429,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":4432,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":3428,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":3431,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":3433,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:31",{"_index":3432,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:38",{"_index":3434,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":2547,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":3427,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":3662,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":2890,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1519,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":2893,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":2668,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":2880,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":2886,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":2887,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":2888,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":2889,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":2891,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":2892,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":396,"title":{"components/SettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":798,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":3681,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsmodule",{"_index":3648,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":772,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":3652,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":3599,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":738,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["severity",{"_index":1614,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/Page.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":2792,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":2791,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.notification",{"_index":2796,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severity.question",{"_index":2794,"title":{},"body":{"injectables/FilterService.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1794,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1800,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1801,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3180,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["shift",{"_index":2575,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["showgridlines",{"_index":4112,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":2346,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["single",{"_index":3497,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":896,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size.tostring",{"_index":956,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["size:string",{"_index":3087,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":3604,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1720,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["small:boolean",{"_index":3082,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":2166,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":682,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":2553,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["sortcomparer:comparebyseveritylttdpublishdate",{"_index":1815,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortonkey(key",{"_index":3016,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3181,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["space",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["special",{"_index":4599,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["speed",{"_index":4187,"title":{},"body":{"classes/TimeReference.html":{}}}],["sprites",{"_index":3062,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":3088,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../archive",{"_index":4690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../archive.actions.ts",{"_index":4683,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.actions.ts",{"_index":4684,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":4692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":4686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":4685,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":4700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":4687,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../confirm",{"_index":4696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../feed.actions.ts",{"_index":4689,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":4691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":4688,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":4693,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":4694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":4695,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":4682,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.actions.ts",{"_index":4697,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":4699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":4698,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../translate.actions.ts",{"_index":4701,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../user.actions.ts",{"_index":4702,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":693,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/icon/icon.component.ts",{"_index":3056,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:19",{"_index":3072,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:20",{"_index":3075,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:21",{"_index":3074,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:22",{"_index":3070,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:23",{"_index":3071,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:24",{"_index":3073,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:25",{"_index":3069,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:26",{"_index":3078,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:27",{"_index":3079,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:28",{"_index":3068,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:29",{"_index":3077,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:34",{"_index":3076,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":3305,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":3321,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":3324,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":3323,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":3322,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":3316,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":3318,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":3319,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":3320,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:63",{"_index":3317,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":3126,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:26",{"_index":3135,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":3134,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":3132,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:33",{"_index":3133,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:44",{"_index":3137,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:48",{"_index":3139,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:52",{"_index":3141,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":3438,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":3459,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":3460,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":3456,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":3455,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":3457,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:34",{"_index":3458,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":3449,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:40",{"_index":3451,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:59",{"_index":3450,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:63",{"_index":3462,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:67",{"_index":3453,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:73",{"_index":3454,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":1833,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1607,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:11",{"_index":1620,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:40",{"_index":2302,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/datetime",{"_index":2182,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["src/app/model/detail",{"_index":2423,"title":{},"body":{"classes/DetailContext.html":{}}}],["src/app/model/feed",{"_index":2723,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":3022,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:10",{"_index":3024,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3175,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":3348,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:8",{"_index":3351,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":3376,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:10",{"_index":3379,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/page.model.ts",{"_index":3509,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/page.model.ts:11",{"_index":3512,"title":{},"body":{"classes/Page.html":{}}}],["src/app/model/thirds.model.ts",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/model/thirds.model.ts:100",{"_index":417,"title":{},"body":{"classes/ActionStatus.html":{}}}],["src/app/model/thirds.model.ts:12",{"_index":3751,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:160",{"_index":3174,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:177",{"_index":3514,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:25",{"_index":3753,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:36",{"_index":3818,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:45",{"_index":3817,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:54",{"_index":3530,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:61",{"_index":3683,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:76",{"_index":159,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":4179,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":4204,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:19",{"_index":4192,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:20",{"_index":4195,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:21",{"_index":4198,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:33",{"_index":4201,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:4",{"_index":4189,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:56",{"_index":4205,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user",{"_index":4518,"title":{},"body":{"classes/UserContext.html":{}}}],["src/app/model/user.model.ts",{"_index":4508,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:8",{"_index":4510,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":1060,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":1031,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:23",{"_index":1036,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:24",{"_index":1034,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:28",{"_index":1035,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":1048,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/archives/components/archive",{"_index":888,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/MultiFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":1991,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:45",{"_index":1994,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/action/action.component.ts",{"_index":271,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:21",{"_index":292,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:22",{"_index":294,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:23",{"_index":295,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:24",{"_index":293,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:25",{"_index":290,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:32",{"_index":296,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/action.component.ts:36",{"_index":299,"title":{},"body":{"components/ActionComponent.html":{}}}],["src/app/modules/cards/components/action/confirm",{"_index":2058,"title":{},"body":{"components/ConfirmModalComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/cards/components/card",{"_index":1728,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1627,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:106",{"_index":1655,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:117",{"_index":1663,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:121",{"_index":1652,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:30",{"_index":1645,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:31",{"_index":1644,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":1660,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:33",{"_index":1656,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:34",{"_index":1661,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:35",{"_index":1659,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:36",{"_index":1657,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:37",{"_index":1658,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:39",{"_index":1643,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:49",{"_index":1653,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:74",{"_index":1647,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:89",{"_index":1650,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:93",{"_index":1654,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:99",{"_index":1648,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":2303,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:112",{"_index":2330,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:129",{"_index":2328,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:153",{"_index":2332,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:28",{"_index":2340,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:29",{"_index":2324,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:30",{"_index":2323,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:31",{"_index":2341,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:32",{"_index":2343,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":2339,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:34",{"_index":2322,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:44",{"_index":2336,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:56",{"_index":2335,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:61",{"_index":2334,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:77",{"_index":2333,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:93",{"_index":2345,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:97",{"_index":2337,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":2428,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:20",{"_index":2443,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:21",{"_index":2433,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:22",{"_index":2432,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:28",{"_index":2434,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:37",{"_index":2440,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:47",{"_index":2439,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:56",{"_index":2444,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:60",{"_index":2436,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":2896,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:105",{"_index":2935,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:114",{"_index":2929,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:128",{"_index":2922,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:134",{"_index":2933,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:151",{"_index":2934,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:193",{"_index":2927,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:219",{"_index":2936,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:237",{"_index":2925,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:24",{"_index":2916,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:251",{"_index":2926,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:259",{"_index":2931,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:266",{"_index":2930,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:273",{"_index":2932,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:46",{"_index":2919,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:51",{"_index":2921,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:64",{"_index":2928,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:70",{"_index":2924,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:99",{"_index":2923,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1818,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":3504,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":2464,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":2722,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":2587,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:25",{"_index":2594,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:26",{"_index":2595,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:27",{"_index":2591,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:32",{"_index":2593,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:49",{"_index":2592,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":2687,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1435,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":2514,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":3235,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":3426,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":3614,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:19",{"_index":3621,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":3622,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:21",{"_index":3620,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:22",{"_index":3618,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:26",{"_index":3619,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":3734,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":4431,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":3663,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":3653,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":3109,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:21",{"_index":3115,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:27",{"_index":3116,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:35",{"_index":3119,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":3826,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":3824,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/modules/utilities/calc",{"_index":1526,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts",{"_index":3556,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:10",{"_index":3560,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:12",{"_index":3562,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/components/resizable/resizable.component.ts:27",{"_index":3561,"title":{},"body":{"components/ResizableComponent.html":{}}}],["src/app/modules/utilities/utilities.module.ts",{"_index":4582,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":1072,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication.service.ts:294",{"_index":1078,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:297",{"_index":1079,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:298",{"_index":1081,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:299",{"_index":1080,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:300",{"_index":1082,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:309",{"_index":2009,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:311",{"_index":2012,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:312",{"_index":2011,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:313",{"_index":2010,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/card.service.ts",{"_index":1897,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:23",{"_index":1927,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:24",{"_index":1925,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:25",{"_index":1926,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:26",{"_index":1908,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:37",{"_index":1919,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:41",{"_index":1915,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:53",{"_index":1920,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:57",{"_index":1913,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:81",{"_index":1923,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:87",{"_index":1917,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:91",{"_index":1910,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":2047,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:17",{"_index":2050,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:24",{"_index":2051,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":2773,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:18",{"_index":2780,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:24",{"_index":2781,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:29",{"_index":2786,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:53",{"_index":2784,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:61",{"_index":2783,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:69",{"_index":2785,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:91",{"_index":2782,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":2827,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:16",{"_index":2830,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:22",{"_index":2831,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:26",{"_index":2832,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":3025,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:19",{"_index":3033,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:20",{"_index":3030,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:30",{"_index":3032,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:46",{"_index":3035,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:50",{"_index":3037,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":4262,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:14",{"_index":4265,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:19",{"_index":4271,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:24",{"_index":4268,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/services.module.ts",{"_index":3602,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:49",{"_index":3603,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":3664,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:18",{"_index":3673,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":3669,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:27",{"_index":3670,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:31",{"_index":3672,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/third",{"_index":3756,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":3829,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:103",{"_index":3942,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:123",{"_index":3944,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:138",{"_index":3947,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:142",{"_index":3946,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:155",{"_index":3833,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:160",{"_index":3835,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:20",{"_index":3955,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:21",{"_index":3956,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:22",{"_index":3941,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:30",{"_index":3954,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:34",{"_index":3952,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:51",{"_index":3949,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:59",{"_index":3950,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:77",{"_index":3948,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:87",{"_index":3943,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:94",{"_index":3945,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/user.service.ts",{"_index":4562,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:12",{"_index":4566,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":4570,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:27",{"_index":4568,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/store/actions/archive.actions.ts",{"_index":1011,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/archive.actions.ts:23",{"_index":4494,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:25",{"_index":4495,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:29",{"_index":3595,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:30",{"_index":3596,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:35",{"_index":2837,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:38",{"_index":2838,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:42",{"_index":1012,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:44",{"_index":1013,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:49",{"_index":4496,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:51",{"_index":4497,"title":{},"body":{"classes/UpdateArchivePage.html":{}}}],["src/app/store/actions/archive.actions.ts:55",{"_index":3585,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/archive.actions.ts:57",{"_index":3586,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:111",{"_index":3552,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:114",{"_index":3553,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:128",{"_index":140,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:144",{"_index":141,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:26",{"_index":3522,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:27",{"_index":3526,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:28",{"_index":3523,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:29",{"_index":3528,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:30",{"_index":3524,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:31",{"_index":3525,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:32",{"_index":3527,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:41",{"_index":3159,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:43",{"_index":3160,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:52",{"_index":2007,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:67",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:70",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:80",{"_index":4428,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:83",{"_index":4429,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:94",{"_index":4430,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":419,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:24",{"_index":2013,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:27",{"_index":3278,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:30",{"_index":3279,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:33",{"_index":3280,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:36",{"_index":3281,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:40",{"_index":3282,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:43",{"_index":3283,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:47",{"_index":3272,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:50",{"_index":3273,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:53",{"_index":3274,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:56",{"_index":3275,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:60",{"_index":3276,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:63",{"_index":3277,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:68",{"_index":2839,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:71",{"_index":2840,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:75",{"_index":420,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/card.actions.ts:77",{"_index":421,"title":{},"body":{"classes/AddActionsAppear.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":2841,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:18",{"_index":3284,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:21",{"_index":3285,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:24",{"_index":3286,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:29",{"_index":3287,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:32",{"_index":3288,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:38",{"_index":2842,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/config.actions.ts:40",{"_index":2843,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":824,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:18",{"_index":825,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":826,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:24",{"_index":3161,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:27",{"_index":3162,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":455,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":2852,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:22",{"_index":3295,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:29",{"_index":3296,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:32",{"_index":3297,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:37",{"_index":3298,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:40",{"_index":3299,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:45",{"_index":2853,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:48",{"_index":2854,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:59",{"_index":3589,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:62",{"_index":3590,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:70",{"_index":3593,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:73",{"_index":3594,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:81",{"_index":3591,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:84",{"_index":3592,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":2877,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:24",{"_index":3300,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:27",{"_index":3301,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:30",{"_index":3302,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:35",{"_index":3303,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:38",{"_index":3304,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:43",{"_index":3515,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":3516,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:47",{"_index":3517,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:50",{"_index":3518,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:55",{"_index":3519,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:58",{"_index":3520,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:64",{"_index":2878,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/settings.actions.ts:66",{"_index":2879,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":2552,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:18",{"_index":3978,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:19",{"_index":3979,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:25",{"_index":3982,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:26",{"_index":3983,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:27",{"_index":3984,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:36",{"_index":4498,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:37",{"_index":4499,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:46",{"_index":2558,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:47",{"_index":2559,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":3164,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:16",{"_index":3165,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":3166,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:21",{"_index":3612,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":3613,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/translate.actions.ts",{"_index":3533,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/translate.actions.ts:13",{"_index":4501,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:15",{"_index":4502,"title":{},"body":{"classes/UpdateTranslation.html":{}}}],["src/app/store/actions/translate.actions.ts:20",{"_index":4427,"title":{},"body":{"classes/TranslationUpToDate.html":{}}}],["src/app/store/actions/translate.actions.ts:24",{"_index":4505,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:26",{"_index":4506,"title":{},"body":{"classes/UpdateTranslationSuccessful.html":{}}}],["src/app/store/actions/translate.actions.ts:31",{"_index":4503,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:33",{"_index":4504,"title":{},"body":{"classes/UpdateTranslationFailed.html":{}}}],["src/app/store/actions/translate.actions.ts:39",{"_index":3535,"title":{},"body":{"classes/RefreshTranslation.html":{}}}],["src/app/store/actions/user.actions.ts",{"_index":2082,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/user.actions.ts:16",{"_index":4516,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:17",{"_index":4517,"title":{},"body":{"classes/UserApplicationRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:22",{"_index":4514,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:23",{"_index":4515,"title":{},"body":{"classes/UserApplicationNotRegistered.html":{}}}],["src/app/store/actions/user.actions.ts:28",{"_index":2083,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:29",{"_index":2084,"title":{},"body":{"classes/CreateUserApplication.html":{}}}],["src/app/store/actions/user.actions.ts:35",{"_index":2100,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:36",{"_index":2101,"title":{},"body":{"classes/CreateUserApplicationOnSuccess.html":{}}}],["src/app/store/actions/user.actions.ts:41",{"_index":2098,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:42",{"_index":2099,"title":{},"body":{"classes/CreateUserApplicationOnFailure.html":{}}}],["src/app/store/actions/user.actions.ts:48",{"_index":2894,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/actions/user.actions.ts:49",{"_index":2895,"title":{},"body":{"classes/HandleUnexpectedError-6.html":{}}}],["src/app/store/effects/archive.effects.ts",{"_index":843,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:28",{"_index":847,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:35",{"_index":862,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:50",{"_index":872,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":1305,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:110",{"_index":1403,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:119",{"_index":1326,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:136",{"_index":1330,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:155",{"_index":1385,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:179",{"_index":1369,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:228",{"_index":1321,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:250",{"_index":1324,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:40",{"_index":1311,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:61",{"_index":1379,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:83",{"_index":1391,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":1848,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1756,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:27",{"_index":1760,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:35",{"_index":1774,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:48",{"_index":1769,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:61",{"_index":1762,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":2015,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:21",{"_index":2020,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:54",{"_index":2026,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:71",{"_index":2029,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":2102,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":2612,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":3185,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":3352,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:27",{"_index":3354,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:38",{"_index":3360,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:61",{"_index":3368,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":3630,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:29",{"_index":3632,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:42",{"_index":3638,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:54",{"_index":3640,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:60",{"_index":3646,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":3985,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:19",{"_index":3989,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:35",{"_index":3993,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:49",{"_index":4001,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/translate.effects.ts",{"_index":4283,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:100",{"_index":4419,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:117",{"_index":4408,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:124",{"_index":4410,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:132",{"_index":4420,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:144",{"_index":4409,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:153",{"_index":4407,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:166",{"_index":4411,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:194",{"_index":4416,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:200",{"_index":4285,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:201",{"_index":4286,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{}}}],["src/app/store/effects/translate.effects.ts:27",{"_index":4405,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:37",{"_index":4418,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:59",{"_index":4413,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:68",{"_index":4414,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:78",{"_index":4415,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/translate.effects.ts:90",{"_index":4417,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["src/app/store/effects/user.effects.ts",{"_index":4521,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:22",{"_index":4525,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:32",{"_index":4536,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:54",{"_index":4555,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:69",{"_index":4550,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/effects/user.effects.ts:93",{"_index":4559,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/store/index.ts",{"_index":726,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":3686,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:33",{"_index":3687,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/archive.state.ts",{"_index":1025,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":1300,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":1983,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":2055,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1778,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":3371,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":2149,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:37",{"_index":3584,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:48",{"_index":2158,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:55",{"_index":2155,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":3680,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":4249,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":4254,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/app/store/states/translation.state.ts",{"_index":4421,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["src/app/store/states/user.state.ts",{"_index":4576,"title":{},"body":{"interfaces/UserState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":3958,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:14",{"_index":3961,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:5",{"_index":3960,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":1948,"title":{},"body":{"injectables/CardService.html":{}}}],["st",{"_index":3211,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["start",{"_index":2485,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/LightCard.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdate",{"_index":1612,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":4068,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.minutes(0).second(0).millisecond(0",{"_index":4070,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.valueof",{"_index":4129,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2",{"_index":4079,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.minutes(0).second(0).millisecond(0",{"_index":4080,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.valueof",{"_index":4133,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3",{"_index":4083,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.hour(0).minutes(0).second(0).millisecond(0",{"_index":4084,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.valueof",{"_index":4139,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4",{"_index":4087,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4.minutes(0).second(0).millisecond(0",{"_index":4088,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4.valueof",{"_index":4126,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainuse",{"_index":4073,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainuse.date(4",{"_index":4074,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainuse.hour(0).minutes(0).second(0).millisecond(0",{"_index":4075,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomainuse.valueof",{"_index":4115,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startof",{"_index":4054,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":4625,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":4628,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["state.actions[actionid",{"_index":2397,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":2180,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":2178,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":638,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":688,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":3531,"title":{},"body":{"classes/Process.html":{}}}],["states?:ofmap",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":255,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AuthObject.html":{},"classes/CardOperation.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":2799,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":2797,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":2805,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.notification",{"_index":2801,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.question",{"_index":2800,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":2804,"title":{},"body":{"injectables/FilterService.html":{}}}],["sticktovirtualtime",{"_index":3988,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":1216,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{}}}],["stillvalid",{"_index":1223,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["stops",{"_index":2755,"title":{},"body":{"classes/Filter.html":{}}}],["store",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["store,private",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["store.select(buildconfigselector('security",{"_index":1113,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["storeconfig",{"_index":821,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":1214,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["storedcard",{"_index":3197,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["storedevtoolsmodule",{"_index":3690,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":3699,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":753,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":3688,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":3694,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":3693,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":3695,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":2959,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":3702,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":2367,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":3880,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":268,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DatetimeFilterComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":275,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":1127,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subject",{"_index":321,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["submission",{"_index":2549,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":283,"title":{},"body":{"components/ActionComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{}}}],["submit(lightcardid",{"_index":3779,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["submitted",{"_index":1398,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1449,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1498,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{},"injectables/ThirdActionService.html":{}}}],["subscribe(([locale,timezone",{"_index":3045,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe((maxedretries=>this.maxedretries=maxedretries",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1742,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1680,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":3726,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(isauth",{"_index":596,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(loaded",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m=>this.loginmessage=m",{"_index":3331,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1511,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1505,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":1114,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subscribe(provider=>this.codeprovider={name:provider",{"_index":3333,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(v=>this.hidetimeline",{"_index":2601,"title":{},"body":{"components/FeedComponent.html":{}}}],["subscribe(value",{"_index":4145,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subscribe(x",{"_index":1550,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["subscription",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1723,"title":{},"body":{"components/CardComponent.html":{}}}],["subtract",{"_index":4053,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subtracting",{"_index":1597,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["success",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":2028,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":1016,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":3539,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":1232,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["sum",{"_index":1588,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sumfixelemheights",{"_index":1590,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["summary",{"_index":1618,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super",{"_index":1829,"title":{},"body":{"components/CardListComponent.html":{},"classes/DateTimeNgb.html":{},"components/DetailsComponent.html":{}}}],["super(store",{"_index":2543,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":2545,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":3259,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["support",{"_index":4710,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":3565,"title":{},"body":{"components/ResizableComponent.html":{}}}],["svg",{"_index":677,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":2997,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":2703,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1416,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/LightCard.html":{},"injectables/ThirdActionService.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":2987,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":253,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":877,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(([lightcards",{"_index":1857,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":1343,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":850,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":3642,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af",{"_index":1886,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth)=>this.loaduserdata(auth",{"_index":1195,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["switchmap((lightcard",{"_index":3224,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((versions",{"_index":4334,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["switchmap(action",{"_index":1764,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(third",{"_index":3865,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts",{"_index":3907,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["t",{"_index":3350,"title":{},"body":{"classes/Map.html":{},"classes/Page.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.i18nlabelkey",{"_index":3914,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":3910,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":3913,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":2452,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tab.active",{"_index":2451,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":4483,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":2458,"title":{},"body":{"components/DetailsComponent.html":{}}}],["taction['buttonstyle",{"_index":237,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['contentstyle",{"_index":238,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['hidden",{"_index":236,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['inputs']//todo",{"_index":239,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['label",{"_index":228,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockaction",{"_index":248,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['lockcard",{"_index":244,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['needsconfirm",{"_index":247,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestate",{"_index":245,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["taction['updatestatebeforeaction",{"_index":246,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["tag",{"_index":2635,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":2818,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":3708,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":398,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/LightCard.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tagsfiltercomponent",{"_index":397,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":212,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["takes",{"_index":2164,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1483,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1500,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":4033,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":1870,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":976,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(authenticationservice.saveauthenticationinformation",{"_index":1194,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["tap(t",{"_index":3853,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":2968,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":2624,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":2641,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tells",{"_index":1332,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":267,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":2897,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":2938,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1626,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":3748,"title":{},"body":{"classes/Third.html":{}}}],["templates?:string",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":277,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":3080,"title":{},"body":{"components/IconComponent.html":{}}}],["terms",{"_index":322,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["test",{"_index":1297,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/TimeLineComponent.html":{}}}],["test_filter",{"_index":2820,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":250,"title":{},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":399,"title":{"components/TextSettingComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:21",{"_index":2520,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:22",{"_index":2519,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:28",{"_index":2525,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:35",{"_index":2524,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:46",{"_index":2527,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:50",{"_index":2526,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that's",{"_index":3897,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["that.time.currenttime().valueof",{"_index":3011,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["then(performpost",{"_index":3801,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["they're",{"_index":1581,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["third",{"_index":168,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/CardDetailsComponent.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["third.extractstate(this.card",{"_index":1748,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":3866,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third.prototype",{"_index":3855,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third:string,public",{"_index":4394,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdaction",{"_index":464,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{}}}],["thirdactionalreadyloaded",{"_index":492,"title":{"classes/ThirdActionAlreadyLoaded.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactionalreadyupdated",{"_index":494,"title":{"classes/ThirdActionAlreadyUpdated.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["thirdactioncomporentmodalreturn",{"_index":2074,"title":{},"body":{"components/ConfirmModalComponent.html":{},"injectables/ThirdActionService.html":{},"miscellaneous/enumerations.html":{}}}],["thirdactioncomporentmodalreturn.cancel",{"_index":3804,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactioncomporentmodalreturn.dismiss",{"_index":3806,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["thirdactionkey",{"_index":3203,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions",{"_index":3208,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.get(thirdactionkey",{"_index":3210,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactions.set(thirdactionkey",{"_index":3215,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactionservice",{"_index":225,"title":{"injectables/ThirdActionService.html":{}},"body":{"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"index.html":{}}}],["thirdactionstatus",{"_index":3205,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdactiontoupdate",{"_index":3209,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdcache",{"_index":3841,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":189,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenu('t1",{"_index":3963,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":3971,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":3912,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu[]):map",{"_index":4354,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdmenuentry",{"_index":186,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":3965,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":3968,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":3973,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":3862,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":3951,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":3448,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":3861,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuversion).pipe",{"_index":3864,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":3953,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":3849,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":708,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":3819,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":3823,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":2318,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds+version",{"_index":4330,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirds.map(third",{"_index":4316,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion",{"_index":4314,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversion[third",{"_index":4318,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions",{"_index":4311,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsandversions.foreach(u",{"_index":4358,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdservice",{"_index":3190,"title":{},"body":{"injectables/LightCardEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirdsi18nloader",{"_index":3828,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":3930,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":3929,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1732,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":3957,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":3839,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdswiththeirversions",{"_index":4296,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["thirparty",{"_index":2866,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this._defaultfilters",{"_index":2788,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":3147,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":3717,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":4032,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":3722,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":3719,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":2384,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1669,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":3049,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._modalservice",{"_index":312,"title":{},"body":{"components/ActionComponent.html":{}}}],["this._resizesubject",{"_index":1547,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.asobservable().pipe",{"_index":1548,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.next",{"_index":1556,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._selectediframeurl",{"_index":3124,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":3475,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":3467,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":3149,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":3053,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":3145,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.action",{"_index":311,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actions",{"_index":1338,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":848,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":1382,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.actionsappear",{"_index":1689,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionservice.submit",{"_index":309,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.actionsurlpath",{"_index":1683,"title":{},"body":{"components/CardComponent.html":{}}}],["this.actionurl",{"_index":3781,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.actionurlpath}/${this.action.key",{"_index":308,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.active",{"_index":2764,"title":{},"body":{"classes/Filter.html":{}}}],["this.archiveform",{"_index":936,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.archivesurl",{"_index":1937,"title":{},"body":{"injectables/CardService.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":1115,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.attachaction(button",{"_index":2398,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":1344,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":1388,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(authenticationservice.extracttoken",{"_index":1340,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1433,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.loaduserdata(authinfo",{"_index":1356,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.basesettings",{"_index":1518,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.big",{"_index":3094,"title":{},"body":{"components/IconComponent.html":{}}}],["this.big?'big':this.medium?'medium':'small",{"_index":3099,"title":{},"body":{"components/IconComponent.html":{}}}],["this.bindactions(third",{"_index":2389,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.calcheight(this.parentid",{"_index":1551,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.calcheightclass",{"_index":1553,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.callmodalandhandleresponse(modalservice",{"_index":3798,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.callmodalifnecessary(lightcardid",{"_index":3814,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.card",{"_index":1743,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1753,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1754,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisherversion).subscribe(third",{"_index":1747,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.cardoperationsurl",{"_index":1933,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":1953,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1414,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":1935,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":3046,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.checkifreceivedstatusisdifferentfromcurrentone(action",{"_index":3792,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.clientid",{"_index":1117,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.clientsecret",{"_index":1120,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.collectionsize",{"_index":999,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["this.computedisplayeddates(config",{"_index":1679,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":3260,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":3435,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":4214,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computetextvalidators",{"_index":3740,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":4107,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":2052,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom",{"_index":4114,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.consolidatethirdandversions(thirdsandversions",{"_index":4346,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.convert(auth",{"_index":1193,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.createformgroup",{"_index":3716,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentactionpath",{"_index":307,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.currentpath",{"_index":593,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":4006,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.customlogo",{"_index":3473,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.dark",{"_index":3097,"title":{},"body":{"components/IconComponent.html":{}}}],["this.datetimeform.disable",{"_index":2283,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.enable",{"_index":2284,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.get('date').valuechanges.subscribe(val",{"_index":2288,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.setvalue(val",{"_index":2278,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valid",{"_index":2285,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetimeform.valuechanges.subscribe(fn",{"_index":2280,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.datetodisplay",{"_index":1681,"title":{},"body":{"components/CardComponent.html":{}}}],["this.delegateurl",{"_index":1122,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.delegateurl}&redirect_uri=${authenticationservice.computeredirecturi",{"_index":1277,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.detail",{"_index":2362,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":2363,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":2364,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1745,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":2448,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":2450,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1749,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":2459,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.disabled",{"_index":2289,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.disableinfos",{"_index":3628,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.dispatchupdatethirdaction(updatethirdaction",{"_index":3805,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.dispatchupdatethirdaction(updatethirdactionaction",{"_index":3797,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.dragend.emit(event",{"_index":2503,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":2496,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":2500,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":2497,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.el.nativeelement",{"_index":1566,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.elapsedsofar",{"_index":2651,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.elapsedsofar+tick.payload.elapsedsincelast",{"_index":2649,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":2394,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":2391,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":3469,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":3477,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":3480,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":1134,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.extracti18ntoupdate(versions",{"_index":4335,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.extractparams(child",{"_index":2181,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":2175,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.familynameclaim",{"_index":1131,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.fetchactionmap(card.publisher",{"_index":3919,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchcardoperation(new",{"_index":1952,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchthird(thirdname",{"_index":3852,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.filterpath",{"_index":3425,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.filterstomap(value",{"_index":953,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.first",{"_index":943,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.first$.subscribe(first",{"_index":957,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.fixedheightclass",{"_index":1552,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.followclocktick",{"_index":2646,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.form",{"_index":1486,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value",{"_index":3744,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":3437,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":3265,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1499,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.format()}t${this.formattime",{"_index":2232,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["this.formbuilder.group",{"_index":3730,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":2763,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":2768,"title":{},"body":{"classes/Filter.html":{}}}],["this.getcurrentguid().tostring",{"_index":2836,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["this.givennameclaim",{"_index":1128,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.guid",{"_index":2833,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":1191,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":1932,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handelactionbuttontext(action.label",{"_index":2411,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":2382,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1695,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1690,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1692,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1694,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'authenticate",{"_index":1390,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'code",{"_index":1348,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":1182,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.handlerejectedlogin('invalid",{"_index":1434,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.hide",{"_index":3334,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hidetags",{"_index":2825,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":2374,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.actionurl}${currentactionpath}`).pipe",{"_index":3813,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.get(`${this.archivesurl}/${id",{"_index":1974,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":1939,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":2054,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":3859,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/${process}/${state}/actions",{"_index":3925,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":3901,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":3877,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":3906,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":1197,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":3677,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.get(`${this.userurl}/users/${user",{"_index":4573,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get>(`${this.archivesurl",{"_index":1982,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":3679,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":1972,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(`${this.actionurl}${currentactionpath",{"_index":3790,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":1158,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.httpclient.put(`${this.userurl}/users/${userdata.login",{"_index":4575,"title":{},"body":{"injectables/UserService.html":{}}}],["this.iconpath",{"_index":3092,"title":{},"body":{"components/IconComponent.html":{}}}],["this.initfilters",{"_index":2789,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1487,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":2355,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":2354,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initrecipientfilter",{"_index":2811,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittagfilter",{"_index":2815,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":2813,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":2809,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.isauthenticated",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1503,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.isvirtualtimeundefine",{"_index":4221,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.light",{"_index":3098,"title":{},"body":{"components/IconComponent.html":{}}}],["this.lightcard",{"_index":1668,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.actions",{"_index":1705,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.id",{"_index":1699,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcardid",{"_index":310,"title":{},"body":{"components/ActionComponent.html":{}}}],["this.lightcards",{"_index":1038,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":4144,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.locales",{"_index":3623,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.loginclaim",{"_index":1124,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.medium",{"_index":3095,"title":{},"body":{"components/IconComponent.html":{}}}],["this.modal.close(thirdactioncomporentmodalreturn.ok",{"_index":2072,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.cancel",{"_index":2073,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.modal.dismiss(thirdactioncomporentmodalreturn.dismiss",{"_index":2071,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["this.mousewheelfunc(event",{"_index":3405,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":3416,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1513,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1512,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe.complete",{"_index":1709,"title":{},"body":{"components/CardComponent.html":{}}}],["this.ngunsubscribe.next",{"_index":1708,"title":{},"body":{"components/CardComponent.html":{}}}],["this.onchanges",{"_index":2277,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.ontouched",{"_index":2281,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["this.parentform",{"_index":3424,"title":{},"body":{"components/MultiFilterComponent.html":{}}}],["this.pattern",{"_index":3742,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.periodstarttoend(domain7dayconf",{"_index":4090,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainmonthconf",{"_index":4082,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainweekconf",{"_index":4072,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainyearconf",{"_index":4086,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.placeholder",{"_index":1506,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.postactionandupdateifnecessary(lightcardid",{"_index":3811,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.preparedlist",{"_index":3249,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":3270,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":3256,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.preparedlist.push({value",{"_index":3251,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.processes",{"_index":939,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.processes[card.process",{"_index":179,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(context.card.publisher,context.card.publisherversion,templatename).pipe",{"_index":2956,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(card.publisher",{"_index":3846,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.querythird(thirdmenuid",{"_index":3863,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":4218,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.refreshthreshold",{"_index":2652,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.registerarrayatindex",{"_index":2948,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":2951,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":2952,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":2943,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":2942,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":2945,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerjson",{"_index":2954,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":2949,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":2953,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":2941,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":2940,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":2947,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":2946,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":2950,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":2944,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":2388,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":3263,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1401,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.resized",{"_index":3582,"title":{},"body":{"components/ResizableComponent.html":{}}}],["this.retryconfigurationloading",{"_index":2042,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":2041,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":1698,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/login",{"_index":1329,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":2385,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":2373,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":3125,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":2456,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1040,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":3356,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetcharchivedcards(new",{"_index":854,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":2022,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":3994,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":3634,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":1869,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.loadarchivedcard(action.payload.id",{"_index":1765,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1771,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.movetocodeflowloginpage",{"_index":3341,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":3990,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":3362,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start",{"_index":1887,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setting",{"_index":1492,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1495,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.size",{"_index":941,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/IconComponent.html":{}}}],["this.size$.subscribe(size",{"_index":954,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.small",{"_index":3096,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":4228,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":3104,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":3106,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":2765,"title":{},"body":{"classes/Filter.html":{}}}],["this.store",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":3727,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":589,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{},"injectables/UserEffects.html":{}}}],["this.store.dispatch(updatethirdaction",{"_index":3815,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["this.store.pipe",{"_index":1000,"title":{},"body":{"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":594,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.first",{"_index":944,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.page.size",{"_index":942,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListPageComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.process.list",{"_index":940,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.tags.list",{"_index":938,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1675,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timefilter.followclocktick')).subscribe(x",{"_index":2679,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide",{"_index":2600,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":3626,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":3624,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('logo.base64')).subscribe",{"_index":3472,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.mode",{"_index":3327,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":3332,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('settings.infos.disable",{"_index":3629,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('settings.tags.hide",{"_index":2826,"title":{},"body":{"components/FiltersComponent.html":{},"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1507,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":3718,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":4014,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":4457,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":3043,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":3044,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":3148,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1493,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1741,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":2599,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(fetchlightcard(lightcardid",{"_index":3223,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(lightcardid)).pipe",{"_index":3207,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(fetchlightcard(receivedcard.id)).pipe",{"_index":3195,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.store.select(selectarchivelightcardselection",{"_index":1041,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["this.store.select(selectauthenticationstate).subscribe(authstate",{"_index":2356,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.store.select(selectcardactionsappearstate).subscribe(d",{"_index":1685,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":3150,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1671,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selecti18nuploaded).pipe",{"_index":4339,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.store.select(selectidentifier",{"_index":1508,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":3676,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":3122,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m=>m!=null",{"_index":3329,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":4005,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":3146,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.subscription",{"_index":4143,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":4178,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":3715,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":3721,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":3720,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tags",{"_index":937,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.templatecache[key",{"_index":2963,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":3850,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirdcache.set(key",{"_index":3856,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":2366,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":2966,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.askfori18njson(publisher",{"_index":4321,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.thirdservice.fetchactionmapfromlightcard(lightcard",{"_index":3226,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1746,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":3843,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time",{"_index":2228,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1696,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":4013,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":4029,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":4028,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":4031,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":4024,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":4023,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":4030,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":3152,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":4037,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":4036,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":4025,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":4020,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.predefinedformat(date",{"_index":4610,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["this.timeservice.tongbtimestamp(datestring",{"_index":951,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.timezones",{"_index":3625,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.transformactionmaptoarray",{"_index":1704,"title":{},"body":{"components/CardComponent.html":{}}}],["this.translate.currentlang",{"_index":4302,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.getbrowserlang",{"_index":2961,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.translate.getlangs",{"_index":4308,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.instant(`${this.card.publisher}.${this.card.publisherversion}.${label.key",{"_index":2420,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.translate.settranslation(locale",{"_index":4323,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.use(action.payload.language",{"_index":4326,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["this.translate.use(this._locale",{"_index":3051,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":3257,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.typefilterform",{"_index":4456,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":4460,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true,{emitevent",{"_index":4467,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":4458,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true,{emitevent",{"_index":4466,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(!next.active",{"_index":4464,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(true,{emitevent",{"_index":4469,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(!next.active",{"_index":4462,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(true,{emitevent",{"_index":4468,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":1957,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":2447,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1496,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":3842,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":3884,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeflow",{"_index":3326,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usercontext",{"_index":2357,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.userform",{"_index":3335,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":3337,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":3338,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":3340,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":3336,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.askcreateuser(user",{"_index":4544,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.askuserapplicationregistered(userpayload.identifier",{"_index":4528,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.usersurl",{"_index":3674,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.userurl",{"_index":4571,"title":{},"body":{"injectables/UserService.html":{}}}],["this.values",{"_index":3250,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["this.virtualtime",{"_index":4235,"title":{},"body":{"classes/TimeReference.html":{}}}],["those",{"_index":1775,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["threshold",{"_index":2656,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["throught",{"_index":4538,"title":{},"body":{"injectables/UserEffects.html":{}}}],["throw",{"_index":1489,"title":{},"body":{"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":1085,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":1171,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(err",{"_index":3872,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":1208,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(new",{"_index":3869,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":1144,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thus",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["tick",{"_index":2566,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick(pulse",{"_index":3992,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick='[time",{"_index":2565,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["tickpayload",{"_index":2579,"title":{"classes/TickPayload.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":4096,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ticks4hoursconf",{"_index":4102,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksconf",{"_index":4122,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksdayconf",{"_index":4103,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tickshalfmonthconf",{"_index":4104,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksinuseconf",{"_index":4106,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time",{"_index":401,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["time$|async",{"_index":3155,"title":{},"body":{"components/InfoComponent.html":{}}}],["time's",{"_index":4056,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time).formatdatetime",{"_index":935,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["time.service",{"_index":1931,"title":{},"body":{"injectables/CardService.html":{}}}],["time:timeservice",{"_index":2939,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["time_filter",{"_index":2819,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":2586,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":2564,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":2560,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":3980,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":4500,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":801,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":400,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":4007,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeinitialstate",{"_index":4252,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":365,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":3173,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":3168,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":3167,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":3171,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":402,"title":{"components/TimeLineComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":4260,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":763,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":740,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timer",{"_index":1480,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1504,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":776,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":3997,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":2561,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":4246,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":4253,"title":{},"body":{"interfaces/TimeState.html":{}}}],["times",{"_index":1755,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/ConfirmModalComponent.html":{}}}],["timescale",{"_index":4259,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":898,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["timespan",{"_index":2576,"title":{"classes/TimeSpan.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/LightCard.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeSpan.html":{},"classes/UpdateTimeReference.html":{}}}],["timespans",{"_index":3177,"title":{},"body":{"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["timespeed",{"_index":4188,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":4220,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":4207,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1651,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":4193,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":739,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timestruct",{"_index":2223,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["timezone",{"_index":2563,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":3617,"title":{},"body":{"components/SettingsComponent.html":{}}}],["title",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1622,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titlestyle",{"_index":1625,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":3964,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":3972,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{entry.label",{"_index":3488,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.entries[0].label",{"_index":3489,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":3486,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":1978,"title":{},"body":{"injectables/CardService.html":{},"components/TimeLineComponent.html":{}}}],["tmpmoment",{"_index":4167,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tmpmoment.date(2",{"_index":4169,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":713,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["toggle",{"_index":3733,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["togglemenu",{"_index":3446,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":3452,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":3476,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleusermenu",{"_index":3447,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tointeger(dateparts[0",{"_index":2209,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[1",{"_index":2213,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(dateparts[2",{"_index":2216,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["tointeger(value",{"_index":2199,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["token:string",{"_index":4520,"title":{},"body":{"classes/UserContext.html":{}}}],["tokeninjector",{"_index":3600,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["total",{"_index":1598,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["totalelements",{"_index":3511,"title":{},"body":{"classes/Page.html":{}}}],["totalpages",{"_index":3513,"title":{},"body":{"classes/Page.html":{}}}],["trace",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":2222,"title":{},"body":{"classes/DateTimeNgb.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":4590,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformactionmaptoarray",{"_index":1637,"title":{},"body":{"components/CardComponent.html":{}}}],["transformadvanced",{"_index":4596,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":4597,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":4603,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":4604,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformtotimestamp",{"_index":933,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transformtotimestamp(date",{"_index":949,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["transition",{"_index":4556,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2createuserapplication",{"_index":4523,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transition2userapplicationregistered",{"_index":4524,"title":{},"body":{"injectables/UserEffects.html":{}}}],["transitionalthirdwithitsversion",{"_index":4282,"title":{"classes/TransitionalThirdWithItSVersion.html":{}},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(card.publisher,card.publisherversion",{"_index":4345,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["transitionalthirdwithitsversion(menu.id,menu.version",{"_index":4356,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translate",{"_index":1641,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translate.config",{"_index":671,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":669,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"dependencies.html":{}}}],["translate/http",{"_index":4657,"title":{},"body":{"dependencies.html":{}}}],["translateactions",{"_index":3551,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/typealiases.html":{}}}],["translateactionstypes",{"_index":3536,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translateactionstypes.refreshtranslation",{"_index":3534,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.translationuptodate",{"_index":3547,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslation",{"_index":3545,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationfailed",{"_index":3550,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateactionstypes.updatetranslationsuccessful",{"_index":3548,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["translateconfig",{"_index":670,"title":{},"body":{"modules/AppModule.html":{}}}],["translateeffects",{"_index":813,"title":{"injectables/TranslateEffects.html":{}},"body":{"interfaces/AppState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractpublisherassociatedwithdistinctversionsfromcards(cards",{"_index":4332,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.extractthirdtoupdate(versions",{"_index":4341,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateeffects.sendtranslateaction(publisherandversion",{"_index":4337,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateloader",{"_index":3830,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":667,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":690,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1642,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translateservice,private",{"_index":3042,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":730,"title":{},"body":{"interfaces/AppState.html":{},"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{}}}],["translationinitialstate",{"_index":4424,"title":{},"body":{"interfaces/TranslationState.html":{}}}],["translationreducer",{"_index":811,"title":{},"body":{"interfaces/AppState.html":{}}}],["translationreferencestoupdate",{"_index":4370,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[publisher",{"_index":4374,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationreferencestoupdate[third",{"_index":4387,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["translationstate",{"_index":741,"title":{"interfaces/TranslationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TranslationState.html":{}}}],["translationuptodate",{"_index":3542,"title":{"classes/TranslationUpToDate.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transorm",{"_index":904,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["tree",{"_index":270,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":3369,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{},"components/ResizableComponent.html":{},"components/TimeFilterComponent.html":{}}}],["triggered",{"_index":2137,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":2414,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":1380,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":932,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ResizableComponent.html":{},"modules/ServicesModule.html":{},"components/TimeLineComponent.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["try",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1490,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["trylogout",{"_index":1337,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":19,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":3339,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":72,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":4676,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":2730,"title":{},"body":{"classes/Filter.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/ActionComponent.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"components/ConfirmModalComponent.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCard.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/Page.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"components/ResizableComponent.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"interfaces/TranslationState.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"classes/UserContext.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":2577,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":2584,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":2816,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":2719,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":404,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":4713,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1413,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":406,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":4451,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":930,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["typeof(event",{"_index":3569,"title":{},"body":{"components/ResizableComponent.html":{}}}],["types/jwt",{"_index":4660,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["typically",{"_index":2136,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":2509,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":1201,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u.lastname",{"_index":1203,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u00a0",{"_index":3015,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["uid",{"_index":1621,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/LightCard.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1395,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unavailable",{"_index":1423,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncachedpublishers",{"_index":4368,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.foreach(publisher",{"_index":4371,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["uncachedpublishers.length",{"_index":4376,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unchanged",{"_index":495,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["uncomment",{"_index":2504,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2422,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":2743,"title":{},"body":{"classes/Filter.html":{}}}],["undone",{"_index":2079,"title":{},"body":{"components/ConfirmModalComponent.html":{}}}],["unexpected",{"_index":437,"title":{},"body":{"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":1112,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["unit",{"_index":4057,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["unselectedvalues",{"_index":263,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":2505,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":1901,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":1905,"title":{},"body":{"injectables/CardService.html":{}}}],["untouched",{"_index":3809,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["untrackedversions",{"_index":4383,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["unused",{"_index":1777,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":620,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"components/ConfirmModalComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatealightcard",{"_index":487,"title":{"classes/UpdateALightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatealightcard({card",{"_index":3198,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updateanaction",{"_index":488,"title":{"classes/UpdateAnAction.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"injectables/ThirdActionService.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateanactionfailure",{"_index":489,"title":{"classes/UpdateAnActionFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter",{"_index":886,"title":{"classes/UpdateArchiveFilter.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter({filters",{"_index":853,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updatearchivepage",{"_index":881,"title":{"classes/UpdateArchivePage.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveListPageComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivepage({page",{"_index":1004,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updatearchivepage).payload.page",{"_index":867,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["updateasync",{"_index":2431,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updateathirdaction",{"_index":222,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatecard",{"_index":3216,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatecardsubscriptionwithdates",{"_index":1906,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":1921,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart:number,rangeend:number):observable",{"_index":1971,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":500,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RefreshTranslation.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"interfaces/TimelineState.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatedsubscription",{"_index":481,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatefilteronclocktick",{"_index":2619,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updateon",{"_index":3262,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updateresultpage",{"_index":989,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updateresultpage(currentpage",{"_index":992,"title":{},"body":{"components/ArchiveListPageComponent.html":{}}}],["updates",{"_index":2663,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updatestate",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":156,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":482,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/DelayedLightCardUpdate.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LightCardAlreadyUpdated.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatethirdaction",{"_index":3766,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactionaction",{"_index":3794,"title":{},"body":{"injectables/ThirdActionService.html":{}}}],["updatethirdactions",{"_index":3188,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["updatetimereference",{"_index":2583,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":3996,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":2567,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["updatetranslateservice",{"_index":4293,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslation",{"_index":3537,"title":{"classes/UpdateTranslation.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslation({versions",{"_index":4393,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationfailed",{"_index":3540,"title":{"classes/UpdateTranslationFailed.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationfailed({error",{"_index":4303,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatetranslationsuccessful",{"_index":3538,"title":{"classes/UpdateTranslationSuccessful.html":{}},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetranslationsuccessful({language",{"_index":4301,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["updatevalue",{"_index":1450,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1470,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1514,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["uploadactions",{"_index":3189,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["upon",{"_index":2031,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uribase",{"_index":1279,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["uribase}${pathend",{"_index":1284,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["url",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/enumerations.html":{}}}],["url.endswith('/auth/check_token",{"_index":4277,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":4279,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":4278,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":1673,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/NavbarComponent.html":{}}}],["url='url",{"_index":198,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["urlcleaner",{"_index":3840,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":1155,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["urlparts",{"_index":1672,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{}}}],["urlparts[1",{"_index":1674,"title":{},"body":{"components/CardComponent.html":{},"components/CardDetailsComponent.html":{}}}],["urlparts[3",{"_index":1830,"title":{},"body":{"components/CardListComponent.html":{}}}],["urlsearchparams",{"_index":1149,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["usable",{"_index":1265,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["use",{"_index":1676,"title":{},"body":{"components/CardComponent.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":692,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeflow",{"_index":3312,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["useexisting",{"_index":2237,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["useless",{"_index":4154,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["user",{"_index":66,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user(userpayload.identifier",{"_index":4532,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.login",{"_index":4547,"title":{},"body":{"injectables/UserEffects.html":{}}}],["user.service",{"_index":3609,"title":{},"body":{"modules/ServicesModule.html":{}}}],["useractions",{"_index":2097,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["useractionstypes",{"_index":1895,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{}}}],["useractionstypes.createuserapplication",{"_index":2085,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonfailure",{"_index":2095,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.createuserapplicationonsuccess",{"_index":2094,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.handleunexpectederror",{"_index":2096,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationnotregistered",{"_index":2093,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["useractionstypes.userapplicationregistered",{"_index":2092,"title":{},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{}}}],["userapplicationnotregistered",{"_index":2087,"title":{"classes/UserApplicationNotRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationnotregistered({error",{"_index":4535,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userapplicationregistered",{"_index":2086,"title":{"classes/UserApplicationRegistered.html":{}},"body":{"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"classes/HandleUnexpectedError-6.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["userapplicationregistered({user",{"_index":4530,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userapplicationregistered({user:userdatapayload",{"_index":4558,"title":{},"body":{"injectables/UserEffects.html":{}}}],["usercontext",{"_index":2308,"title":{"classes/UserContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["userdata",{"_index":4531,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["userdata.login",{"_index":4574,"title":{},"body":{"injectables/UserService.html":{}}}],["userdatapayload",{"_index":4552,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userdataurl",{"_index":1102,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["usereffects",{"_index":809,"title":{"injectables/UserEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/UserEffects.html":{}}}],["userform",{"_index":3313,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":3665,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userinitialstate",{"_index":4578,"title":{},"body":{"interfaces/UserState.html":{}}}],["username",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["username$|async",{"_index":3153,"title":{},"body":{"components/InfoComponent.html":{}}}],["userpayload",{"_index":4527,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.firstname",{"_index":4533,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userpayload.lastname",{"_index":4534,"title":{},"body":{"injectables/UserEffects.html":{}}}],["userreducer",{"_index":806,"title":{},"body":{"interfaces/AppState.html":{}}}],["userservice",{"_index":3601,"title":{"injectables/UserService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"index.html":{}}}],["userstate",{"_index":742,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/UserState.html":{}}}],["usersurl",{"_index":3666,"title":{},"body":{"injectables/SettingsService.html":{}}}],["userurl",{"_index":4563,"title":{},"body":{"injectables/UserService.html":{}}}],["uses",{"_index":1393,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":1073,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["utc",{"_index":1296,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["utilities/utilities.module",{"_index":2002,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["utilitiesmodule",{"_index":639,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["v",{"_index":325,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["v.label",{"_index":3253,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label.parameters",{"_index":3258,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.label|async",{"_index":3271,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v.value",{"_index":3254,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{}}}],["v1",{"_index":2973,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":2975,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2271,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":4161,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publishdate",{"_index":4164,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisher",{"_index":4157,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publisherversion",{"_index":4158,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":4156,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":4162,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans",{"_index":4148,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.foreach(d",{"_index":4150,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.length",{"_index":4149,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.title",{"_index":4159,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":1139,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/DatetimeFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["validate",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DatetimeFilterComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["validate(c",{"_index":2265,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validationerrors",{"_index":2268,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validator",{"_index":2235,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["validators",{"_index":2276,"title":{},"body":{"components/DatetimeFilterComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":3261,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":2546,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":3743,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":3264,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":1370,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/ActionStatus.html":{},"classes/AddActionsAppear.html":{},"classes/AddLightCardFailure.html":{},"classes/AddThirdActions.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CreateUserApplication.html":{},"classes/CreateUserApplicationOnFailure.html":{},"classes/CreateUserApplicationOnSuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/DateTimeNgb.html":{},"components/DatetimeFilterComponent.html":{},"classes/DelayedLightCardUpdate.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/HandleUnexpectedError-6.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LightCardAlreadyUpdated.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RefreshTranslation.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdActionAlreadyLoaded.html":{},"classes/ThirdActionAlreadyUpdated.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateALightCard.html":{},"classes/UpdateAnAction.html":{},"classes/UpdateAnActionFailure.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateArchivePage.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{},"classes/UpdatedSubscription.html":{},"classes/UserApplicationNotRegistered.html":{},"classes/UserApplicationRegistered.html":{},"injectables/UserEffects.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace",{"_index":3013,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1520,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":2993,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.trim().split",{"_index":2204,"title":{},"body":{"classes/DateTimeNgb.html":{}}}],["value:string",{"_index":1844,"title":{},"body":{"classes/CardOperation.html":{}}}],["value[index",{"_index":2990,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":2978,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":3723,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":3248,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":3239,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["values",{"_index":260,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiFilterComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{}}}],["values.foreach(value",{"_index":1976,"title":{},"body":{"injectables/CardService.html":{}}}],["var",{"_index":337,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1719,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":1318,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":1218,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["verifytranslationneeded",{"_index":4327,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus",{"_index":4395,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["verifytranslationneedformenus:observable",{"_index":4347,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["version:'${version",{"_index":3904,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/ActionStatus.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput",{"_index":4412,"title":{},"body":{"injectables/TranslateEffects.html":{}}}],["versioninput[publisher",{"_index":4373,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versioninput[third",{"_index":4380,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versionparam",{"_index":3885,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versions",{"_index":3546,"title":{},"body":{"classes/RefreshTranslation.html":{},"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{},"classes/TranslationUpToDate.html":{},"classes/UpdateTranslation.html":{},"classes/UpdateTranslationFailed.html":{},"classes/UpdateTranslationSuccessful.html":{}}}],["versions.add(u.version",{"_index":4360,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versions2update",{"_index":4372,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["versiontoupdate",{"_index":4392,"title":{},"body":{"classes/TransitionalThirdWithItSVersion.html":{},"injectables/TranslateEffects.html":{}}}],["via",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["virtual",{"_index":2555,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":4185,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":715,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":298,"title":{},"body":{"components/ActionComponent.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchiveListPageComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/ConfirmModalComponent.html":{},"components/DatetimeFilterComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiFilterComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdActionService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["w",{"_index":4131,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["wait",{"_index":2387,"title":{},"body":{"components/DetailComponent.html":{}}}],["warning",{"_index":2408,"title":{},"body":{"components/DetailComponent.html":{},"components/ResizableComponent.html":{}}}],["way",{"_index":4002,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["weather",{"_index":4255,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["web",{"_index":1074,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["wee",{"_index":4616,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["week",{"_index":2603,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["weeknumberonly",{"_index":4624,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["weirdly",{"_index":1702,"title":{},"body":{"components/CardComponent.html":{}}}],["went",{"_index":1751,"title":{},"body":{"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":3402,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":2713,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":3382,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:11",{"_index":3392,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:13",{"_index":3391,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:16",{"_index":3396,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:21",{"_index":3394,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:26",{"_index":3398,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:34",{"_index":3400,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["whether",{"_index":1784,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["width",{"_index":1713,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["width:100px",{"_index":2296,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["width_min",{"_index":4098,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["win",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["window",{"_index":1599,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/ResizableComponent.html":{}}}],["window.dispatchevent(evt",{"_index":3581,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.dispatchevent(new",{"_index":3572,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.document.createevent('uievents",{"_index":3579,"title":{},"body":{"components/ResizableComponent.html":{}}}],["window.event",{"_index":3410,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location.href",{"_index":1275,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["window.location.href.indexof('code",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.pathname",{"_index":2161,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["window:resize",{"_index":1534,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/ResizableComponent.html":{}}}],["withlatestfrom",{"_index":878,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":2626,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2657,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectarchivefilters",{"_index":864,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":1856,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":1342,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":2044,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/BaseSettingComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["won't",{"_index":4018,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["word",{"_index":1717,"title":{},"body":{"components/CardComponent.html":{}}}],["workflow",{"_index":4541,"title":{},"body":{"injectables/UserEffects.html":{}}}],["works",{"_index":1525,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{},"components/ResizableComponent.html":{}}}],["writevalue",{"_index":2250,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["writevalue(val",{"_index":2269,"title":{},"body":{"components/DatetimeFilterComponent.html":{}}}],["wrong",{"_index":1386,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wrote",{"_index":4600,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["www",{"_index":1154,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["x",{"_index":981,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["x.getboundingclientrect().height).reduce((prev",{"_index":1593,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x.style.height",{"_index":1605,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x1",{"_index":4236,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":4238,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":4237,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":4241,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":4239,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":4589,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":2685,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":982,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/TimeLineComponent.html":{}}}],["yea",{"_index":4618,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":2211,"title":{},"body":{"classes/DateTimeNgb.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["yes",{"_index":160,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckTokenResponse.html":{},"classes/DateTimeNgb.html":{},"classes/I18n.html":{},"classes/LightCard.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["yield",{"_index":1563,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["yy",{"_index":4631,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":2348,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythirdfromcard(this.card",{"_index":2381,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":4678,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":3627,"title":{},"body":{"components/SettingsComponent.html":{}}}],["zoom",{"_index":640,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["zoomonbutton",{"_index":4110,"title":{},"body":{"components/TimeLineComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n\nTryToLogIn\nCheckAuthentication via handleLogInAttempt @method\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogOut\n\nRejectLogInAttempt\nConsume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:144\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean, key?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionComponent.html":{"url":"components/ActionComponent.html","title":"component - ActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/action.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-action\n            \n\n            \n                styleUrls\n                ./action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentActionPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionUrlPath\n                            \n                            \n                                i18nPrefix\n                            \n                            \n                                lightCardId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_modalService: NgbModal, actionService: ThirdActionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/action.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ThirdActionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         Action\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionUrlPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n                \n                    \n                        Type :         I18n\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lightCardId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/action.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentActionPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/action.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Action} from \"@ofModel/thirds.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport {ThirdActionService} from \"@ofServices/third-action.service\";\n\n@Component({\n    selector: 'of-action',\n    templateUrl: './action.component.html',\n    styleUrls: ['./action.component.scss']\n})\nexport class ActionComponent implements OnInit {\n\n    @Input()  action: Action;\n    @Input()  i18nPrefix: I18n;\n    @Input()  lightCardId: string;\n    @Input()  actionUrlPath: string;\n    private currentActionPath: string;\n    /* istanbul ignore next */\n    constructor(\n        private _modalService: NgbModal\n        , private actionService: ThirdActionService) {\n    }\n\n    ngOnInit(): void {\n        this.currentActionPath = `${this.actionUrlPath}/${this.action.key}`;\n    }\n\n    submit() {\n        this.actionService.submit(\n            this.lightCardId\n            , this.currentActionPath\n            , this.action\n            , this._modalService);\n    }\n}\n\n    \n\n    \n        {{i18nPrefix + action.label.key}}\n\n    \n\n    \n                \n                    ./action.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{i18nPrefix + action.label.key}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionStatus.html":{"url":"classes/ActionStatus.html","title":"class - ActionStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, needsConfirm: boolean, lockAction: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:100\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddActionsAppear.html":{"url":"classes/AddActionsAppear.html","title":"class - AddActionsAppear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddActionsAppear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.AddActionsAppear\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:75\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddThirdActions.html":{"url":"classes/AddThirdActions.html","title":"class - AddThirdActions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddThirdActions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddThirdActions\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:121\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:47\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterContentInit, AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {InitAuthStatus} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {selectExpirationTime} from '@ofSelectors/authentication.selectors';\nimport {isInTheFuture} from \"@ofServices/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false ;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,private i18nService:I18nService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`)\n        let i = window.location.href.indexOf('code');\n        if(i != -1){\n            this.store.dispatch(new InitAuthStatus({code:window.location.href.substring(i + 5)}))\n        }\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.store.pipe(select(selectExpirationTime),\n            map(isInTheFuture)\n                        ).subscribe(isAUth => this.isAuthenticated$ = isAUth);\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries=>this.maxedRetries=maxedRetries));\n        // First Action send by the application, is the user currently authenticated ?\n        this.store.dispatch(new LoadConfig());\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n        Application is loading ...\n    \n        \n        Application is not available yet, please reload later (F5)\n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n.button {margin-right: 8px;}\n\n.app-content {\n  height: 100%; //This allows to take up all the space in body, minus padding\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Application is loading ...                    Application is not available yet, please reload later (F5)        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {IconComponent} from './components/icon/icon.component';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {translateConfig} from \"./translate.config\";\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faExternalLinkAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport {InfoComponent} from './components/navbar/info/info.component';\nimport {UtilitiesModule} from \"./modules/utilities/utilities.module\";\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt)\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [AppComponent, NavbarComponent, LoginComponent, IconComponent, InfoComponent],\n    providers: [ { provide: LocationStrategy, useClass: HashLocationStrategy }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from '@ofServices/guard.service';\nimport {LoginComponent} from './components/login/login.component';\n\nconst routes: Routes = [\n    // {\n    //     path: 'login',\n    //     component: LoginComponent\n    // },\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'archives',\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: './modules/settings/settings.module#SettingsModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: '/feed'}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes,{ enableTracing: false, preloadingStrategy: PreloadAllModules })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        archive\n                                \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                                \n                                        translation\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archive\n                                    \n                                \n                                \n                                    \n                                        archive:         ArchiveState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArchiveState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation\n                                    \n                                \n                                \n                                    \n                                        translation:         TranslationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TranslationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {reducer as archiveReducer} from '@ofStore/reducers/archive.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\nimport {ArchiveState} from \"@ofStates/archive.state\";\nimport {ArchiveEffects} from \"@ofEffects/archive.effects\";\n\nimport {reducer as userReducer} from '@ofStore/reducers/user.reducer';\nimport {UserState} from \"@ofStates/user.state\";\nimport {UserEffects} from \"@ofEffects/user.effects\";\n\nimport {reducer as translationReducer} from \"@ofStore/reducers/translation.reducer\";\nimport {TranslateEffects} from \"@ofEffects/translate.effects\";\nimport {TranslationState} from \"@ofStates/translation.state\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n    archive: ArchiveState;\n    user: UserState;\n    translation: TranslationState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects,\n    ArchiveEffects,\n    UserEffects,\n    TranslateEffects\n];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer,\n    archive: archiveReducer,\n    user: userReducer,\n    translation: translationReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArchiveEffects.html":{"url":"injectables/ArchiveEffects.html","title":"injectable - ArchiveEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArchiveEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/archive.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryArchivedCards\n                            \n                            \n                                queryArchivedCardsPage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/archive.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCardsPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {\n    ArchiveActionTypes,\n    ArchiveQuerySuccess,\n    HandleUnexpectedError,\n    SendArchiveQuery,\n    UpdateArchivePage\n} from '@ofActions/archive.actions';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {selectArchiveFilters} from '@ofSelectors/archive.selectors';\nimport {Page} from '@ofModel/page.model';\nimport {UpdateArchiveFilter} from '../actions/archive.actions';\n\n@Injectable()\nexport class ArchiveEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store, private actions$: Actions, private service: CardService) {\n    }\n\n    @Effect()\n    queryArchivedCards: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.SendArchiveQuery),\n        // update the filter state and the archive list\n        switchMap((action: SendArchiveQuery) => {\n            const {params} = action.payload;\n            this.store.dispatch(new UpdateArchiveFilter({filters: params}));\n            return this.service.fetchArchivedCards(new Map(params));\n        }),\n        map((resultPage: Page) => new ArchiveQuerySuccess({resultPage})),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n    @Effect()\n    queryArchivedCardsPage: Observable = this.actions$.pipe(\n        ofType(ArchiveActionTypes.UpdateArchivePage),\n        withLatestFrom(this.store.select(selectArchiveFilters)),\n        map(([action, filters]) => {\n            // get the current page\n            const page = (action as UpdateArchivePage).payload.page;\n            // modify the filters page\n            filters.set('page', [page.toString()]);\n            return new SendArchiveQuery({params: filters});\n        }),\n        catchError((error, caught) => {\n            this.store.dispatch(new HandleUnexpectedError({error: error}));\n            return caught;\n        })\n    );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveFiltersComponent.html":{"url":"components/ArchiveFiltersComponent.html","title":"component - ArchiveFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-filters\n            \n\n            \n                styleUrls\n                ./archive-filters.component.css\n            \n\n\n\n            \n                templateUrl\n                ./archive-filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archiveForm\n                            \n                            \n                                filtersToMap\n                            \n                            \n                                first$\n                            \n                            \n                                processes$\n                            \n                            \n                                size$\n                            \n                            \n                                tags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsendQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            archiveForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filtersToMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:75\n                            \n                        \n\n                \n                    \n                        Transorm the filters list to Map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/archive-filters.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable, combineLatest} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { SendArchiveQuery } from '@ofStore/actions/archive.actions';\nimport { DateTimeNgb } from '@ofModel/datetime-ngb.model';\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { TimeService } from '@ofServices/time.service';\n\nexport enum FilterDateTypes {\n  PUBLISH_DATE_FROM_PARAM = 'publishDateFrom',\n  PUBLISH_DATE_TO_PARAM = 'publishDateTo',\n  ACTIVE_FROM_PARAM = 'activeFrom',\n  ACTIVE_TO_PARAM = 'activeTo'\n\n}\n\nexport const checkElement = (enumeration: typeof FilterDateTypes, value: string): boolean => {\n  let result = false;\n  if (Object.values(enumeration).includes(value)) {\n    result = true;\n  }\n  return result;\n};\n\nexport const transformToTimestamp = (date: NgbDateStruct, time: NgbTimeStruct): string => {\n  return new DateTimeNgb(date, time).formatDateTime();\n};\n\n@Component({\n  selector: 'of-archive-filters',\n  templateUrl: './archive-filters.component.html',\n  styleUrls: ['./archive-filters.component.css']\n})\nexport class ArchiveFiltersComponent implements OnInit {\n\n  tags$: Observable;\n  processes$: Observable;\n  size$: Observable;\n  first$: Observable;\n\n  archiveForm: FormGroup;\n\n  constructor(private store: Store, private timeService: TimeService) {\n    this.archiveForm = new FormGroup({\n      tags: new FormControl(''),\n      process: new FormControl(),\n      publishDateFrom: new FormControl(''),\n      publishDateTo: new FormControl(''),\n      activeFrom: new FormControl(''),\n      activeTo: new FormControl(''),\n    });\n  }\n\n\n  ngOnInit() {\n    this.tags$ = this.store.select(buildConfigSelector('archive.filters.tags.list'));\n    this.processes$ = this.store.select(buildConfigSelector('archive.filters.process.list'));\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  /**\n   * Transorm the filters list to Map\n   */\n  filtersToMap = (filters: any): Map => {\n    const params = new Map();\n    Object.keys(filters).forEach(key => {\n      const element = filters[key];\n        // if the form element is date\n      if (element) {\n        if (checkElement(FilterDateTypes, key)) {\n          const {date, time} = element;\n          if (date) {\n            const dateString = transformToTimestamp(date, time);\n            params.set(key, [this.timeService.toNgBTimestamp(dateString)]);\n          }\n        } else {\n          if (element.length) {\n            params.set(key, element);\n          }\n        }\n      }\n    });\n    return params;\n  }\n\n  sendQuery(): void {\n    const {value} = this.archiveForm;\n    const params = this.filtersToMap(value);\n    this.size$.subscribe(size => params.set('size', [size.toString()]));\n    this.first$.subscribe(first => params.set('page', [first.toString()]));\n    this.store.dispatch(new SendArchiveQuery({params}));\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n          \n            archive.search\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive-filters.component.css\n                \n                .nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  .archive-filter {\n    padding-right:7px;\n    padding-left:0;\n  }\n  .archive-radius {\n    border-radius:5px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                      archive.search                              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListComponent.html":{"url":"components/ArchiveListComponent.html","title":"component - ArchiveListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list\n            \n\n            \n                styleUrls\n                ./archive-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable, of} from 'rxjs';\nimport { AppState } from '@ofStore/index';\nimport { Store, select } from '@ngrx/store';\nimport { catchError, tap } from 'rxjs/operators';\nimport { selectArchiveLightCards } from '@ofStore/selectors/archive.selectors';\n\n@Component({\n  selector: 'of-archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.scss']\n})\nexport class ArchiveListComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n      \n        \n      \n    \n    \n\n\n\n    \n\n    \n                \n                    ./archive-list.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListPageComponent.html":{"url":"components/ArchiveListPageComponent.html","title":"component - ArchiveListPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list-page\n            \n\n            \n                styleUrls\n                ./archive-list-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionSize$\n                            \n                            \n                                first$\n                            \n                            \n                                size$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateResultPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateResultPage\n                        \n                        \n                    \n                \n            \n            \n                \nupdateResultPage(currentPage)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentPage\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionSize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list-page/archive-list-page.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {UpdateArchivePage} from '@ofActions/archive.actions';\nimport {Store, select} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport { selectArchiveCount } from '@ofStore/selectors/archive.selectors';\nimport { tap, catchError } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-archive-list-page',\n  templateUrl: './archive-list-page.component.html',\n  styleUrls: ['./archive-list-page.component.scss']\n})\nexport class ArchiveListPageComponent implements OnInit {\n\n  collectionSize$: Observable;\n  first$: Observable;\n  size$: Observable;\n  constructor(private store: Store) {}\n  ngOnInit(): void {\n    this.collectionSize$ = this.store.pipe(\n      select(selectArchiveCount),\n      catchError(err => of(0))\n    );\n    this.size$ = this.store.select(buildConfigSelector('archive.filters.page.size'));\n    this.first$ = this.store.select(buildConfigSelector('archive.filters.page.first'));\n  }\n\n  updateResultPage(currentPage): void {\n    this.store.dispatch(new UpdateArchivePage({page: currentPage - 1}));\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n (size$ | async)\"\n  [collectionSize]=\"collectionSize$ | async\"\n  [page]=\"first$ | async\"\n  (pageChange)=\"updateResultPage($event)\"\n  [maxSize]=\"3\"\n  [rotate]=\"true\">\n\n\n    \n\n    \n                \n                    ./archive-list-page.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' (size$ | async)\"  [collectionSize]=\"collectionSize$ | async\"  [page]=\"first$ | async\"  (pageChange)=\"updateResultPage($event)\"  [maxSize]=\"3\"  [rotate]=\"true\">'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArchiveQuerySuccess.html":{"url":"classes/ArchiveQuerySuccess.html","title":"class - ArchiveQuerySuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArchiveQuerySuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.ArchiveQuerySuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArchiveState.html":{"url":"interfaces/ArchiveState.html","title":"interface - ArchiveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArchiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/archive.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filters\n                                \n                                \n                                        loading\n                                \n                                \n                                        resultPage\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resultPage\n                                    \n                                \n                                \n                                    \n                                        resultPage:     Page\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Page\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n// import { IArchiveFilter } from '@ofModel/archive-filter.model';\n\nexport interface ArchiveState {\n    selectedCardId: string;\n    resultPage: Page;\n    filters: Map;\n    loading: boolean;\n}\n\nexport const archiveInitialState: ArchiveState = {\n        selectedCardId: null,\n        resultPage: new Page(1, 0 , []),\n        filters: new Map(),\n        loading: false\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {select, Store} from '@ngrx/store';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {AppState} from '@ofStore/index';\nimport {selectArchiveLightCards, selectArchiveLightCardSelection} from '@ofSelectors/archive.selectors';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  lightCards$: Observable;\n  selection$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.lightCards$ = this.store.pipe(\n        select(selectArchiveLightCards),\n        catchError(err => of([]))\n    );\n    this.selection$ = this.store.select(selectArchiveLightCardSelection);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n    \n\n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchiveFiltersComponent\n                        \n                        \n                            ArchiveListComponent\n                        \n                        \n                            ArchiveListPageComponent\n                        \n                        \n                            ArchivesComponent\n                        \n                        \n                            DatetimeFilterComponent\n                        \n                        \n                            MultiFilterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                        \n                            CardsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport { ArchiveListPageComponent } from './components/archive-list/archive-list-page/archive-list-page.component';\nimport {ArchivesComponent} from './archives.component';\nimport {ArchiveListComponent} from './components/archive-list/archive-list.component';\nimport { ArchiveFiltersComponent } from './components/archive-filters/archive-filters.component';\nimport { MultiFilterComponent } from './components/archive-filters/multi-filter/multi-filter.component';\nimport { DatetimeFilterComponent } from './components/archive-filters/datetime-filter/datetime-filter.component';\nimport {CardsModule} from '../cards/cards.module';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArchivesRoutingModule,\n    CardsModule,\n    TranslateModule,\n    NgbModule\n  ],\n  declarations: [\n    ArchivesComponent,\n    ArchiveListComponent,\n    ArchiveFiltersComponent,\n    MultiFilterComponent,\n    ArchiveListPageComponent,\n    DatetimeFilterComponent\n  ]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n        ]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to try to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:294\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:297\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:299\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:298\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:300\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth:PayloadForSuccessfulAuthentication):Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:136\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => new AcceptLogIn(auth))\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:179\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:61\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:155\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:83\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:110\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {catchError, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {Router} from \"@angular/router\";\nimport {ConfigActionTypes} from \"@ofActions/config.actions\";\nimport {selectCode} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {CardService} from \"@ofServices/card.service\";\nimport {EmptyLightCards} from \"@ofActions/light-card.actions\";\nimport {ClearCard} from \"@ofActions/card.actions\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructor\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogin\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    private resetState() {\n        AuthenticationService.clearAuthenticationInformation();\n        this.cardService.unsubscribeCardOperation();\n    }\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => new AcceptLogIn(auth))\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n    handleErrorOnTokenGeneration(errorResponse,category:string) {\n        let message, key;\n        let params = new Map()\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        AuthenticationService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    // handleLogInAttempt(payload: CheckTokenResponse): AuthenticationActions {\n    //     if (payload) {\n    //         const authInfo = this.authService.extractIdentificationInformation();\n    //         return new AcceptLogIn(authInfo);\n    //\n    //     }\n    //     return this.handleRejectedLogin('invalid token');\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html'\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceholder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CalcHeightDirective.html":{"url":"directives/CalcHeightDirective.html","title":"directive - CalcHeightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CalcHeightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/utilities/calc-height.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [calcHeightDirective]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resizeSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calcHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                calcHeightClass\n                            \n                            \n                                fixedHeightClass\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/calc-height.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        calcHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fixedHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:41\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calcHeight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixedHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    calcHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resizeSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive, ElementRef,\n    Input, HostListener, OnInit\n} from '@angular/core';\nimport {debounceTime} from \"rxjs/operators\";\nimport {Subject} from \"rxjs\";\n\n@Directive({\n    selector: '[calcHeightDirective]'\n})\nexport class CalcHeightDirective {\n\n    @Input()\n    parentId: any;\n\n    @Input()\n    fixedHeightClass: any;\n\n    @Input()\n    calcHeightClass: any;\n\n    private _resizeSubject$: Subject;\n\n    constructor(private el: ElementRef) {\n\n        this._resizeSubject$ = new Subject();\n        this._resizeSubject$.asObservable().pipe(\n            debounceTime(300),\n        ).subscribe(x => this.calcHeight(this.parentId, this.fixedHeightClass, this.calcHeightClass));\n\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        this._resizeSubject$.next();\n    }\n\n    private calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string) {\n\n        let parent : HTMLElement;\n\n        parent = document.getElementById(this.parentId);\n\n        //If no parentId was provided or search didn't yield any element, fallback is element calling the directive\n        if(!parent){\n            parent = this.el.nativeElement;\n        }\n\n        if(!parent){\n            return;\n        }\n\n        //Get elements that should be allowed to define their own height (based on content), which are then \"fixed\" for this calculation\n        const fixedElements = parent.getElementsByClassName(fixedHeightClass);\n\n        //Get elements that for which the height should be calculated\n        //For now all elements bearing the calcHeightClass will have their height updated to the same calculated value\n        //Which makes sense if they're next to one another, but another option would be to divide the available height equally\n        const calcElements = parent.getElementsByClassName(calcHeightClass);\n\n        if (!calcElements) return;\n\n        //Sum heights of fixed elements\n        const sumFixElemHeights = Array.from(fixedElements)\n            .map(x => x.getBoundingClientRect().height).reduce((prev, curr) => {\n                return prev + curr;\n            }, 0);\n\n        // Calculate available height by subtracting the heights of fixed elements from the total window height\n        let availableHeight = parent.clientHeight - sumFixElemHeights;\n\n        //console.log(\"CalcHeightDirective \"+fixedHeightClass+\" \"+parent.clientHeight+\" \"+sumFixElemHeights+\" \"+availableHeight);\n\n        // Apply height and overflow\n        Array.from(calcElements)\n            .forEach((x: HTMLElement) => x.style.height = `${availableHeight}px`\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _i18nPrefix\n                            \n                            \n                                    Private\n                                actions\n                            \n                            \n                                actionsAppear\n                            \n                            \n                                actionsUrlPath\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                            \n                                    Private\n                                ngUnsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                getActions\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                transformActionMapToArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformActionMapToArray\n                        \n                        \n                    \n                \n            \n            \n                \ntransformActionMapToArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsAppear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionsUrlPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:117\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\nimport {TranslateService} from '@ngx-translate/core';\nimport {TimeService} from '@ofServices/time.service';\nimport {Action} from '@ofModel/thirds.model';\nimport {Subject} from 'rxjs';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\nimport { selectCardActionsAppearState } from '@ofStore/selectors/card.selectors';\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    protected _i18nPrefix: string;\n    dateToDisplay: string;\n    actionsUrlPath: string;\n    private actions: Action[];\n    actionsAppear = false;\n\n    private ngUnsubscribe: Subject = new Subject();\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService\n    ) {\n    }\n\n    ngOnInit() {\n        const card = this.lightCard;\n        this._i18nPrefix = `${card.publisher}.${card.publisherVersion}.`;\n        this.store.select(selectCurrentUrl).subscribe(url => {\n            if (url) {\n                const urlParts = url.split('/');\n                this.currentPath = urlParts[1];\n            }\n        });\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n        // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, card)))\n            .pipe(takeUntil(this.ngUnsubscribe))\n            .subscribe(computedDate => this.dateToDisplay = computedDate);\n\n        this.actionsUrlPath = `/publisher/${card.publisher}/process/${card.processId}/states/${card.state}/actions`;\n        // check if the current card is in the store\n        this.store.select(selectCardActionsAppearState).subscribe(d => {\n            const currentSelected = card.id;\n            if (d.includes(currentSelected)) {\n                this.actionsAppear = true;\n            }\n        });\n    }\n\n    computeDisplayedDates(config: string, lightCard: LightCard): string {\n        switch (config) {\n            case 'NONE':\n                return '';\n            case 'LTTD':\n                return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION':\n                return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START':\n                return this.handleDate(lightCard.startDate);\n            default:\n                return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp: number): string {\n        return this.time.formatDateTime(timeStamp);\n    }\n\n    public select() {\n        this.store.dispatch(new AddActionsAppear(this.lightCard.id));\n        this.router.navigate(['/' + this.currentPath, 'cards', this.lightCard.id]);\n    }\n\n    /* necessary otherwise action buttons are weirdly refresh */\n    getActions() {\n        if (!this.actions) {\n            this.actions = this.transformActionMapToArray();\n        }\n        return this.actions;\n    }\n\n    transformActionMapToArray() {\n        const actions = this.lightCard.actions;\n        if (actions) {\n            const entries = Array.from(actions.entries());\n            return entries.map(([key, action]: [string, Action]) => {\n                return {...action, key: key}\n            });\n        }\n        return [];\n    }\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n    ngOnDestroy(): void {\n        this.ngUnsubscribe.next();\n        this.ngUnsubscribe.complete();\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix + lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix + lightCard.summary.key}}\n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix + lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix + lightCard.summary.key}}                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                currentPath\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDetails\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport { ClearLightCardSelection } from '@ofStore/actions/light-card.actions';\nimport { Router } from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n    currentPath: any;\n\n    constructor(private store: Store,\n        private thirdsService: ThirdsService,\n        private router: Router) {\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if (card) {\n                    if (card.details) {\n                        this.details = [...card.details];\n                    } else {\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion).subscribe(third => {\n                            if (third) {\n                                const state = third.extractState(this.card);\n                                if (state != null) {\n                                    this.details.push(...state.details);\n                                }\n                            }\n                        },\n                        error => console.log(`something went wrong while trying to fetch third for ${this.card.publisher} with ${this.card.publisherVersion} version.`))\n                    ;\n                }\n            });\n            this.store.select(selectCurrentUrl).subscribe(url => {\n                if (url) {\n                    const urlParts = url.split('/');\n                    this.currentPath = urlParts[1];\n                }\n            });\n    }\n    closeDetails() {\n        this.store.dispatch(new ClearLightCardSelection());\n        this.router.navigate(['/' + this.currentPath, 'cards']);\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      &times;\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ×          '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clearCardSelection\n                            \n                            \n                                loadArchivedById\n                            \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadArchivedById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from '@ofStore/index';\nimport {CardActionTypes,\n        LoadArchivedCard, LoadArchivedCardFailure,\n        LoadArchivedCardSuccess,\n        LoadCard,\n        LoadCardFailure,\n        LoadCardSuccess,\n        ClearCard} from '@ofActions/card.actions';\nimport {Card} from '@ofModel/card.model';\nimport { ClearLightCardSelection, LightCardActionTypes } from '@ofStore/actions/light-card.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {}\n\n    @Effect()\n    loadById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadCard),\n        switchMap(action => this.service.loadCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    loadArchivedById: Observable = this.actions$.pipe(\n        ofType(CardActionTypes.LoadArchivedCard),\n        switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n        map((card: Card) => {\n            return new LoadArchivedCardSuccess({card: card});\n        }),\n        catchError((err, caught) => {\n            this.store.dispatch(new LoadArchivedCardFailure(err));\n            return caught;\n        })\n    );\n\n    @Effect()\n    clearCardSelection: Observable = this.actions$.pipe(\n        ofType(LightCardActionTypes.ClearLightCardSelection),\n        map(() => {\n            return new ClearCard();\n        })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: whether there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: whether there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card1.publishDate - card2.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareBySeverityLttdPublishDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n            \n                styleUrls\n                ./card-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:27\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from 'rxjs';\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { selectCurrentUrl } from '@ofStore/selectors/router.selectors';\nimport { AddActionsAppear } from '@ofStore/actions/card.actions';\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.scss']\n})\nexport class CardListComponent extends ResizableComponent implements OnInit {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor(private store: Store) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.store.select(selectCurrentUrl).subscribe(url => {\n      if (url) {\n          const urlParts = url.split('/');\n          if (urlParts[3]) {\n              this.store.dispatch(new AddActionsAppear(urlParts[3]));\n          }\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./card-list.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardOperation.html":{"url":"classes/CardOperation.html","title":"class - CardOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card-operation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CardOperation\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertTypeIntoEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, publicationDate: number, type: CardOperationType, cards?: LightCard[], cardIds?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card-operation.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicationDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CardOperationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cards\n                                                  \n                                                        \n                                                                    LightCard[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertTypeIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTypeIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/card-operation.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from './light-card.model';\n\nexport class CardOperation implements CardOperation {\n    /* istanbul ignore next */\n    constructor(\n        readonly number: number,\n        readonly publicationDate: number,\n        readonly type: CardOperationType,\n        readonly cards?: LightCard[],\n        readonly cardIds?: string[]\n    ) {\n    }\n\n    static convertTypeIntoEnum(key:string, value:string){\n        if(key === 'type'){\n            return CardOperationType[value]\n        }\n        return value;\n    }\n\n}\n\nexport enum CardOperationType {\n    ADD , UPDATE, DELETE\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:73\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LightCardActionTypes,\n    LoadLightCardsSuccess,\n    RemoveLightCard,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {CardOperationType} from \"@ofModel/card-operation.model\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                archivesUrl\n                            \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchArchivedCards\n                            \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadArchivedCard\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, guidService: GuidService, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchArchivedCards\n                        \n                        \n                    \n                \n            \n            \n                \nfetchArchivedCards(filters: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadArchivedCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadArchivedCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            archivesUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication.service';\nimport {Card} from '@ofModel/card.model';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {environment} from '@env/environment';\nimport {GuidService} from '@ofServices/guid.service';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\nimport { TimeService } from './time.service';\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n    readonly archivesUrl: string;\n\n\n    constructor(private httpClient: HttpClient,\n        private guidService: GuidService, private timeService: TimeService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n        this.archivesUrl = `${environment.urls.cards}/archives`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        let minus2Hour = new Date(new Date().valueOf()-2*60*60*1000);\n        let plus48Hours = new Date(minus2Hour.valueOf()+48*60*60*1000);\n        //security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {headers: AuthenticationService.getSecurityHeader(),\n                heartbeatTimeout: 600000}));\n    }\n\n\n\n    unsubscribeCardOperation(){\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data,CardOperation.convertTypeIntoEnum));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`)\n                }\n\n            } catch (error) {\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        });\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart:number,rangeEnd:number):Observable{\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart:rangeStart,rangeEnd: rangeEnd});\n    }\n\n    loadArchivedCard(id: string): Observable {\n        return this.httpClient.get(`${this.archivesUrl}/${id}`);\n    }\n\n    fetchArchivedCards(filters: Map): Observable> {\n        let params = new HttpParams();\n        filters.forEach((values, key) => values.forEach(value => params = params.append(key, value)));\n        // const tmp = new HttpParams().set('publisher', 'defaultPublisher').set('size', '10');\n        return this.httpClient.get>(`${this.archivesUrl}/`, {params});\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionsAppear\n                                \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionsAppear\n                                    \n                                \n                                \n                                    \n                                        actionsAppear:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from '@ofModel/card.model';\n\nexport interface CardState {\n    selected: Card;\n    loading: boolean;\n    error: string;\n    actionsAppear: string[];\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null,\n    actionsAppear: []\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_imports\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nActionComponent\n\nActionComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ConfirmModalComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            ConfirmModalComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {ActionComponent} from './components/action/action.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ConfirmModalComponent} from \"./components/action/confirm-modal/confirm-modal.component\";\n\n@NgModule({\n  declarations: [CardComponent\n      , CardDetailsComponent\n      , DetailsComponent\n      , DetailComponent\n      , ActionComponent\n      , ConfirmModalComponent],\n  imports: [\n    CommonModule,\n      TranslateModule,\n      UtilitiesModule,\n      NgbModule\n  ],\n    exports: [CardComponent\n        , CardDetailsComponent\n        , DetailsComponent\n        , DetailComponent\n        , ConfirmModalComponent\n    ],\n    providers: [HandlebarsService],\n    entryComponents: [ConfirmModalComponent]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:309\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:313\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:312\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:311\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n    private givenNameClaim: string;\n    private familyNameClaim: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.givenNameClaim = _.get(oauth2Conf, 'jwt.given-name-claim', 'given_name');\n        this.familyNameClaim = _.get(oauth2Conf, 'jwt.family-name-claim', 'family_name');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth:PayloadForSuccessfulAuthentication):Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate),\n            jwt[this.givenNameClaim],\n            jwt[this.familyNameClaim]\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:82\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:54\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:71\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmModalComponent.html":{"url":"components/ConfirmModalComponent.html","title":"component - ConfirmModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-modal-component\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                dismiss\n                            \n                            \n                                ok\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismiss\n                        \n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ok\n                        \n                        \n                    \n                \n            \n            \n                \nok()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {Component} from \"@angular/core\";\n\n@Component({\n    selector:'confirm-modal-component',\n    templateUrl: './confirm-modal.component.html'\n})\nexport class ConfirmModalComponent {\n    constructor(public modal: NgbActiveModal) {}\n    dismiss(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.DISMISS);\n    }\n\n    ok(){\n        this.modal.close(ThirdActionComporentModalReturn.OK);\n    }\n\n    cancel(){\n        this.modal.dismiss(ThirdActionComporentModalReturn.CANCEL);\n    }\n}\n\nexport enum ThirdActionComporentModalReturn{\n    CANCEL,OK,DISMISS\n}\n\n    \n\n    \n        \n    Action Status Changed\n    \n        &times;\n    \n\n\n    The status of the Action your are about to perform has changed\" \n    Either you send another time the action or you just update the new status.\n        This operation can not be undone.\n    \n\n\n    Save action\n    Send action anyway\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Action Status Changed            ×        The status of the Action your are about to perform has changed\"     Either you send another time the action or you just update the new status.        This operation can not be undone.        Save action    Send action anyway'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplication.html":{"url":"classes/CreateUserApplication.html","title":"class - CreateUserApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplication\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnFailure.html":{"url":"classes/CreateUserApplicationOnFailure.html","title":"class - CreateUserApplicationOnFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserApplicationOnSuccess.html":{"url":"classes/CreateUserApplicationOnSuccess.html","title":"class - CreateUserApplicationOnSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserApplicationOnSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.CreateUserApplicationOnSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToArchivedCard\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToArchivedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:71\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {\n    ROUTER_NAVIGATED,\n    ROUTER_NAVIGATION,\n    ROUTER_REQUEST,\n    RouterNavigationAction,\n    RouterRequestAction\n} from \"@ngrx/router-store\";\nimport {filter, map, switchMap} from \"rxjs/operators\";\nimport {LoadArchivedCard, LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {SelectArchivedLightCard} from \"@ofActions/archive.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateToArchivedCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeNgb.html":{"url":"classes/DateTimeNgb.html","title":"class - DateTimeNgb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeNgb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/datetime-ngb.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    NgbDateParserFormatter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                format\n                            \n                            \n                                formatDateTime\n                            \n                            \n                                formatTime\n                            \n                            \n                                parse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date?: NgbDateStruct, time?: NgbTimeStruct)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/datetime-ngb.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                    NgbDateStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    NgbTimeStruct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            format\n                        \n                        \n                    \n                \n            \n            \n                \nformat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDateTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatDateTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatTime\n                        \n                        \n                    \n                \n            \n            \n                \nformatTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/datetime-ngb.model.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NgbDateStruct\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NgbDateParserFormatter, NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nexport function padNumber(value: any) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\nexport function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\nexport class DateTimeNgb extends NgbDateParserFormatter {\n\n  /* istanbul ignore next */\n  constructor(readonly date?: NgbDateStruct, private time?: NgbTimeStruct) {\n    super();\n  }\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-').reverse();\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {day: toInteger(dateParts[0]), month: null, year: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {day: toInteger(dateParts[0]), month: toInteger(dateParts[1]), year: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n  format(): string {\n    const {date} = this;\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n\n  // a function that transform timestruct to string\n  formatTime(): string {\n    const {time} = this;\n    return time ?\n    `${isNumber(time.hour) ? padNumber(time.hour) : ''}:${isNumber(time.minute) ? padNumber(time.minute) : ''}` : '';\n  }\n\n  formatDateTime() {\n    let result = '';\n    const {date, time} = this;\n    // if date is present\n    if (date) {\n      if (!time) {\n        this.time = {hour: 0, minute: 0, second: 0};\n      }\n      result = `${this.format()}T${this.formatTime()}`;\n    }\n    return result;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeFilterComponent.html":{"url":"components/DatetimeFilterComponent.html","title":"component - DatetimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    Validator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                                {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => DatetimeFilterComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                of-datetime-filter\n            \n\n            \n                styleUrls\n                ./datetime-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./datetime-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                datetimeForm\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                onTouched\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                onChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                validate\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:33\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChange\n                        \n                        \n                    \n                \n            \n            \n                \nonChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChanges\n                        \n                        \n                    \n                \n            \n            \n                \nonChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(c: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(val: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datetimeForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {hour: 0, minute: 0}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/datetime-filter/datetime-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, FormControl,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  Validator} from '@angular/forms';\n\n@Component({\n  selector: 'of-datetime-filter',\n  templateUrl: './datetime-filter.component.html',\n  styleUrls: ['./datetime-filter.component.css'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatetimeFilterComponent),\n    multi: true\n  }, {\n   provide: NG_VALIDATORS,\n   useExisting: forwardRef(() => DatetimeFilterComponent),\n   multi: true\n }\n]\n})\nexport class DatetimeFilterComponent implements ControlValueAccessor, Validator {\n\n  disabled = true;\n  time = {hour: 0, minute: 0};\n  @Input() filterPath: string;\n  public datetimeForm: FormGroup = new FormGroup({\n    date: new FormControl(),\n    time: new FormControl()\n  });\n  constructor() {\n    this.onChanges();\n  }\n  /* istanbul ignore next */\n  public onTouched: () => void = () => {};\n  /* istanbul ignore next */\n  writeValue(val: any): void {\n    val && this.datetimeForm.setValue(val, { emitEvent: false });\n  }\n  /* istanbul ignore next */\n  registerOnChange(fn: any): void {\n    this.datetimeForm.valueChanges.subscribe(fn);\n  }\n  /* istanbul ignore next */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  /* istanbul ignore next */\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.datetimeForm.disable() : this.datetimeForm.enable();\n  }\n  /* istanbul ignore next */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this.datetimeForm.valid ? null : { invalidForm: {valid: false, message: 'datetimeForm fields are invalid'}};\n  }\n  /* istanbul ignore next */\n  onChanges(): void {\n    this.datetimeForm.get('date').valueChanges.subscribe(val => {\n      if (val) {\n        this.disabled = false;\n      }\n    });\n  }\n  /* istanbul ignore next */\n  onChange(event): void {\n    if (event.target.value === '') {\n      this.disabled = true;\n      this.time = {hour: 0, minute: 0};\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            archive.filters.{{filterPath}}\n            \n        \n        \n            Time\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./datetime-filter.component.css\n                \n                .nomarginrow {\n    margin-left:0;\n    margin-right:0;\n  }\n  .nopaddingrow {\n    padding-right:0;\n    padding-left:0;\n  }\n  legend.accessibility {\n    position:absolute;\n    left:-9999px;\n    width:100px;\n    height:auto;\n    overflow:hidden;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        archive.filters.{{filterPath}}                                        Time                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelayedLightCardUpdate.html":{"url":"classes/DelayedLightCardUpdate.html","title":"class - DelayedLightCardUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelayedLightCardUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:158\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.DelayedLightCardUpdate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:157\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                currentCard\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                            \n                                    Private\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                handelActionButtonText\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer, store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handelActionButtonText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handelActionButtonText(label: I18n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                I18n\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:93\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, SimpleChanges, OnChanges} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from '@ofServices/thirds.service';\nimport {HandlebarsService} from '../../services/handlebars.service';\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from '@angular/platform-browser';\nimport {Action, Third} from '@ofModel/thirds.model';\nimport {zip} from 'rxjs';\nimport {DetailContext} from '@ofModel/detail-context.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectAuthenticationState} from '@ofSelectors/authentication.selectors';\nimport {UserContext} from '@ofModel/user-context.model';\nimport {TranslateService} from '@ngx-translate/core';\nimport {I18n} from '@ofModel/i18n.model';\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit, OnChanges {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    currentCard: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n    private userContext: UserContext;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer,\n                private store: Store,\n                private translate: TranslateService ) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n        this.store.select(selectAuthenticationState).subscribe(authState => {\n            this.userContext = new UserContext(\n                authState.identifier,\n                authState.token,\n                authState.firstName,\n                authState.lastName\n            );\n        });\n    }\n    ngOnChanges(): void {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                // needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}'\n                and with local version '${safeCssUrl.toLocaleString()}'`);\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThirdFromCard(this.card),\n        this.handlebars.executeTemplate(this.detail.templateName, new DetailContext(this.card,null)))\n            .subscribe(\n                ([third, html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (const button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if (!!state && !!state.actions[actionId]) {\n                        this.attachAction(button, state.actions[actionId], actionId);\n                    }\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (const c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n\n        button.children[0].textContent = this.handelActionButtonText(action.label);\n\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n    private handelActionButtonText(label: I18n) {\n        if (label) {\n            if (this.card) {\n                console.log('card exists!');\n            } else {\n                console.log(`card doesn't exist yet`);\n            }\n            return this.translate.instant(`${this.card.publisher}.${this.card.publisherVersion}.${label.key}`, label.parameters);\n        }\n        return 'Undefined';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetailContext.html":{"url":"classes/DetailContext.html","title":"class - DetailContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetailContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/detail-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: Card, userContext: UserContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/detail-context.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                        Card\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContext\n                                                  \n                                                        \n                                                                        UserContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\nimport {UserContext} from \"@ofModel/user-context.model\";\n\nexport class DetailContext{\n    constructor(readonly card:Card, readonly userContext: UserContext){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ResizableComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:27\n\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ResizableComponent\n\n                \n            \n            \n                \n                        Defined in         ResizableComponent:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ResizableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ResizableComponent:10\n\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\nimport { ResizableComponent } from 'app/modules/utilities/components/resizable/resizable.component';\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent extends ResizableComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n        super();\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      {{i18nPrefix+detailC.detail.title.key}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.calc-height-details {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{i18nPrefix+detailC.detail.title.key}}              '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:7\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:18\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:28\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:40\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/app-draggable.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, Input} from '@angular/core';\nimport {TextSettingComponent} from '../text-setting/text-setting.component';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Validators} from '@angular/forms';\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html'\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    @Input() disabled: boolean;\n    constructor(protected store: Store) {\n        super(store);\n        console.log(this.disabled);\n    }\n\n    computeTextValidators() {\n      const validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify that something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from \"rxjs/operators\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide'))\n            .subscribe(v=>this.hideTimeLine = v);\n    \n            moment.updateLocale('en', { week: {\n                dow: 6, // First day of week is Saturday\n                doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n            }});\n    \n    }\n\n\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elapsedSoFar\n                            \n                            \n                                    Private\n                                followClockTick\n                            \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                            \n                                    Private\n                                refreshThreshold\n                            \n                            \n                                updateFilterOnClockTick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elapsedSoFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            followClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshThreshold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterOnClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Tick, TimeActionTypes} from \"@ofActions/time.actions\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    private followClockTick = false;\n\n    //Constants used by the updateFilterOnClockTick effect if the feed.timeFilter.followClockTick property is set to true\n    private elapsedSoFar = 0;\n    /*The time filter should only be refreshed once the accumulated shift in time is 1m\n    (since the time filter component only displays the time up to minutes)*/\n    private refreshThreshold = 60000;\n\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n\n        this.store.select(buildConfigSelector('feed.timeFilter.followClockTick')).subscribe(x => this.followClockTick = x);\n\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n\n    @Effect()\n    updateFilterOnClockTick: Observable = this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/time-line/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/tick-format-pipe/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/directives/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/directives/app-draggable\";\nimport {InitChartComponent} from \"./components/time-line/init-chart/init-chart.component\";\nimport {TagsFilterComponent} from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:43\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:56\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:67\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initRecipientFilter\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRecipientFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRecipientFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const question = Severity.QUESTION;\n        const notification = Severity.NOTIFICATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.question && card.severity == question ||\n                    status.notification && card.severity == notification;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                question: true,\n                notification: true\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n    private initRecipientFilter() {\n        return new Filter(\n            (card, status) => false,\n            false,\n            {}\n        );\n    }\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        // filters.set(FilterType.RECIPIENT_FILTER, this.initRecipientFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '@ofStore/index';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  hideTags$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n    \n    \n    \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString():string{\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:106\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-5.html":{"url":"classes/HandleUnexpectedError-5.html","title":"class - HandleUnexpectedError-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-6.html":{"url":"classes/HandleUnexpectedError-6.html","title":"class - HandleUnexpectedError-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerJson\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, context: DetailContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                DetailContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\nimport {DetailContext} from \"@ofModel/detail-context.model\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n\n    constructor(private time:TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n        this.registerJson();\n    }\n\n    public executeTemplate(templateName: string, context: DetailContext):Observable {\n        return this.queryTemplate(context.card.publisher,context.card.publisherVersion,templateName).pipe(\n            map(t=>t(context)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this.translate.getBrowserLang();\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerJson() {\n        Handlebars.registerHelper('json', function (obj) {\n            return new Handlebars.SafeString(JSON.stringify(obj))\n        });\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (...args: any[]) {\n            if(args.length === 3)\n                return args[0].split(args[1]);\n            if(args.length === 4)\n                return args[0].split(args[1])[args[2]];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this.translate.getBrowserLang());\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this.translate.getBrowserLang(), options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {combineLatest} from \"rxjs\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n\n    constructor(private translate: TranslateService,private store: Store) {\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = this.translate.getBrowserLang();\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _DomSanitizationService\n                            \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                base64\n                            \n                            \n                                big\n                            \n                            \n                                dark\n                            \n                            \n                                icon\n                            \n                            \n                                light\n                            \n                            \n                                medium\n                            \n                            \n                                small\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation, _DomSanitizationService: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/icon/icon.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _DomSanitizationService\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        base64\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        big\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dark\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        light\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        medium\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        small\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/icon/icon.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _DomSanitizationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DomSanitizer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() small:boolean;\n  @Input() medium:boolean;\n  @Input() big:boolean;\n  @Input() dark:boolean;\n  @Input() light:boolean;\n  @Input() base64: string;\n  size:string;\n  sprites:string;\n  iconPath:string;\n  constructor(platformLocation: PlatformLocation, public _DomSanitizationService: DomSanitizer) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.big = this.big != undefined;\n    this.medium = this.medium != undefined && !this.big;\n    this.small = this.small != undefined && !this.medium;\n    this.dark = this.dark != undefined;\n    this.light = this.light != undefined && ! this.dark;\n    let size = this.big?'big':this.medium?'medium':'small'\n    switch (size) {\n        case 'big':\n          this.size = '64px';\n          break;\n        case 'medium':\n          this.size = '32px';\n          break;\n         default:\n          this.size = '16px';\n    }\n    if(this.dark||this.light){\n      this.sprites='sprites-mono.svg'\n    }else{\n      this.sprites='sprites.svg'\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n      \n    \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {selectMenuStateSelectedIframeURL,} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    {{userName$|async}}\n    {{description$|async}}\n    {{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                .navbar-info-block {\n  display: inline-block;\n  line-height: 90%;\n\n  > .time {\n    font-size: small;\n  }\n\n  > .user-description {\n    font-size: small;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}    {{description$|async}}    {{time$|async}}'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:160\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCard.html":{"url":"classes/LightCard.html","title":"class - LightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, processId?: string, lttd?: number, title?: I18n, summary?: I18n, tags?: string[], timeSpans?: TimeSpan[], process?: string, state?: string, actions?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeSpans\n                                                  \n                                                        \n                                                                        TimeSpan[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", NOTIFICATION = \"NOTIFICATION\", QUESTION = \"QUESTION\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.QUESTION:\n            result = 2;\n            break;\n        case Severity.NOTIFICATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    NOTIFICATION, QUESTION\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LightCardAlreadyUpdated.html":{"url":"classes/LightCardAlreadyUpdated.html","title":"class - LightCardAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LightCardAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:162\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LightCardAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:162\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delayUpdateLightCard\n                            \n                            \n                                updateAThirdAction\n                            \n                            \n                                updateThirdActions\n                            \n                            \n                                uploadActions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delayUpdateLightCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAThirdAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateThirdActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:91\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, delay, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    AddThirdActions,\n    DelayedLightCardUpdate,\n    LightCardActionTypes,\n    LightCardAlreadyUpdated,\n    ThirdActionAlreadyLoaded,\n    ThirdActionAlreadyUpdated,\n    UpdateALightCard,\n    UpdateAnAction,\n    UpdateAnActionFailure\n} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {fetchLightCard} from \"@ofSelectors/feed.selectors\";\nimport {CardActionTypes, LoadCard} from \"@ofActions/card.actions\";\nimport {Action as ThirdAction, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateThirdActions: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.AddThirdActions),\n            map((action: AddThirdActions) => {\n                const updateCard = {\n                    ...(action.payload.card),\n                    actions: action.payload.actions\n                };\n                return new UpdateALightCard({card: updateCard});\n            })\n        );\n\n    @Effect()\n    updateAThirdAction: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.UpdateAnAction),\n            switchMap((action: UpdateAnAction) => {\n                const lightCardId = action.payload.cardId;\n                const thirdActionKey = action.payload.actionKey;\n                const thirdActionStatus = extractActionStatusFromPseudoActionStatus(action.payload.status);\n                return this.store.select(fetchLightCard(lightCardId)).pipe(\n                    map((card: LightCard) => {\n                        const thirdActions = card.actions;\n                        if (thirdActions) {\n                            const thirdActionToUpdate = thirdActions.get(thirdActionKey);\n                            const st = extractActionStatusFromPseudoActionStatus(thirdActionToUpdate as ActionStatus);\n                            if (_.isEqual(thirdActionStatus, st)) {\n                                return new ThirdActionAlreadyUpdated();\n                            } else {\n                                const actualizedAction = {...thirdActionToUpdate, ...thirdActionStatus};\n                                thirdActions.set(thirdActionKey, actualizedAction);\n                                const updateCard = {\n                                    ...card,\n                                    actions: thirdActions\n                                };\n                                return new UpdateALightCard({card: updateCard})\n                            }\n\n                        } else {\n                            console.log(`no actions for ${card.id}`, card);\n                            return new UpdateAnActionFailure();\n                        }\n                    })\n                );\n            })\n        );\n\n    @Effect()\n    uploadActions: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => {\n                const lightCardId = action.payload.id;\n                return this.store.select(fetchLightCard(lightCardId))\n            }),\n            switchMap((lightCard: LightCard) => {\n                if (lightCard.actions) {\n                    return of(new ThirdActionAlreadyLoaded());\n                }\n                return this.thirdService.fetchActionMapFromLightCard(lightCard)\n                    .pipe(map((actions: Map) => {\n                        return new AddThirdActions({card: lightCard, actions: actions}) as Action\n                    }));\n            })\n            , catchError((error, caught) => {\n                if (error.status && error.status == 404) {\n                    console.log(`no actions available`);\n                } else {\n                    console.log(error);\n                }\n                return caught;\n            })\n        );\n    @Effect()\n    delayUpdateLightCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.DelayedLightCardUpdate),\n            switchMap((action: DelayedLightCardUpdate) => {\n                    const receivedCard = action.payload.card;\n                    return this.store.select(fetchLightCard(receivedCard.id)).pipe(\n                        map((storedCard: LightCard) => {\n                            if (receivedCard === storedCard) {\n                                return new LightCardAlreadyUpdated();\n                            }\n                            return new UpdateALightCard({card: action.payload.card})\n\n                        })\n                    );\n                }\n            ),\n            delay(500)\n        );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html'\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('ListSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}                {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCard.html":{"url":"classes/LoadArchivedCard.html","title":"class - LoadArchivedCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardFailure.html":{"url":"classes/LoadArchivedCardFailure.html","title":"class - LoadArchivedCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardSuccess.html":{"url":"classes/LoadArchivedCardSuccess.html","title":"class - LoadArchivedCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue',\n    AddActionsAppear = '[Card] Add Actions Appear'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class AddActionsAppear implements Action {\n    readonly type = CardActionTypes.AddActionsAppear;\n    /* istanbul ignore next */\n    constructor(public payload: string) {}\n}\n\nexport type CardActions = ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError\n    | AddActionsAppear;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:55\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeFlow$\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeFlow$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeFlow$: Observable;\n    loginMessage: Message;\n    // codeProvider$: Observable;\n    codeProvider: any;\n    /* istanbul ignore next */\n    constructor( private store: Store, private service: AuthenticationService) {}\n\n    ngOnInit() {\n        this.useCodeFlow$ = this.store.select(buildConfigSelector('security.oauth2.flow.mode'))\n            .pipe(map(flowMode=>flowMode === 'CODE'));\n        this.store.select(selectMessage).pipe(filter(m=>m!=null && m.level==MessageLevel.ERROR))\n            .subscribe(m=>this.loginMessage=m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider=>this.codeProvider={name:provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void{\n        this.service.moveToCodeFlowLoginPage();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:61\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink,\n    SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            map(menu =>\n                new LoadMenuSuccess({menu: menu})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:16\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:26\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/directives/mouse-wheel.directive.ts:34\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiFilterComponent.html":{"url":"components/MultiFilterComponent.html","title":"component - MultiFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-filter\n            \n\n            \n                styleUrls\n                ./multi-filter.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multi-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                            \n                                parentForm\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentForm\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-filters/multi-filter/multi-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { I18n } from '@ofModel/i18n.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'of-multi-filter',\n  templateUrl: './multi-filter.component.html',\n  styleUrls: ['./multi-filter.component.css']\n})\nexport class MultiFilterComponent implements OnInit {\n\n  preparedList: { value: string, label: Observable }[];\n  @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n  @Input() parentForm: FormGroup;\n\n  @Input() filterPath: string;\n  constructor(private translateService: TranslateService) {\n    this.parentForm = new   FormGroup({\n      [this.filterPath]: new FormControl()\n    });\n  }\n\n  ngOnInit() {\n    this.preparedList = [];\n    if (this.values) {\n      for (const v of this.values) {\n        if (typeof v === 'string') {\n          this.preparedList.push({value: v, label: of(v)});\n        } else if (typeof v.label === 'string') {\n          this.preparedList.push({value: v.value, label: of(v.label)});\n        } else {\n          this.preparedList.push({\n            value: v.value,\n            label: this.translateService.get(v.label.key, v.label.parameters)\n          });\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  archive.filters.{{filterPath}}\n  \n    {{v.label|async}}\n  \n\n\n    \n\n    \n                \n                    ./multi-filter.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archive.filters.{{filterPath}}      {{v.label|async}}  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html'\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                customLogo\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customLogo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:63\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport { buildConfigSelector } from '@ofStore/selectors/config.selectors';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n    customLogo: string;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n        this.store.select(buildConfigSelector('logo.base64')).subscribe(\n            data => {\n              if (data) this.customLogo = `data:image/svg+xml;base64,${data}`\n            }\n        );\n    }\n\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n    \n    \n      \n    \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n              {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}\n            \n              \n            \n          \n        \n        \n        \n          {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}\n          \n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.dropdown-item > .dropdown-item-external-link{\n  color:inherit;\n  padding-left: 0.5rem;\n}\n\n.single-third-menu-entry {\n\n  > .dropdown-item-internal-link{\n    color: inherit;\n    text-decoration: none;\n  }\n\n  > .dropdown-item-external-link{\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                    {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}                                                                                  {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}                                                                                                  menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Page.html":{"url":"classes/Page.html","title":"class - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/page.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(totalPages: number, totalElements: number, content: T[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/page.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        totalPages\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        totalElements\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Page {\n    /* istanbul ignore next */\n    constructor(\n        readonly totalPages: number,\n        readonly totalElements: number,\n        readonly content: T[]\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:177\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTranslation.html":{"url":"classes/RefreshTranslation.html","title":"class - RefreshTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.RefreshTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogin;\nCheckAuthentication\nand in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLightCard.html":{"url":"classes/RemoveLightCard.html","title":"class - RemoveLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:114\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.RemoveLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:114\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResizableComponent.html":{"url":"components/ResizableComponent.html","title":"component - ResizableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResizableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/utilities/components/resizable/resizable.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-resizable\n            \n\n            \n                styleUrls\n                ./resizable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./resizable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:27\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resized\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/components/resizable/resizable.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, HostListener } from '@angular/core';\n\n@Component({\n  selector: 'of-resizable',\n  templateUrl: './resizable.component.html',\n  styleUrls: ['./resizable.component.css']\n})\nexport class ResizableComponent implements AfterViewInit {\n\n  resized: boolean;\n  constructor() { }\n  ngAfterViewInit() {\n    // Trigger resize event to make sure that height is calculated once parent height is available (see OC-362)\n    if (typeof(Event) === 'function') {\n      // modern browsers\n      window.dispatchEvent(new Event('resize'));\n    } else {\n      // for IE and other old browsers\n      // causes deprecation warning on modern browsers\n      const evt = window.document.createEvent('UIEvents');\n      evt.initUIEvent('resize', true, false, window, 0);\n      window.dispatchEvent(evt);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resized = true;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  resizable works!\n\n\n    \n\n    \n                \n                    ./resizable.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  resizable works!'\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResizableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectArchivedLightCard.html":{"url":"classes/SelectArchivedLightCard.html","title":"class - SelectArchivedLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectArchivedLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SelectArchivedLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendArchiveQuery.html":{"url":"classes/SendArchiveQuery.html","title":"class - SendArchiveQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendArchiveQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SendArchiveQuery\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdActionService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {ConfigService} from \"@ofServices/config.service\";\nimport {I18nService} from \"@ofServices/i18n.service\";\nimport {SettingsService} from \"@ofServices/settings.service\";\nimport { UserService } from './user.service';\nimport {ThirdActionService} from \"@ofServices/third-action.service\";\nimport {ConfirmModalComponent} from \"../modules/cards/components/action/confirm-modal/confirm-modal.component\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService,\n        UserService,\n        ThirdActionService\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disableInfos$\n                            \n                            \n                                hideTags$\n                            \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableInfos$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from '@ofSelectors/config.selectors';\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$: Observable;\n  timeZones$: Observable;\n  hideTags$: Observable;\n  disableInfos$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n    this.hideTags$ = this.store.select(buildConfigSelector('settings.tags.hide'));\n    this.disableInfos$ = this.store.select(buildConfigSelector('settings.infos.disable'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:42\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:60\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess,\n    PatchSettings,\n    PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\nimport { UserActionsTypes } from '@ofStore/actions/user.actions';\nimport { AcceptLogIn } from '@ofStore/actions/authentication.actions';\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(UserActionsTypes.UserApplicationRegistered),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {BaseSettingComponent} from './components/settings/base-setting/base-setting.component';\nimport {TextSettingComponent} from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {EmailSettingComponent} from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport {MultiSettingsComponent} from './components/settings/multi-settings/multi-settings.component';\nimport {TypeAheadSettingsComponent} from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[], {emitEvent: false});\n            } else {\n                this.tagFilterForm.get('tags').setValue([], {emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                .tags-field {\n  /deep/ .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from '../base-setting/base-setting.component';\nimport {AppState} from '@ofStore/index';\nimport {Store} from '@ngrx/store';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html'\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern: string;\n    @Input() disabled: boolean;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup() {\n        const validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null, validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        const validators = [];\n        if (this.requiredField) {\n            validators.push(Validators.required);\n        }\n        if (this.pattern) {\n            validators.push(Validators.pattern(this.pattern));\n        }\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value, {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('TextSettingComponent.isEqual called');\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n\n    \n\n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}            Incorrect submission  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyLoaded.html":{"url":"classes/ThirdActionAlreadyLoaded.html","title":"class - ThirdActionAlreadyLoaded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyLoaded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:147\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyLoaded\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:147\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdActionAlreadyUpdated.html":{"url":"classes/ThirdActionAlreadyUpdated.html","title":"class - ThirdActionAlreadyUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdActionAlreadyUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:152\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ThirdActionAlreadyUpdated\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:152\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdActionService.html":{"url":"injectables/ThirdActionService.html","title":"injectable - ThirdActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/third-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actionUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                callModalAndHandleResponse\n                            \n                            \n                                callModalIfNecessary\n                            \n                            \n                                checkIfReceivedStatusIsDifferentFromCurrentOne\n                            \n                            \n                                dispatchUpdateThirdAction\n                            \n                            \n                                postActionAndUpdateIfNecessary\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/third-action.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalAndHandleResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callModalIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \ncallModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postAction$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkIfReceivedStatusIsDifferentFromCurrentOne\n                        \n                        \n                    \n                \n            \n            \n                \ncheckIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formerStatus\n                                    \n                                                ActionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dispatchUpdateThirdAction\n                        \n                        \n                    \n                \n            \n            \n                \ndispatchUpdateThirdAction(updateThirdAction: UpdateAnAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateThirdAction\n                                    \n                                                UpdateAnAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postActionAndUpdateIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \npostActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(lightCardId: string, currentActionPath: string, action: Action, modalService: NgbModal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/third-action.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lightCardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentActionPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modalService\n                                    \n                                            NgbModal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            actionUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/third-action.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {Action, ActionStatus, extractActionStatusFromPseudoActionStatus} from \"@ofModel/thirds.model\";\nimport {map} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {\n    ConfirmModalComponent,\n    ThirdActionComporentModalReturn\n} from \"../modules/cards/components/action/confirm-modal/confirm-modal.component\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {UpdateAnAction} from \"@ofActions/light-card.actions\";\nimport {Observable} from \"rxjs\";\n\n@Injectable()\nexport class ThirdActionService {\n    readonly actionUrl: string;\n\n    constructor(private httpClient: HttpClient\n        , private store: Store) {\n        this.actionUrl = `${environment.urls.actions}`;\n    }\n\n    checkIfReceivedStatusIsDifferentFromCurrentOne(formerStatus: ActionStatus) {\n        const status = extractActionStatusFromPseudoActionStatus(formerStatus);\n        return map(currentStatus => {\n            const normalizedCurrentStatus = extractActionStatusFromPseudoActionStatus(currentStatus);\n            const hasChanged = !_.isEqual(status, normalizedCurrentStatus);\n            return [hasChanged, currentStatus];\n        });\n    }\n\n    postActionAndUpdateIfNecessary(lightCardId: string, currentActionPath: string, action: Action) {\n        return this.httpClient.post(`${this.actionUrl}${currentActionPath}`, action).pipe(\n            this.checkIfReceivedStatusIsDifferentFromCurrentOne(action),\n            map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n                if (hasChanged) {\n                    const updateThirdActionAction = new UpdateAnAction({\n                        cardId: lightCardId,\n                        actionKey: action.key\n                        , status: currentStatus\n                    });\n                    this.dispatchUpdateThirdAction(updateThirdActionAction);\n                }\n            })\n        );\n    }\n\n    callModalIfNecessary(lightCardId: string, actionKey: string, modalService: NgbModal, postAction$: Observable) {\n        return map(([hasChanged, currentStatus]: [boolean, ActionStatus]) => {\n            if (hasChanged) {\n                const updateThirdAction = new UpdateAnAction({\n                    cardId: lightCardId\n                    , actionKey: actionKey\n                    , status: currentStatus\n                });\n                this.callModalAndHandleResponse(modalService, postAction$, updateThirdAction);\n            } else {\n                postAction$.subscribe();\n            }\n        });\n    }\n\n    callModalAndHandleResponse(modalService: NgbModal, postAction$: Observable, updateThirdAction: UpdateAnAction) {\n        modalService\n            .open(ConfirmModalComponent)\n            .result\n            .then(performPost => {\n                if (performPost) postAction$.subscribe()\n            })\n            .catch(error => {\n                switch (error) {\n                    case ThirdActionComporentModalReturn.CANCEL: {\n                        // save new status of action and do nothing\n                        this.dispatchUpdateThirdAction(updateThirdAction);\n                        break;\n                    }\n                    case ThirdActionComporentModalReturn.DISMISS: {\n                        // do nothing leaves the former action status untouched\n                        break;\n                    }\n                    default:\n                        console.log('unknown error from update action status modal', error);\n                }\n            });\n    }\n\n    submit(lightCardId: string\n        , currentActionPath: string\n        , action: Action\n        , modalService: NgbModal) {\n\n        const postAction$ = this.postActionAndUpdateIfNecessary(lightCardId, currentActionPath, action);\n\n        if (action.updateStateBeforeAction) {\n            this.httpClient.get(`${this.actionUrl}${currentActionPath}`).pipe(\n                this.checkIfReceivedStatusIsDifferentFromCurrentOne(action as ActionStatus),\n                this.callModalIfNecessary(lightCardId, action.key, modalService, postAction$)\n            ).subscribe();\n        } else {\n            postAction$.subscribe();\n        }\n    }\n\n    /* istanbul ignore next */\n    dispatchUpdateThirdAction(updateThirdAction: UpdateAnAction) {\n        this.store.dispatch(updateThirdAction);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL='EXTERNAL',\n    JNLP='JNLP',\n    URL='URL'\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n        readonly key?:string\n    ) {}\n\n}\n\nexport const emptyAction=new Action(null,null);\n\ntype Omit = Pick>;\n\nexport class ActionStatus{\n    constructor(\n                        readonly label: I18n,\n                        readonly hidden:boolean=false,\n                        readonly buttonStyle: string = '',\n                        readonly contentStyle: string = '',\n                        readonly inputs: Input[] = [],\n                        readonly lockCard: boolean = false,\n                        readonly updateState: boolean = false,\n                        readonly updateStateBeforeAction: boolean = false,\n                        readonly needsConfirm: boolean = false,\n                        readonly lockAction: boolean = false,\n    ){}\n}\n\nexport const emptyActionStatus = new ActionStatus(null);\n\n/*\nfor some reasons lodash equals take attribute order declaration in account to compute object equality\nneeded by LightCardEffects updateAThirdAction Effect and by checkIfReceivedStatusIsDifferentFromCurrentOne method of ThirdActionService .\n */\nexport function extractActionStatusFromPseudoActionStatus(tAction:object):ActionStatus{\n    let label=new I18n('');\n    const i18n = tAction['label'];\n    if(i18n){\n        const params = i18n['parameters'];\n        if(params) {\n            Object.setPrototypeOf(params,OfMap.prototype);\n            label = new I18n(i18n['key'],params);\n        }else{\n            label = new I18n(i18n['key']);\n        }\n\n    }\n    const result = new ActionStatus(\n        label\n        , tAction['hidden']\n        ,tAction['buttonStyle']\n        ,tAction['contentStyle']\n        ,tAction['inputs']//TODO Need proper prototype handling\n        , tAction['lockCard']\n        , tAction['updateState']\n        , tAction['updateStateBeforeAction']\n        , tAction['needsConfirm']\n        , tAction['lockAction']\n    );\n    return result;\n}\n\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IframeDisplayComponent} from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:155\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t =>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            const obj = JSON.parse(json);\n            return new Map(Object.entries(obj));\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askForI18nJson\n                            \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                    Private\n                                convertJsonToI18NObject\n                            \n                            \n                                fetchActionMap\n                            \n                            \n                                fetchActionMapFromLightCard\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                queryThirdFromCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askForI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \naskForI18nJson(publisher: string, locale: string, version?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertJsonToI18NObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertJsonToI18NObject(locale, publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (r: any) => {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMap\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMap(publisher: string, process: string, state: string, apiVersion?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    process\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    apiVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchActionMapFromLightCard\n                        \n                        \n                    \n                \n            \n            \n                \nfetchActionMapFromLightCard(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThirdFromCard\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThirdFromCard(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {from, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {catchError, filter, map, reduce, switchMap, tap} from \"rxjs/operators\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Action, Third, ThirdMenu} from \"@ofModel/thirds.model\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThirdFromCard(card: Card): Observable {\n        return this.queryThird(card.publisher, card.publisherVersion);\n    }\n\n    queryThird(thirdName: string, version: string): Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if (third) {\n            return of(third);\n        }\n        return this.fetchThird(thirdName, version)\n            .pipe(\n                tap(t => {\n                    if (t) Object.setPrototypeOf(t, Third.prototype)\n                }),\n                tap(t => {\n                    if (t) this.thirdCache.set(key, t)\n                })\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`, {\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId, thirdMenuVersion).pipe(\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if (entry.length == 1) {\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map(menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`, {\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string) {\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version', version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    private convertJsonToI18NObject(locale, publisher: string, version: string) {\n        return r => {\n            const object = {};\n            object[publisher] = {};\n            object[publisher][version] = r;\n            return object;\n        };\n    }\n\n    askForI18nJson(publisher: string, locale: string, version?: string): Observable {\n        let params = new HttpParams().set('locale', locale);\n        if (version) {\n            /*\n            `params` override needed otherwise only locale is use in the request.\n            It's so because HttpParams.set(...) return a new HttpParams,\n            and basically that's why HttpParams can be set with fluent API...\n             */\n            params = params.set('version', version);\n        }\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {params})\n            .pipe(\n                map(this.convertJsonToI18NObject(locale, publisher, version))\n                , catchError(error=>{\n                    console.error(`error trying fetch i18n of '${publisher}' version:'${version}' for locale: '${locale}'`);\n                    return error;\n                })\n            );\n    }\n\n    computeThirdsMenu(): Observable {\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts => from(ts)),\n            filter((t: Third) => !(!t.menuEntries)),\n            map(t =>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus: ThirdMenu[], menu: ThirdMenu) => {\n                menus.push(menu);\n                return menus;\n            }, [])\n        );\n    }\n\n\n    fetchActionMapFromLightCard(card: LightCard) {\n        return this.fetchActionMap(card.publisher, card.process, card.state, card.publisherVersion);\n    }\n\n    fetchActionMap(publisher: string, process: string, state: string, apiVersion?: string) {\n        let params: HttpParams;\n        if (apiVersion) params = new HttpParams().set(\"apiVersion\", apiVersion);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/${process}/${state}/actions`, {\n            params,\n            responseType: 'text'\n        }).pipe(map((json: string) => {\n            const obj = JSON.parse(json);\n            return new Map(Object.entries(obj));\n        }));\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {\n    }\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\nContains the elapsed virtual time since the previous heart beat so any components following the clock\ncan shift their timespan accordingly\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: TickPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        TickPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TickPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TickPayload.html":{"url":"classes/TickPayload.html","title":"class - TickPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TickPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clock tick (heart beat) payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                elapsedSinceLast\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentTime: moment.Moment, elapsedSinceLast: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentTime\n                                                  \n                                                        \n                                                                    moment.Moment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedSinceLast\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elapsedSinceLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:35\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:49\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {UserActionsTypes} from '@ofStore/actions/user.actions';\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationRegistered),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:30\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n\n        //Update the values of the filter form if the state of the filter has been changed by other means (timeline, followClockTick, etc.)\n        //With {emitEvent:false}, this update won't trigger a valueChanges, so no ApplyFilter action will be dispatched\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start), {emitEvent:false});\n                    else\n                        this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end) {\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end), {emitEvent: false});\n                    }\n                    else\n                        this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n            }\n        });\n\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                periodStartToEnd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:445\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            periodStartToEnd\n                        \n                        \n                    \n                \n            \n            \n                \nperiodStartToEnd(conf, future: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:423\n                \n            \n\n\n            \n                \n                    return a moment\nadd time to moment depending of configue object when future is true\nsubtract time when future is false\nuse startOf function on each time's unit pass in list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    future\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom: any;\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        // set start of Week to saturday on moment locale used\n        /*moment.updateLocale('en', { week: {\n                dow: 6, // First day of week is Saturday\n                doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n            }});\n            */\n\n        // DOMAIN CONF from moment() to our conf\n\n        const domainYearConf = {\n            year: 2,\n            month: 0,\n            week: 0,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['year'],\n        };\n\n        const domainMonthConf = {\n            year: 0,\n            month: 2,\n            week: 0,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['month'],\n        };\n\n        const domainWeekConf = {\n            year: 0,\n            month: 0,\n            week: 2,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['week'],\n        };\n\n        const domain7DayConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 8,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['day'],\n        };\n\n        const currentMoment = moment();\n        const startDomain = moment(currentMoment);\n        startDomain.minutes(0).second(0).millisecond(0);\n        const endDomain = this.periodStartToEnd(domainWeekConf, true);\n\n        const startDomainUSE = moment(currentMoment);\n        startDomainUSE.date(4);\n        startDomainUSE.hour(0).minutes(0).second(0).millisecond(0);\n        const endDomainUSE = moment(startDomainUSE);\n        endDomainUSE.add(16, 'week');\n\n        const startDomain2 = moment(currentMoment);\n        startDomain2.minutes(0).second(0).millisecond(0);\n        const endDomain2 = this.periodStartToEnd(domainMonthConf, true);\n\n        const startDomain3 = moment(currentMoment);\n        startDomain3.hour(0).minutes(0).second(0).millisecond(0);\n        const endDomain3 = this.periodStartToEnd(domainYearConf, true);\n\n        const startDomain4 = moment(currentMoment);\n        startDomain4.minutes(0).second(0).millisecond(0);\n        const endDomain4 = this.periodStartToEnd(domain7DayConf, true);\n\n        // FORWARD CONF (movement on domain)\n\n        const forwardYearConf = {\n            start: {\n                year: 1,\n                month: 0,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 1,\n                month: 0,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        const forwardMonthConf = {\n            start: {\n                year: 0,\n                month: 1,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 0,\n                month: 1,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        const forwardWeekConf = {\n            start: {\n                year: 0,\n                month: 0,\n                week: 1,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 0,\n                month: 0,\n                week: 1,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        const forwardDayConf = {\n            start: {\n                year: 0,\n                month: 0,\n                week: 0,\n                day: 1,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 0,\n                month: 0,\n                week: 0,\n                day: 1,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        // TICKS CONF\n\n        const myticksResponsiveConf = [{ width_min: 1400,\n            conf: {\n                year: 0,\n                month: 0,\n                week: 0,\n                day: 0,\n                hour: 4,\n                minute: 0,\n                second: 0,\n            }\n        }, { width_min: 1100,\n            conf: {\n                year: 0,\n                month: 0,\n                week: 0,\n                day: 0,\n                hour: 1,\n                minute: 0,\n                second: 0,\n            }\n        }, {\n            width_min: 0,\n            conf: {\n                year: 0,\n                month: 0,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 20,\n                second: 0,\n            }\n        }];\n\n        const ticks4HoursConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 0,\n            hour: 4,\n            minute: 0,\n            second: 0,\n        };\n\n        const ticksDayConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 1,\n            hour: 0,\n            minute: 0,\n            second: 0,\n        };\n\n        const ticksHalfMonthConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            date: [1, 16],\n        };\n\n        const ticksInUseConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 0,\n            hour: 6,\n            minute: 0,\n            second: 0,\n        };\n\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            zoomOnButton: true,\n            autoScale: false,\n            showGridLines: true,\n            realTimeBar: true,\n        };\n        this.confZoom = [\n            /*\n            {\n            startDomain: startDomainUSE.valueOf(),\n            endDomain: endDomainUSE.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'USE',\n            forwardConf: forwardDayConf,\n            backwardConf: forwardDayConf,\n            // ticksConf: ticksInUseConf,\n            autonomousTicks: true,\n            followClockTick: false,\n            firstMoveStartOfUnit: false,\n            homeDomainExtraTicks: false,\n            },\n            */\n            {\n            startDomain: startDomain4.valueOf(),\n            endDomain: endDomain4.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: '7D',\n            forwardConf: forwardDayConf,\n            ticksConf: ticks4HoursConf,\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n            homeDomainExtraTicks: true,\n            },\n        {\n            startDomain: startDomain.valueOf(),\n            endDomain: endDomain.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'W',\n            forwardConf: forwardWeekConf,\n            backwardConf: forwardWeekConf,\n            ticksConf: ticks4HoursConf,\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n            homeDomainExtraTicks: true,\n            },\n        /*{\n            startDomain: startDomain.valueOf(),\n            endDomain: endDomain.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'USE',\n            forwardConf: forwardDayConf,\n            ticksConf: myticksResponsiveConf, // myticksYearConf,\n            followClockTick: false,\n            firstMoveStartOfUnit: false,\n        },*/\n        {\n            startDomain: startDomain2.valueOf(),\n            endDomain: endDomain2.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'M',\n            forwardConf: forwardMonthConf,\n            ticksConf: ticksDayConf,\n            // formatTicks: 'DD',\n            // formatTooltipsDate: 'DD/MM',\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n            homeDomainExtraTicks: true,\n        },\n        {\n            startDomain: startDomain3.valueOf(),\n            endDomain: endDomain3.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'Y',\n            forwardConf: forwardYearConf,\n            ticksConf: ticksHalfMonthConf,\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n            homeDomainExtraTicks: true,\n        }];\n\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged())\n            .subscribe(value => {\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({\n                data: [],\n            }));\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                if (val.timeSpans && val.timeSpans.length > 0) {\n                    val.timeSpans.forEach(d => {\n                        const myCardTimelineTimespans = {\n                            displayDate: d.start,\n                            publishDate: d.start, // useless\n                            startDate: d.start, // useless\n                            endDate: d.end, // useless\n                            severity: val.severity,\n                            publisher: val.publisher,\n                            publisherVersion: val.publisherVersion,\n                            summary: val.title,\n                        };\n                        myCardsTimeline.push(myCardTimelineTimespans);\n                    });\n                } else {\n                    // val.endDate val.startDate val.severity\n                    const myCardTimeline = {\n                        displayDate: val.startDate,\n                        publishDate: val.publishDate, // useless\n                        startDate: val.startDate, // useless\n                        endDate: val.endDate, // useless\n                        severity: val.severity,\n                        publisher: val.publisher,\n                        publisherVersion: val.publisherVersion,\n                        summary: val.title,\n                    };\n                    myCardsTimeline.push(myCardTimeline);\n                }\n            }\n            this.store.dispatch(new SetCardDataTimeline({\n                cardsTimeline: myCardsTimeline,\n            }));\n        });\n    }\n\n    /**\n     * return a moment\n     * add time to moment depending of configue object when future is true\n     * subtract time when future is false\n     * use startOf function on each time's unit pass in list\n     * @param conf\n     * @param future\n     */\n    periodStartToEnd(conf, future: boolean): moment.Moment {\n        const tmpMoment = moment();\n\n        // Test bug\n        // tmpMoment.date(2);\n        const newDate = _.cloneDeep(tmpMoment);\n        Object.keys(conf).forEach(key => {\n            if (key === 'startOf') {\n                conf[key].forEach(value => {\n                    newDate.startOf(value);\n                });\n            } else if (conf[key] > 0) {\n                if (future) {\n                    newDate.add(conf[key], key);\n                } else {\n                    newDate.subtract(conf[key], key);\n                }\n            }\n        });\n        return newDate;\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(start: number, end?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\nimport {Action} from \"@ofModel/thirds.model\";\n\nexport class LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[],\n        readonly process?: string,\n        readonly state?: string,\n        readonly actions?:Map\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", NOTIFICATION = \"NOTIFICATION\", QUESTION = \"QUESTION\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.QUESTION:\n            result = 2;\n            break;\n        case Severity.NOTIFICATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    NOTIFICATION, QUESTION\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nerror: last message during state processing before error\ndata: an array of data Card (less information than lightCard)\nwhich are use for display on the chart the number of card on timescale\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    constructor() {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const update = {setHeaders: AuthenticationService.getSecurityHeader()};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionalThirdWithItSVersion.html":{"url":"classes/TransitionalThirdWithItSVersion.html","title":"class - TransitionalThirdWithItSVersion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionalThirdWithItSVersion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                third\n                            \n                            \n                                    Public\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(third: string, version: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:200\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        third\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            third\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:201\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    RefreshTranslation,\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {selectI18nUpLoaded} from \"@ofSelectors/translation.selectors\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    refreshLanguageUsedByTranslation: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        );\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n        return this.store.select(selectI18nUpLoaded).pipe(\n            map((referencedTranslation: Map>) => {\n                return TranslateEffects.extractThirdToUpdate(versions, referencedTranslation)\n            }));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        const thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n\n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) return new UpdateTranslation({versions: versionToUpdate});\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string,public version:string){}\n};\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateEffects.html":{"url":"injectables/TranslateEffects.html","title":"injectable - TranslateEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslateEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/translate.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshLanguageUsedByTranslation\n                            \n                            \n                                updateTranslateService\n                            \n                            \n                                verifyTranslationNeeded\n                            \n                            \n                                verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                consolidateThirdAndVersions\n                            \n                            \n                                    Private\n                                extractI18nToUpdate\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFrom\n                            \n                            \n                                    Static\n                                extractPublisherAssociatedWithDistinctVersionsFromCards\n                            \n                            \n                                    Static\n                                extractThirdToUpdate\n                            \n                            \n                                mapLanguages\n                            \n                            \n                                mapThirds\n                            \n                            \n                                mapVersions\n                            \n                            \n                                    Static\n                                sendTranslateAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, translate: TranslateService, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/translate.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            consolidateThirdAndVersions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consolidateThirdAndVersions(thirdsAndVersions: TransitionalThirdWithItSVersion[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                            TransitionalThirdWithItSVersion[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractI18nToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractI18nToUpdate(versions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractPublisherAssociatedWithDistinctVersionsFromCards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                            LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractThirdToUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionInput\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cachedVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapLanguages\n                        \n                        \n                    \n                \n            \n            \n                \nmapLanguages(thirdsAndVersions: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdsAndVersions\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapThirds\n                        \n                        \n                    \n                \n            \n            \n                \nmapThirds(locale: string, thirdsAndVersion: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdsAndVersion\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapVersions\n                        \n                        \n                    \n                \n            \n            \n                \nmapVersions(locale: string, publisher: string, versions: Set)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    versions\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sendTranslateAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendTranslateAction(versionToUpdate: Map>)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/translate.effects.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    versionToUpdate\n                                    \n                                                Map>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslateActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshLanguageUsedByTranslation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateTranslateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyTranslationNeedForMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/translate.effects.ts:132\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {forkJoin, Observable, of} from \"rxjs\";\nimport {LightCardActionTypes, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {catchError, concatAll, map, mergeMap, switchMap} from \"rxjs/operators\";\nimport {\n    RefreshTranslation,\n    TranslateActions,\n    TranslateActionsTypes,\n    TranslationUpToDate,\n    UpdateTranslation,\n    UpdateTranslationFailed,\n    UpdateTranslationSuccessful\n} from \"@ofActions/translate.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {Map} from \"@ofModel/map\";\nimport * as _ from 'lodash';\nimport {selectI18nUpLoaded} from \"@ofSelectors/translation.selectors\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class TranslateEffects {\n\n    constructor(private store: Store\n        , private actions$: Actions\n        , private translate: TranslateService\n        , private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    updateTranslateService: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslation)\n            ,\n            mergeMap((action: UpdateTranslation) => {\n                const thirdsWithTheirVersions = action.payload.versions;\n                return forkJoin(this.mapLanguages(thirdsWithTheirVersions)).pipe(\n                    concatAll(),\n                    catchError((error, caught) => {\n                        console.error('error while trying to update translation', error);\n                        return caught;\n                    }));\n            })\n            ,\n            map(elem => new UpdateTranslationSuccessful({language: this.translate.currentLang}))\n            ,\n            catchError(error => {\n                return of(new UpdateTranslationFailed({error: error}))\n            })\n        );\n\n// iterate over configured languages\n    mapLanguages(thirdsAndVersions: Map>): Observable[] {\n        const locales = this.translate.getLangs();\n        return locales.map(locale => {\n            return forkJoin(this.mapThirds(locale, thirdsAndVersions))\n                .pipe(concatAll())\n        });\n    }\n\n    // iterate over thirds\n    mapThirds(locale: string, thirdsAndVersion: Map>): Observable[] {\n        const thirds = Object.keys(thirdsAndVersion);\n\n        return thirds.map(third => {\n            return forkJoin(this.mapVersions(locale, third, thirdsAndVersion[third]))\n                .pipe(concatAll());\n        })\n    }\n\n    // iterate over versions\n    mapVersions(locale: string, publisher: string, versions: Set): Observable[] {\n        return Array.from(versions.values()).map(version => {\n            return this.thirdService.askForI18nJson(publisher, locale, version)\n                .pipe(map(i18n => {\n                    this.translate.setTranslation(locale, i18n, true);\n                    return true;\n                }));\n        });\n    }\n\n\n    @Effect()\n    refreshLanguageUsedByTranslation: Observable = this.actions$\n        .pipe(\n            ofType(TranslateActionsTypes.UpdateTranslationSuccessful)\n            , map((action: UpdateTranslationSuccessful) => {\n                this.translate.use(action.payload.language);\n                return new RefreshTranslation();\n            })\n        );\n\n    @Effect()\n    verifyTranslationNeeded: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess)\n            // extract cards\n            , map((loadedCardAction: LoadLightCardsSuccess) => loadedCardAction.payload.lightCards)\n            // extract thirds+version\n            , map((cards: LightCard[]) => TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFromCards(cards))\n            // extract version needing to be updated\n            , switchMap((versions: Map>) => {\n                return this.extractI18nToUpdate(versions);\n            })\n            // send action accordingly\n            , map((publisherAndVersion: Map>) => {\n                return TranslateEffects.sendTranslateAction(publisherAndVersion)\n            })\n        );\n\n    private extractI18nToUpdate(versions: Map>) {\n        return this.store.select(selectI18nUpLoaded).pipe(\n            map((referencedTranslation: Map>) => {\n                return TranslateEffects.extractThirdToUpdate(versions, referencedTranslation)\n            }));\n    }\n\n    static extractPublisherAssociatedWithDistinctVersionsFromCards(cards: LightCard[]): Map> {\n        const thirdsAndVersions = cards.map(card => {\n            return new TransitionalThirdWithItSVersion(card.publisher,card.publisherVersion);\n        });\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n    };\n\n    @Effect()\n    verifyTranslationNeedForMenus:Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenuSuccess)\n            , map((loadedMenusAction:LoadMenuSuccess)=>loadedMenusAction.payload.menu)\n            , map((menus:ThirdMenu[])=>TranslateEffects.extractPublisherAssociatedWithDistinctVersionsFrom(menus))\n            , switchMap((versions: Map>)=>this.extractI18nToUpdate(versions))\n            , map((publisherAndVersions:Map>)=>TranslateEffects.sendTranslateAction(publisherAndVersions))\n\n\n        );\n\n\n    static extractPublisherAssociatedWithDistinctVersionsFrom(menus: ThirdMenu[]):Map>{\n\n        const thirdsAndVersions = menus.map(menu=>{\n            return new TransitionalThirdWithItSVersion(menu.id,menu.version);\n        })\n        return this.consolidateThirdAndVersions(thirdsAndVersions);\n\n    }\n\n    private static consolidateThirdAndVersions(thirdsAndVersions:TransitionalThirdWithItSVersion[]) {\n        const result = new Map>();\n        thirdsAndVersions.forEach(u => {\n            const versions = result[u.third];\n            if (versions) {\n                versions.add(u.version)\n            } else {\n                result[u.third] = new Set([u.version]);\n            }\n        });\n        return result;\n    }\n\n    static extractThirdToUpdate(versionInput: Map>, cachedVersions: Map>): Map> {\n        const inputPublishers = Object.keys(versionInput);\n        const cachedPublishers = Object.keys(cachedVersions);\n        const unCachedPublishers = _.difference(inputPublishers, cachedPublishers);\n\n        const translationReferencesToUpdate = new Map>();\n        unCachedPublishers.forEach(publisher => {\n            const versions2Update = versionInput[publisher];\n            translationReferencesToUpdate[publisher] = versions2Update;\n        });\n\n        let cachedPublishersForVersionVerification = inputPublishers;\n        if (unCachedPublishers && (unCachedPublishers.length > 0)) {\n            cachedPublishersForVersionVerification = _.difference(unCachedPublishers, inputPublishers);\n        }\n\n        cachedPublishersForVersionVerification.forEach(third => {\n            const currentInputVersions = versionInput[third];\n            const currentCachedVersions = cachedVersions[third];\n            const untrackedVersions = _.difference(Array.from(currentInputVersions), Array.from(currentCachedVersions));\n            if (untrackedVersions && Object.keys(untrackedVersions).length > 0) {\n                translationReferencesToUpdate[third] = new Set(untrackedVersions);\n            }\n        });\n        const nbOfPublishers = Object.keys(translationReferencesToUpdate).length;\n        return (nbOfPublishers > 0) ? translationReferencesToUpdate : null;\n    }\n\n    static sendTranslateAction(versionToUpdate: Map>): TranslateActions {\n        if (versionToUpdate) return new UpdateTranslation({versions: versionToUpdate});\n        return new TranslationUpToDate();\n    }\n}\n\nclass TransitionalThirdWithItSVersion {\n    constructor(public third:string,public version:string){}\n};\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationState.html":{"url":"interfaces/TranslationState.html","title":"interface - TranslationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/translation.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        i18nBundleVersionLoaded\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i18nBundleVersionLoaded\n                                    \n                                \n                                \n                                    \n                                        i18nBundleVersionLoaded:         Map>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport interface TranslationState {\n    i18nBundleVersionLoaded: Map>,\n    loading:boolean,\n    error:string\n}\n\nexport const translationInitialState: TranslationState = {\n    i18nBundleVersionLoaded:new Map>(),\n    loading:false,\n    error:null\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationUpToDate.html":{"url":"classes/TranslationUpToDate.html","title":"class - TranslationUpToDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationUpToDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.TranslationUpToDate\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                .tags-field {\n    /deep/ .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            question: new FormControl(),\n            notification: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm, {emitEvent: false});\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action, {emitEvent: false});\n                this.typeFilterForm.get('question').setValue(!next.active || next.status.question, {emitEvent: false});\n                this.typeFilterForm.get('notification').setValue(!next.active || next.status.notification, {emitEvent: false});\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('action').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('question').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('notification').setValue(true,{emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.question && form.notification),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n        \n            \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                feed.filters.type.action.label\n            \n            \n                \n                feed.filters.type.question.label\n            \n            \n                \n                feed.filters.type.notification.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        feed.filters.type.alarm.label                                                        feed.filters.type.action.label                                                        feed.filters.type.question.label                                                        feed.filters.type.notification.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'ActionComponent', 'selector': 'of-action'},{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchiveListPageComponent', 'selector': 'of-archive-list-page'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'ConfirmModalComponent', 'selector': 'confirm-modal-component'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DatetimeFilterComponent', 'selector': 'of-datetime-filter'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiFilterComponent', 'selector': 'of-multi-filter'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'ResizableComponent', 'selector': 'of-resizable'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateALightCard.html":{"url":"classes/UpdateALightCard.html","title":"class - UpdateALightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateALightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:128\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateALightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:128\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnAction.html":{"url":"classes/UpdateAnAction.html","title":"class - UpdateAnAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:134\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:136\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnAction\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:134\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnActionFailure.html":{"url":"classes/UpdateAnActionFailure.html","title":"class - UpdateAnActionFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnActionFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:141\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdateAnActionFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:141\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchiveFilter.html":{"url":"classes/UpdateArchiveFilter.html","title":"class - UpdateArchiveFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchiveFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchiveFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchivePage.html":{"url":"classes/UpdateArchivePage.html","title":"class - UpdateArchivePage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchivePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchivePage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Page} from '@ofModel/page.model';\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    UpdateArchivePage = '[Archive] Update query result page',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload: {filters: Map}) {}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    constructor(public payload: {params: Map}) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload: {resultPage: Page}) {}\n\n}\n\nexport class UpdateArchivePage implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchivePage;\n    /* istanbul ignore next */\n    constructor(public payload: {page: number}) {}\n}\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId: string}) {}\n}\n\nexport type ArchiveActions = UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    | UpdateArchivePage\n    | SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslation.html":{"url":"classes/UpdateTranslation.html","title":"class - UpdateTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationFailed.html":{"url":"classes/UpdateTranslationFailed.html","title":"class - UpdateTranslationFailed","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationFailed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationFailed\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationSuccessful.html":{"url":"classes/UpdateTranslationSuccessful.html","title":"class - UpdateTranslationSuccessful","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationSuccessful\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/translate.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/translate.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TranslateActionsTypes.UpdateTranslationSuccessful\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/translate.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {Map} from \"@ofModel/map\";\n\nexport enum TranslateActionsTypes {\n    UpdateTranslation = '[i18n] Translation need an update',\n    UpdateTranslationSuccessful = '[i18n] Translation successfully updated',\n    UpdateTranslationFailed = '[i18n] Translation update failed',\n    TranslationUpToDate = '[i18n] all Translation materials are already loaded',\n    RefreshTranslation ='[i18n] translate handler has been refreshed'\n}\n\nexport class UpdateTranslation implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslation;\n\n    constructor(public payload: { versions: Map> }) {\n    }\n}\n\nexport class TranslationUpToDate implements Action {\n    readonly type = TranslateActionsTypes.TranslationUpToDate;\n}\n\nexport class UpdateTranslationSuccessful implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationSuccessful;\n\n    constructor(public payload: { language: string }) {\n    }\n}\n\nexport class UpdateTranslationFailed implements Action {\n    readonly type = TranslateActionsTypes.UpdateTranslationFailed;\n\n    constructor(public payload: { error: Error }) {\n    }\n}\n\n\nexport class RefreshTranslation implements Action {\n    readonly type = TranslateActionsTypes.RefreshTranslation;\n}\nexport type TranslateActions = UpdateTranslation |\n    UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:97\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Action as ThirdAction, ActionStatus} from '@ofModel/thirds.model';\nimport {Update} from \"@ngrx/entity\";\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card',\n    AddThirdActions = '[LCard] Adds some Third Actions to existing card',\n    UpdateALightCard = '[LCard] Update a Light Card',\n    UpdateAnAction = '[LCard] Update one Action of a LightCard',\n    UpdateAnActionFailure = '[LCard] No actions where available to update for the current selected card in the state',\n    ThirdActionAlreadyLoaded = '[LCard] Light Card contains actions',\n    ThirdActionAlreadyUpdated = '[LCard] Third Action unchanged',\n    DelayedLightCardUpdate = '[LCard] update Light Card actions later',\n    LightCardAlreadyUpdated = '[LCard] Light Card already Updated'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { selectedCardId: string }) {\n    }\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class RemoveLightCard implements Action {\n    readonly type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: { cards: string[] }) {\n    }\n}\n\nexport class AddThirdActions implements Action {\n    readonly type = LightCardActionTypes.AddThirdActions;\n\n    constructor(public payload: { card: LightCard, actions: Map }) {\n    }\n}\n\nexport class UpdateALightCard implements Action {\n    readonly type = LightCardActionTypes.UpdateALightCard;\n    constructor(public payload: { card: LightCard }) {\n    }\n}\n\nexport class UpdateAnAction implements Action {\n    readonly type = LightCardActionTypes.UpdateAnAction;\n\n    constructor(public payload: {cardId:string,actionKey: string, status: ActionStatus}) {\n    }\n}\n\nexport class UpdateAnActionFailure implements Action{\n    readonly type = LightCardActionTypes.UpdateAnActionFailure;\n\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyLoaded implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyLoaded;\n    constructor(){}\n}\n\nexport class ThirdActionAlreadyUpdated implements Action{\n    readonly  type = LightCardActionTypes.ThirdActionAlreadyUpdated;\n    constructor(){}\n}\n\nexport class DelayedLightCardUpdate implements Action{\n    readonly  type = LightCardActionTypes.DelayedLightCardUpdate;\n    constructor(public payload:{card:LightCard}){}\n}\n\nexport class LightCardAlreadyUpdated implements Action{\n    readonly type = LightCardActionTypes.LightCardAlreadyUpdated;\n    constructor(){}\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | AddThirdActions\n    | UpdateALightCard\n    | UpdateAnAction\n    | UpdateAnActionFailure\n    | ThirdActionAlreadyLoaded\n    | ThirdActionAlreadyUpdated\n    | DelayedLightCardUpdate\n    | LightCardAlreadyUpdated\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationNotRegistered.html":{"url":"classes/UserApplicationNotRegistered.html","title":"class - UserApplicationNotRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationNotRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationNotRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserApplicationRegistered.html":{"url":"classes/UserApplicationRegistered.html","title":"class - UserApplicationRegistered","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserApplicationRegistered\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/user.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserActionsTypes.UserApplicationRegistered\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/user.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {User} from '@ofModel/user.model';\nimport {Action} from '@ngrx/store';\n\nexport enum UserActionsTypes {\n\n    UserApplicationRegistered =         '[User] User application registered',\n    UserApplicationNotRegistered =      '[User] User application not registered',\n    CreateUserApplication =             '[User] Create the User in the application',\n    CreateUserApplicationOnSuccess =    '[User] Create the User in the application on success',\n    CreateUserApplicationOnFailure =    '[User] Create the User in the application on failure',\n    HandleUnexpectedError =             '[User] Handle unexpected error related to user creation issue'\n}\n\nexport class UserApplicationRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationRegistered;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class UserApplicationNotRegistered implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.UserApplicationNotRegistered;\n    constructor(public payload : {error : Error, user : User}) {}\n}\n\nexport class CreateUserApplication implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplication;\n    constructor(public payload : {user : User}) {}\n}\n\n\nexport class CreateUserApplicationOnSuccess implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnSuccess;\n    constructor(public payload : {user : User}) {}\n}\n\nexport class CreateUserApplicationOnFailure implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.CreateUserApplicationOnFailure;\n    constructor(public payload : {error : Error}) {}\n}\n\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */ \n    readonly type = UserActionsTypes.HandleUnexpectedError;\n    constructor(public payload : {error : Error}) {}\n}\n\nexport type UserActions = UserApplicationRegistered\n    | UserApplicationNotRegistered\n    | CreateUserApplication\n    | CreateUserApplicationOnSuccess\n    | CreateUserApplicationOnFailure\n    | HandleUnexpectedError;\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserContext.html":{"url":"classes/UserContext.html","title":"class - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, token: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user-context.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserContext{\n    constructor(\n        readonly login:string,\n        readonly token:string,\n        readonly firstName:string,\n        readonly lastName:string,\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/user.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserApplication\n                            \n                            \n                                CreateUserApplication\n                            \n                            \n                                transition2CreateUserApplication\n                            \n                            \n                                transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/user.effects.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn), \n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData : User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error :error, user : userData }));\n                            return caught;\n                        })    \n            \n                    );\n            })            \n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:32\n                            \n                        \n\n                \n                    \n                        after that the user is authentificated throught the token, \ndetect if the user is already registered in the application and raise the UserApplicationRegistered action \nif not, set the creation user workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication), \n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(user => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user})\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error:error}));\n                            return caught;\n                        })\n                    );\n            }), \n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:69\n                            \n                        \n\n                \n                    \n                        create the user application (first time in the application)\nraise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2CreateUserApplication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered), \n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:54\n                            \n                        \n\n                \n                    \n                        transition to the creation user application workflow\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transition2UserApplicationRegistered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess), \n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user:userDataPayload});\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/user.effects.ts:93\n                            \n                        \n\n                \n                    \n                        transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {UserService} from '@ofServices/user.service';\nimport {Observable} from 'rxjs';\nimport {\n    CreateUserApplication,\n    CreateUserApplicationOnFailure,\n    CreateUserApplicationOnSuccess,\n    UserActions,\n    UserActionsTypes,\n    UserApplicationNotRegistered,\n    UserApplicationRegistered\n} from '@ofStore/actions/user.actions';\nimport {AcceptLogIn, AuthenticationActionTypes} from '@ofStore/actions/authentication.actions';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {User} from '@ofModel/user.model';\n\n\n@Injectable()\nexport class UserEffects {\n\n    constructor(private store: Store, private actions$:Actions, private userService: UserService) {}\n\n    /**\n     * after that the user is authentificated throught the token, \n     * detect if the user is already registered in the application and raise the UserApplicationRegistered action \n     * if not, set the creation user workflow\n     */\n    @Effect()\n    checkUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn), \n            switchMap((action: AcceptLogIn) => {\n                const userPayload = action.payload;\n                return this.userService.askUserApplicationRegistered(userPayload.identifier)\n                    .pipe(\n                        map((user: User) => new UserApplicationRegistered({user})),\n                        catchError((error, caught) => {\n                            const userData : User = new User(userPayload.identifier, userPayload.firstName, userPayload.lastName);\n                            this.store.dispatch(new UserApplicationNotRegistered({error :error, user : userData }));\n                            return caught;\n                        })    \n            \n                    );\n            })            \n        ); \n\n    /**\n     * transition to the creation user application workflow\n     */   \n    @Effect()\n    transition2CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.UserApplicationNotRegistered), \n            map((action: UserApplicationNotRegistered) => {\n                const userDataPayload = action.payload.user;\n                // console.log(\"transitionCreateUserApplication userPayload : \" + userDataPayload);\n                return new CreateUserApplication({user: userDataPayload});\n            })\n        ); \n\n    /**\n     * create the user application (first time in the application)\n     * raise an CreateUserApplicationOnSuccess action or CreateUserApplicationOnFailure action.\n     */\n    @Effect()\n    CreateUserApplication: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplication), \n            switchMap((action: CreateUserApplication) => {\n                const user = action.payload.user;\n                return this.userService.askCreateUser(user)\n                    .pipe(\n                        map(user => {\n                            // console.log(\"ok creation user \" + user.login);\n                            return new CreateUserApplicationOnSuccess({user})\n                        }),\n                        catchError((error, caught) => {\n                            // console.log(error, caught, \"error on creation user application for the user \")\n                            this.store.dispatch(new CreateUserApplicationOnFailure({error:error}));\n                            return caught;\n                        })\n                    );\n            }), \n        );\n\n    /**\n     * transition to the userApplicationRegistered action after an CreateUserApplicationOnSuccess action\n     */   \n    @Effect()\n    transition2UserApplicationRegistered: Observable = this.actions$\n        .pipe(\n            ofType(UserActionsTypes.CreateUserApplicationOnSuccess), \n            map((action: CreateUserApplicationOnSuccess) => {\n                const userDataPayload = action.payload.user;\n                return new UserApplicationRegistered({user:userDataPayload});\n            })\n        );    \n        \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                userUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                askCreateUser\n                            \n                            \n                                askUserApplicationRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular build-in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askCreateUser\n                        \n                        \n                    \n                \n            \n            \n                \naskCreateUser(userData: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            askUserApplicationRegistered\n                        \n                        \n                    \n                \n            \n            \n                \naskUserApplicationRegistered(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { environment } from '@env/environment';\nimport { Observable, of } from 'rxjs';\nimport { User } from '@ofModel/user.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n\n@Injectable()\nexport class UserService {\n\n    readonly userUrl : string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     */\n    constructor(private httpClient : HttpClient) {\n        this.userUrl = `${environment.urls.users}`;\n    }\n\n    askUserApplicationRegistered(user : string) : Observable {\n        console.log(\"user in askUserApplicationRegistered service : \" + user);\n        return this.httpClient.get(`${this.userUrl}/users/${user}`);\n    }\n\n    askCreateUser(userData : User) : Observable {\n        console.log(\"user in askCreateUser service : \" + userData.login);\n        return this.httpClient.put(`${this.userUrl}/users/${userData.login}`, userData);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/user.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        group\n                                \n                                \n                                        registered\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                    \n                                \n                                \n                                    \n                                        group:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registered\n                                    \n                                \n                                \n                                    \n                                        registered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserState {\n    registered : boolean,\n    group : string[]\n}\n\nexport const userInitialState : UserState = {\n    registered : false,\n    group : null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/utilities/utilities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalcHeightDirective\n                        \n                        \n                            ResizableComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalcHeightDirective } from \"./calc-height.directive\";\nimport { ResizableComponent } from './components/resizable/resizable.component';\n//TODO Find out where directive would be best put\n\n@NgModule({\n  declarations: [CalcHeightDirective, ResizableComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n      CalcHeightDirective, ResizableComponent\n  ]\n})\nexport class UtilitiesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:79\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:55\n                \n            \n\n\n            \n                \n                    special format function used for wrote all ticks on one horizontal line\nif cluster level is correct return a string formatted from value\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/tick-format-pipe/x-axis-tick-format.pipe.ts:16\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  constructor(private timeService: TimeService) {\n  }\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n      const date = moment(value);\n      switch (clusterLevel) {\n        case 'Min':\n        case 'Sec': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') +\n              'h' + this.timeService.predefinedFormat(date, 'minutesOnly');\n        }\n        case 'Hou': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') + 'h';\n        }\n        case 'Day':\n        case 'Dat':\n        case 'Wee':\n        case 'Mon':\n        case 'Yea':\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * special format function used for wrote all ticks on one horizontal line\n   * if cluster level is correct return a string formatted from value\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        if (clusterLevel === 'Hou') {\n          return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n        } else if (clusterLevel === 'Min') {\n          return this.timeService.predefinedFormat(date, 'minutesOnly');\n        } else if (clusterLevel === 'Sec') {\n          return this.timeService.predefinedFormat(date, 'secondedsOnly');\n        } else if (clusterLevel === 'nbW') {\n          return this.timeService.predefinedFormat(date, 'weekNumberOnly');\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n      switch (clusterLevel) {\n        case 'Hou' : {\n          if (date.valueOf() === startYear.valueOf()) {\n            return date.format( 'DD MMM YY');\n            // return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n          }\n          if (date.hours() === 0) {\n            return this.timeService.predefinedFormat(date, 'dateOnDay');\n          } else {\n            return this.timeService.predefinedFormat(date, 'hoursOnly');\n          }\n        }\n        case 'Min': {\n          if (date.minutes() === 0) {\n            if (date.hour() === 0) {\n              return this.timeService.predefinedFormat(date, 'dateOnDay');\n            } else {\n              return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n            }\n          }\n        }\n        case 'Sec': {\n          if (date.seconds() === 0) {\n            if (date.minutes() === 0) {\n              if (date.hour() === 0) {\n                return this.timeService.predefinedFormat(date, 'dateOnDay');\n              } else {\n                return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n              }\n            } else {\n              return this.timeService.predefinedFormat(date, 'minutesOnly');\n            }\n          }\n        }\n        case 'Day': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateOnDay');\n        }\n        case 'Dat': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDay');\n        }\n        case 'Wee': {\n          return this.timeService.predefinedFormat(date, 'dateOnWeek');\n        }\n        case 'Mon': {\n          return this.timeService.predefinedFormat(date, 'dateOnMonth');\n        }\n        case 'Yea': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^10.1.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.15\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.25\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            ArchiveActionTypes   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterDateTypes   (src/.../archive-filters.component.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            ThirdActionComporentModalReturn   (src/.../confirm-modal.component.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                        \n                            TranslateActionsTypes   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActionsTypes   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                Value : EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                Value : JNLP\n                            \n                        \n                        \n                            \n                                 URL\n                            \n                        \n                        \n                            \n                                Value : URL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/archive.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ArchiveActionTypes\n                    \n                \n                        \n                            \n                                 UpdateArchiveFilter\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update Filter\n                            \n                        \n                        \n                            \n                                 SendArchiveQuery\n                            \n                        \n                        \n                            \n                                Value : [Archive] Send Query\n                            \n                        \n                        \n                            \n                                 ArchiveQuerySuccess\n                            \n                        \n                        \n                            \n                                Value : [Archive] Query was successful\n                            \n                        \n                        \n                            \n                                 UpdateArchivePage\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update query result page\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Archive] Handle unexpected error related to archived card issue\n                            \n                        \n                        \n                            \n                                 SelectArchivedLightCard\n                            \n                        \n                        \n                            \n                                Value : [Archive] Select one archived light card\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 LoadArchivedCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Success\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n                        \n                            \n                                 AddActionsAppear\n                            \n                        \n                        \n                            \n                                Value : [Card] Add Actions Appear\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n                        \n                            \n                                Value : QUESTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/modules/archives/components/archive-filters/archive-filters.component.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterDateTypes\n                    \n                \n                        \n                            \n                                 PUBLISH_DATE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateFrom\n                            \n                        \n                        \n                            \n                                 PUBLISH_DATE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : publishDateTo\n                            \n                        \n                        \n                            \n                                 ACTIVE_FROM_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeFrom\n                            \n                        \n                        \n                            \n                                 ACTIVE_TO_PARAM\n                            \n                        \n                        \n                            \n                                Value : activeTo\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n                        \n                            \n                                 RemoveLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Remove a card\n                            \n                        \n                        \n                            \n                                 AddThirdActions\n                            \n                        \n                        \n                            \n                                Value : [LCard] Adds some Third Actions to existing card\n                            \n                        \n                        \n                            \n                                 UpdateALightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update a Light Card\n                            \n                        \n                        \n                            \n                                 UpdateAnAction\n                            \n                        \n                        \n                            \n                                Value : [LCard] Update one Action of a LightCard\n                            \n                        \n                        \n                            \n                                 UpdateAnActionFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] No actions where available to update for the current selected card in the state\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyLoaded\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card contains actions\n                            \n                        \n                        \n                            \n                                 ThirdActionAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Third Action unchanged\n                            \n                        \n                        \n                            \n                                 DelayedLightCardUpdate\n                            \n                        \n                        \n                            \n                                Value : [LCard] update Light Card actions later\n                            \n                        \n                        \n                            \n                                 LightCardAlreadyUpdated\n                            \n                        \n                        \n                            \n                                Value : [LCard] Light Card already Updated\n                            \n                        \n            \n        \n\n    src/app/services/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/modules/cards/components/action/confirm-modal/confirm-modal.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ThirdActionComporentModalReturn\n                    \n                \n                        \n                            \n                                 CANCEL\n                            \n                        \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 DISMISS\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to update the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n    src/app/store/actions/translate.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TranslateActionsTypes\n                    \n                \n                        \n                            \n                                 UpdateTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation need an update\n                            \n                        \n                        \n                            \n                                 UpdateTranslationSuccessful\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation successfully updated\n                            \n                        \n                        \n                            \n                                 UpdateTranslationFailed\n                            \n                        \n                        \n                            \n                                Value : [i18n] Translation update failed\n                            \n                        \n                        \n                            \n                                 TranslationUpToDate\n                            \n                        \n                        \n                            \n                                Value : [i18n] all Translation materials are already loaded\n                            \n                        \n                        \n                            \n                                 RefreshTranslation\n                            \n                        \n                        \n                            \n                                Value : [i18n] translate handler has been refreshed\n                            \n                        \n            \n        \n\n    src/app/store/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        UserActionsTypes\n                    \n                \n                        \n                            \n                                 UserApplicationRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application registered\n                            \n                        \n                        \n                            \n                                 UserApplicationNotRegistered\n                            \n                        \n                        \n                            \n                                Value : [User] User application not registered\n                            \n                        \n                        \n                            \n                                 CreateUserApplication\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnSuccess\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on success\n                            \n                        \n                        \n                            \n                                 CreateUserApplicationOnFailure\n                            \n                        \n                        \n                            \n                                Value : [User] Create the User in the application on failure\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [User] Handle unexpected error related to user creation issue\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nResizableComponent \n\nResizableComponent \n\nResizableComponent  -->\n\nUtilitiesModule->ResizableComponent \n\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchiveListPageComponent\n\nArchiveListPageComponent\n\nArchivesModule -->\n\nArchiveListPageComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nDatetimeFilterComponent\n\nDatetimeFilterComponent\n\nArchivesModule -->\n\nDatetimeFilterComponent->ArchivesModule\n\n\n\n\n\nMultiFilterComponent\n\nMultiFilterComponent\n\nArchivesModule -->\n\nMultiFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nConfirmModalComponent \n\nConfirmModalComponent \n\nConfirmModalComponent  -->\n\nCardsModule->ConfirmModalComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nActionComponent\n\nActionComponent\n\nCardsModule -->\n\nActionComponent->CardsModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nConfirmModalComponent\n\nConfirmModalComponent\n\nCardsModule -->\n\nConfirmModalComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdActionService\n\nThirdActionService\n\nServicesModule -->\n\nThirdActionService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nResizableComponent\n\nResizableComponent\n\nUtilitiesModule -->\n\nResizableComponent->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    36 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    24 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    112 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArchiveActions   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            Omit   (src/.../thirds.model.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                        \n                            TranslateActions   (src/.../translate.actions.ts)\n                        \n                        \n                            UserActions   (src/.../user.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/archive.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ArchiveActions\n                \n            \n            \n                \n                        UpdateArchiveFilter | SendArchiveQuery | HandleUnexpectedError | ArchiveQuerySuccess | UpdateArchivePage | SelectArchivedLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | LoadArchivedCard | LoadArchivedCardSuccess | LoadArchivedCardFailure | HandleUnexpectedError | AddActionsAppear\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards | AddThirdActions | UpdateALightCard | UpdateAnAction | UpdateAnActionFailure | ThirdActionAlreadyLoaded | ThirdActionAlreadyUpdated | DelayedLightCardUpdate | LightCardAlreadyUpdated | RemoveLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/model/thirds.model.ts\n    \n    \n        \n            \n                \n                    \n                    Omit\n                \n            \n            \n                \n                        Pick>\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n    src/app/store/actions/translate.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TranslateActions\n                \n            \n            \n                \n                        UpdateTranslation | UpdateTranslationSuccessful | UpdateTranslationFailed | TranslationUpToDate | RefreshTranslation\n\n                \n            \n        \n    \n    src/app/store/actions/user.actions.ts\n    \n    \n        \n            \n                \n                    \n                    UserActions\n                \n            \n            \n                \n                        UserApplicationRegistered | UserApplicationNotRegistered | CreateUserApplication | CreateUserApplicationOnSuccess | CreateUserApplicationOnFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
