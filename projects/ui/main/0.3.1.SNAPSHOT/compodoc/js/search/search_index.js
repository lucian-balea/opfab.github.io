var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.232,1,2.061]],["body/classes/AcceptLogIn.html",[0,0.41,1,2.952,2,0.523,3,0.05,4,0.05,5,0.109,6,1.566,7,1.412,8,1.432,9,4.044,10,2.452,11,2.168,12,2.891,13,3.558,14,3.709,15,2.201,16,3.565,17,2.086,18,3.565,19,3.221,20,3.071,21,2.659,22,2.55,23,3.399,24,2.679,25,3.288,26,3.565,27,3.288,28,1.498,29,3.201,30,3.42,31,3.565,32,0.379,33,1.339,34,0.204,35,0.554,36,0.919,37,1.984,38,1.4,39,0.308,40,1.177,41,3.279,42,0.295,43,4.655,44,0.357,45,0.01,46,0.305,47,0.346,48,3.086,49,0.579,50,0.459,51,0.117,52,0.497,53,2.564,54,1.412,55,2.138,56,1.566,57,0.148,58,0.639,59,1.511,60,2.65,61,1.511,62,1.938,63,2.564,64,1.459,65,3.071,66,3.368,67,3.858,68,3.288,69,2.65,70,1.691,71,2.279,72,2.855,73,2.265,74,3.168,75,2.65,76,1.397,77,1.96,78,1.367,79,1.257,80,1.412,81,1.412,82,1.459,83,1.511,84,2.659,85,2.659,86,2.201,87,2.659,88,1.763,89,1.18,90,1.18,91,1.12,92,1.763,93,1.691,94,1.763,95,1.763,96,1.626,97,1.247,98,0.903,99,1.691,100,2.333,101,2.659,102,2.65,103,2.362,104,1.691,105,0.95,106,1.691,107,1.691,108,1.566,109,3.288,110,0.926,111,1.763,112,1.626,113,1.691,114,2.659,115,1.203,116,1.763,117,1.763,118,3.565,119,1.691,120,1.763,121,2.659,122,1.763,123,2.55,124,0.688,125,1.763,126,1.691,127,1.763,128,1.691,129,1.763,130,2.55,131,2.55,132,1.763,133,1.763,134,1.626,135,0.003,136,0.005,137,0.003]],["title/classes/AcceptLogOut.html",[0,0.232,74,2.061]],["body/classes/AcceptLogOut.html",[0,0.413,1,2.694,2,0.538,3,0.052,4,0.052,5,0.103,6,1.608,7,1.45,8,1.438,9,4.008,10,1.67,11,1.948,12,2.89,13,3.488,14,3.747,15,1.499,16,3.613,17,2.165,18,3.613,19,3.099,20,2.602,21,1.81,22,1.737,23,3.21,24,2.445,25,3,26,3.253,27,3,28,1.367,29,2.713,30,3.121,31,2.713,32,0.372,33,1.349,34,0.21,35,0.565,36,0.781,37,1.718,38,1.409,39,0.377,41,2.325,42,0.25,45,0.01,49,0.595,50,0.472,51,0.118,52,0.51,53,2.605,54,1.45,55,2.172,56,1.608,57,0.148,58,0.657,59,1.552,60,2.694,61,1.552,62,1.977,63,2.605,64,1.499,65,3.121,66,3.442,67,3.897,68,3.332,69,2.694,70,1.737,71,2.325,72,3.099,73,2.302,74,3.488,75,2.694,76,1.426,77,1.983,78,1.404,79,1.271,80,1.45,81,1.45,82,1.499,83,1.552,84,2.713,85,2.713,86,2.246,87,2.713,88,1.81,89,1.19,90,1.19,91,1.129,92,1.81,93,1.737,94,1.81,95,1.81,96,1.67,97,1.281,98,0.928,99,1.737,100,2.371,101,2.713,102,2.694,103,2.41,104,1.737,105,0.976,106,1.737,107,1.737,108,1.608,109,3.569,110,0.951,111,1.81,112,1.67,113,1.737,114,2.713,115,1.227,116,1.81,117,1.81,118,4.063,119,1.737,120,1.81,121,2.713,122,1.81,123,2.602,124,0.707,125,2.713,126,2.602,127,2.713,128,2.602,129,2.713,130,3.121,131,3.121,132,1.81,133,1.81,134,1.67,135,0.003,136,0.005,137,0.003,138,4.75]],["title/classes/AcceptLogOutSuccess.html",[0,0.232,75,2.061]],["body/classes/AcceptLogOutSuccess.html",[0,0.413,1,2.692,2,0.537,3,0.051,4,0.051,5,0.11,6,1.607,7,1.448,8,1.437,9,4.068,10,1.668,11,2.085,12,2.9,13,3.586,14,3.745,15,1.497,16,3.251,17,2.104,18,3.251,19,3.098,20,2.6,21,1.809,22,1.735,23,3.208,24,2.714,25,3.331,26,3.611,27,3.331,28,1.518,29,2.711,30,3.464,31,2.711,32,0.375,33,1.349,34,0.209,35,0.565,36,0.781,37,1.717,38,1.409,39,0.209,41,2.323,42,0.167,45,0.01,49,0.594,50,0.471,51,0.118,52,0.51,53,2.604,54,1.448,55,2.171,56,1.607,57,0.148,58,0.656,59,1.55,60,2.692,61,1.55,62,1.976,63,2.604,64,1.497,65,3.119,66,3.39,67,3.896,68,3.331,69,2.692,70,1.735,71,2.323,72,2.892,73,2.3,74,3.362,75,2.99,76,1.424,77,1.982,78,1.402,79,1.271,80,1.448,81,1.448,82,1.497,83,1.55,84,2.711,85,2.711,86,2.244,87,2.711,88,1.809,89,1.19,90,1.19,91,1.128,92,1.809,93,1.735,94,1.809,95,1.809,96,1.668,97,1.279,98,0.927,99,1.735,100,2.37,101,2.711,102,2.692,103,2.408,104,1.735,105,0.975,106,1.735,107,1.735,108,1.607,109,3.331,110,0.95,111,1.809,112,1.668,113,1.735,114,3.251,115,1.471,116,1.809,117,1.809,118,3.868,119,1.735,120,1.809,121,3.251,122,1.809,123,2.6,124,0.706,125,1.809,126,1.735,127,1.809,128,1.735,129,1.809,130,3.119,131,3.119,132,2.711,133,2.711,134,1.668,135,0.003,136,0.005,137,0.003,139,3.167]],["title/classes/Action.html",[0,0.232,8,0.739]],["body/classes/Action.html",[0,0.429,2,0.671,3,0.064,4,0.064,5,0.064,8,0.946,11,1.217,32,0.315,36,0.542,38,1.635,39,0.542,42,0.208,44,0.457,45,0.01,46,0.552,47,0.443,50,0.83,51,0.134,57,0.154,58,1.156,79,1.642,89,1.265,90,1.265,91,1.2,100,2.691,135,0.004,136,0.006,137,0.004,140,2.166,141,3.485,142,4.01,143,4.714,144,3.514,145,3.859,146,3.22,147,3.859,148,3.859,149,3.164,150,3.013,151,3.859,152,3.859,153,3.859,154,3.859,155,3.859,156,3.954,157,0.637,158,1.751,159,1.552,160,2.006,161,1.101,162,2.361,163,1.936,164,1.936,165,2.361,166,2.258,167,2.361,168,2.361,169,2.361,170,2.361,171,2.361,172,2.361,173,2.361,174,2.361,175,3.33,176,1.047,177,2.831,178,2.361,179,3.33,180,1.244,181,1.598,182,2.939,183,2.361,184,1.508,185,1.598,186,1.508,187,2.006,188,2.361,189,2.361,190,2.361,191,2.361,192,2.258,193,2.258,194,2.258,195,3.099,196,3.186,197,1.936,198,2.166,199,2.258,200,2.258,201,2.258,202,1.697,203,2.361,204,2.361,205,2.254,206,2.361,207,2.361,208,3.057,209,2.361,210,2.361]],["title/classes/AddLightCardFailure.html",[0,0.232,211,2.134]],["body/classes/AddLightCardFailure.html",[0,0.434,2,0.7,3,0.067,4,0.067,5,0.067,8,1.422,12,1.373,32,0.393,33,1.44,34,0.273,35,0.684,36,0.789,37,2.213,38,1.496,39,0.437,40,1.574,42,0.348,44,0.477,45,0.01,46,0.408,47,0.463,49,0.774,50,0.614,51,0.119,52,0.664,57,0.155,58,0.855,76,1.238,77,2.201,89,1.315,90,1.315,91,1.248,124,1.782,135,0.004,136,0.006,137,0.004,157,0.664,211,3.502,212,3.768,213,2.173,214,2.596,215,5.748,216,4.126,217,3.431,218,2.546,219,1.827,220,1.718,221,2.261,222,3.356,223,4.655,224,2.58,225,3.128,226,2.916,227,2.357,228,1.887,229,3.356,230,2.192,231,3.238,232,2.094,233,1.207,234,2.261,235,2.02,236,3.238,237,2.261,238,2.089,239,1.574,240,1.53,241,1.771,242,1.771,243,1.373,244,1.448,245,1.619,246,2.463,247,2.463,248,2.261,249,2.463,250,2.463,251,2.463,252,2.463,253,2.463,254,2.463,255,2.261,256,2.463,257,2.463,258,2.463]],["title/components/AppComponent.html",[259,0.996,260,1.662]],["body/components/AppComponent.html",[0,0.193,3,0.059,4,0.085,5,0.085,8,1.044,12,2.246,17,1.757,32,0.354,33,0.912,34,0.24,35,0.624,36,0.497,39,0.24,42,0.415,44,0.419,45,0.01,46,0.609,47,0.406,49,1.266,50,1.004,51,0.174,52,0.584,57,0.067,60,1.714,61,2.566,62,2.809,63,1.658,64,2.479,66,1.555,79,0.68,86,3.191,98,1.06,103,1.839,105,1.116,110,1.088,115,1.928,135,0.004,136,0.005,137,0.004,146,2.692,157,0.844,161,1.009,184,2.349,195,2.929,232,1.839,233,1.06,259,1.408,260,2.574,261,2.182,262,1.509,263,1.985,264,1.555,265,1.555,266,3.194,267,2.817,268,1.555,269,3.746,270,3.904,271,3.282,272,6.158,273,2.25,274,5.242,275,6.158,276,4.946,277,6.158,278,6.158,279,2.025,280,6.158,281,4.586,282,1.423,283,3.087,284,1.658,285,4.299,286,5.025,287,5.242,288,3.624,289,4.21,290,4.21,291,5.242,292,5.242,293,5.242,294,5.242,295,6.158,296,0.96,297,1.382,298,3.624,299,3.624,300,3.624,301,3.624,302,5.242,303,3.624,304,0.68,305,1.206,306,1.464,307,2.163,308,1.272,309,1.464,310,2.53,311,2.91,312,3.194,313,2.91,314,2.91,315,2.163,316,2.163,317,3.194,318,2.53,319,2.872,320,2.91,321,2.91,322,2.91,323,2.53,324,1.272,325,3.624,326,3.624,327,3.624,328,3.624,329,3.624,330,3.624,331,3.624,332,2.53,333,3.282,334,3.624,335,2.91,336,3.624,337,2.91,338,3.624,339,3.624,340,3.624,341,3.624,342,3.624,343,5.242,344,3.624,345,3.624,346,3.624,347,2.699,348,3.624,349,3.624,350,2.389,351,5.332,352,2.91,353,3.624,354,3.282,355,4.62,356,5.242,357,5.242,358,5.242,359,5.242,360,1.509,361,1.464,362,1.509,363,1.509,364,1.509,365,1.509,366,1.272,367,1.464,368,1.509,369,1.509,370,1.509,371,1.464,372,1.509,373,1.464,374,1.509,375,1.509,376,1.509,377,1.509,378,2.91,379,2.699,380,3.194,381,1.238,382,2.25,383,2.25,384,1.555,385,2.896,386,1.555,387,1.555,388,1.344,389,1.555,390,1.382,391,1.555,392,1.344,393,2.25,394,1.382,395,1.555,396,1.344,397,1.555,398,1.382,399,1.344,400,1.555,401,1.382,402,1.555,403,1.382,404,1.555,405,1.344,406,1.555,407,1.555,408,1.555,409,1.382,410,1.555,411,1.382,412,1.891,413,1.555,414,1.382,415,1.555,416,1.382,417,1.088,418,1.555,419,1.555]],["title/modules/AppModule.html",[420,1.761,421,3.043]],["body/modules/AppModule.html",[0,0.249,3,0.076,4,0.102,5,0.102,36,0.641,45,0.01,51,0.187,57,0.086,73,1.888,98,2.366,105,1.438,110,2.427,135,0.005,136,0.007,137,0.005,233,1.367,260,3.327,289,3.752,304,0.877,315,2.789,316,2.789,360,1.945,361,1.888,362,1.945,363,1.945,364,1.945,365,1.945,366,1.64,367,1.888,368,1.945,369,1.945,370,1.945,371,1.888,372,1.945,373,1.888,374,1.945,375,1.945,376,1.945,377,1.945,381,1.597,403,3.084,420,1.888,421,6.272,422,2.209,423,2.56,424,4.212,425,4.304,426,3.735,427,2.371,428,4.118,429,4.118,430,4.118,431,4.118,432,5.645,433,5.484,434,5.484,435,3.574,436,2.789,437,4.672,438,3.296,439,6.257,440,4.368,441,3.08,442,3.296,443,6.257,444,4.672,445,6.257,446,2.668,447,3.917,448,6.257,449,6.257,450,2.668,451,5.514,452,5.514,453,3.08,454,4.672,455,5.514,456,3.48,457,3.752,458,4.672,459,3.262,460,4.672,461,4.672,462,4.118,463,4.672,464,3.752,465,3.752,466,4.672,467,5.514,468,3.752,469,3.752,470,4.118,471,3.752,472,4.66,473,3.752,474,4.672,475,3.752,476,3.752,477,3.752,478,4.672,479,4.672,480,4.672,481,4.672,482,3.48,483,3.752]],["title/modules/AppRoutingModule.html",[420,1.761,432,3.043]],["body/modules/AppRoutingModule.html",[0,0.289,3,0.088,4,0.112,5,0.112,36,0.744,45,0.01,51,0.171,57,0.128,98,2.219,102,2.565,105,1.67,112,2.857,135,0.006,136,0.007,137,0.006,176,1.827,233,1.587,259,1.576,304,1.018,360,2.258,361,2.191,362,2.258,363,2.258,364,2.258,365,2.258,366,1.904,367,2.191,368,2.258,369,2.258,370,2.258,371,2.191,372,2.258,373,2.191,374,2.258,375,2.258,376,2.258,377,2.258,422,2.565,427,2.752,432,4.815,438,2.857,442,3.633,462,4.78,484,5.423,485,4.039,486,6.897,487,5.136,488,4.996,489,3.097,490,5.571,491,4.039,492,2.752,493,3.395,494,6.373,495,3.939,496,7.583,497,5.423,498,5.648,499,4.039,500,5.423,501,4.78,502,5.423,503,4.78,504,5.423,505,4.356,506,5.423,507,5.423,508,5.423,509,4.78,510,5.423,511,4.78,512,5.423,513,5.423,514,4.039,515,5.423]],["title/interfaces/AppState.html",[308,1.53,516,2.134]],["body/interfaces/AppState.html",[3,0.077,4,0.077,5,0.077,12,2.625,15,2.984,25,4.155,32,0.364,34,0.313,35,0.751,45,0.01,51,0.189,52,0.762,57,0.146,115,1.834,135,0.005,136,0.007,137,0.005,157,1.27,176,2.006,244,2.215,308,2.215,492,2.4,493,2.962,495,4.505,514,3.523,516,2.316,517,2.962,518,3.799,519,4.505,520,4.709,521,4.945,522,5.287,523,5.287,524,5.287,525,5.287,526,5.287,527,7.573,528,4.73,529,4.16,530,3.302,531,4.169,532,5.56,533,4.73,534,5.56,535,5.56,536,5.56,537,4.73,538,4.405,539,4.73,540,4.405,541,4.73,542,4.73,543,4.73,544,5.56,545,4.73,546,5.56,547,4.73,548,4.73,549,5.56,550,4.73,551,5.56,552,4.73,553,5.56,554,4.73,555,4.73,556,4.73,557,4.405,558,4.73,559,4.73,560,4.73,561,4.405,562,4.73,563,4.405,564,4.73,565,4.73,566,4.405,567,4.73,568,4.73,569,4.169,570,4.405,571,4.73,572,3.523,573,3.523,574,4.169,575,5.067,576,3.523,577,4.169,578,3.302,579,4.169]],["title/classes/ApplyFilter.html",[0,0.232,580,2.388]],["body/classes/ApplyFilter.html",[0,0.375,2,0.95,3,0.091,4,0.091,5,0.091,8,1.369,32,0.398,33,1.339,34,0.371,35,0.838,36,0.966,37,2.09,38,1.441,39,0.371,40,2.137,42,0.405,44,0.648,45,0.01,46,0.555,47,0.628,49,1.051,50,0.834,51,0.16,52,0.902,57,0.149,58,1.161,61,2.743,62,2.931,77,2.06,89,1.105,90,1.105,91,1.048,135,0.006,136,0.007,137,0.006,146,2.021,161,1.56,214,3.021,417,2.311,495,4.021,580,4.425,581,3.912,582,7.041,583,5.603,584,6.205,585,3.694,586,3.694,587,4.203,588,3.345,589,4.173,590,3.912,591,4.5,592,4.938,593,3.508,594,4.408,595,4.938,596,4.938,597,4.173]],["title/components/ArchivesComponent.html",[259,0.996,388,1.616]],["body/components/ArchivesComponent.html",[0,0.271,3,0.083,4,0.108,5,0.108,32,0.229,33,1.153,34,0.337,36,0.699,39,0.487,42,0.349,45,0.01,46,0.656,51,0.106,57,0.094,98,1.491,105,1.569,110,1.529,135,0.005,136,0.007,137,0.005,157,1.067,233,1.491,259,1.683,260,1.943,261,2.758,262,2.121,263,2.792,264,2.187,265,2.187,267,3.368,268,2.187,269,3.888,271,4.148,273,2.844,282,1.799,283,3.566,296,1.35,297,1.943,304,0.956,360,2.121,361,2.059,362,2.121,363,2.121,364,2.121,365,2.121,366,1.789,367,2.059,368,2.121,369,2.121,370,2.121,371,2.059,372,2.121,373,2.059,374,2.121,375,2.121,376,2.121,377,2.121,381,1.741,382,2.844,383,2.844,384,2.187,385,3.346,386,2.187,387,2.187,388,2.891,389,2.187,390,1.943,391,2.187,392,1.89,393,2.844,394,1.943,395,2.187,396,1.89,397,2.187,398,1.943,399,1.89,400,2.187,401,1.943,402,2.187,403,1.943,404,2.187,405,1.89,406,2.187,407,2.187,408,2.187,409,1.943,410,2.187,411,1.943,412,2.39,413,2.187,414,1.943,415,2.187,416,1.943,417,1.529,418,2.187,419,2.187,499,5.806,598,4.491,599,7.363,600,6.626,601,5.096,602,5.096,603,5.839]],["title/modules/ArchivesModule.html",[420,1.761,604,3.246]],["body/modules/ArchivesModule.html",[0,0.313,3,0.095,4,0.118,5,0.118,36,0.806,45,0.01,51,0.171,57,0.109,73,2.374,105,1.809,135,0.006,136,0.008,137,0.006,233,1.719,304,1.102,360,2.446,361,2.374,362,2.446,363,2.446,364,2.446,365,2.446,366,2.062,367,2.374,368,2.446,369,2.446,370,2.446,371,2.374,372,2.446,373,2.374,374,2.446,375,2.446,376,2.446,377,2.446,381,2.008,388,3.186,420,2.374,422,2.778,423,3.219,424,4.695,425,3.355,426,3.507,427,2.981,435,4.141,436,3.507,438,3.819,442,3.819,447,4.539,450,3.355,459,4.101,499,4.375,604,6.551,605,5.177,606,5.177,607,5.177,608,5.999,609,5.875,610,5.177]],["title/modules/ArchivesRoutingModule.html",[420,1.761,608,3.043]],["body/modules/ArchivesRoutingModule.html",[0,0.324,3,0.099,4,0.12,5,0.12,36,0.835,45,0.01,51,0.173,57,0.113,105,1.874,135,0.006,136,0.008,137,0.006,176,1.612,233,1.781,259,1.391,304,1.142,360,2.534,361,2.459,362,2.534,363,2.534,364,2.534,365,2.534,366,2.137,367,2.459,368,2.534,369,2.534,370,2.534,371,2.459,372,2.534,373,2.459,374,2.534,375,2.534,376,2.534,377,2.534,388,2.748,422,2.878,427,3.088,438,3.206,442,3.903,485,4.533,487,5.519,488,5.002,489,3.476,490,5.173,491,4.533,494,4.533,498,4.533,608,5.173,610,5.364,611,6.086,612,4.888]],["title/classes/AuthObject.html",[0,0.232,613,3.246]],["body/classes/AuthObject.html",[0,0.33,2,0.386,3,0.037,4,0.037,5,0.037,7,1.04,9,1.861,12,2.631,13,1.735,17,1.861,23,2.339,24,0.976,27,1.198,28,1.765,32,0.323,34,0.15,35,0.437,36,1.095,37,0.996,39,0.35,41,3.193,42,0.305,44,0.263,45,0.01,46,0.225,47,0.517,51,0.158,52,0.366,53,2.836,54,1.04,55,1.399,57,0.115,58,0.471,64,1.735,66,0.976,71,2.256,78,3.005,79,1.562,80,3.533,81,3.808,82,3.084,83,2.588,96,2.785,97,2.831,102,2.501,105,1.419,108,2.683,115,1.602,124,0.507,135,0.002,136,0.004,137,0.002,146,1.663,161,0.633,176,2.046,180,1.883,181,1.862,184,1.399,186,1.399,195,1.809,202,3.088,205,2.907,228,1.04,233,1.547,244,0.798,279,2.159,297,0.867,304,0.427,305,0.757,306,0.919,307,1.358,308,0.798,309,0.919,323,1.588,324,0.798,351,1.694,366,1.856,412,2.092,446,1.299,492,1.154,493,1.424,613,4.32,614,1.588,615,2.946,616,5.464,617,4.66,618,5.112,619,2.275,620,2.275,621,1.358,622,2.275,623,2.275,624,2.275,625,2.275,626,0.972,627,3.31,628,2.005,629,1.694,630,1.198,631,1.358,632,3.31,633,1.694,634,1.694,635,2.005,636,6.019,637,1.827,638,1.424,639,1.358,640,1.827,641,2.732,642,1.827,643,1.154,644,2.005,645,2.005,646,4.062,647,2.005,648,2.005,649,2.005,650,2.005,651,2.005,652,5.357,653,2.005,654,2.005,655,2.005,656,2.005,657,2.005,658,2.005,659,2.005,660,5.464,661,4.66,662,3.233,663,5.112,664,2.005,665,3.233,666,2.005,667,3.233,668,3.233,669,3.233,670,2.005,671,3.233,672,2.005,673,1.827,674,2.946,675,2.005,676,3.233,677,1.827,678,1.694,679,2.005,680,3.233,681,2.005,682,3.31,683,2.005,684,3.233,685,2.005,686,4.062,687,2.005,688,5.45,689,4.062,690,4.062,691,4.062,692,4.062,693,4.062,694,4.062,695,2.005,696,2.005,697,2.005,698,2.005,699,3.233,700,1.827,701,3.433,702,3.233,703,3.233,704,3.233,705,2.005,706,2.005,707,2.005,708,4.062,709,4.062,710,2.946,711,2.19,712,2.005,713,3.233,714,2.005,715,2.946,716,3.233,717,3.233,718,2.005,719,2.005,720,3.233,721,3.233,722,2.005,723,2.005,724,2.005,725,2.005,726,2.005,727,2.005,728,2.005,729,2.005,730,2.005,731,2.005,732,2.005,733,2.005,734,2.005,735,2.005,736,2.946,737,5.112,738,2.005,739,3.233,740,2.256,741,3.938,742,3.433,743,2.005,744,2.005,745,2.005,746,2.005,747,3.233,748,2.005,749,3.233,750,2.005,751,3.233,752,2.005,753,2.005,754,2.005,755,2.005,756,1.827,757,2.005,758,2.005,759,2.005,760,2.005,761,2.732,762,2.005,763,2.005,764,2.005,765,2.005,766,2.005,767,2.005,768,2.005,769,2.005,770,2.005,771,2.005,772,2.005,773,2.005,774,2.005,775,2.005,776,2.005,777,2.005,778,2.005,779,4.062,780,3.233,781,2.005,782,2.005,783,3.233,784,3.233,785,2.005,786,1.113,787,2.005,788,2.005,789,2.005,790,2.005,791,2.005,792,2.005,793,2.005,794,2.005,795,1.694,796,2.005,797,2.005,798,2.005,799,2.005,800,2.005,801,2.005,802,2.005,803,2.005,804,2.005,805,2.005,806,2.005,807,2.005,808,2.005,809,2.005,810,2.005,811,2.005,812,2.005,813,1.827,814,4.062,815,2.005,816,2.005,817,1.588,818,2.005,819,2.005,820,3.233,821,3.233,822,2.19,823,1.827,824,2.005,825,2.005,826,2.005]],["title/interfaces/AuthState.html",[516,2.134,522,3.043]],["body/interfaces/AuthState.html",[3,0.095,4,0.095,5,0.095,28,1.408,32,0.386,34,0.388,35,0.862,45,0.009,51,0.151,53,3.857,54,2.682,55,3.38,56,2.975,57,0.134,78,3.734,79,1.663,80,3.857,81,3.857,82,3.987,83,3.847,135,0.006,136,0.008,137,0.006,176,1.553,181,3.407,366,2.96,516,2.87,517,3.671,522,5.486,827,4.709,828,4.709,829,5.167]],["title/injectables/AuthenticationEffects.html",[15,2.061,626,1.155]],["body/injectables/AuthenticationEffects.html",[0,0.096,1,2.42,3,0.029,4,0.029,5,0.029,7,1.386,8,1.335,11,1.413,12,2.736,13,2.924,14,1.596,15,1.433,17,2.357,19,2.695,20,2.515,22,1.66,23,2.329,28,2.02,32,0.344,34,0.119,35,0.361,37,1.746,39,0.2,42,0.325,44,0.64,45,0.01,46,0.583,47,0.34,49,1.247,50,0.825,51,0.151,52,0.29,55,3.026,56,0.915,57,0.033,59,0.883,62,1.261,63,1.792,64,2.171,66,3.211,68,1.596,69,1.853,72,2.695,74,3.374,75,1.853,81,3.124,83,1.483,86,2.621,89,0.475,90,0.475,91,0.451,93,1.66,97,2.825,100,1.911,102,3.306,103,1.537,104,3.036,106,1.66,109,1.596,113,1.66,115,1.662,119,2.515,123,1.66,124,1.024,126,2.515,128,2.515,130,2.804,131,1.66,134,3.826,135,0.004,136,0.003,137,0.002,144,0.825,160,0.915,161,1.849,163,0.883,176,1.56,180,1.805,240,1.702,279,1.176,282,0.822,284,0.825,290,3.687,296,0.478,304,0.338,305,0.6,306,0.729,307,1.076,308,0.633,309,0.729,314,1.448,320,1.448,324,0.633,350,1.997,351,3.811,352,3.687,366,1.611,379,2.256,489,1.03,521,4.174,626,0.802,630,0.95,631,2.339,643,3.137,652,3.419,673,2.433,674,2.433,677,4.451,682,1.897,700,2.433,711,3.691,736,2.433,741,2.256,742,4.127,756,3.687,786,2.247,817,1.259,830,0.799,831,1.589,832,3.029,833,3.917,834,3.365,835,4.59,836,1.803,837,3.029,838,3.029,839,3.029,840,3.029,841,3.029,842,4.59,843,3.029,844,3.029,845,1.803,846,3.029,847,4.045,848,3.029,849,4.045,850,3.029,851,3.165,852,4.831,853,1.803,854,6.183,855,5.542,856,3.029,857,5.542,858,3.029,859,3.029,860,3.029,861,3.47,862,2.919,863,3.029,864,2.237,865,3.029,866,3.029,867,3.029,868,3.029,869,3.029,870,4.59,871,4.59,872,4.59,873,4.932,874,3.687,875,4.59,876,4.881,877,4.59,878,5.542,879,5.542,880,3.029,881,4.966,882,4.59,883,4.59,884,4.59,885,4.59,886,4.59,887,4.59,888,4.59,889,4.59,890,5.542,891,5.118,892,4.59,893,6.644,894,4.59,895,5.542,896,4.59,897,3.029,898,3.029,899,3.917,900,3.029,901,3.917,902,3.029,903,3.029,904,2.256,905,1.897,906,2.433,907,3.029,908,3.029,909,3.029,910,3.029,911,1.803,912,3.029,913,3.029,914,2.433,915,3.029,916,4.59,917,3.029,918,2.115,919,2.433,920,3.029,921,1.803,922,3.029,923,3.029,924,3.029,925,5.118,926,3.029,927,1.803,928,2.433,929,3.029,930,3.029,931,3.029,932,3.029,933,3.029,934,3.029,935,1.803,936,3.029,937,3.029,938,3.029,939,3.029,940,3.029,941,3.029,942,3.029,943,1.803,944,3.029,945,2.67,946,1.076,947,0.988,948,1.803,949,1.589,950,1.129,951,1.448,952,1.343,953,5.118,954,1.803,955,1.803,956,1.803]],["title/classes/Card.html",[0,0.232,157,0.702]],["body/classes/Card.html",[0,0.343,2,0.829,3,0.079,4,0.079,5,0.079,11,2.222,32,0.22,38,1.621,39,0.477,42,0.257,44,0.565,45,0.009,46,0.484,47,0.548,51,0.15,57,0.134,58,1.013,79,1.717,89,1.012,90,1.012,91,0.96,135,0.005,136,0.007,137,0.005,144,3.877,157,1.039,158,3.398,160,2.481,161,1.361,163,2.394,177,3.662,186,2.752,205,3.549,219,2.166,220,2.036,228,3.301,263,2.679,281,5.714,621,5.061,957,3.642,958,4.89,959,4.758,960,5.796,961,6.36,962,6.36,963,6.36,964,6.22,965,6.36,966,6.36,967,6.36,968,6.36,969,5.038,970,4.89,971,5.684,972,5.796,973,3.928,974,3.928,975,3.928,976,4.31,977,3.928]],["title/components/CardComponent.html",[259,0.996,390,1.662]],["body/components/CardComponent.html",[0,0.209,3,0.064,4,0.09,5,0.09,32,0.344,33,0.967,34,0.26,35,0.662,36,1.052,39,0.26,42,0.424,44,0.455,45,0.01,46,0.638,47,0.441,49,0.738,50,0.585,51,0.159,52,0.634,57,0.073,79,1.209,98,1.151,105,1.211,110,1.181,115,2.037,135,0.004,136,0.006,137,0.004,146,2.005,149,2.721,150,2.767,157,1.319,158,1.742,180,0.877,197,2.721,218,3.397,219,1.742,220,1.638,232,3.554,233,1.151,235,1.926,259,1.473,260,1.5,261,2.314,262,1.638,263,2.155,264,1.688,265,1.688,267,2.948,268,1.688,269,3.784,271,3.48,273,2.386,276,5.177,279,2.102,281,2.93,282,1.509,283,3.204,296,1.472,297,2.12,304,0.738,308,1.381,309,1.589,310,2.746,324,1.381,337,3.159,360,1.638,361,1.589,362,1.638,363,1.638,364,1.638,365,1.638,366,1.381,367,1.589,368,1.638,369,1.638,370,1.638,371,1.589,372,1.638,373,1.589,374,1.638,375,1.638,376,1.638,377,1.638,378,3.159,381,1.344,382,2.386,383,2.386,384,1.688,385,3.006,386,1.688,387,1.688,388,1.459,389,1.688,390,2.671,391,1.688,392,1.459,393,2.386,394,1.5,395,1.688,396,1.459,397,1.688,398,1.5,399,1.459,400,1.688,401,1.5,402,1.688,403,1.5,404,1.688,405,1.459,406,1.688,407,1.688,408,1.688,409,1.5,410,1.688,411,1.5,412,2.005,413,1.688,414,1.5,415,1.688,416,1.5,417,1.181,418,1.688,419,1.688,489,2.247,521,4.579,740,2.721,978,3.467,979,6.446,980,5.558,981,5.681,982,6.446,983,3.48,984,5.681,985,3.934,986,5.558,987,3.934,988,3.934,989,3.934,990,3.934,991,3.934,992,3.467,993,3.934,994,3.934,995,3.934,996,5.558,997,4.899,998,3.934,999,3.467,1000,3.467,1001,3.467,1002,5.558,1003,3.934,1004,3.934,1005,5.558,1006,3.934,1007,4.899,1008,3.934,1009,3.934,1010,3.934,1011,7.005,1012,3.934,1013,5.681,1014,3.934,1015,5.681,1016,3.934,1017,3.934,1018,3.934,1019,3.467,1020,3.934,1021,3.934,1022,3.934,1023,3.934,1024,3.934]],["title/components/CardDetailsComponent.html",[259,0.996,392,1.616]],["body/components/CardDetailsComponent.html",[0,0.247,3,0.075,4,0.075,5,0.075,11,1.919,32,0.337,33,1.084,34,0.307,35,0.742,39,0.307,42,0.396,44,0.537,45,0.01,46,0.696,47,0.521,51,0.168,52,0.748,57,0.086,98,1.359,110,1.394,115,2.086,135,0.005,136,0.007,137,0.005,157,1.412,158,3.115,159,1.822,176,1.23,181,1.876,259,1.608,260,1.771,261,2.594,262,1.933,264,1.993,265,1.993,267,3.217,268,1.993,269,3.853,273,2.675,279,1.394,282,1.692,283,3.438,284,2.124,296,1.23,297,1.771,304,0.871,308,1.63,309,1.876,324,1.63,381,1.587,382,2.675,383,2.675,384,1.993,385,3.226,386,1.993,387,1.993,388,1.722,389,1.993,390,1.771,391,1.993,392,2.787,393,2.675,394,1.771,395,1.993,396,1.722,397,1.993,398,1.771,399,1.722,400,1.993,401,1.771,402,1.993,403,1.771,404,1.993,405,1.722,406,1.993,407,1.993,408,1.993,409,1.771,410,1.993,411,1.771,412,2.248,413,1.993,414,1.771,415,1.993,416,1.771,417,1.394,418,1.993,419,1.993,969,5.473,1025,6.909,1026,5.839,1027,4.092,1028,5.492,1029,4.183,1030,6.231,1031,4.644,1032,4.644,1033,4.644,1034,4.644,1035,3.458,1036,4.644,1037,4.644,1038,4.092,1039,4.644,1040,4.644,1041,4.644,1042,4.644,1043,4.092,1044,4.644,1045,4.092,1046,4.644]],["title/injectables/CardEffects.html",[538,3.043,626,1.155]],["body/injectables/CardEffects.html",[0,0.278,3,0.085,4,0.085,5,0.085,8,0.885,17,2.125,28,1.615,32,0.302,34,0.345,35,0.801,39,0.345,42,0.354,44,0.603,45,0.01,46,0.516,47,0.585,49,0.979,50,0.777,51,0.181,52,0.84,57,0.097,89,0.819,90,0.819,91,0.777,97,3.009,115,2.154,135,0.005,136,0.007,137,0.005,157,1.311,159,2.048,161,1.452,180,1.755,279,2.019,284,2.387,304,0.979,305,1.737,306,2.109,308,1.832,309,2.109,324,1.832,333,4.212,538,4.697,626,1.782,630,2.749,822,3.115,830,2.311,834,4.844,851,2.98,852,4.446,861,4.212,862,3.544,864,2.98,904,5.011,905,4.925,946,3.115,947,2.859,1047,4.599,1048,5.981,1049,4.696,1050,5.218,1051,6.728,1052,5.011,1053,6.728,1054,6.728,1055,6.728,1056,6.728,1057,5.218,1058,4.191,1059,3.44,1060,2.648,1061,2.98,1062,2.98,1063,4.191,1064,4.191,1065,4.191,1066,4.191]],["title/interfaces/CardFeedState.html",[516,2.134,525,3.043]],["body/interfaces/CardFeedState.html",[3,0.079,4,0.079,5,0.079,7,2.23,11,2.52,24,2.092,28,1.17,32,0.358,34,0.322,35,0.766,45,0.01,51,0.159,55,2.923,57,0.142,79,1.535,124,1.777,135,0.005,136,0.007,137,0.005,146,2.599,157,1.036,161,2.133,176,1.705,180,1.087,181,1.97,186,2.455,195,1.913,218,3.752,219,2.159,220,2.029,352,5.169,354,5.225,417,2.163,495,4.674,516,2.386,517,3.052,525,5.03,585,3.214,586,3.214,587,2.91,588,2.91,918,4.493,1067,3.915,1068,6.436,1069,7.967,1070,7.355,1071,5.169,1072,7.355,1073,7.663,1074,4.493,1075,6.436,1076,6.436,1077,6.436,1078,6.436,1079,6.436,1080,5.169,1081,6.436,1082,5.826,1083,6.436,1084,6.436,1085,6.436,1086,5.672,1087,5.672,1088,4.296,1089,4.875,1090,4.875,1091,4.875,1092,4.875,1093,3.915,1094,4.296,1095,3.915,1096,4.296]],["title/components/CardListComponent.html",[259,0.996,394,1.662]],["body/components/CardListComponent.html",[0,0.278,3,0.085,4,0.085,5,0.085,32,0.335,34,0.346,36,0.924,39,0.493,42,0.392,45,0.009,46,0.667,51,0.14,57,0.097,79,1.264,98,1.53,110,1.569,135,0.005,136,0.007,137,0.005,149,3.297,150,3.199,157,1.343,198,3.691,218,3.301,219,2.315,220,2.176,248,4.083,259,1.704,260,1.994,261,2.804,262,2.176,264,2.244,265,2.244,268,2.244,269,3.898,273,2.891,304,0.981,381,1.786,382,2.891,383,2.891,384,2.244,385,3.379,386,2.244,387,2.244,388,1.938,389,2.244,390,1.994,391,2.244,392,1.938,393,2.891,394,3.002,395,2.244,396,1.938,397,2.244,398,1.994,399,1.938,400,2.244,401,1.994,402,2.244,403,1.994,404,2.244,405,1.938,406,2.244,407,2.244,408,2.244,409,1.994,410,2.244,411,1.994,412,2.43,413,2.244,414,1.994,415,2.244,416,1.994,417,1.569,418,2.244,419,2.244,1097,5.496,1098,6.322,1099,4.607,1100,6.736,1101,5.986,1102,6.736,1103,5.227]],["title/injectables/CardOperationEffects.html",[540,3.043,626,1.155]],["body/injectables/CardOperationEffects.html",[0,0.212,3,0.065,4,0.065,5,0.065,8,0.951,12,2.345,17,2.119,28,1.94,32,0.333,34,0.264,35,0.668,39,0.264,42,0.342,44,0.461,45,0.01,46,0.394,47,0.447,49,1.445,50,0.835,51,0.175,52,0.642,57,0.074,59,1.951,66,3.024,89,0.625,90,0.625,91,0.593,97,2.623,115,1.99,124,1.802,135,0.004,136,0.006,137,0.004,157,1.135,161,1.807,176,1.486,180,1.895,211,3.178,225,1.885,234,3.073,236,3.178,237,3.557,238,1.259,255,2.184,279,1.684,284,1.823,304,0.748,305,1.326,306,1.61,307,2.379,308,1.399,309,1.61,324,1.399,333,4.822,417,1.196,540,3.916,580,2.184,587,2.379,588,2.379,589,2.968,626,1.486,630,2.099,830,1.765,834,4.52,851,3.204,852,4.433,861,4.411,862,4.256,864,3.708,905,5.058,914,5.658,946,2.379,947,2.184,1049,4.206,1058,3.201,1104,6.209,1105,3.512,1106,5.214,1107,3.985,1108,6.209,1109,6.209,1110,4.944,1111,5.61,1112,5.61,1113,7.045,1114,5.61,1115,7.045,1116,5.61,1117,5.61,1118,5.61,1119,5.61,1120,5.61,1121,5.658,1122,7.045,1123,3.985,1124,5.61,1125,5.61,1126,4.944,1127,5.61,1128,5.61,1129,3.985,1130,3.201,1131,3.201,1132,2.968]],["title/injectables/CardService.html",[626,1.155,1049,2.602]],["body/injectables/CardService.html",[0,0.232,3,0.071,4,0.097,5,0.071,17,2.357,28,1.433,32,0.356,34,0.288,35,0.71,36,0.934,38,1.413,39,0.288,42,0.427,44,0.846,45,0.01,46,0.725,47,0.821,51,0.174,55,2.276,57,0.081,71,2.133,79,1.522,80,1.993,124,1.331,135,0.005,136,0.006,137,0.005,157,0.702,159,1.71,176,1.154,180,1.842,186,1.662,205,2.958,243,1.45,279,1.308,282,1.62,296,1.939,304,0.818,305,1.45,324,1.529,446,2.489,456,3.245,492,2.211,493,2.728,626,1.581,627,4.584,632,5.077,633,3.245,643,4.019,688,3.499,795,4.445,813,3.499,830,1.93,1049,3.563,1060,3.028,1133,3.84,1134,6.807,1135,6.807,1136,5.968,1137,7.321,1138,5.968,1139,3.499,1140,5.968,1141,5.968,1142,7.669,1143,4.357,1144,5.968,1145,4.357,1146,5.968,1147,4.357,1148,4.357,1149,6.807,1150,4.357,1151,4.357,1152,4.357,1153,4.357,1154,4.357,1155,4.357,1156,3.499,1157,3.499,1158,4.357,1159,4.357,1160,4.357,1161,5.968,1162,4.357,1163,4.357,1164,4.357,1165,4.357,1166,4.357,1167,4.357,1168,4.357,1169,4.357,1170,4.357,1171,4.357,1172,4.357,1173,3.84,1174,4.357,1175,3.499,1176,4.357,1177,3.499,1178,4.357,1179,4.357,1180,3.84,1181,4.357,1182,4.357,1183,4.357,1184,4.357,1185,4.357,1186,4.357,1187,4.357,1188,4.357,1189,4.357,1190,4.357,1191,4.357,1192,4.357,1193,4.357,1194,4.357,1195,4.357,1196,4.357,1197,4.357,1198,4.357]],["title/interfaces/CardState.html",[516,2.134,523,3.043]],["body/interfaces/CardState.html",[3,0.103,4,0.103,5,0.103,32,0.365,34,0.419,35,0.904,45,0.009,51,0.132,57,0.141,79,1.526,124,1.922,135,0.007,136,0.008,137,0.007,146,2.933,157,1.357,159,2.488,176,1.679,181,3.069,195,2.488,354,5.396,516,3.104,517,3.97,523,5.677,1071,6.922,1199,5.092,1200,5.092]],["title/modules/CardsModule.html",[420,1.761,1201,3.043]],["body/modules/CardsModule.html",[0,0.262,3,0.08,4,0.105,5,0.105,36,0.676,42,0.259,45,0.01,51,0.179,57,0.091,73,1.992,105,1.518,135,0.005,136,0.007,137,0.005,180,1.1,202,2.783,233,1.443,282,1.339,296,1.306,304,0.925,315,2.943,316,2.943,360,2.052,361,1.992,362,2.052,363,2.052,364,2.052,365,2.052,366,1.731,367,1.992,368,2.052,369,2.052,370,2.052,371,1.992,372,2.052,373,1.992,374,2.052,375,2.052,376,2.052,377,2.052,381,1.685,390,3.354,392,3.261,396,3.261,398,3.354,420,1.992,422,2.331,423,2.701,424,4.325,425,2.816,426,4.595,427,3.676,435,3.703,436,2.943,438,2.597,442,3.817,447,4.06,450,2.816,464,5.208,1026,3.672,1029,3.29,1201,6.305,1202,4.345,1203,4.345,1204,4.345,1205,4.345,1206,5.413,1207,4.93,1208,5.819,1209,4.93,1210,5.819,1211,4.93,1212,4.345,1213,4.345,1214,4.93,1215,4.93,1216,3.96,1217,4.345]],["title/classes/CheckAuthenticationStatus.html",[0,0.232,63,1.994]],["body/classes/CheckAuthenticationStatus.html",[0,0.415,1,2.728,2,0.549,3,0.053,4,0.053,5,0.104,6,1.643,7,1.481,8,1.433,9,3.958,10,1.705,11,1.968,12,2.898,13,3.39,14,3.601,15,1.531,16,3.294,17,2.046,18,3.294,19,3.127,20,2.644,21,1.849,22,1.774,23,3.244,24,2.476,25,3.038,26,3.294,27,3.038,28,1.385,29,2.756,30,3.16,31,2.756,32,0.374,33,1.357,34,0.214,35,0.574,36,0.791,37,1.736,38,1.417,39,0.214,41,2.362,42,0.17,45,0.01,49,0.607,50,0.482,51,0.12,52,0.521,53,2.638,54,1.481,55,2.2,56,1.643,57,0.149,58,0.671,59,1.585,60,2.728,61,1.585,62,2.009,63,2.924,64,1.531,65,3.16,66,3.408,67,3.928,68,3.367,69,2.728,70,1.774,71,2.362,72,2.924,73,2.331,74,3.233,75,2.728,76,1.448,77,2.001,78,1.434,79,1.283,80,1.481,81,1.481,82,1.531,83,1.585,84,3.294,85,3.294,86,2.728,87,3.294,88,1.849,89,1.198,90,1.198,91,1.136,92,1.849,93,2.644,94,1.849,95,1.849,96,1.705,97,1.308,98,0.947,99,1.774,100,2.401,101,2.756,102,2.728,103,2.448,104,1.774,105,0.997,106,1.774,107,1.774,108,1.643,109,3.367,110,0.972,111,1.849,112,1.705,113,1.774,114,2.756,115,1.247,116,1.849,117,1.849,118,3.651,119,1.774,120,1.849,121,2.756,122,1.849,123,2.644,124,0.722,125,1.849,126,1.774,127,1.849,128,1.774,129,1.849,130,2.644,131,2.644,132,1.849,133,1.849,134,1.705,135,0.003,136,0.005,137,0.003,1218,3.237]],["title/classes/CheckTokenResponse.html",[0,0.232,817,3.043]],["body/classes/CheckTokenResponse.html",[0,0.331,2,0.387,3,0.037,4,0.037,5,0.037,7,1.044,9,1.158,12,2.604,13,1.739,17,1.864,23,2.343,24,0.979,27,1.202,28,1.767,32,0.315,34,0.151,35,0.438,36,1.074,37,0.998,39,0.35,41,3.196,42,0.279,44,0.264,45,0.01,46,0.226,47,0.732,51,0.158,52,0.367,53,2.113,54,1.044,55,1.402,57,0.115,58,0.473,64,1.739,66,0.979,71,1.8,78,2.346,79,1.563,80,3.536,81,3.846,82,3.088,83,2.593,96,2.79,97,2.834,102,2.184,105,1.422,108,2.688,115,1.604,124,0.509,135,0.002,136,0.004,137,0.002,146,1.666,161,0.635,176,2.047,180,1.884,181,1.866,184,1.402,186,1.402,195,1.813,202,3.09,205,2.909,228,1.044,233,1.7,244,0.801,279,2.161,297,0.87,304,0.428,305,0.759,306,0.922,307,1.362,308,0.801,309,0.922,323,1.593,324,0.801,351,1.699,366,1.859,412,2.095,446,1.303,492,1.158,493,1.428,613,3.945,614,1.593,615,1.832,616,5.472,617,2.011,618,2.011,621,2.757,626,0.974,627,3.316,628,2.011,629,1.699,630,1.202,631,1.362,632,3.316,633,1.699,634,1.699,635,2.011,636,6.121,637,1.832,638,1.428,639,1.362,640,1.832,641,2.738,642,1.832,643,1.158,644,2.011,645,2.011,646,4.07,647,2.011,648,2.011,649,2.011,650,2.011,651,2.011,652,5.363,653,2.011,654,2.011,655,2.011,656,2.011,657,2.011,658,2.011,659,2.011,660,5.472,661,4.668,662,3.241,663,5.119,664,2.011,665,3.241,666,2.011,667,3.241,668,5.119,669,3.241,670,2.011,671,5.472,672,2.011,673,1.832,674,3.709,675,2.011,676,3.241,677,1.832,678,1.699,679,2.011,680,3.241,681,2.011,682,3.316,683,2.011,684,3.241,685,2.011,686,4.07,687,2.011,688,5.456,689,4.07,690,4.07,691,4.07,692,4.07,693,4.07,694,4.07,695,2.011,696,2.011,697,2.011,698,2.011,699,3.241,700,1.832,701,3.44,702,3.241,703,3.241,704,3.241,705,2.011,706,2.011,707,2.011,708,4.07,709,4.07,710,2.953,711,2.195,712,2.011,713,3.241,714,2.011,715,2.953,716,3.241,717,3.241,718,2.011,719,2.011,720,3.241,721,3.241,722,2.011,723,2.011,724,2.011,725,2.011,726,2.011,727,2.011,728,2.011,729,2.011,730,2.011,731,2.011,732,2.011,733,2.011,734,2.011,735,2.011,736,2.953,737,5.119,738,2.011,739,3.241,740,2.261,741,3.945,742,3.44,743,2.011,744,2.011,745,2.011,746,2.011,747,3.241,748,2.011,749,3.241,750,2.011,751,3.241,752,2.011,753,2.011,754,2.011,755,2.011,756,1.832,757,2.011,758,2.011,759,2.011,760,2.011,761,2.738,762,2.011,763,2.011,764,2.011,765,2.011,766,2.011,767,2.011,768,2.011,769,2.011,770,2.011,771,2.011,772,2.011,773,2.011,774,2.011,775,2.011,776,2.011,777,2.011,778,2.011,779,4.07,780,3.241,781,2.011,782,2.011,783,3.241,784,3.241,785,2.011,786,1.117,787,2.011,788,2.011,789,2.011,790,2.011,791,2.011,792,2.011,793,2.011,794,2.011,795,1.699,796,2.011,797,2.011,798,2.011,799,2.011,800,2.011,801,2.011,802,2.011,803,2.011,804,2.011,805,2.011,806,2.011,807,2.011,808,2.011,809,2.011,810,2.011,811,2.011,812,2.011,813,1.832,814,4.668,815,3.241,816,3.241,817,2.567,818,2.011,819,2.011,820,3.241,821,3.241,822,2.195,823,1.832,824,2.011,825,2.011,826,2.011,1219,2.281,1220,2.281,1221,2.281,1222,2.281,1223,2.281]],["title/injectables/ConfigEffects.html",[570,3.043,626,1.155]],["body/injectables/ConfigEffects.html",[0,0.241,3,0.074,4,0.074,5,0.074,8,0.769,17,2.219,28,1.787,32,0.312,34,0.3,35,0.73,39,0.3,42,0.366,44,0.524,45,0.01,46,0.449,47,0.508,49,0.85,50,0.675,51,0.178,52,0.73,55,2.338,57,0.084,89,0.711,90,0.711,91,0.675,97,3.142,115,2.071,135,0.005,136,0.006,137,0.005,161,1.262,180,1.66,205,2.807,224,2.685,279,2.085,284,2.073,304,0.85,305,1.508,306,1.831,308,1.591,309,1.831,319,3.806,320,3.64,323,3.164,324,1.591,333,3.838,417,1.36,519,3.502,569,3.995,570,4.28,626,1.624,630,2.388,786,2.219,822,2.706,830,2.007,834,4.68,851,3.502,852,4.642,861,4.66,862,3.92,864,2.589,904,4.566,905,4.66,946,2.706,947,2.483,949,3.995,950,2.838,1048,5.579,1052,4.566,1064,3.64,1065,3.64,1066,3.64,1175,4.924,1224,3.995,1225,6.784,1226,4.907,1227,6.947,1228,4.533,1229,6.131,1230,6.131,1231,6.131,1232,6.131,1233,6.131,1234,4.533,1235,7.443,1236,6.131,1237,4.533,1238,5.403,1239,3.995,1240,4.533,1241,3.995,1242,2.589,1243,2.589,1244,3.64,1245,3.376,1246,4.533,1247,4.533,1248,4.533,1249,6.131,1250,6.131,1251,6.131,1252,6.131,1253,4.533]],["title/injectables/ConfigService.html",[626,1.155,1226,2.874]],["body/injectables/ConfigService.html",[0,0.317,3,0.097,4,0.097,5,0.097,17,2.258,32,0.328,34,0.394,35,0.87,39,0.394,42,0.416,44,0.688,45,0.009,46,0.589,47,0.668,51,0.182,52,0.959,57,0.11,79,1.372,115,1.539,135,0.006,136,0.008,137,0.006,180,1.328,279,2.375,282,1.985,296,1.577,304,1.117,305,1.982,308,2.09,309,2.406,318,4.157,324,2.09,446,3.401,492,3.022,493,3.728,626,1.937,627,5.397,643,3.022,830,2.637,1139,4.783,1226,4.821,1254,5.248,1255,7.913,1256,8.252,1257,7.312,1258,5.955,1259,4.783,1260,4.783,1261,4.783,1262,5.955,1263,5.955,1264,5.955]],["title/interfaces/ConfigState.html",[516,2.134,524,3.043]],["body/interfaces/ConfigState.html",[3,0.098,4,0.098,5,0.098,32,0.382,34,0.4,35,0.879,45,0.009,51,0.126,57,0.147,79,1.495,124,1.898,135,0.006,136,0.008,137,0.006,146,3.122,157,0.974,159,2.374,176,1.955,181,2.445,195,2.897,205,3.22,335,4.859,347,6.336,354,5.326,516,2.962,517,3.788,519,4.739,524,5.563,786,2.962,1225,6.833,1245,4.506,1265,4.859,1266,6.05,1267,4.859]],["title/injectables/CustomRouterEffects.html",[557,3.043,626,1.155]],["body/injectables/CustomRouterEffects.html",[0,0.278,3,0.085,4,0.085,5,0.085,8,0.886,17,2.127,28,1.89,32,0.302,34,0.493,35,0.802,39,0.346,42,0.355,44,0.604,45,0.01,46,0.517,47,0.586,49,0.981,50,0.778,51,0.182,52,0.842,57,0.097,89,0.82,90,0.82,91,0.778,97,3.011,115,2.193,135,0.005,136,0.007,137,0.005,176,1.784,180,1.756,231,2.559,279,2.022,284,2.391,304,0.981,305,1.74,306,2.112,308,1.835,309,2.112,324,1.835,417,1.569,529,3.446,557,4.703,626,1.784,830,2.315,834,4.846,847,5.936,851,2.985,852,4.449,864,2.985,946,3.121,947,2.864,1049,4.699,1052,5.017,1058,4.198,1060,2.652,1063,4.198,1130,4.198,1131,4.198,1268,6.568,1269,4.607,1270,7.453,1271,5.227,1272,6.736,1273,6.736,1274,7.453,1275,6.736,1276,6.736,1277,6.736,1278,6.736,1279,7.872,1280,6.736,1281,5.227,1282,5.227]],["title/classes/CustomRouterStateSerializer.html",[0,0.232,1283,3.043]],["body/classes/CustomRouterStateSerializer.html",[0,0.345,2,0.836,3,0.08,4,0.105,5,0.08,11,2.231,13,3.066,28,1.184,32,0.291,33,1.128,34,0.326,38,1.293,39,0.326,42,0.341,44,0.89,45,0.01,46,0.642,47,0.727,51,0.135,57,0.134,79,0.925,86,2.331,89,0.774,90,0.774,91,0.734,115,1.676,135,0.005,136,0.007,137,0.005,176,2.039,180,1.446,184,2.936,202,2.116,228,2.255,243,2.158,279,2.175,282,1.76,296,1.919,412,1.778,489,2.816,521,2.943,529,3.251,530,5.058,578,3.442,678,3.672,701,3.672,711,5.304,761,3.672,786,2.413,876,3.442,1283,4.527,1284,3.672,1285,6.182,1286,6.484,1287,6.484,1288,5.715,1289,6.784,1290,4.93,1291,5.715,1292,6.422,1293,4.93,1294,5.715,1295,3.96,1296,6.182,1297,3.96,1298,3.96,1299,4.345,1300,5.819,1301,4.345,1302,4.345,1303,5.208,1304,3.96,1305,4.345,1306,4.345,1307,4.345,1308,4.345,1309,5.715,1310,4.345,1311,4.345,1312,4.345,1313,4.345,1314,4.345,1315,4.345,1316,4.345,1317,4.345,1318,4.345]],["title/classes/Detail.html",[0,0.232,158,1.931]],["body/classes/Detail.html",[0,0.364,2,0.908,3,0.087,4,0.087,5,0.087,11,1.649,32,0.24,38,1.633,39,0.499,42,0.282,44,0.619,45,0.01,46,0.53,47,0.601,51,0.157,57,0.14,58,1.11,79,1.7,89,1.074,90,1.074,91,1.018,135,0.006,136,0.007,137,0.006,144,3.84,157,0.863,158,3.339,160,2.718,161,1.491,163,2.622,177,2.718,186,2.043,205,3.21,219,2.372,220,2.23,228,2.45,263,4.131,281,5.916,957,3.989,959,3.531,960,4.302,961,4.721,962,4.721,963,4.721,964,5.615,965,4.721,966,4.721,967,4.721,968,4.721,969,3.739,971,4.721,972,6.742,973,4.302,974,4.302,975,4.302,976,6.645,977,6.055,1319,5.356,1320,5.356]],["title/components/DetailComponent.html",[259,0.996,396,1.616]],["body/components/DetailComponent.html",[0,0.175,3,0.054,4,0.054,5,0.054,8,1.266,11,1.014,28,1.173,32,0.335,33,0.85,34,0.218,35,0.582,36,0.799,38,1.04,39,0.218,42,0.436,44,0.673,45,0.01,46,0.682,47,0.654,49,0.917,50,0.727,51,0.155,57,0.061,79,1.093,98,0.964,103,2.48,110,0.989,135,0.003,136,0.005,137,0.003,149,2.392,150,2.501,157,1.235,158,3.397,159,1.293,164,3.156,176,2.032,180,0.735,184,1.256,186,1.256,187,1.671,195,1.918,197,1.612,235,1.612,243,1.096,259,1.474,260,1.256,261,2.035,262,1.371,264,2.098,265,1.414,267,2.665,268,1.414,269,3.699,273,2.098,279,2.458,282,1.327,283,2.949,296,1.911,297,2.848,304,0.618,305,1.096,324,1.156,361,1.975,381,1.126,382,2.098,383,2.767,384,1.414,385,2.767,386,1.414,387,1.414,388,1.221,389,1.414,390,1.256,391,1.414,392,1.221,393,2.098,394,1.256,395,1.414,396,2.391,397,1.414,398,1.256,399,1.221,400,1.414,401,1.256,402,1.414,403,1.256,404,1.414,405,1.221,406,1.414,407,1.414,408,1.414,409,1.256,410,1.414,411,1.256,412,1.763,413,1.414,414,1.256,415,1.414,416,1.256,417,0.989,418,1.414,419,1.414,440,2.299,441,2.172,593,3.648,786,1.612,959,2.172,960,3.925,983,3.06,1029,3.271,1038,2.903,1043,2.903,1045,2.903,1106,2.645,1156,3.925,1206,4.251,1216,2.645,1217,2.903,1321,2.903,1322,4.887,1323,5.827,1324,5.827,1325,4.887,1326,4.887,1327,6.447,1328,6.447,1329,6.447,1330,5.827,1331,3.294,1332,6.447,1333,4.68,1334,4.68,1335,5.136,1336,5.682,1337,4.887,1338,3.294,1339,3.294,1340,4.887,1341,5.827,1342,7.214,1343,3.294,1344,3.294,1345,3.294,1346,3.294,1347,3.294,1348,3.294,1349,3.294,1350,5.827,1351,3.294,1352,4.887,1353,3.294,1354,3.294,1355,3.294,1356,3.294,1357,1.805,1358,2.903,1359,3.294,1360,3.294,1361,3.294,1362,3.294,1363,3.294,1364,3.294,1365,3.294,1366,3.294,1367,3.294,1368,3.294,1369,3.294,1370,3.294,1371,4.887,1372,4.887,1373,3.294,1374,3.294,1375,3.294,1376,3.294,1377,3.294,1378,3.294,1379,3.294,1380,3.294,1381,3.294,1382,3.294,1383,3.294,1384,3.294,1385,4.887,1386,3.294,1387,2.903,1388,3.294,1389,3.294,1390,3.294,1391,3.294,1392,3.294,1393,3.294,1394,3.294,1395,3.294,1396,3.294,1397,4.887,1398,3.294,1399,3.294,1400,3.294,1401,3.294,1402,4.887,1403,3.294,1404,3.294,1405,3.294,1406,3.294,1407,3.294,1408,3.294,1409,3.294,1410,3.294,1411,3.294,1412,2.645,1413,3.294,1414,3.294,1415,3.294,1416,3.294,1417,3.294]],["title/components/DetailsComponent.html",[259,0.996,398,1.662]],["body/components/DetailsComponent.html",[0,0.221,3,0.068,4,0.068,5,0.068,32,0.35,33,1.006,34,0.275,35,0.688,36,0.571,39,0.439,42,0.436,44,0.668,45,0.01,46,0.71,47,0.648,51,0.138,57,0.077,66,1.786,79,1.085,98,1.217,110,1.249,135,0.004,136,0.006,137,0.004,149,2.83,150,2.481,157,1.315,158,2.56,159,1.633,180,0.928,195,1.633,259,1.518,260,1.587,261,2.406,262,1.732,264,1.786,265,1.786,268,1.786,269,3.808,273,2.481,279,2.344,282,1.569,296,1.901,297,2.978,304,0.781,350,2.743,381,1.422,382,2.481,383,2.481,384,1.786,385,3.081,386,1.786,387,1.786,388,1.543,389,1.786,390,1.587,391,1.786,392,1.543,393,2.481,394,1.587,395,1.786,396,2.797,397,1.786,398,2.738,399,1.543,400,1.786,401,1.587,402,1.786,403,1.587,404,1.786,405,1.543,406,1.786,407,1.786,408,1.786,409,1.587,410,1.786,411,1.587,412,2.085,413,1.786,414,1.587,415,1.786,416,1.587,417,1.249,418,1.786,419,1.786,593,2.604,740,2.036,786,2.036,851,2.376,945,3.666,969,5.266,981,5.855,983,3.619,984,5.855,992,3.666,997,5.094,1028,5.094,1387,3.666,1418,3.666,1419,5.855,1420,6.643,1421,6.327,1422,5.781,1423,5.781,1424,7.179,1425,5.781,1426,4.16,1427,4.16,1428,5.781,1429,7.179,1430,4.16,1431,4.16,1432,5.781,1433,4.16,1434,4.16,1435,6.643,1436,5.781,1437,4.16,1438,4.16,1439,4.16,1440,4.16,1441,5.781,1442,4.16,1443,4.16,1444,4.16,1445,4.16,1446,5.781,1447,3.666,1448,5.781,1449,4.16,1450,4.16,1451,4.16,1452,4.16,1453,4.16,1454,5.781,1455,4.16,1456,4.16,1457,5.781]],["title/components/FeedComponent.html",[259,0.996,399,1.616]],["body/components/FeedComponent.html",[0,0.242,3,0.074,4,0.1,5,0.1,17,2.221,32,0.334,33,1.069,34,0.301,35,0.731,36,0.624,39,0.301,42,0.41,44,0.525,45,0.01,46,0.689,47,0.51,51,0.17,52,0.732,57,0.084,98,1.33,105,1.4,110,1.364,115,2.073,135,0.005,136,0.006,137,0.005,157,0.989,218,2.013,219,2.013,220,1.893,232,2.307,233,1.33,248,3.812,259,1.59,260,1.734,261,2.557,262,1.893,263,2.491,264,1.951,265,1.951,267,3.182,268,1.951,269,3.845,271,3.846,273,2.637,282,1.668,283,3.408,284,2.079,296,1.627,297,2.343,304,0.853,305,1.513,306,1.837,308,1.596,309,1.837,324,1.596,360,1.893,361,1.837,362,1.893,363,1.893,364,1.893,365,1.893,366,1.596,367,1.837,368,1.893,369,1.893,370,1.893,371,1.837,372,1.893,373,1.837,374,1.893,375,1.893,376,1.893,377,1.893,381,1.554,382,2.637,383,2.637,384,1.951,385,3.198,386,1.951,387,1.951,388,1.686,389,1.951,390,1.734,391,1.951,392,1.686,393,2.637,394,1.734,395,1.951,396,1.686,397,1.951,398,1.734,399,2.763,400,1.951,401,1.734,402,1.951,403,1.734,404,1.951,405,1.686,406,1.951,407,1.951,408,1.951,409,1.734,410,1.951,411,1.734,412,2.216,413,1.951,414,1.734,415,1.951,416,1.734,417,1.364,418,1.951,419,1.951,630,2.395,1074,4.289,1101,5.588,1419,6.132,1421,6.567,1458,4.007,1459,6.958,1460,6.143,1461,6.143,1462,4.546,1463,4.546,1464,4.546,1465,4.546,1466,3.651,1467,4.546,1468,4.546,1469,4.546,1470,3.651,1471,4.546,1472,4.546]],["title/injectables/FeedFiltersEffects.html",[566,3.043,626,1.155]],["body/injectables/FeedFiltersEffects.html",[0,0.289,3,0.088,4,0.088,5,0.088,12,2.295,17,2.164,28,1.656,32,0.31,34,0.359,35,0.821,39,0.359,42,0.363,44,0.627,45,0.01,46,0.537,47,0.608,49,1.423,50,0.807,51,0.182,52,0.873,57,0.1,59,2.655,66,2.96,89,0.851,90,0.851,91,0.807,97,3.064,115,2.176,135,0.006,136,0.007,137,0.006,157,1.111,161,1.51,180,1.538,279,2.07,284,2.481,304,1.018,305,1.805,306,2.191,307,3.238,308,1.904,309,2.191,324,1.904,566,4.815,588,3.238,594,3.395,597,4.039,626,1.827,830,2.402,834,4.887,849,6.078,851,3.097,852,4.527,861,4.318,862,3.633,914,5.539,946,3.238,947,2.971,1108,6.078,1109,6.078,1110,6.078,1132,4.039,1473,6.683,1474,4.78,1475,7.583,1476,5.262,1477,5.423,1478,6.897,1479,5.423]],["title/modules/FeedModule.html",[420,1.761,1480,3.246]],["body/modules/FeedModule.html",[0,0.248,3,0.076,4,0.101,5,0.101,36,0.639,45,0.01,51,0.186,57,0.086,73,1.882,105,1.434,135,0.005,136,0.007,137,0.005,233,1.363,304,0.874,315,2.781,316,2.781,360,1.939,361,1.882,362,1.939,363,1.939,364,1.939,365,1.939,366,1.635,367,1.882,368,1.939,369,1.939,370,1.939,371,1.882,372,1.939,373,1.882,374,1.939,375,1.939,376,1.939,377,1.939,381,1.592,394,3.081,399,3.233,401,3.081,409,3.081,411,3.081,414,3.081,416,3.081,420,1.882,422,2.203,423,2.552,424,4.205,425,3.566,426,2.781,427,3.574,435,3.566,436,2.781,438,3.289,442,3.289,447,3.909,450,2.66,451,5.503,452,5.503,453,3.071,455,4.105,456,3.469,457,3.741,459,3.252,464,5.015,467,5.503,468,3.741,469,3.741,470,4.105,471,3.741,472,4.65,473,3.741,475,3.741,476,3.741,477,3.741,495,2.66,1098,3.741,1201,5.64,1212,6.632,1480,6.749,1481,4.105,1482,4.105,1483,4.105,1484,4.105,1485,5.64,1486,4.658,1487,4.658,1488,4.105,1489,4.658,1490,3.741,1491,4.658,1492,4.658,1493,3.741,1494,4.658,1495,4.658,1496,4.658,1497,3.741,1498,3.741,1499,6.244,1500,3.741,1501,3.741,1502,4.658,1503,4.658,1504,4.658]],["title/modules/FeedRoutingModule.html",[420,1.761,1485,3.043]],["body/modules/FeedRoutingModule.html",[0,0.293,3,0.09,4,0.113,5,0.113,36,0.756,45,0.01,51,0.176,57,0.102,105,1.697,135,0.006,136,0.007,137,0.006,176,1.46,233,1.613,259,1.835,304,1.034,360,2.295,361,2.227,362,2.295,363,2.295,364,2.295,365,2.295,366,1.935,367,2.227,368,2.295,369,2.295,370,2.295,371,2.227,372,2.295,373,2.227,374,2.295,375,2.295,376,2.295,377,2.295,392,2.833,396,2.584,399,2.584,422,2.607,427,2.797,438,2.903,442,3.67,485,4.105,487,5.189,488,4.783,489,3.148,490,4.864,491,4.105,494,6.298,498,4.105,503,4.858,612,4.427,1026,4.105,1074,4.864,1213,4.858,1485,4.864,1488,4.858,1505,5.512,1506,5.512,1507,5.512,1508,7.641,1509,5.512,1510,5.512,1511,5.512,1512,5.512]],["title/classes/Filter.html",[0,0.232,417,1.308]],["body/classes/Filter.html",[0,0.201,2,0.639,3,0.061,4,0.061,5,0.061,7,1.723,11,2.115,24,2.702,28,0.904,30,3.764,32,0.339,34,0.249,35,0.642,36,1.037,38,0.672,39,0.454,42,0.41,44,0.794,45,0.01,46,0.68,47,0.77,51,0.078,57,0.07,62,3.531,73,2.178,86,2.549,89,0.591,90,0.591,91,1.224,115,1.393,135,0.004,136,0.006,137,0.004,146,2.622,157,1.418,180,1.687,195,2.47,202,2.702,218,3.59,219,1.669,220,1.568,259,1.232,282,1.464,290,4.329,296,2.003,297,1.437,373,2.178,417,2.706,495,3.079,580,2.953,593,4.301,652,5.414,682,3.375,715,4.329,740,3.081,786,2.639,918,4.796,1082,4.796,1238,4.751,1298,4.329,1513,7.018,1514,3.321,1515,5.391,1516,5.391,1517,5.391,1518,5.391,1519,5.391,1520,7.963,1521,5.391,1522,5.391,1523,5.391,1524,5.391,1525,5.391,1526,5.391,1527,5.391,1528,5.391,1529,5.391,1530,5.391,1531,5.391,1532,5.391,1533,6.87,1534,6.294,1535,3.768,1536,3.768,1537,3.768,1538,3.768,1539,3.768,1540,5.391,1541,3.768,1542,5.391,1543,6.87,1544,3.768,1545,6.87,1546,5.391,1547,5.391,1548,5.391,1549,5.391,1550,3.768,1551,5.391,1552,5.391,1553,3.768,1554,3.768,1555,3.768,1556,3.768,1557,3.768,1558,3.768,1559,3.768,1560,3.768,1561,3.768,1562,3.768,1563,3.768,1564,3.768,1565,5.391,1566,3.768]],["title/injectables/FilterService.html",[626,1.155,1476,2.874]],["body/injectables/FilterService.html",[0,0.247,3,0.075,4,0.075,5,0.075,8,1.193,28,1.938,34,0.307,35,0.742,39,0.465,42,0.434,45,0.01,49,0.871,50,0.691,51,0.146,57,0.115,58,0.962,62,2.928,135,0.007,136,0.007,137,0.005,157,1.004,161,2.182,176,2.138,180,1.839,195,2.76,218,2.057,219,2.057,220,1.933,270,3.458,279,2.646,282,1.692,296,1.991,304,0.871,417,2.256,585,3.062,586,3.062,587,2.772,594,4.403,626,1.65,740,3.679,830,2.057,964,3.458,983,3.901,1082,4.35,1476,4.108,1567,3.729,1568,7.033,1569,7.516,1570,7.516,1571,7.516,1572,7.033,1573,6.231,1574,4.644,1575,4.644,1576,4.644,1577,4.644,1578,4.644,1579,4.644,1580,3.729,1581,6.231,1582,4.644,1583,5.648,1584,4.644,1585,4.644,1586,5.648,1587,4.644,1588,5.648,1589,4.644,1590,4.644,1591,7.516,1592,4.644,1593,4.644,1594,4.644,1595,4.644,1596,4.644,1597,4.644,1598,4.644,1599,4.644,1600,4.644,1601,4.644,1602,4.644,1603,4.644,1604,4.644,1605,4.644,1606,4.092,1607,4.092,1608,4.092,1609,4.092]],["title/components/FiltersComponent.html",[259,0.996,401,1.662]],["body/components/FiltersComponent.html",[0,0.288,3,0.088,4,0.088,5,0.088,32,0.243,33,1.198,34,0.358,39,0.501,42,0.363,45,0.01,46,0.682,51,0.113,57,0.1,98,1.584,110,1.625,135,0.006,136,0.007,137,0.006,157,1.109,259,1.732,260,2.065,261,2.868,262,2.254,264,2.324,265,2.324,267,3.466,268,2.324,269,3.91,273,2.957,282,1.87,283,3.648,296,1.434,297,2.065,304,1.016,381,1.85,382,2.957,383,2.957,384,2.324,385,3.423,386,2.324,387,2.324,388,2.007,389,2.324,390,2.065,391,2.324,392,2.007,393,2.957,394,2.065,395,2.324,396,2.007,397,2.324,398,2.065,399,2.007,400,2.324,401,3.042,402,2.324,403,2.065,404,2.324,405,2.007,406,2.324,407,2.324,408,2.324,409,2.065,410,2.324,411,2.065,412,2.485,413,2.324,414,2.065,415,2.324,416,2.065,417,1.625,418,2.324,419,2.324,1082,4.809,1097,5.29,1610,4.771,1611,6.889,1612,5.414,1613,5.414]],["title/classes/GuidService.html",[0,0.232,632,2.729]],["body/classes/GuidService.html",[0,0.323,2,1.028,3,0.099,4,0.099,5,0.099,32,0.272,34,0.401,35,0.88,38,1.423,39,0.527,42,0.437,45,0.01,51,0.154,53,4.077,54,2.773,57,0.112,79,1.137,135,0.006,136,0.008,137,0.006,180,1.649,270,4.515,279,2.394,282,2.007,296,1.958,304,1.137,632,4.628,1239,6.515,1580,4.869,1614,5.343,1615,8.303,1616,7.975,1617,7.392,1618,6.062,1619,6.062,1620,7.392,1621,6.062,1622,6.062,1623,6.062]],["title/classes/HandleUnexpectedError.html",[0,0.232,238,1.377]],["body/classes/HandleUnexpectedError.html",[0,0.41,2,0.837,3,0.08,4,0.08,5,0.08,8,1.393,32,0.395,33,1.392,34,0.327,35,0.773,36,0.891,37,2.273,38,1.465,39,0.327,40,1.883,42,0.382,44,0.571,45,0.01,46,0.489,47,0.554,49,0.927,50,0.735,51,0.135,52,0.795,57,0.152,58,1.023,76,1.482,77,2.254,79,0.927,89,1.255,90,1.255,91,1.191,124,1.785,135,0.005,136,0.007,137,0.005,157,1.408,159,1.938,186,1.883,214,2.846,224,2.616,230,1.883,238,2.433,239,1.883,240,1.831,241,2.119,242,2.119,243,1.643,244,1.733,245,1.938,1059,3.256,1060,3.679,1061,4.142,1062,4.142,1624,3.092,1625,6.491,1626,4.938,1627,4.834,1628,3.678,1629,3.678,1630,3.678,1631,3.447]],["title/classes/HandleUnexpectedError-1.html",[0,0.193,238,1.147,332,2.534]],["body/classes/HandleUnexpectedError-1.html",[0,0.413,2,0.855,3,0.082,4,0.082,5,0.082,8,1.401,32,0.396,33,1.401,34,0.334,35,0.784,36,0.903,37,2.243,38,1.474,39,0.334,40,1.924,42,0.386,44,0.583,45,0.01,46,0.499,47,0.566,49,0.947,50,0.751,51,0.105,52,0.812,57,0.153,58,1.045,76,1.514,77,2.144,89,1.218,90,1.218,91,1.156,124,1.797,135,0.005,136,0.007,137,0.005,214,2.875,224,2.643,230,1.924,238,2.453,239,1.924,240,1.871,241,2.165,242,2.165,243,1.679,244,1.771,245,1.98,319,4.014,519,4.874,950,3.158,1242,4.185,1243,4.185,1632,3.158,1633,6.583,1634,5.045,1635,4.902,1636,3.522,1637,3.757,1638,3.757,1639,3.757,1640,3.522]],["title/classes/HandleUnexpectedError-2.html",[0,0.193,238,1.147,511,3.199]],["body/classes/HandleUnexpectedError-2.html",[0,0.434,2,0.7,3,0.067,4,0.067,5,0.067,8,1.422,12,1.373,32,0.393,33,1.44,34,0.273,35,0.684,36,0.789,37,2.213,38,1.496,39,0.437,40,1.574,42,0.348,44,0.477,45,0.01,46,0.408,47,0.463,49,0.774,50,0.614,51,0.119,52,0.664,57,0.155,58,0.855,76,1.238,77,2.201,89,1.315,90,1.315,91,1.248,124,1.782,135,0.004,136,0.006,137,0.004,157,0.664,211,3.238,212,3.768,213,2.173,214,2.596,217,2.463,218,2.546,219,1.827,220,1.718,221,2.261,222,3.356,223,4.655,224,2.58,225,3.128,226,2.916,227,2.357,228,1.887,229,3.356,230,2.192,231,3.238,232,2.094,233,1.207,234,2.261,235,2.02,236,3.238,237,2.261,238,2.26,239,1.574,240,1.53,241,1.771,242,1.771,243,1.373,244,1.448,245,1.619,246,2.463,247,2.463,248,2.261,249,2.463,250,2.463,251,2.463,252,2.463,253,2.463,254,3.431,255,2.261,256,2.463,257,2.463,258,2.463,1641,5.748,1642,4.126]],["title/classes/HandleUnexpectedError-3.html",[0,0.193,238,1.147,1643,3.199]],["body/classes/HandleUnexpectedError-3.html",[0,0.412,2,0.85,3,0.081,4,0.081,5,0.081,8,1.398,32,0.396,33,1.398,34,0.331,35,0.78,36,0.899,37,2.239,38,1.471,39,0.434,40,1.911,42,0.384,44,0.579,45,0.01,46,0.496,47,0.562,49,0.94,50,0.746,51,0.136,52,0.807,57,0.153,58,1.038,76,1.504,77,2.137,89,1.215,90,1.215,91,1.153,124,1.793,135,0.005,136,0.007,137,0.005,185,2.648,214,2.866,224,2.634,230,1.911,238,2.447,239,1.911,240,1.858,243,1.668,244,1.759,245,1.967,520,5.087,1357,2.746,1644,3.138,1645,6.554,1646,5.012,1647,4.881,1648,3.304,1649,4.171,1650,4.171,1651,4.171,1652,3.732,1653,3.732,1654,3.732,1655,3.499]],["title/injectables/HandlebarsService.html",[626,1.155,1206,2.874]],["body/injectables/HandlebarsService.html",[0,0.148,3,0.045,4,0.045,5,0.045,17,1.496,24,3.332,28,1.259,32,0.265,34,0.481,35,0.51,36,0.719,39,0.183,42,0.439,44,0.606,45,0.01,46,0.668,47,0.588,49,0.804,50,1.047,51,0.161,53,1.961,54,1.267,57,0.051,79,1.457,135,0.008,136,0.004,137,0.003,157,1.087,159,1.087,161,1.777,163,1.356,166,1.582,176,1.691,180,1.938,187,2.175,205,1.732,262,1.153,279,2.706,282,1.164,285,3.661,286,4.395,296,2.179,297,3.079,304,0.52,305,0.922,306,1.12,315,1.654,316,1.654,324,0.973,332,2.993,412,0.999,626,1.135,631,1.654,740,1.356,786,3.304,822,2.559,830,1.227,873,1.827,874,2.225,876,5.574,881,5.126,959,1.827,977,2.225,1029,2.994,1206,2.826,1216,2.225,1333,4.211,1334,2.225,1643,2.442,1656,2.442,1657,4.287,1658,4.287,1659,4.287,1660,5.902,1661,5.902,1662,5.902,1663,5.902,1664,5.902,1665,5.243,1666,5.902,1667,5.902,1668,5.902,1669,5.902,1670,5.902,1671,5.902,1672,5.902,1673,5.243,1674,2.771,1675,3.283,1676,4.287,1677,4.287,1678,2.771,1679,2.771,1680,2.771,1681,2.771,1682,2.771,1683,2.771,1684,2.771,1685,2.771,1686,2.771,1687,2.771,1688,2.771,1689,2.771,1690,2.771,1691,2.771,1692,2.771,1693,2.771,1694,2.771,1695,2.771,1696,2.225,1697,2.771,1698,2.771,1699,2.771,1700,2.771,1701,2.771,1702,2.771,1703,2.771,1704,2.771,1705,2.771,1706,2.771,1707,2.771,1708,2.771,1709,2.771,1710,2.771,1711,2.771,1712,2.771,1713,2.771,1714,2.771,1715,2.771,1716,2.771,1717,2.771,1718,2.225,1719,2.771,1720,2.771,1721,2.771,1722,2.771,1723,2.771,1724,2.771,1725,2.771,1726,2.771,1727,2.771,1728,7.464,1729,5.243,1730,7.464,1731,7.625,1732,2.771,1733,2.771,1734,2.771,1735,2.771,1736,2.771,1737,2.771,1738,2.771,1739,6.749,1740,2.771,1741,6.383,1742,2.771,1743,2.771,1744,2.771,1745,5.902,1746,2.771,1747,4.287,1748,2.771,1749,2.771,1750,2.771,1751,2.771,1752,2.771,1753,2.771,1754,2.771,1755,2.771,1756,2.771,1757,2.771,1758,2.771,1759,2.771,1760,2.771,1761,2.771,1762,2.771,1763,2.771,1764,2.771,1765,2.771,1766,2.771,1767,2.771,1768,2.771,1769,2.771,1770,2.771,1771,2.771,1772,4.287,1773,5.243,1774,4.287,1775,5.243,1776,2.771]],["title/classes/I18n.html",[0,0.232,144,1.994]],["body/classes/I18n.html",[0,0.346,2,1.1,3,0.105,4,0.105,5,0.105,32,0.291,38,1.374,39,0.509,42,0.342,44,0.982,45,0.009,46,0.642,47,0.728,51,0.135,57,0.12,79,1.541,89,1.018,90,1.018,91,0.966,135,0.007,136,0.008,137,0.007,144,3.523,161,2.364,163,3.177,621,3.874,873,5.078,1777,5.72,1778,6.49,1779,6.49]],["title/components/IconComponent.html",[259,0.996,403,1.662]],["body/components/IconComponent.html",[0,0.212,3,0.065,4,0.091,5,0.091,32,0.378,33,0.976,34,0.264,35,0.668,36,0.547,39,0.264,42,0.443,44,0.461,45,0.01,46,0.642,47,0.447,49,0.748,51,0.135,57,0.074,79,1.322,98,1.166,105,1.227,110,1.196,135,0.004,136,0.006,137,0.004,146,2.678,149,2.746,150,3.396,157,0.903,233,1.166,235,3.449,259,1.484,260,1.52,261,2.335,262,1.659,263,2.184,264,1.711,265,1.711,267,2.969,268,1.711,269,3.79,271,3.512,273,1.711,282,1.523,283,3.223,296,1.056,297,1.52,304,0.748,360,1.659,361,1.61,362,1.659,363,1.659,364,1.659,365,1.659,366,1.399,367,1.61,368,1.659,369,1.659,370,1.659,371,1.61,372,1.659,373,1.61,374,1.659,375,1.659,376,1.659,377,1.659,381,1.362,382,2.408,383,2.408,384,1.711,385,3.024,386,1.711,387,1.711,388,1.478,389,1.711,390,1.52,391,1.711,392,1.478,393,2.408,394,1.52,395,1.711,396,1.478,397,1.711,398,1.52,399,1.478,400,1.711,401,1.52,402,1.711,403,2.687,404,1.711,405,1.478,406,1.711,407,1.711,408,1.711,409,1.52,410,1.711,411,1.52,412,2.023,413,1.711,414,1.52,415,1.711,416,1.52,417,1.196,418,1.711,419,1.711,450,2.276,874,3.201,876,3.916,881,4.505,1013,4.944,1015,6.209,1412,5.658,1780,3.512,1781,7.045,1782,6.492,1783,3.985,1784,5.61,1785,5.61,1786,6.492,1787,6.492,1788,3.985,1789,7.045,1790,5.61,1791,3.985,1792,3.985,1793,3.985,1794,3.985,1795,3.985,1796,3.985,1797,3.985,1798,3.985,1799,3.985,1800,3.985,1801,3.985,1802,3.985,1803,3.985,1804,3.985,1805,3.985,1806,3.985,1807,3.985,1808,3.985,1809,3.985,1810,3.985,1811,3.985,1812,3.985,1813,3.985,1814,3.985,1815,6.492,1816,7.426,1817,6.492,1818,5.61,1819,6.492,1820,5.61,1821,3.985,1822,6.492,1823,3.985,1824,3.985,1825,3.985,1826,3.985,1827,3.985,1828,3.985,1829,3.985,1830,3.512,1831,5.61]],["title/components/IframeDisplayComponent.html",[259,0.996,405,1.616]],["body/components/IframeDisplayComponent.html",[0,0.245,3,0.075,4,0.101,5,0.101,32,0.336,33,1.077,34,0.304,35,0.737,36,0.631,39,0.41,42,0.394,44,0.716,45,0.01,46,0.741,47,0.695,51,0.146,57,0.085,98,1.347,105,1.417,110,1.381,135,0.005,136,0.006,137,0.005,157,0.997,184,2.362,233,1.347,259,1.6,260,1.755,261,2.578,262,1.916,263,2.521,264,1.975,265,1.975,267,3.202,268,1.975,269,3.85,271,3.877,273,2.658,279,1.381,282,1.681,283,3.425,296,1.64,297,2.362,304,0.863,360,1.916,361,1.859,362,1.916,363,1.916,364,1.916,365,1.916,366,1.615,367,1.859,368,1.916,369,1.916,370,1.916,371,1.859,372,1.916,373,1.859,374,1.916,375,1.916,376,1.916,377,1.916,381,1.572,382,2.658,383,2.658,384,1.975,385,3.214,386,1.975,387,1.975,388,1.706,389,1.975,390,1.755,391,1.975,392,1.706,393,2.658,394,1.755,395,1.975,396,1.706,397,1.975,398,1.755,399,1.706,400,1.975,401,1.755,402,1.975,403,1.755,404,1.975,405,2.777,406,1.975,407,1.975,408,1.975,409,1.755,410,1.975,411,1.755,412,2.234,413,1.975,414,1.755,415,1.975,416,1.755,417,1.381,418,1.975,419,1.975,440,3.212,441,3.034,919,4.974,1832,4.055,1833,6.193,1834,7,1835,6.193,1836,8.05,1837,6.193,1838,4.601,1839,5.62,1840,6.193,1841,4.601,1842,6.193,1843,7.094,1844,4.601,1845,4.601,1846,4.601,1847,4.601,1848,4.601,1849,6.193]],["title/injectables/IframeService.html",[626,1.155,1839,3.043]],["body/injectables/IframeService.html",[0,0.321,3,0.098,4,0.098,5,0.098,14,3.181,28,1.449,32,0.271,34,0.399,39,0.488,42,0.388,44,0.852,45,0.01,46,0.73,47,0.827,51,0.165,57,0.112,135,0.006,136,0.008,137,0.006,184,2.303,259,1.38,270,4.497,279,1.812,282,2.002,296,1.599,297,2.303,304,1.133,305,2.009,350,3.981,440,4.215,441,3.981,615,4.849,626,1.953,710,4.849,830,2.674,1106,4.849,1335,6.499,1336,7.307,1580,4.849,1839,5.148,1843,5.321,1850,5.321,1851,7.374,1852,6.038,1853,6.038,1854,7.374,1855,6.038,1856,6.499,1857,7.961,1858,7.374,1859,6.038,1860,6.038,1861,6.038]],["title/classes/InitAuthStatus.html",[0,0.232,60,2.061]],["body/classes/InitAuthStatus.html",[0,0.412,1,2.687,2,0.535,3,0.051,4,0.051,5,0.103,6,1.602,7,1.444,8,1.427,9,3.931,10,1.663,11,1.944,12,2.889,13,3.359,14,3.563,15,1.493,16,3.245,17,2.027,18,3.245,19,3.094,20,2.594,21,1.803,22,1.729,23,3.203,24,2.439,25,2.993,26,3.245,27,2.993,28,1.364,29,2.704,30,3.113,31,2.704,32,0.385,33,1.348,34,0.209,35,0.564,36,0.928,37,2,38,1.408,39,0.313,40,1.204,41,2.318,42,0.299,44,0.365,45,0.01,46,0.312,47,0.354,49,0.592,50,0.47,51,0.118,52,0.508,53,2.599,54,1.444,55,2.167,56,1.602,57,0.148,58,0.654,59,1.545,60,2.985,61,1.545,62,1.971,63,2.599,64,1.493,65,3.113,66,3.387,67,3.891,68,3.325,69,2.687,70,1.729,71,2.318,72,2.888,73,2.296,74,3.199,75,2.687,76,1.421,77,1.979,78,1.398,79,1.269,80,1.444,81,1.444,82,1.493,83,1.545,84,3.245,85,3.245,86,2.687,87,3.245,88,2.704,89,1.189,90,1.189,91,1.127,92,1.803,93,1.729,94,1.803,95,1.803,96,1.663,97,1.275,98,0.924,99,1.729,100,2.365,101,2.704,102,2.687,103,2.402,104,1.729,105,0.972,106,1.729,107,1.729,108,1.602,109,3.325,110,0.947,111,1.803,112,1.663,113,1.729,114,2.704,115,1.224,116,1.803,117,1.803,118,3.606,119,1.729,120,1.803,121,2.704,122,1.803,123,2.594,124,0.704,125,1.803,126,1.729,127,1.803,128,1.729,129,1.803,130,2.594,131,2.594,132,1.803,133,1.803,134,1.663,135,0.003,136,0.005,137,0.003,214,2.23,1862,4.735,1863,3.157]],["title/classes/InitFilters.html",[0,0.232,594,2.729]],["body/classes/InitFilters.html",[0,0.375,2,0.95,3,0.091,4,0.091,5,0.091,8,1.369,32,0.398,33,1.339,34,0.371,35,0.838,36,0.966,37,2.09,38,1.441,39,0.371,40,2.137,42,0.405,44,0.648,45,0.01,46,0.555,47,0.628,49,1.051,50,0.834,51,0.16,52,0.902,57,0.149,58,1.161,61,2.743,62,2.931,77,2.06,89,1.105,90,1.105,91,1.048,135,0.006,136,0.007,137,0.006,146,2.021,161,1.56,214,3.021,417,2.311,495,4.021,580,4.218,581,3.912,584,4.938,585,3.694,586,3.694,587,4.203,588,3.345,589,4.173,590,3.912,591,4.5,592,4.938,593,3.508,594,4.82,595,6.205,596,4.938,597,4.173,1864,7.041,1865,5.603]],["title/classes/Input.html",[0,0.232,150,1.871]],["body/classes/Input.html",[0,0.43,2,0.678,3,0.065,4,0.065,5,0.065,8,0.678,11,1.23,32,0.317,36,0.548,38,1.636,39,0.544,42,0.21,44,0.462,45,0.01,46,0.698,47,0.448,50,1.05,51,0.135,57,0.154,58,1.164,79,1.668,89,1.268,90,1.268,91,1.203,100,1.663,135,0.004,136,0.006,137,0.004,140,2.189,141,3.522,142,3.21,143,4.728,144,3.526,145,2.385,146,3.037,147,2.385,148,2.385,149,1.956,150,2.79,151,2.385,152,2.385,153,2.385,154,2.385,155,2.385,157,0.644,158,1.77,159,1.568,160,2.027,161,1.112,162,2.385,163,1.956,164,1.956,165,2.385,166,2.282,167,2.385,168,2.385,169,2.385,170,2.385,171,2.385,172,2.385,173,2.385,174,2.385,175,3.355,176,1.058,177,2.851,178,2.385,179,3.355,180,1.254,181,1.615,182,2.96,183,2.385,184,1.524,185,1.615,186,1.524,187,2.027,188,2.385,189,2.385,190,2.385,191,2.385,192,2.282,193,2.282,194,2.282,195,3.108,196,4.029,197,1.956,198,2.189,199,2.282,200,2.282,201,2.282,202,1.715,203,3.881,204,3.881,205,3.115,206,3.881,207,3.881,208,3.865,209,3.881,210,3.881,1866,3.996]],["title/injectables/LightCardEffects.html",[563,3.043,626,1.155]],["body/injectables/LightCardEffects.html",[0,0.275,3,0.084,4,0.084,5,0.084,8,0.874,17,2.113,28,1.603,32,0.3,34,0.341,35,0.795,39,0.341,42,0.351,44,0.596,45,0.01,46,0.51,47,0.578,49,0.967,50,0.767,51,0.18,52,0.83,57,0.095,89,0.809,90,0.809,91,0.767,115,2.148,135,0.005,136,0.007,137,0.005,157,1.075,161,2.061,180,1.747,221,2.825,225,2.438,226,3.757,279,2.004,284,2.358,304,0.967,305,1.716,306,2.083,308,1.81,309,2.083,324,1.81,354,4.18,563,4.661,626,1.768,630,2.716,631,3.078,822,3.078,830,2.284,834,4.831,851,2.945,852,4.42,861,4.18,862,4.125,864,2.945,906,5.362,946,3.078,947,2.825,1029,3.973,1035,3.84,1048,5.947,1064,4.141,1065,4.141,1066,4.141,1130,4.141,1131,4.141,1867,6.526,1868,4.544,1869,7.405,1870,5.156,1871,6.677,1872,6.677,1873,6.677,1874,6.677,1875,6.677,1876,5.884,1877,6.677,1878,6.677,1879,6.677,1880,5.884,1881,5.156,1882,5.156]],["title/classes/LoadCard.html",[0,0.232,1060,2.212]],["body/classes/LoadCard.html",[0,0.41,2,0.837,3,0.08,4,0.08,5,0.08,8,1.393,32,0.395,33,1.392,34,0.327,35,0.773,36,0.891,37,2.273,38,1.465,39,0.327,40,1.883,42,0.382,44,0.571,45,0.01,46,0.489,47,0.554,49,0.927,50,0.735,51,0.135,52,0.795,57,0.152,58,1.023,76,1.482,77,2.254,79,0.927,89,1.255,90,1.255,91,1.191,124,1.785,135,0.005,136,0.007,137,0.005,157,1.408,159,1.938,186,1.883,214,2.846,224,2.616,230,1.883,238,2.291,239,1.883,240,1.831,241,2.119,242,2.119,243,1.643,244,1.733,245,1.938,1059,3.256,1060,3.908,1061,4.142,1062,4.142,1624,3.092,1627,3.678,1628,4.834,1629,3.678,1630,3.678,1631,3.447,1883,6.491,1884,4.938]],["title/classes/LoadCardFailure.html",[0,0.232,1061,2.49]],["body/classes/LoadCardFailure.html",[0,0.41,2,0.837,3,0.08,4,0.08,5,0.08,8,1.393,32,0.395,33,1.392,34,0.327,35,0.773,36,0.891,37,2.273,38,1.465,39,0.327,40,1.883,42,0.382,44,0.571,45,0.01,46,0.489,47,0.554,49,0.927,50,0.735,51,0.135,52,0.795,57,0.152,58,1.023,76,1.482,77,2.254,79,0.927,89,1.255,90,1.255,91,1.191,124,1.785,135,0.005,136,0.007,137,0.005,157,1.408,159,1.938,186,1.883,214,2.846,224,2.616,230,1.883,238,2.291,239,1.883,240,1.831,241,2.119,242,2.119,243,1.643,244,1.733,245,1.938,1059,3.256,1060,3.679,1061,4.399,1062,4.142,1624,3.092,1627,3.678,1628,3.678,1629,4.834,1630,3.678,1631,3.447,1885,6.491,1886,4.938]],["title/classes/LoadCardSuccess.html",[0,0.232,1062,2.49]],["body/classes/LoadCardSuccess.html",[0,0.41,2,0.837,3,0.08,4,0.08,5,0.08,8,1.393,32,0.395,33,1.392,34,0.327,35,0.773,36,0.891,37,2.273,38,1.465,39,0.327,40,1.883,42,0.382,44,0.571,45,0.01,46,0.489,47,0.554,49,0.927,50,0.735,51,0.135,52,0.795,57,0.152,58,1.023,76,1.482,77,2.254,79,0.927,89,1.255,90,1.255,91,1.191,124,1.785,135,0.005,136,0.007,137,0.005,157,1.408,159,1.938,186,1.883,214,2.846,224,2.616,230,1.883,238,2.291,239,1.883,240,1.831,241,2.119,242,2.119,243,1.643,244,1.733,245,1.938,1059,3.256,1060,3.679,1061,4.142,1062,4.399,1624,3.092,1627,3.678,1628,3.678,1629,3.678,1630,4.834,1631,3.447,1887,6.491,1888,4.938]],["title/classes/LoadConfig.html",[0,0.232,319,2.388]],["body/classes/LoadConfig.html",[0,0.42,2,0.891,3,0.085,4,0.085,5,0.085,8,1.416,32,0.381,33,1.419,34,0.348,35,0.804,37,2.028,38,1.49,42,0.277,45,0.01,49,0.986,50,0.782,51,0.109,52,0.846,57,0.155,58,1.089,76,1.577,77,2.186,89,1.237,90,1.237,91,1.174,124,1.82,135,0.006,136,0.007,137,0.006,224,2.695,230,2.004,238,2.36,239,2.004,240,1.948,241,2.255,242,2.255,243,1.749,244,1.844,245,2.062,319,4.321,519,4.915,950,3.29,1242,4.267,1243,4.267,1632,3.29,1635,3.913,1636,3.668,1637,5.033,1638,3.913,1639,3.913,1640,3.668,1889,5.254]],["title/classes/LoadConfigFailure.html",[0,0.232,1242,2.49]],["body/classes/LoadConfigFailure.html",[0,0.413,2,0.855,3,0.082,4,0.082,5,0.082,8,1.401,32,0.396,33,1.401,34,0.334,35,0.784,36,0.903,37,2.243,38,1.474,39,0.334,40,1.924,42,0.386,44,0.583,45,0.01,46,0.499,47,0.566,49,0.947,50,0.751,51,0.105,52,0.812,57,0.153,58,1.045,76,1.514,77,2.144,89,1.218,90,1.218,91,1.156,124,1.797,135,0.005,136,0.007,137,0.005,214,2.875,224,2.643,230,1.924,238,2.315,239,1.924,240,1.871,241,2.165,242,2.165,243,1.679,244,1.771,245,1.98,319,4.014,519,4.874,950,3.158,1242,4.436,1243,4.185,1632,3.158,1635,3.757,1636,3.522,1637,3.757,1638,4.902,1639,3.757,1640,3.522,1890,6.583,1891,5.045]],["title/classes/LoadConfigSuccess.html",[0,0.232,1243,2.49]],["body/classes/LoadConfigSuccess.html",[0,0.413,2,0.855,3,0.082,4,0.082,5,0.082,8,1.401,32,0.396,33,1.401,34,0.334,35,0.784,36,0.903,37,2.243,38,1.474,39,0.334,40,1.924,42,0.386,44,0.583,45,0.01,46,0.499,47,0.566,49,0.947,50,0.751,51,0.105,52,0.812,57,0.153,58,1.045,76,1.514,77,2.144,89,1.218,90,1.218,91,1.156,124,1.797,135,0.005,136,0.007,137,0.005,214,2.875,224,2.643,230,1.924,238,2.315,239,1.924,240,1.871,241,2.165,242,2.165,243,1.679,244,1.771,245,1.98,319,4.014,519,4.874,950,3.158,1242,4.185,1243,4.436,1632,3.158,1635,3.757,1636,3.522,1637,3.757,1638,3.757,1639,4.902,1640,3.522,1892,6.583,1893,5.045]],["title/classes/LoadLightCards.html",[0,0.232,222,2.212]],["body/classes/LoadLightCards.html",[0,0.438,2,0.725,3,0.07,4,0.07,5,0.07,8,1.432,12,1.423,32,0.383,33,1.451,34,0.283,35,0.701,37,2.069,38,1.507,39,0.39,42,0.225,45,0.01,49,0.803,50,0.637,51,0.122,52,0.689,57,0.156,58,0.886,76,1.284,77,2.23,89,1.325,90,1.325,91,1.257,124,1.8,135,0.004,136,0.006,137,0.004,157,0.689,211,3.3,212,3.104,213,2.253,217,2.553,218,2.61,219,1.894,220,1.781,221,2.343,222,3.686,223,4.696,224,2.62,225,3.188,226,2.99,227,2.443,228,1.956,229,3.42,230,2.247,231,3.3,232,2.17,233,1.252,234,2.343,235,2.094,236,3.3,237,2.343,238,2.13,239,1.631,240,1.586,241,1.836,242,1.836,243,1.423,244,1.501,245,1.679,246,3.518,247,2.553,248,2.343,249,2.553,250,2.553,251,2.553,252,2.553,253,2.553,254,2.553,255,2.343,256,2.553,257,2.553,258,2.553,1894,4.277]],["title/classes/LoadLightCardsExtendedData.html",[0,0.232,226,2.212]],["body/classes/LoadLightCardsExtendedData.html",[0,0.437,2,0.72,3,0.069,4,0.069,5,0.069,8,1.43,12,1.414,32,0.382,33,1.449,34,0.281,35,0.698,37,2.063,38,1.505,39,0.479,42,0.309,45,0.01,49,0.797,50,0.632,51,0.122,52,0.684,57,0.156,58,0.88,76,1.275,77,2.224,89,1.323,90,1.323,91,1.255,124,1.797,135,0.004,136,0.006,137,0.004,157,0.684,211,3.288,212,3.538,213,2.237,217,2.536,218,2.597,219,1.881,220,1.768,221,2.327,222,3.408,223,4.688,224,2.613,225,3.176,226,3.408,227,2.426,228,1.943,229,3.408,230,2.237,231,3.288,232,2.155,233,1.243,234,2.327,235,2.079,236,3.288,237,2.327,238,2.122,239,1.62,240,1.575,241,1.823,242,1.823,243,1.414,244,1.491,245,1.667,246,2.536,247,2.536,248,2.327,249,3.501,250,2.536,251,2.536,252,2.536,253,2.536,254,2.536,255,2.327,256,2.536,257,2.536,258,2.536,1895,5.864]],["title/classes/LoadLightCardsFailure.html",[0,0.232,229,2.212]],["body/classes/LoadLightCardsFailure.html",[0,0.434,2,0.7,3,0.067,4,0.067,5,0.067,8,1.422,12,1.373,32,0.393,33,1.44,34,0.273,35,0.684,36,0.789,37,2.213,38,1.496,39,0.437,40,1.574,42,0.348,44,0.477,45,0.01,46,0.408,47,0.463,49,0.774,50,0.614,51,0.119,52,0.664,57,0.155,58,0.855,76,1.238,77,2.201,89,1.315,90,1.315,91,1.248,124,1.782,135,0.004,136,0.006,137,0.004,157,0.664,211,3.238,212,3.768,213,2.173,214,2.596,217,2.463,218,2.546,219,1.827,220,1.718,221,2.261,222,3.356,223,4.655,224,2.58,225,3.128,226,2.916,227,2.357,228,1.887,229,3.629,230,2.192,231,3.238,232,2.094,233,1.207,234,2.261,235,2.02,236,3.238,237,2.261,238,2.089,239,1.574,240,1.53,241,1.771,242,1.771,243,1.373,244,1.448,245,1.619,246,2.463,247,2.463,248,2.261,249,2.463,250,3.431,251,2.463,252,2.463,253,2.463,254,2.463,255,2.261,256,2.463,257,2.463,258,2.463,1896,5.748,1897,4.126]],["title/classes/LoadLightCardsSuccess.html",[0,0.232,225,2.061]],["body/classes/LoadLightCardsSuccess.html",[0,0.434,2,0.7,3,0.067,4,0.067,5,0.067,8,1.422,12,1.373,32,0.393,33,1.44,34,0.273,35,0.684,36,0.789,37,2.213,38,1.496,39,0.437,40,1.574,42,0.348,44,0.477,45,0.01,46,0.408,47,0.463,49,0.774,50,0.614,51,0.119,52,0.664,57,0.155,58,0.855,76,1.238,77,2.201,89,1.315,90,1.315,91,1.248,124,1.782,135,0.004,136,0.006,137,0.004,157,0.664,211,3.238,212,3.768,213,2.173,214,2.596,217,2.463,218,2.546,219,1.827,220,1.718,221,2.261,222,3.356,223,4.655,224,2.58,225,3.383,226,2.916,227,2.357,228,1.887,229,3.356,230,2.192,231,3.238,232,2.094,233,1.207,234,2.261,235,2.02,236,3.238,237,2.261,238,2.089,239,1.574,240,1.53,241,1.771,242,1.771,243,1.373,244,1.448,245,1.619,246,2.463,247,3.431,248,2.261,249,2.463,250,2.463,251,2.463,252,2.463,253,2.463,254,2.463,255,2.261,256,2.463,257,2.463,258,2.463,1898,5.748,1899,4.126]],["title/classes/LoadMenu.html",[0,0.232,1649,2.49]],["body/classes/LoadMenu.html",[0,0.418,2,0.879,3,0.084,4,0.084,5,0.084,8,1.411,32,0.38,33,1.413,34,0.343,35,0.797,37,2.015,38,1.485,39,0.491,42,0.353,45,0.01,49,0.972,50,0.771,51,0.139,52,0.835,57,0.154,58,1.074,76,1.555,77,2.172,89,1.231,90,1.231,91,1.168,124,1.812,135,0.005,136,0.007,137,0.005,185,2.707,224,2.677,230,1.977,238,2.345,239,1.977,240,1.922,243,1.725,244,1.819,245,2.034,520,5.123,1357,2.84,1644,3.245,1647,3.86,1648,3.417,1649,4.482,1650,4.239,1651,4.239,1652,4.989,1653,3.86,1654,3.86,1655,3.618,1900,6.699]],["title/classes/LoadMenuFailure.html",[0,0.232,1651,2.49]],["body/classes/LoadMenuFailure.html",[0,0.412,2,0.85,3,0.081,4,0.081,5,0.081,8,1.398,32,0.396,33,1.398,34,0.331,35,0.78,36,0.899,37,2.239,38,1.471,39,0.434,40,1.911,42,0.384,44,0.579,45,0.01,46,0.496,47,0.562,49,0.94,50,0.746,51,0.136,52,0.807,57,0.153,58,1.038,76,1.504,77,2.137,89,1.215,90,1.215,91,1.153,124,1.793,135,0.005,136,0.007,137,0.005,185,2.648,214,2.866,224,2.634,230,1.911,238,2.307,239,1.911,240,1.858,243,1.668,244,1.759,245,1.967,520,5.087,1357,2.746,1644,3.138,1647,3.732,1648,3.304,1649,4.171,1650,4.171,1651,4.424,1652,3.732,1653,4.881,1654,3.732,1655,3.499,1901,6.554,1902,5.012]],["title/classes/LoadMenuSuccess.html",[0,0.232,1650,2.49]],["body/classes/LoadMenuSuccess.html",[0,0.412,2,0.85,3,0.081,4,0.081,5,0.081,8,1.398,32,0.396,33,1.398,34,0.331,35,0.78,36,0.899,37,2.239,38,1.471,39,0.434,40,1.911,42,0.384,44,0.579,45,0.01,46,0.496,47,0.562,49,0.94,50,0.746,51,0.136,52,0.807,57,0.153,58,1.038,76,1.504,77,2.137,89,1.215,90,1.215,91,1.153,124,1.793,135,0.005,136,0.007,137,0.005,185,2.648,214,2.866,224,2.634,230,1.911,238,2.307,239,1.911,240,1.858,243,1.668,244,1.759,245,1.967,520,5.087,1357,2.746,1644,3.138,1647,3.732,1648,3.304,1649,4.171,1650,4.424,1651,4.171,1652,3.732,1653,3.732,1654,4.881,1655,3.499,1903,6.554,1904,5.012]],["title/components/LoginComponent.html",[98,1.276,259,0.996]],["body/components/LoginComponent.html",[0,0.21,3,0.064,4,0.064,5,0.064,17,2,19,1.802,28,1.548,32,0.354,33,0.968,34,0.261,35,0.662,39,0.368,42,0.437,44,0.455,45,0.01,46,0.638,47,0.442,51,0.175,52,0.634,55,2.46,56,1.998,57,0.073,78,2.857,89,0.618,90,0.618,91,0.586,97,2.606,98,2.051,99,3.84,102,2.631,107,3.048,108,3.893,110,1.182,115,1.983,135,0.004,136,0.006,137,0.004,146,2.007,157,0.896,161,1.096,176,1.474,259,1.474,260,1.502,261,2.316,262,1.64,263,3.534,264,1.691,265,1.691,267,2.95,268,1.691,269,3.784,273,2.388,279,1.67,282,1.51,283,3.206,284,1.802,296,1.856,297,3.008,304,0.739,305,1.311,306,1.592,307,2.351,308,1.383,309,1.592,314,3.163,318,2.75,323,2.75,333,2.466,366,1.383,378,5.18,379,4.804,380,5.685,381,1.346,382,2.388,383,2.388,384,1.691,385,3.008,386,1.691,387,1.691,388,1.461,389,1.691,390,1.502,391,1.691,392,1.461,393,2.388,394,1.502,395,1.691,396,1.461,397,1.691,398,1.502,399,1.461,400,1.691,401,1.502,402,1.691,403,1.502,404,1.691,405,1.461,406,1.691,407,1.691,408,1.691,409,1.502,410,1.691,411,1.502,412,2.007,413,1.691,414,1.502,415,1.691,416,1.502,417,1.67,418,1.691,419,1.691,453,2.597,634,2.933,643,3.556,740,1.928,952,2.933,1905,3.471,1906,6.45,1907,6.45,1908,5.563,1909,7.009,1910,6.45,1911,6.45,1912,6.45,1913,6.45,1914,7.009,1915,7.009,1916,5.563,1917,3.939,1918,3.939,1919,3.939,1920,3.939,1921,3.939,1922,3.939,1923,3.939,1924,5.629,1925,3.939,1926,5.18,1927,3.163,1928,3.939,1929,3.939,1930,3.939,1931,3.939,1932,3.939,1933,3.939,1934,3.939,1935,3.939,1936,3.939,1937,3.939,1938,3.939,1939,3.939,1940,3.939,1941,3.939,1942,3.939,1943,3.939,1944,5.563,1945,5.563,1946,5.563,1947,5.563]],["title/classes/Map.html",[0,0.232,161,1.213]],["body/classes/Map.html",[0,0.365,2,1.163,3,0.111,4,0.111,5,0.111,42,0.361,45,0.009,57,0.127,79,1.492,135,0.007,136,0.008,137,0.007,161,2.214,873,5.244,1948,6.042,1949,6.856,1950,7.953,1951,6.856]],["title/injectables/MenuEffects.html",[561,3.043,626,1.155]],["body/injectables/MenuEffects.html",[0,0.275,3,0.084,4,0.084,5,0.084,8,0.874,17,2.113,28,1.603,32,0.3,34,0.341,35,0.795,39,0.341,42,0.351,44,0.596,45,0.01,46,0.51,47,0.578,49,0.967,50,0.767,51,0.18,52,0.83,57,0.095,89,0.809,90,0.809,91,0.767,97,2.992,115,2.148,135,0.005,136,0.007,137,0.005,161,1.435,180,1.747,224,2.671,279,2.004,284,2.358,304,0.967,305,1.716,306,2.083,308,1.81,309,2.083,324,1.81,333,4.18,561,4.661,626,1.768,630,2.716,830,2.284,834,4.831,851,2.945,852,4.42,861,4.18,862,4.125,864,2.945,904,4.972,905,4.903,906,6.29,946,3.078,947,2.825,1029,3.973,1035,3.84,1052,4.972,1060,2.616,1063,4.141,1358,4.544,1648,3.4,1650,2.945,1651,2.945,1876,5.884,1880,5.884,1952,4.544,1953,5.156,1954,6.677,1955,6.677,1956,6.677,1957,6.677,1958,6.677,1959,6.677,1960,6.677,1961,5.156,1962,4.544]],["title/interfaces/MenuState.html",[516,2.134,526,3.043]],["body/interfaces/MenuState.html",[3,0.104,4,0.104,5,0.104,32,0.366,34,0.422,35,0.908,45,0.009,51,0.133,57,0.141,79,1.43,124,1.819,135,0.007,136,0.008,137,0.007,146,2.941,176,1.69,185,3.413,195,2.504,354,5.405,516,3.123,517,3.995,520,5.154,526,5.692,1357,3.496,1963,5.125,1964,6.381,1965,5.125,1966,5.623]],["title/classes/Message.html",[0,0.232,55,1.662]],["body/classes/Message.html",[0,0.336,2,1.071,3,0.123,4,0.103,5,0.103,32,0.283,38,1.448,39,0.501,42,0.332,44,0.73,45,0.01,46,0.625,47,0.708,51,0.131,55,3.21,57,0.14,58,1.308,79,1.523,89,0.991,90,0.991,91,0.94,124,1.408,135,0.007,136,0.008,137,0.007,144,4.043,160,3.204,621,3.77,952,4.703,1967,5.071,1968,6.314,1969,8.117,1970,6.314,1971,6.314,1972,5.565]],["title/components/NavbarComponent.html",[110,1.308,259,0.996]],["body/components/NavbarComponent.html",[0,0.211,3,0.065,4,0.065,5,0.065,17,1.849,32,0.345,33,0.973,34,0.37,35,0.666,39,0.263,42,0.443,44,0.749,45,0.01,46,0.734,47,0.726,49,1.215,50,0.964,51,0.178,52,0.639,57,0.073,72,2.559,98,1.162,109,3.705,110,2.111,112,2.947,115,1.988,135,0.004,136,0.006,137,0.004,146,1.432,157,0.901,180,0.885,184,1.514,185,1.604,205,2.26,259,1.481,260,1.514,261,2.329,262,1.653,264,1.704,265,1.704,267,2.963,268,1.704,269,3.788,273,2.401,276,5.203,279,2.111,282,1.519,283,3.217,284,1.816,285,3.905,289,3.188,296,1.863,297,2.682,304,0.745,305,1.321,306,1.604,307,2.37,308,1.393,309,1.604,310,2.771,312,3.499,324,1.393,332,5.371,333,3.502,337,3.188,381,1.357,382,2.401,383,2.401,384,1.704,385,3.019,386,1.704,387,1.704,388,1.472,389,1.704,390,1.514,391,1.704,392,1.472,393,2.401,394,1.514,395,1.704,396,1.472,397,1.704,398,1.514,399,1.472,400,1.704,401,1.514,402,1.704,403,1.514,404,1.704,405,1.472,406,1.704,407,1.704,408,1.704,409,1.514,410,1.704,411,1.514,412,2.018,413,1.704,414,1.514,415,1.704,416,1.514,417,1.191,418,1.704,419,1.704,459,2.771,509,6.78,631,2.37,638,2.485,639,2.37,740,2.738,983,3.502,999,3.499,1000,3.499,1001,3.499,1357,2.175,1649,3.195,1839,5.518,1856,3.499,1962,3.499,1973,3.499,1974,5.594,1975,6.478,1976,5.594,1977,6.478,1978,5.594,1979,5.594,1980,6.478,1981,5.594,1982,3.97,1983,3.97,1984,5.594,1985,3.97,1986,3.97,1987,3.97,1988,3.97,1989,3.97,1990,3.97,1991,3.97,1992,3.97,1993,3.97,1994,3.97,1995,3.188,1996,3.97,1997,3.97,1998,3.97,1999,3.97,2000,3.97,2001,3.97,2002,3.97,2003,3.97,2004,3.97,2005,3.97,2006,3.97,2007,3.97,2008,3.97,2009,3.97,2010,3.97,2011,5.594,2012,5.594,2013,5.594,2014,5.594,2015,5.594,2016,3.97]],["title/components/NoSelectionComponent.html",[259,0.996,409,1.662]],["body/components/NoSelectionComponent.html",[0,0.285,3,0.087,4,0.087,5,0.087,32,0.24,33,1.19,34,0.354,39,0.499,42,0.36,45,0.009,46,0.677,51,0.111,57,0.099,98,1.567,110,1.608,135,0.006,136,0.007,137,0.006,157,1.102,259,1.723,260,2.043,261,2.848,262,2.23,264,2.299,265,2.299,267,3.449,268,2.299,269,3.906,273,2.937,282,1.858,283,3.634,296,1.419,297,2.043,304,1.005,381,1.83,382,2.937,383,2.937,384,2.299,385,3.41,386,2.299,387,2.299,388,1.986,389,2.299,390,2.043,391,2.299,392,1.986,393,2.937,394,2.043,395,2.299,396,1.986,397,2.299,398,2.043,399,1.986,400,2.299,401,2.043,402,2.299,403,2.043,404,2.299,405,1.986,406,2.299,407,2.299,408,2.299,409,3.03,410,2.299,411,2.043,412,2.468,413,2.299,414,2.043,415,2.299,416,2.043,417,1.608,418,2.299,419,2.299,603,6.03,1101,6.38,1490,6.055,2017,6.645,2018,4.721,2019,6.842,2020,5.356,2021,5.356]],["title/classes/ParameterListItem.html",[0,0.232,208,2.388]],["body/classes/ParameterListItem.html",[0,0.435,2,0.707,3,0.068,4,0.068,5,0.068,8,0.707,11,1.284,32,0.299,36,0.572,38,1.64,39,0.549,42,0.22,44,0.482,45,0.01,46,0.573,47,0.468,50,1.07,51,0.138,57,0.156,58,1.2,79,1.638,89,1.282,90,1.282,91,1.216,100,1.737,135,0.004,136,0.006,137,0.004,140,2.286,142,3.308,143,4.665,144,3.575,145,2.49,146,2.993,147,2.49,148,2.49,149,2.042,150,2.486,151,2.49,152,2.49,153,2.49,154,2.49,155,2.49,157,0.672,158,1.847,159,1.637,160,2.117,161,1.161,162,2.49,163,2.042,164,2.042,165,2.49,166,2.383,167,2.49,168,2.49,169,2.49,170,2.49,171,2.49,172,2.49,173,2.49,174,2.49,175,3.457,176,1.105,177,2.939,178,2.49,179,3.457,180,1.292,181,1.686,182,3.051,183,2.49,184,1.591,185,1.686,186,1.591,187,2.117,188,2.49,189,2.49,190,2.49,191,2.49,192,2.383,193,2.383,194,2.383,195,3.145,196,3.308,197,2.042,198,2.286,199,2.383,200,2.383,201,2.383,202,1.79,203,2.49,204,2.49,205,2.34,206,2.49,207,2.49,208,3.645,209,2.49,210,2.49,2022,4.171,2023,4.171]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.232,41,2.134]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.41,1,2.65,2,0.523,3,0.05,4,0.05,5,0.101,6,1.566,7,1.412,8,1.411,9,3.907,10,1.626,11,1.922,12,2.88,13,3.33,14,3.528,15,1.459,16,3.201,17,2.01,18,3.201,19,3.064,20,2.55,21,1.763,22,1.691,23,3.167,24,2.406,25,2.952,26,3.201,27,2.952,28,1.345,29,2.659,30,3.071,31,2.659,32,0.379,33,1.309,34,0.204,35,0.554,36,1.093,37,1.819,38,1.342,39,0.308,41,2.744,42,0.353,44,0.357,45,0.01,46,0.305,47,0.346,51,0.117,52,0.497,53,3.221,54,1.412,55,2.138,56,1.566,57,0.148,58,0.639,59,1.511,60,2.65,61,1.511,62,1.938,63,2.564,64,1.459,65,3.071,66,3.368,67,3.858,68,3.288,69,2.65,70,1.691,71,2.279,72,2.855,73,2.265,74,3.168,75,2.65,76,1.682,77,1.96,78,2.764,79,1.495,80,3.064,81,3.064,82,3.168,83,3.055,84,2.659,85,2.659,86,2.201,87,2.659,88,1.763,89,1.18,90,1.18,91,1.12,92,1.763,93,1.691,94,1.763,95,1.763,96,1.626,97,1.247,98,0.903,99,1.691,100,2.333,101,2.659,102,2.65,103,2.362,104,1.691,105,0.95,106,1.691,107,1.691,108,1.566,109,3.288,110,0.926,111,1.763,112,1.626,113,1.691,114,2.659,115,1.203,116,1.763,117,1.763,118,3.565,119,1.691,120,1.763,121,2.659,122,1.763,123,2.55,124,0.688,125,1.763,126,1.691,127,1.763,128,1.691,129,1.763,130,2.55,131,2.55,132,1.763,133,1.763,134,1.626,135,0.003,136,0.005,137,0.003,2024,3.086,2025,3.086,2026,3.086,2027,3.086,2028,3.086,2029,3.086]],["title/classes/Process.html",[0,0.232,177,2.212]],["body/classes/Process.html",[0,0.435,2,0.71,3,0.068,4,0.068,5,0.068,8,0.71,11,1.29,32,0.299,36,0.575,38,1.64,39,0.549,42,0.22,44,0.484,45,0.01,46,0.575,47,0.47,50,0.864,51,0.139,57,0.156,58,1.203,79,1.62,89,1.283,90,1.283,91,1.217,100,1.744,135,0.004,136,0.006,137,0.004,140,2.295,142,3.317,143,4.515,144,3.293,145,2.501,146,2.996,147,2.501,148,2.501,149,2.05,150,2.493,151,2.501,152,2.501,153,2.501,154,2.501,155,2.501,157,0.675,158,1.855,159,1.644,160,2.125,161,1.166,162,3.98,163,2.05,164,2.05,165,2.501,166,2.392,167,2.501,168,2.501,169,2.501,170,2.501,171,2.501,172,2.501,173,2.501,174,2.501,175,3.467,176,1.109,177,3.383,178,2.501,179,3.467,180,1.296,181,1.693,182,3.059,183,2.501,184,1.598,185,1.693,186,1.598,187,2.125,188,2.501,189,2.501,190,2.501,191,2.501,192,2.392,193,2.392,194,2.392,195,3.149,196,3.317,197,2.05,198,2.295,199,2.392,200,2.392,201,2.392,202,1.798,203,2.501,204,2.501,205,2.347,206,2.501,207,2.501,208,3.182,209,2.501,210,2.501,621,2.501,2030,4.189,2031,4.189,2032,4.189]],["title/classes/RejectLogIn.html",[0,0.232,69,2.061]],["body/classes/RejectLogIn.html",[0,0.409,1,2.636,2,0.519,3,0.05,4,0.05,5,0.108,6,1.552,7,1.399,8,1.429,9,4.035,10,1.611,11,2.054,12,2.888,13,3.446,14,3.514,15,1.446,16,3.548,17,2.141,18,3.548,19,3.21,20,3.054,21,1.747,22,1.675,23,3.385,24,2.667,25,3.273,26,3.548,27,3.273,28,1.491,29,3.184,30,3.404,31,2.64,32,0.385,33,1.336,34,0.202,35,0.55,36,0.915,37,1.978,38,1.397,39,0.306,40,1.166,41,2.263,42,0.293,44,0.353,45,0.01,46,0.303,47,0.343,49,0.574,50,0.455,51,0.116,52,0.492,53,2.55,54,1.399,55,2.369,56,1.552,57,0.147,58,0.634,59,1.497,60,2.636,61,1.497,62,1.925,63,2.55,64,1.446,65,3.054,66,3.36,67,3.845,68,3.273,69,2.938,70,1.675,71,2.263,72,2.842,73,2.252,74,3.155,75,2.636,76,1.388,77,1.952,78,1.354,79,1.252,80,1.399,81,1.399,82,1.446,83,1.497,84,2.64,85,2.64,86,2.186,87,2.64,88,1.747,89,1.177,90,1.177,91,1.117,92,1.747,93,1.675,94,1.747,95,1.747,96,1.611,97,1.236,98,0.895,99,1.675,100,2.586,101,2.64,102,2.938,103,2.346,104,1.675,105,0.942,106,1.675,107,1.675,108,1.552,109,3.273,110,0.918,111,1.747,112,1.611,113,1.675,114,3.184,115,1.44,116,2.64,117,2.64,118,3.81,119,2.533,120,2.64,121,3.184,122,2.64,123,3.404,124,0.682,125,1.747,126,1.675,127,1.747,128,1.675,129,1.747,130,2.533,131,2.533,132,1.747,133,1.747,134,1.611,135,0.003,136,0.005,137,0.003,214,2.187,2033,4.623,2034,3.058]],["title/classes/RouterStateUrl.html",[0,0.232,530,3.043]],["body/classes/RouterStateUrl.html",[0,0.337,2,0.807,3,0.077,4,0.116,5,0.077,7,2.177,11,2.192,13,3.59,28,1.143,32,0.214,33,0.828,38,1.271,39,0.419,42,0.251,44,0.914,45,0.01,46,0.471,47,0.534,51,0.132,57,0.132,79,1.336,86,2.996,89,0.747,90,0.747,91,0.708,115,1.84,135,0.005,136,0.007,137,0.005,176,2.011,180,1.413,184,3.1,202,2.719,228,2.898,243,2.526,279,1.429,296,1.678,412,2.285,489,2.719,521,3.782,529,3.138,530,4.971,578,3.323,678,4.718,701,4.718,711,5.373,761,4.718,786,2.33,876,4.423,1283,3.323,1284,3.545,1285,6.097,1288,4.195,1289,5.583,1291,4.195,1292,6.097,1294,4.195,1295,3.823,1296,6.529,1297,3.823,1298,5.088,1299,5.583,1300,6.529,1301,5.583,1302,5.583,1303,6.097,1304,5.088,1305,5.583,1306,5.583,1307,5.583,1308,5.583,1309,6.691,1310,5.583,1311,5.583,1312,4.195,1313,4.195,1314,4.195,1315,4.195,1316,4.195,1317,4.195,1318,4.195,2035,4.76,2036,4.76]],["title/classes/SelectLightCard.html",[0,0.232,231,2.134]],["body/classes/SelectLightCard.html",[0,0.434,2,0.7,3,0.067,4,0.067,5,0.067,8,1.422,12,1.373,32,0.393,33,1.44,34,0.273,35,0.684,36,0.789,37,2.213,38,1.496,39,0.437,40,1.574,42,0.348,44,0.477,45,0.01,46,0.408,47,0.463,49,0.774,50,0.614,51,0.119,52,0.664,57,0.155,58,0.855,76,1.238,77,2.201,89,1.315,90,1.315,91,1.248,124,1.782,135,0.004,136,0.006,137,0.004,157,0.664,211,3.238,212,3.768,213,2.173,214,2.596,217,2.463,218,2.546,219,1.827,220,1.718,221,2.261,222,3.356,223,4.655,224,2.58,225,3.128,226,2.916,227,2.357,228,1.887,229,3.356,230,2.192,231,3.502,232,2.094,233,1.207,234,2.261,235,2.02,236,3.238,237,2.261,238,2.089,239,1.574,240,1.53,241,1.771,242,1.771,243,1.373,244,1.448,245,1.619,246,2.463,247,2.463,248,2.261,249,2.463,250,2.463,251,3.431,252,2.463,253,2.463,254,2.463,255,2.261,256,2.463,257,2.463,258,2.463,2037,5.748,2038,4.126]],["title/modules/ServicesModule.html",[420,1.761,433,3.043]],["body/modules/ServicesModule.html",[0,0.256,3,0.078,4,0.104,5,0.104,28,1.155,36,0.66,39,0.318,42,0.253,45,0.01,47,0.716,51,0.183,57,0.089,73,1.945,105,1.482,124,1.074,135,0.005,136,0.007,137,0.005,180,1.074,202,2.739,233,1.408,282,1.307,296,1.275,304,0.903,347,3.584,360,2.004,361,1.945,362,2.004,363,2.004,364,2.004,365,2.004,366,1.689,367,1.945,368,2.004,369,2.004,370,2.004,371,1.945,372,2.004,373,1.945,374,2.004,375,2.004,376,2.004,377,2.004,381,1.645,420,1.945,421,3.36,422,2.276,423,2.637,424,2.873,425,2.749,426,4.274,427,2.442,433,6.319,435,3.645,436,2.873,438,2.535,442,3.772,446,2.749,447,3.996,450,2.749,482,3.584,483,3.865,490,3.36,588,2.873,632,3.996,633,3.584,643,4.137,740,2.356,1029,4.137,1035,3.584,1049,4.868,1157,3.865,1208,5.751,1210,5.751,1226,5.376,1241,4.242,1476,5.376,1675,5.105,1696,3.865,2039,4.242,2040,4.242,2041,5.693,2042,4.813,2043,4.813,2044,6.382,2045,6.382,2046,4.813,2047,4.813,2048,4.813,2049,4.813,2050,6.382,2051,4.813,2052,4.813]],["title/classes/State.html",[0,0.232,11,1.342]],["body/classes/State.html",[0,0.435,2,0.705,3,0.068,4,0.068,5,0.068,8,0.705,11,1.78,32,0.298,36,0.571,38,1.64,39,0.549,42,0.219,44,0.481,45,0.01,46,0.572,47,0.467,50,0.86,51,0.138,57,0.155,58,1.198,79,1.618,89,1.281,90,1.281,91,1.215,100,1.732,135,0.004,136,0.006,137,0.004,140,2.279,142,3.302,143,4.503,144,3.284,145,2.483,146,2.991,147,2.483,148,2.483,149,2.036,150,2.481,151,2.483,152,2.483,153,2.483,154,2.483,155,2.483,157,0.67,158,2.942,159,1.633,160,2.111,161,1.158,162,3.966,163,2.036,164,2.036,165,2.483,166,2.376,167,2.483,168,2.483,169,2.483,170,2.483,171,2.483,172,2.483,173,2.483,174,2.483,175,3.451,176,1.102,177,2.933,178,2.483,179,3.451,180,1.289,181,1.681,182,3.045,183,2.483,184,1.587,185,1.681,186,1.587,187,2.111,188,2.483,189,2.483,190,2.483,191,2.483,192,2.376,193,2.376,194,2.376,195,3.143,196,3.302,197,2.036,198,2.279,199,2.376,200,2.376,201,2.376,202,1.786,203,2.483,204,2.483,205,2.336,206,2.483,207,2.483,208,3.167,209,2.483,210,2.483,621,3.451,834,3.302,969,2.904,2053,4.16,2054,4.16]],["title/modules/StateModule.html",[420,1.761,434,3.043]],["body/modules/StateModule.html",[0,0.273,3,0.083,4,0.108,5,0.108,9,2.599,34,0.339,36,0.703,42,0.27,45,0.01,51,0.18,52,1.071,57,0.095,73,2.069,105,1.577,115,1.718,135,0.005,136,0.007,137,0.005,180,1.142,202,2.853,233,1.499,282,1.39,296,1.356,304,0.961,360,2.132,361,2.069,362,2.132,363,2.132,364,2.132,365,2.132,366,1.798,367,2.069,368,2.132,369,2.132,370,2.132,371,2.069,372,2.132,373,2.069,374,2.132,375,2.132,376,2.132,377,2.132,381,1.75,420,2.069,422,2.422,423,2.806,424,3.968,425,2.925,426,3.968,427,2.599,434,5.896,435,3.797,436,3.057,438,3.502,442,3.888,447,4.162,450,2.925,482,3.814,483,4.113,492,4.107,493,3.206,514,3.814,521,3.057,529,4.383,531,4.514,572,3.814,573,3.814,576,4.951,947,2.806,1208,5.928,1210,5.928,1283,5.153,1285,5.928,1292,5.339,1300,4.113,1303,4.113,2055,4.514,2056,4.514,2057,5.121,2058,5.121,2059,5.121,2060,5.121,2061,5.121,2062,4.514,2063,6.647,2064,5.121,2065,5.121,2066,5.121,2067,5.121,2068,5.121,2069,5.121,2070,5.121,2071,5.121,2072,6.647,2073,5.121,2074,5.121,2075,5.121,2076,5.121,2077,5.121,2078,5.121,2079,5.121]],["title/classes/Third.html",[0,0.232,164,2.134]],["body/classes/Third.html",[0,0.428,2,0.662,3,0.063,4,0.063,5,0.063,8,0.662,11,1.702,32,0.313,34,0.258,36,0.881,38,1.634,39,0.541,42,0.291,44,0.639,45,0.01,46,0.691,47,0.62,50,0.823,51,0.133,57,0.153,58,1.145,79,1.681,89,1.261,90,1.261,91,1.196,100,1.625,135,0.004,136,0.006,137,0.004,140,2.139,142,3.157,143,4.399,144,3.193,145,2.33,146,2.948,147,2.33,148,2.33,149,1.911,150,2.373,151,2.33,152,2.33,153,2.33,154,2.33,155,2.33,157,1.124,158,1.729,159,1.532,160,1.98,161,1.086,162,3.832,163,1.911,164,2.706,165,2.33,166,2.229,167,3.832,168,2.33,169,2.33,170,2.33,171,2.33,172,2.33,173,2.33,174,2.33,175,3.3,176,1.034,177,2.805,178,2.33,179,3.3,180,1.233,181,1.577,182,3.677,183,2.33,184,1.489,185,1.577,186,1.489,187,3.257,188,2.33,189,2.33,190,2.33,191,2.33,192,2.229,193,2.229,194,2.229,195,3.087,196,3.157,197,1.911,198,2.139,199,2.229,200,2.229,201,2.229,202,1.675,203,2.33,204,2.33,205,2.234,206,2.33,207,2.33,208,3.029,209,2.33,210,2.33,282,1.501,296,1.034,621,4.399,2080,5.528,2081,3.903,2082,5.528,2083,5.528,2084,4.44,2085,5.528,2086,5.528,2087,3.903,2088,3.903,2089,3.903]],["title/classes/ThirdMenu.html",[0,0.232,185,1.761]],["body/classes/ThirdMenu.html",[0,0.434,2,0.7,3,0.067,4,0.067,5,0.067,8,0.7,11,1.27,32,0.297,36,0.566,38,1.639,39,0.548,42,0.217,44,0.477,45,0.01,46,0.569,47,0.463,50,0.855,51,0.137,57,0.155,58,1.191,79,1.663,89,1.279,90,1.279,91,1.213,100,1.718,135,0.004,136,0.006,137,0.004,140,2.261,142,3.283,143,4.77,144,3.272,145,2.463,146,2.986,147,2.463,148,2.463,149,2.02,150,2.467,151,2.463,152,2.463,153,2.463,154,2.463,155,2.463,157,0.664,158,1.827,159,1.619,160,2.094,161,1.148,162,2.463,163,2.02,164,2.02,165,2.463,166,2.357,167,2.463,168,2.463,169,2.463,170,2.463,171,2.463,172,2.463,173,2.463,174,2.463,175,3.431,176,1.093,177,2.916,178,2.463,179,3.431,180,1.282,181,1.667,182,3.768,183,2.463,184,1.574,185,2.322,186,2.192,187,3.356,188,3.949,189,2.463,190,2.463,191,2.463,192,2.357,193,2.357,194,2.357,195,3.136,196,3.283,197,2.02,198,2.261,199,2.357,200,2.357,201,2.357,202,1.771,203,2.463,204,2.463,205,2.322,206,2.463,207,2.463,208,3.149,209,2.463,210,2.463,2090,3.636,2091,4.126]],["title/classes/ThirdMenuEntry.html",[0,0.232,182,2.296]],["body/classes/ThirdMenuEntry.html",[0,0.434,2,0.704,3,0.067,4,0.067,5,0.067,8,0.704,11,1.277,32,0.298,36,0.569,38,1.639,39,0.548,42,0.218,44,0.479,45,0.01,46,0.571,47,0.465,50,0.859,51,0.138,57,0.155,58,1.195,79,1.664,89,1.28,90,1.28,91,1.214,100,1.727,135,0.004,136,0.006,137,0.004,140,2.273,142,3.295,143,4.778,144,3.28,145,2.477,146,2.99,147,2.477,148,2.477,149,2.031,150,2.476,151,2.477,152,2.477,153,2.477,154,2.477,155,2.477,157,0.668,158,1.837,159,1.628,160,2.105,161,1.155,162,2.477,163,2.031,164,2.031,165,2.477,166,2.37,167,2.477,168,2.477,169,2.477,170,2.477,171,2.477,172,2.477,173,2.477,174,2.477,175,3.444,176,1.099,177,2.927,178,2.477,179,3.444,180,1.287,181,1.676,182,3.494,183,2.477,184,2.53,185,1.676,186,2.2,187,2.105,188,2.477,189,2.477,190,2.477,191,2.477,192,2.37,193,2.37,194,2.37,195,3.141,196,3.295,197,2.031,198,2.273,199,2.37,200,2.37,201,2.37,202,1.781,203,2.477,204,2.477,205,2.331,206,2.477,207,2.477,208,3.161,209,2.477,210,2.477,2090,3.656,2092,4.149]],["title/modules/ThirdpartyModule.html",[420,1.761,2093,3.246]],["body/modules/ThirdpartyModule.html",[0,0.309,3,0.094,4,0.117,5,0.117,36,0.797,45,0.01,51,0.17,57,0.107,73,2.346,105,1.788,135,0.006,136,0.008,137,0.006,233,1.699,304,1.09,360,2.417,361,2.346,362,2.417,363,2.417,364,2.417,365,2.417,366,2.038,367,2.346,368,2.417,369,2.417,370,2.417,371,2.346,372,2.417,373,2.346,374,2.417,375,2.417,376,2.417,377,2.417,381,1.984,405,3.177,420,2.346,422,2.746,423,3.182,424,4.671,425,3.317,426,3.467,427,2.946,435,4.112,436,3.467,438,3.792,442,3.792,447,4.507,450,3.317,459,4.054,501,5.118,2093,6.537,2094,5.118,2095,5.118,2096,5.118,2097,5.982,2098,5.807,2099,5.118]],["title/modules/ThirdpartyRoutingModule.html",[420,1.761,2097,3.043]],["body/modules/ThirdpartyRoutingModule.html",[0,0.324,3,0.099,4,0.12,5,0.12,36,0.835,45,0.01,51,0.173,57,0.113,105,1.874,135,0.006,136,0.008,137,0.006,176,1.612,233,1.781,259,1.391,304,1.142,360,2.534,361,2.459,362,2.534,363,2.534,364,2.534,365,2.534,366,2.137,367,2.459,368,2.534,369,2.534,370,2.534,371,2.459,372,2.534,373,2.459,374,2.534,375,2.534,376,2.534,377,2.534,405,2.748,422,2.878,427,3.088,438,3.206,442,3.903,485,4.533,487,5.519,488,5.002,489,3.476,490,5.173,491,4.533,494,4.533,498,4.533,612,4.888,2097,5.173,2099,5.364,2100,6.086]],["title/classes/ThirdsI18nLoader.html",[0,0.232,2101,3.246]],["body/classes/ThirdsI18nLoader.html",[0,0.258,2,0.552,3,0.053,4,0.053,5,0.053,17,2.303,24,1.397,28,1.835,32,0.217,33,0.843,34,0.215,38,0.581,39,0.215,42,0.255,44,0.56,45,0.01,46,0.573,47,0.543,51,0.17,52,0.524,57,0.107,79,1.629,115,1.495,135,0.006,136,0.005,137,0.003,150,1.397,161,1.611,164,2.371,176,2.137,180,1.95,181,1.315,184,1.241,185,1.315,186,2.444,187,3.964,197,1.593,218,1.441,220,1.355,233,0.952,243,1.083,279,2.386,282,1.315,285,2.272,286,3.608,296,0.862,304,0.611,305,1.083,306,1.315,308,1.143,315,1.943,316,1.943,318,2.272,324,1.143,417,0.977,446,1.859,492,1.651,505,2.614,626,1.283,627,3.623,629,2.424,630,1.714,631,1.943,638,2.038,639,1.943,643,2.936,682,2.038,711,4.288,740,2.371,862,3.048,864,1.859,873,2.146,905,2.038,918,2.272,928,2.614,959,2.146,1029,3.645,1080,2.614,1121,2.614,1259,4.647,1260,5.148,1261,4.647,1357,1.783,1470,2.614,1718,5.148,2084,3.891,2101,3.608,2102,2.614,2103,5.148,2104,4.844,2105,4.269,2106,3.255,2107,4.269,2108,3.255,2109,4.269,2110,2.868,2111,4.269,2112,2.868,2113,2.868,2114,2.868,2115,2.868,2116,2.868,2117,2.868,2118,2.868,2119,2.868,2120,2.868,2121,2.868,2122,2.868,2123,2.868,2124,2.868,2125,2.868,2126,2.868,2127,2.868,2128,2.868,2129,2.868,2130,2.868,2131,2.868,2132,2.868,2133,2.868,2134,2.868,2135,5.1,2136,2.868,2137,2.868,2138,4.269,2139,2.868,2140,2.868,2141,2.868,2142,2.868,2143,2.868,2144,2.868,2145,2.868,2146,2.868,2147,2.868,2148,2.868,2149,2.868,2150,2.868,2151,6.039,2152,5.1,2153,2.868,2154,2.868,2155,3.891,2156,2.868,2157,2.868,2158,2.868,2159,2.868,2160,2.868,2161,2.868,2162,4.269,2163,4.269,2164,4.269,2165,2.614,2166,2.868,2167,2.868,2168,2.868,2169,2.868,2170,2.868,2171,2.868,2172,2.868,2173,2.868,2174,2.868,2175,2.868,2176,2.868,2177,2.868,2178,2.868,2179,2.868,2180,2.868,2181,2.868,2182,4.269,2183,2.868,2184,2.868,2185,2.868,2186,2.868,2187,2.868,2188,2.868,2189,2.868,2190,2.868,2191,2.868,2192,2.868,2193,4.269,2194,2.868,2195,2.868,2196,2.868,2197,2.868,2198,2.868,2199,2.868,2200,2.868,2201,2.868,2202,2.868,2203,2.868,2204,2.868,2205,4.269,2206,2.868,2207,4.269,2208,2.868,2209,4.269,2210,2.868,2211,2.868,2212,4.269,2213,5.1,2214,2.868,2215,2.868,2216,2.868,2217,2.868,2218,2.868,2219,2.868,2220,2.868,2221,2.868,2222,2.868,2223,2.868,2224,2.868]],["title/injectables/ThirdsService.html",[626,1.155,1029,2.212]],["body/injectables/ThirdsService.html",[0,0.218,3,0.042,4,0.042,5,0.042,17,2.321,24,1.12,28,1.759,32,0.349,33,0.454,34,0.173,35,0.487,38,0.9,39,0.173,42,0.428,44,0.847,45,0.01,46,0.769,47,0.822,49,0.947,50,0.751,51,0.161,52,0.42,57,0.093,79,1.69,115,1.779,135,0.005,136,0.004,137,0.003,150,1.12,161,1.59,164,2.002,176,2.024,180,1.895,181,1.054,184,0.995,185,2.039,186,2.179,187,4.22,197,1.277,218,2.235,220,1.086,233,0.763,243,0.868,279,2.561,282,1.111,285,3.988,286,3.758,296,1.986,304,0.489,305,0.868,306,1.054,308,0.916,315,1.557,316,1.557,318,1.821,324,0.916,417,0.783,446,1.49,492,1.324,505,2.095,626,1.083,627,4.122,629,1.943,630,1.374,631,1.557,638,1.633,639,1.557,643,3.492,682,1.633,711,3.93,740,2.002,830,1.155,862,2.658,864,1.49,873,1.72,905,1.633,918,1.821,928,2.095,959,4.091,1029,2.899,1074,1.821,1080,2.095,1121,2.095,1139,2.095,1259,5.528,1260,4.588,1261,4.588,1357,1.429,1470,2.095,1718,5.287,2084,4.588,2101,1.943,2102,2.095,2103,4.053,2105,2.299,2107,2.299,2109,2.299,2110,2.299,2111,3.605,2112,2.299,2113,2.299,2114,2.299,2115,2.299,2116,2.299,2117,4.447,2118,4.447,2119,4.447,2120,4.447,2121,4.447,2122,2.299,2123,2.299,2124,2.299,2125,2.299,2126,2.299,2127,2.299,2128,2.299,2129,2.299,2130,2.299,2131,2.299,2132,2.299,2133,2.299,2134,3.605,2135,4.447,2136,2.299,2137,3.605,2138,3.605,2139,2.299,2140,2.299,2141,3.605,2142,4.447,2143,2.299,2144,2.299,2145,2.299,2146,2.299,2147,2.299,2148,2.299,2149,2.299,2150,3.605,2151,5.469,2152,4.447,2153,2.299,2154,2.299,2155,3.285,2156,2.299,2157,2.299,2158,2.299,2159,2.299,2160,2.299,2161,2.299,2162,3.605,2163,3.605,2164,3.605,2165,4.588,2166,2.299,2167,2.299,2168,2.299,2169,2.299,2170,2.299,2171,2.299,2172,2.299,2173,2.299,2174,2.299,2175,2.299,2176,3.605,2177,2.299,2178,2.299,2179,2.299,2180,2.299,2181,2.299,2182,3.605,2183,2.299,2184,2.299,2185,2.299,2186,2.299,2187,2.299,2188,3.605,2189,2.299,2190,2.299,2191,2.299,2192,2.299,2193,3.605,2194,2.299,2195,2.299,2196,2.299,2197,2.299,2198,2.299,2199,2.299,2200,2.299,2201,2.299,2202,2.299,2203,2.299,2204,2.299,2205,3.605,2206,2.299,2207,3.605,2208,2.299,2209,3.605,2210,2.299,2211,2.299,2212,3.605,2213,4.447,2214,2.299,2215,2.299,2216,2.299,2217,2.299,2218,2.299,2219,2.299,2220,2.299,2221,2.299,2222,2.299,2223,2.299,2224,2.299,2225,4.091,2226,4.091,2227,4.091,2228,4.091,2229,4.091,2230,3.605,2231,4.091,2232,4.091,2233,4.091,2234,2.609,2235,2.609,2236,2.609,2237,2.609,2238,2.609,2239,2.609,2240,2.609,2241,2.609,2242,2.609,2243,2.609,2244,2.609,2245,2.609,2246,2.609,2247,2.609,2248,2.609,2249,2.609,2250,2.609,2251,2.609]],["title/classes/ThirdsServiceMock.html",[0,0.232,2252,3.501]],["body/classes/ThirdsServiceMock.html",[0,0.331,2,1.053,3,0.101,4,0.101,5,0.101,17,2.3,28,2.01,34,0.411,42,0.395,45,0.009,51,0.156,57,0.115,135,0.007,136,0.008,137,0.007,180,1.385,182,3.272,185,2.51,282,2.037,296,1.987,305,2.067,332,5.237,1357,3.403,2165,6.723,2230,7.103,2252,6.025,2253,5.474,2254,6.211,2255,6.211,2256,6.211,2257,6.211,2258,6.211,2259,6.211,2260,6.211,2261,6.211,2262,6.211,2263,6.211,2264,6.211,2265,6.211,2266,6.211,2267,6.211,2268,6.211,2269,6.211,2270,6.211,2271,6.211]],["title/components/TimeFilterComponent.html",[259,0.996,411,1.662]],["body/components/TimeFilterComponent.html",[0,0.195,3,0.059,4,0.059,5,0.059,17,1.934,28,1.797,32,0.304,33,0.918,34,0.242,35,0.628,39,0.242,42,0.416,44,0.423,45,0.01,46,0.671,47,0.41,49,0.686,50,0.544,51,0.174,52,0.589,57,0.068,62,1.523,91,0.544,98,1.071,110,1.098,115,1.935,135,0.004,136,0.006,137,0.004,157,0.85,180,1.381,181,2.133,259,1.415,260,1.395,261,2.197,262,1.523,264,1.57,265,1.57,267,2.832,268,1.57,269,3.751,273,2.265,279,2.453,282,1.433,283,3.1,284,1.674,296,1.64,297,2.013,304,0.686,305,1.218,306,1.478,308,1.284,309,1.478,324,1.284,350,2.412,367,2.502,381,1.25,382,2.265,383,2.265,384,1.57,385,2.909,386,1.57,387,1.57,388,1.357,389,1.57,390,1.395,391,1.57,392,1.357,393,2.265,394,1.395,395,1.57,396,1.357,397,1.57,398,1.395,399,1.357,400,1.57,401,1.395,402,1.57,403,1.395,404,1.57,405,1.357,406,1.57,407,1.57,408,1.57,409,1.395,410,1.57,411,2.585,412,2.701,413,1.57,414,1.395,415,1.57,416,1.395,417,2.371,418,1.57,419,1.57,453,2.412,580,2.892,585,2.412,586,2.412,587,2.184,588,2.184,590,2.554,593,2.291,638,2.291,639,2.184,862,1.927,983,3.304,1097,5.619,1126,3.225,1132,2.725,1466,2.938,1500,6.464,1501,6.464,1675,4.832,1696,2.938,1924,5.444,1926,4.973,2272,2.938,2273,5.457,2274,4.652,2275,5.457,2276,5.457,2277,6.192,2278,5.974,2279,5.974,2280,5.278,2281,3.659,2282,3.659,2283,3.659,2284,3.225,2285,3.659,2286,3.225,2287,3.659,2288,2.938,2289,3.225,2290,4.652,2291,3.225,2292,3.225,2293,4.652,2294,5.278,2295,3.225,2296,3.225,2297,3.225,2298,3.659,2299,3.225,2300,3.659,2301,3.659,2302,3.659,2303,3.659,2304,5.278,2305,3.659,2306,3.659,2307,3.659,2308,3.659,2309,5.278,2310,3.659,2311,3.659,2312,3.659,2313,3.659,2314,3.225,2315,3.225,2316,3.225,2317,4.652,2318,3.659,2319,3.225,2320,3.225,2321,3.225,2322,5.278,2323,5.278,2324,5.278,2325,3.659,2326,5.278,2327,3.659,2328,3.225,2329,5.278,2330,5.278,2331,5.278]],["title/components/TimeLineComponent.html",[259,0.996,414,1.662]],["body/components/TimeLineComponent.html",[0,0.281,3,0.086,4,0.086,5,0.086,32,0.237,33,1.178,34,0.349,39,0.495,42,0.356,45,0.009,46,0.67,51,0.11,57,0.098,98,1.543,110,1.582,135,0.006,136,0.007,137,0.006,157,1.091,259,1.711,260,2.011,261,2.82,262,2.195,264,2.263,265,2.263,267,3.423,268,2.263,269,3.901,273,2.907,282,1.839,283,3.612,296,1.397,297,2.011,304,0.989,381,1.802,382,2.907,383,2.907,384,2.263,385,3.39,386,2.263,387,2.263,388,1.955,389,2.263,390,2.011,391,2.263,392,1.955,393,2.907,394,2.011,395,2.263,396,1.955,397,2.263,398,2.011,399,1.955,400,2.263,401,2.011,402,2.263,403,2.011,404,2.263,405,1.955,406,2.263,407,2.263,408,2.263,409,2.011,410,2.263,411,2.011,412,3.107,413,2.263,414,3.012,415,2.263,416,2.011,417,1.582,418,2.263,419,2.263,1173,5.97,1493,6.01,2332,6.595,2333,4.647,2334,7.898,2335,6.774,2336,5.273,2337,5.273,2338,6.774]],["title/injectables/TimeService.html",[626,1.155,1675,2.729]],["body/injectables/TimeService.html",[0,0.293,3,0.089,4,0.089,5,0.089,28,1.321,32,0.343,34,0.364,36,1.225,39,0.505,42,0.436,44,0.882,45,0.01,46,0.755,47,0.856,50,1.136,51,0.145,57,0.102,79,1.611,135,0.006,136,0.007,137,0.006,180,1.789,205,3.416,282,1.89,296,2.125,304,1.032,626,1.843,822,4.557,830,2.437,1675,4.357,2339,4.849,2340,6.96,2341,6.96,2342,8.023,2343,6.96,2344,5.502,2345,6.96,2346,5.502,2347,6.96,2348,5.502,2349,5.502,2350,8.023,2351,6.96,2352,5.502,2353,5.502,2354,6.96,2355,5.502,2356,5.502,2357,5.502,2358,5.502]],["title/interceptors/TokenInjector.html",[1177,3.501,2041,3.043]],["body/interceptors/TokenInjector.html",[0,0.29,3,0.089,4,0.089,5,0.089,10,2.872,17,2.17,32,0.341,33,0.948,34,0.361,39,0.361,42,0.4,44,0.879,45,0.01,46,0.752,47,0.853,51,0.166,57,0.101,89,1.086,90,1.086,91,1.228,135,0.006,136,0.007,137,0.006,176,2.014,180,1.544,184,2.079,282,1.879,296,1.833,304,1.023,305,1.815,324,1.914,446,3.114,626,1.833,643,4.279,1157,4.379,1175,6.422,1180,4.805,2041,4.831,2359,5.453,2360,4.805,2361,6.92,2362,6.92,2363,5.453,2364,5.453,2365,6.92,2366,8.753,2367,5.453,2368,6.92,2369,7.996,2370,5.453,2371,5.453,2372,6.92,2373,5.453,2374,5.453,2375,6.92,2376,5.453,2377,5.453,2378,5.453,2379,5.453,2380,5.453]],["title/classes/TryToLogIn.html",[0,0.232,19,1.994]],["body/classes/TryToLogIn.html",[0,0.411,1,2.664,2,0.528,3,0.051,4,0.051,5,0.102,6,1.579,7,1.423,8,1.433,9,3.989,10,1.639,11,1.93,12,2.883,13,3.34,14,3.721,15,1.471,16,3.217,17,2.016,18,3.217,19,3.231,20,2.566,21,1.777,22,1.705,23,3.411,24,2.418,25,2.967,26,3.217,27,2.967,28,1.352,29,2.675,30,3.086,31,2.675,32,0.384,33,1.342,34,0.206,35,0.558,36,0.922,37,1.99,38,1.403,39,0.31,40,1.187,41,2.293,42,0.296,44,0.36,45,0.01,46,0.308,47,0.349,49,0.584,50,0.463,51,0.117,52,0.501,53,2.576,54,1.423,55,2.148,56,1.579,57,0.148,58,0.645,59,1.523,60,2.664,61,1.523,62,1.95,63,2.576,64,1.471,65,3.086,66,3.427,67,3.87,68,3.301,69,2.664,70,1.705,71,2.293,72,2.867,73,2.276,74,3.179,75,2.664,76,1.406,77,1.967,78,1.378,79,1.261,80,1.423,81,1.423,82,1.471,83,1.523,84,2.675,85,2.675,86,2.215,87,2.675,88,1.777,89,1.183,90,1.183,91,1.122,92,1.777,93,1.705,94,2.675,95,2.675,96,2.467,97,1.893,98,1.371,99,2.566,100,2.609,101,3.217,102,3.179,103,2.858,104,2.566,105,1.442,106,2.566,107,1.705,108,1.579,109,3.301,110,0.934,111,1.777,112,1.639,113,1.705,114,2.675,115,1.21,116,1.777,117,1.777,118,3.58,119,1.705,120,1.777,121,2.675,122,1.777,123,2.566,124,0.694,125,1.777,126,1.705,127,1.777,128,1.705,129,1.777,130,2.566,131,2.566,132,1.777,133,1.777,134,1.639,135,0.003,136,0.005,137,0.003,214,2.21,2381,4.684,2382,3.111]],["title/classes/TryToLogOut.html",[0,0.232,72,1.994]],["body/classes/TryToLogOut.html",[0,0.414,1,2.711,2,0.543,3,0.052,4,0.052,5,0.103,6,1.625,7,1.465,8,1.44,9,4.018,10,1.687,11,1.958,12,2.883,13,3.377,14,3.762,15,1.515,16,3.274,17,2.038,18,3.274,19,3.113,20,2.623,21,1.83,22,1.755,23,3.453,24,2.46,25,3.019,26,3.274,27,3.019,28,1.376,29,2.734,30,3.14,31,2.734,32,0.373,33,1.353,34,0.212,35,0.57,36,0.786,37,1.727,38,1.413,39,0.212,41,2.343,42,0.169,45,0.01,49,0.601,50,0.477,51,0.119,52,0.516,53,2.622,54,1.465,55,2.186,56,1.625,57,0.149,58,0.664,59,1.568,60,2.711,61,1.568,62,1.993,63,2.622,64,1.515,65,3.14,66,3.495,67,3.912,68,3.35,69,2.711,70,1.755,71,2.343,72,3.113,73,2.316,74,3.219,75,2.711,76,1.437,77,1.992,78,1.419,79,1.277,80,1.465,81,1.465,82,1.515,83,1.568,84,2.734,85,2.734,86,2.264,87,2.734,88,1.83,89,1.194,90,1.194,91,1.132,92,1.83,93,1.755,94,1.83,95,1.83,96,1.687,97,1.294,98,0.937,99,1.755,100,2.647,101,3.274,102,2.711,103,2.908,104,1.755,105,0.986,106,1.755,107,1.755,108,1.625,109,3.898,110,1.437,111,2.734,112,2.522,113,2.623,114,2.734,115,1.237,116,1.83,117,1.83,118,3.632,119,1.755,120,1.83,121,2.734,122,1.83,123,2.623,124,0.714,125,1.83,126,1.755,127,1.83,128,1.755,129,1.83,130,2.623,131,2.623,132,1.83,133,1.83,134,1.687,135,0.003,136,0.005,137,0.003,2383,3.203]],["title/components/TypeFilterComponent.html",[259,0.996,416,1.662]],["body/components/TypeFilterComponent.html",[0,0.176,3,0.054,4,0.08,5,0.08,8,0.559,17,1.966,28,1.842,32,0.375,33,0.851,34,0.218,35,0.582,36,0.452,39,0.218,42,0.404,44,0.381,45,0.01,46,0.638,47,0.37,49,0.619,50,0.491,51,0.17,52,0.531,57,0.061,62,1.373,91,0.491,98,0.965,105,1.506,110,0.99,115,1.865,135,0.003,136,0.005,137,0.003,157,0.788,180,1.301,233,0.965,235,2.394,259,1.333,260,1.257,261,2.036,262,1.373,263,1.806,264,1.415,265,1.415,267,2.667,268,1.415,269,3.7,271,3.062,273,2.099,279,2.353,282,1.328,283,2.95,284,1.508,296,1.544,297,1.865,304,0.619,305,1.097,306,1.332,308,1.157,309,1.332,324,1.157,350,2.174,360,1.373,361,1.332,362,1.373,363,1.373,364,1.373,365,1.373,366,1.157,367,2.606,368,1.373,369,1.373,370,1.373,371,1.332,372,1.373,373,1.332,374,1.373,375,1.373,376,1.373,377,1.373,379,2.456,381,1.127,382,2.099,383,2.099,384,1.415,385,2.769,386,1.415,387,1.415,388,1.223,389,1.415,390,1.257,391,1.415,392,1.223,393,2.099,394,1.257,395,1.415,396,1.223,397,1.415,398,1.257,399,1.223,400,1.415,401,1.257,402,1.415,403,1.257,404,1.415,405,1.223,406,1.415,407,1.415,408,1.415,409,1.257,410,1.415,411,1.257,412,1.764,413,1.415,414,1.257,415,1.415,416,2.46,417,2.353,418,1.415,419,1.415,453,2.174,580,2.68,585,2.174,586,2.174,587,1.968,588,1.968,590,2.302,593,2.064,638,2.064,639,1.968,795,2.456,862,1.737,919,4.683,983,3.062,1007,5.685,1019,2.906,1097,5.472,1132,2.456,1412,4.683,1447,2.906,1466,2.648,1497,6.296,1498,6.296,1583,2.648,1586,2.648,1588,2.648,1830,2.906,1924,5.181,1926,5.533,2272,2.648,2273,5.139,2274,4.311,2275,5.139,2276,5.139,2278,5.685,2279,5.685,2284,2.906,2286,2.906,2288,2.648,2289,2.906,2290,4.311,2291,2.906,2292,2.906,2293,5.139,2295,2.906,2296,2.906,2297,2.906,2299,2.906,2314,2.906,2315,2.906,2316,2.906,2317,2.906,2319,2.906,2320,2.906,2321,2.906,2328,2.906,2384,5.831,2385,5.831,2386,3.297,2387,3.297,2388,3.297,2389,3.297,2390,3.297,2391,3.297,2392,3.297,2393,3.297,2394,4.891,2395,3.297,2396,3.297,2397,3.297,2398,3.297,2399,3.297,2400,3.297,2401,3.297,2402,3.297,2403,3.297,2404,3.297,2405,3.297,2406,3.297,2407,3.297,2408,3.297,2409,3.297,2410,3.297,2411,3.297,2412,3.297,2413,3.297,2414,3.297,2415,4.891,2416,4.891,2417,4.891,2418,4.891,2419,4.891,2420,6.89,2421,3.297,2422,3.297,2423,5.139,2424,4.891,2425,3.297,2426,4.891,2427,3.297,2428,5.831,2429,4.891,2430,6.89,2431,3.297,2432,3.297]],["title/classes/UpdatedSubscription.html",[0,0.232,236,2.134]],["body/classes/UpdatedSubscription.html",[0,0.437,2,0.72,3,0.069,4,0.069,5,0.069,8,1.43,12,1.414,32,0.382,33,1.449,34,0.281,35,0.698,37,2.063,38,1.505,39,0.479,42,0.309,45,0.01,49,0.797,50,0.632,51,0.122,52,0.684,57,0.156,58,0.88,76,1.275,77,2.224,89,1.323,90,1.323,91,1.255,124,1.797,135,0.004,136,0.006,137,0.004,157,0.684,211,3.288,212,3.538,213,2.237,217,2.536,218,2.597,219,1.881,220,1.768,221,2.327,222,3.408,223,4.688,224,2.613,225,3.176,226,2.975,227,2.426,228,1.943,229,3.408,230,2.237,231,3.288,232,2.155,233,1.243,234,2.327,235,2.079,236,3.545,237,2.327,238,2.122,239,1.62,240,1.575,241,1.823,242,1.823,243,1.414,244,1.491,245,1.667,246,2.536,247,2.536,248,2.327,249,2.536,250,2.536,251,2.536,252,2.536,253,3.501,254,2.536,255,2.327,256,2.536,257,2.536,258,2.536,2433,5.864]],["title/coverage.html",[2434,5.261]],["body/coverage.html",[0,0.47,1,0.943,5,0.032,6,3.392,8,0.338,11,0.614,15,0.943,19,0.913,24,3.661,25,2.851,28,0.479,32,0.09,41,0.977,45,0.01,55,0.761,60,0.943,63,0.913,69,0.943,72,0.913,74,0.943,75,0.943,78,0.884,98,0.584,110,0.599,135,0.002,136,0.003,137,0.002,140,3.533,144,0.913,150,0.856,157,0.321,158,0.884,161,0.555,164,0.977,177,1.012,182,1.051,185,0.806,208,1.093,211,0.977,212,3.397,213,3.397,222,1.012,225,0.943,226,1.012,229,1.012,231,0.977,236,0.977,238,1.545,259,1.774,260,0.761,266,1.758,308,0.7,310,1.393,311,1.602,313,1.602,317,1.758,319,1.093,321,1.602,322,1.602,388,0.74,390,0.761,392,0.74,394,0.761,396,0.74,398,0.761,399,0.74,401,0.761,403,0.761,405,0.74,409,0.761,411,0.761,414,0.761,416,0.761,417,0.599,465,1.602,492,2.136,516,2.853,518,4.348,522,1.393,523,1.393,524,1.393,525,1.393,526,1.393,530,1.393,538,1.393,540,1.393,557,1.393,561,1.393,563,1.393,566,1.393,570,1.393,572,1.486,573,1.486,575,1.602,576,1.486,578,1.393,580,1.093,581,2.301,594,1.249,598,1.758,613,1.486,614,3.779,626,2.032,632,1.249,634,1.486,641,1.486,643,1.012,786,4.527,817,1.393,827,2.647,828,1.602,831,1.758,951,1.602,957,2.455,978,1.758,1025,1.758,1026,1.486,1027,1.758,1029,1.012,1047,1.758,1049,1.191,1060,1.012,1061,1.139,1062,1.139,1067,3.927,1093,1.602,1095,1.602,1097,3.414,1098,1.602,1099,1.758,1104,1.758,1105,1.758,1133,1.758,1177,1.602,1199,2.647,1200,1.602,1206,1.315,1224,1.758,1226,1.315,1242,1.139,1243,1.139,1244,1.602,1245,1.486,1254,1.758,1265,3.382,1267,1.602,1268,1.758,1269,1.758,1283,1.393,1284,3.136,1321,1.758,1418,1.758,1458,1.758,1473,1.758,1474,1.758,1476,1.315,1490,1.602,1493,1.602,1497,1.602,1498,1.602,1500,1.602,1501,1.602,1513,1.758,1514,1.758,1567,1.602,1610,1.758,1614,1.758,1624,3.061,1632,3.061,1644,3.061,1649,1.139,1650,1.139,1651,1.139,1656,2.905,1675,1.249,1777,1.758,1780,1.758,1832,1.758,1839,1.393,1850,1.758,1867,1.758,1868,1.758,1905,1.758,1927,1.602,1948,1.758,1952,1.758,1963,2.647,1965,1.602,1967,1.602,1973,1.758,1995,1.602,2017,1.758,2018,1.758,2041,1.393,2101,1.486,2102,3.382,2252,1.602,2253,1.758,2272,2.647,2288,1.602,2332,1.758,2333,1.758,2339,1.758,2360,1.758,2423,1.758,2434,1.758,2435,1.995,2436,1.995,2437,1.758,2438,1.995,2439,1.995,2440,3.296,2441,7.351,2442,5.829,2443,1.995,2444,9.065,2445,7.759,2446,4.211,2447,4.89,2448,1.995,2449,1.995,2450,1.995,2451,1.995,2452,8.143,2453,4.211,2454,3.711,2455,4.211,2456,1.995,2457,1.995,2458,1.995,2459,1.995,2460,3.296,2461,3.296,2462,8.821,2463,4.211,2464,1.995,2465,1.995,2466,4.89,2467,4.89,2468,1.995,2469,1.995,2470,4.89,2471,1.995,2472,1.995,2473,1.995,2474,5.137,2475,1.758,2476,1.758,2477,1.758,2478,1.758,2479,1.758,2480,2.905,2481,2.905,2482,1.995,2483,1.995,2484,1.995,2485,2.905,2486,4.309,2487,1.758,2488,3.711,2489,1.758,2490,1.758,2491,1.758,2492,5.137,2493,1.758,2494,1.758,2495,5.684,2496,1.758,2497,1.758,2498,1.758,2499,1.758,2500,1.758,2501,1.758,2502,2.905,2503,1.758,2504,2.905,2505,1.995,2506,4.309,2507,1.758,2508,1.758,2509,1.758,2510,1.758,2511,1.758,2512,1.758,2513,2.905,2514,1.758,2515,1.758,2516,8.091,2517,1.995,2518,1.995,2519,1.995,2520,1.995,2521,1.995,2522,1.995,2523,1.995,2524,1.995,2525,1.995,2526,1.995,2527,1.995,2528,1.995,2529,1.995,2530,1.995,2531,1.995,2532,1.995,2533,1.995,2534,1.995,2535,1.995,2536,1.995,2537,1.995,2538,1.995,2539,1.995]],["title/dependencies.html",[423,2.876,2540,3.63]],["body/dependencies.html",[4,0.09,45,0.01,52,1.122,53,2.521,54,2.521,115,1.424,135,0.006,136,0.007,137,0.006,244,1.935,304,1.034,305,1.834,315,4.16,316,3.291,423,3.02,425,3.98,435,3.148,440,4.864,441,4.594,450,3.148,453,3.634,456,5.189,457,4.427,468,4.427,469,4.427,471,4.427,472,5.69,473,5.596,475,4.427,476,4.427,477,4.427,489,3.148,521,3.291,529,3.634,636,4.427,637,5.596,639,3.291,822,3.291,947,3.02,1088,4.858,1156,4.427,1334,4.427,2062,4.858,2541,5.512,2542,8.769,2543,5.512,2544,5.512,2545,5.512,2546,5.512,2547,5.512,2548,5.512,2549,6.968,2550,8.28,2551,5.512,2552,5.512,2553,4.858,2554,5.512,2555,5.512,2556,5.512,2557,5.512,2558,5.512,2559,5.512,2560,5.512,2561,5.512,2562,5.512,2563,5.512,2564,5.512,2565,5.512,2566,5.512,2567,5.512,2568,5.512,2569,5.512,2570,5.512,2571,5.512,2572,5.512]],["title/miscellaneous/enumerations.html",[2573,2.393,2574,4.625]],["body/miscellaneous/enumerations.html",[1,1.855,3,0.064,6,1.991,8,0.941,10,2.923,12,2.792,19,1.795,34,0.26,45,0.01,50,1.362,59,2.716,60,1.855,61,2.716,62,2.679,63,1.795,64,1.855,65,3.527,66,3.289,67,4.199,68,3.686,69,1.855,70,2.15,71,2.716,72,1.795,73,2.601,74,1.855,75,1.855,76,2.216,78,2.457,80,2.538,81,2.538,82,2.624,124,1.647,135,0.004,136,0.006,137,0.004,140,2.15,142,3.169,146,1.415,157,1.318,192,2.241,193,2.241,194,2.241,196,3.169,197,1.921,198,2.15,199,2.241,200,2.241,201,2.241,202,1.684,211,1.921,212,2.067,213,2.923,221,3.04,222,1.991,223,4.596,224,3.081,225,1.855,226,1.991,227,2.241,228,1.795,229,1.991,230,2.815,231,1.921,232,1.991,233,1.148,234,3.527,235,1.921,236,1.921,237,2.15,238,2.21,239,2.668,240,2.594,241,2.763,242,2.763,319,2.15,417,1.665,495,3.169,519,4.5,520,4.703,580,2.15,581,2.739,587,3.312,589,4.132,590,2.739,591,3.151,614,2.739,640,4.456,950,3.473,952,4.132,957,2.922,964,4.132,972,4.456,973,3.151,974,3.151,975,3.151,1059,3.658,1060,1.991,1061,2.241,1062,2.241,1242,2.241,1243,2.241,1567,3.151,1583,4.456,1586,5.169,1588,5.169,1606,3.458,1607,3.458,1608,3.458,1609,3.458,1624,2.456,1632,2.456,1636,2.739,1644,2.456,1648,3.658,1649,2.241,1650,2.241,1651,2.241,1967,3.151,1972,3.458,2573,2.587,2574,3.458,2575,5.548,2576,3.458,2577,3.458,2578,5.548,2579,3.924,2580,5.548,2581,3.458,2582,3.458,2583,3.924,2584,5.673,2585,3.458,2586,3.458,2587,3.924,2588,6.437,2589,5.548,2590,3.924,2591,3.924,2592,5.548,2593,3.924]],["title/index.html",[34,0.288,2594,3.842]],["body/index.html",[2,0.724,45,0.01,73,1.726,98,1.971,110,2.022,135,0.004,136,0.006,137,0.004,260,3.076,261,1.778,381,1.46,388,2.498,390,3.076,392,2.991,394,2.569,396,2.991,398,3.076,399,2.991,401,2.569,403,2.569,405,2.498,409,2.569,411,2.569,414,2.569,416,2.569,420,1.726,421,6.169,422,2.02,423,2.34,424,2.55,425,2.44,426,2.55,427,2.167,428,3.764,429,3.764,430,3.764,431,3.764,432,4.703,433,6.169,434,5.317,435,3.362,436,2.55,488,2.674,492,3.418,517,2.674,604,5.863,605,3.764,606,3.764,607,3.764,608,4.703,643,3.418,830,1.892,1029,3.418,1049,4.022,1201,6.169,1202,3.764,1203,3.764,1204,3.764,1205,3.764,1206,4.441,1226,4.441,1476,4.441,1480,6.666,1481,3.764,1482,3.764,1483,3.764,1484,3.764,1485,4.703,1675,4.217,2039,3.764,2040,3.764,2041,4.703,2055,3.764,2056,3.764,2093,5.863,2094,3.764,2095,3.764,2096,3.764,2097,4.703,2437,3.764,2454,3.764,2594,3.764,2595,4.271,2596,4.271,2597,4.271,2598,4.271]],["title/modules.html",[422,2.823]],["body/modules.html",[45,0.008,135,0.007,136,0.008,137,0.007,355,7.45,421,4.464,422,3.024,432,4.464,433,4.464,434,4.464,441,5.842,472,6.599,604,4.762,608,4.464,1201,4.464,1480,4.762,1485,4.464,2093,4.762,2097,4.464,2599,8.86,2600,9.072,2601,8.453]],["title/routes.html",[488,3.738]],["body/routes.html",[45,0.009,135,0.008,136,0.009,137,0.008,488,4.485]],["title/miscellaneous/typealiases.html",[2573,2.393,2602,5.248]],["body/miscellaneous/typealiases.html",[1,2.844,6,3.051,19,2.751,32,0.27,34,0.398,45,0.01,60,2.844,63,2.751,69,2.844,72,2.751,74,2.844,75,2.844,134,3.875,135,0.006,136,0.008,137,0.006,211,2.944,212,3.168,213,3.875,222,3.051,225,2.844,229,3.051,231,2.944,236,2.944,238,2.616,255,4.03,319,3.295,580,3.295,581,4.199,594,3.765,597,5.478,1060,3.051,1061,3.435,1062,3.435,1242,3.435,1243,3.435,1624,3.765,1631,5.135,1632,3.765,1640,5.135,1644,3.765,1649,3.435,1650,3.435,1651,3.435,1655,5.135,2573,3.965,2576,5.3,2577,5.3,2581,5.3,2582,5.3,2584,5.3,2586,5.3,2603,6.014]],["title/miscellaneous/variables.html",[2573,2.393,2604,4.625]],["body/miscellaneous/variables.html",[11,2.312,12,1.908,15,1.241,28,0.987,32,0.378,34,0.174,45,0.01,49,1.689,50,1.339,55,1.001,78,1.162,79,0.771,80,1.2,81,2.317,82,2.395,124,1.13,135,0.005,136,0.004,137,0.003,157,0.423,161,0.731,176,1.089,180,1.638,181,3.035,184,1.001,195,2.707,205,2.047,310,2.869,311,3.301,313,3.301,321,3.301,322,3.301,335,2.108,347,1.955,354,3.589,366,0.921,371,1.06,412,1.483,465,3.301,482,1.955,492,3.349,495,2.347,499,3.773,514,1.955,518,2.108,519,3.77,520,2.454,521,3.422,522,4.345,523,1.832,524,1.832,525,3.536,526,1.832,532,2.313,534,2.313,535,2.313,536,2.313,538,1.832,540,1.832,544,2.313,546,2.313,549,2.313,551,2.313,553,2.313,557,1.832,561,1.832,563,1.832,566,1.832,570,1.832,572,3.061,573,3.061,574,2.313,575,4.068,576,3.061,577,2.313,578,3.536,579,2.313,614,1.832,627,1.643,641,3.061,642,2.108,682,1.643,711,1.567,740,2.012,741,1.955,742,1.955,786,2.48,823,2.108,827,2.108,828,3.301,829,2.313,951,3.301,1067,2.108,1070,2.313,1071,2.108,1072,2.313,1074,4.002,1082,2.869,1086,2.313,1087,2.313,1093,3.301,1094,2.313,1095,3.301,1096,2.313,1199,2.108,1200,3.301,1225,2.108,1244,3.301,1245,3.773,1265,2.108,1267,3.301,1284,1.955,1295,2.108,1296,2.108,1297,2.108,1304,2.108,1333,4.604,1927,3.301,1963,2.108,1965,3.301,1966,2.313,1995,3.301,2103,2.108,2155,4.998,2474,2.313,2475,3.622,2476,3.622,2477,3.622,2478,3.622,2479,4.464,2480,2.313,2481,5.052,2485,2.313,2486,2.313,2487,3.622,2488,2.313,2489,3.622,2490,3.622,2491,3.622,2492,2.313,2493,3.622,2494,3.622,2495,2.313,2496,3.622,2497,3.622,2498,3.622,2499,3.622,2500,3.622,2501,4.464,2502,2.313,2503,3.622,2504,2.313,2506,2.313,2507,2.313,2508,3.622,2509,3.622,2510,2.313,2511,2.313,2512,2.313,2513,2.313,2514,3.622,2515,3.622,2553,2.313,2573,1.73,2585,2.313,2604,2.313,2605,5.732,2606,2.625,2607,2.625,2608,4.11,2609,4.11,2610,2.625,2611,2.625,2612,2.625,2613,4.11,2614,6.223,2615,2.625,2616,2.625,2617,5.066,2618,2.625,2619,2.625,2620,6.899,2621,5.732,2622,5.066,2623,6.223,2624,4.11,2625,4.11,2626,2.625,2627,2.625,2628,5.066,2629,5.066,2630,5.732,2631,5.732,2632,2.625,2633,2.625,2634,2.625,2635,2.625,2636,2.625,2637,2.625,2638,2.625,2639,2.625,2640,2.625,2641,2.625,2642,2.625,2643,2.625,2644,2.625,2645,2.625,2646,2.625,2647,2.625,2648,5.066,2649,2.625,2650,2.625,2651,2.625,2652,2.625,2653,2.625,2654,2.625,2655,2.625,2656,2.625,2657,2.625,2658,2.625,2659,2.625,2660,4.11,2661,2.625,2662,2.625,2663,2.625,2664,2.625,2665,2.625,2666,2.625,2667,2.625,2668,2.625,2669,5.732,2670,2.625,2671,2.625,2672,5.066,2673,2.625,2674,2.625,2675,2.625,2676,2.625,2677,2.625,2678,2.625,2679,2.625,2680,2.625,2681,2.625,2682,2.625,2683,2.625,2684,5.066,2685,5.066,2686,2.625,2687,2.625,2688,2.625,2689,2.625,2690,2.625,2691,2.625,2692,2.625,2693,2.625,2694,2.625,2695,2.625,2696,2.625,2697,2.625,2698,2.625,2699,2.625]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":786,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/RouterStateUrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.3.0",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["0.8.29",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2440,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2452,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2453,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":332,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"components/NavbarComponent.html":{},"classes/ThirdsServiceMock.html":{}}}],["1)?location.pathname",{"_index":809,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["1.0.14",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2438,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2421,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["100",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":642,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":2437,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11.0.1",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["11/25",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2454,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["16px",{"_index":1825,"title":{},"body":{"components/IconComponent.html":{}}}],["17",{"_index":2595,"title":{},"body":{"index.html":{}}}],["19",{"_index":2598,"title":{},"body":{"index.html":{}}}],["2",{"_index":511,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["2*60*60*1000",{"_index":1169,"title":{},"body":{"injectables/CardService.html":{}}}],["2.0",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["2.0.1",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["25",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":2424,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":1643,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"injectables/HandlebarsService.html":{}}}],["3.6.0",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1020,"title":{},"body":{"components/CardComponent.html":{}}}],["32px",{"_index":1824,"title":{},"body":{"components/IconComponent.html":{}}}],["33",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["4.0.12",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1008,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":877,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["44",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"miscellaneous/variables.html":{}}}],["5.8.1",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2442,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":882,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":1247,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["52",{"_index":2596,"title":{},"body":{"index.html":{}}}],["5px",{"_index":1010,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":2597,"title":{},"body":{"index.html":{}}}],["6.3.3",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["600000",{"_index":1182,"title":{},"body":{"injectables/CardService.html":{}}}],["64px",{"_index":1823,"title":{},"body":{"components/IconComponent.html":{}}}],["7.1.0",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2471,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":694,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["8px",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["_",{"_index":638,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_.difference(work",{"_index":2195,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":2003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":661,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["_.isequal(forma",{"_index":2318,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":2409,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.merge(acc,val",{"_index":2164,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.remove(this.loadingi18n",{"_index":2209,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.uniq(ids",{"_index":2194,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_defaultfilters",{"_index":1568,"title":{},"body":{"injectables/FilterService.html":{}}}],["_filter",{"_index":2275,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":1323,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":981,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_thirdmenus",{"_index":1975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a[key",{"_index":1773,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["accept",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(authenticationinfo",{"_index":871,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":901,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":74,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":75,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":858,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":617,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["accessors",{"_index":983,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FilterService.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["accordingly",{"_index":842,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action.buttonstyle",{"_index":1403,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":1404,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle",{"_index":1406,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":1407,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.payload",{"_index":931,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":1275,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate",{"_index":1277,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["actionid",{"_index":1342,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionreducermap",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":834,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/State.html":{}}}],["actions?:ofmap",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actiontype",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1448,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1289,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":593,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":1555,"title":{},"body":{"classes/Filter.html":{}}}],["activedetail",{"_index":1443,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":1449,"title":{},"body":{"components/DetailsComponent.html":{}}}],["actual_component",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["add",{"_index":234,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addauthheadersifnecessary",{"_index":2361,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":2365,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["added",{"_index":1075,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["addlightcardfailure",{"_index":211,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":1120,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":1419,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["aims",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["alarm",{"_index":1583,"title":{},"body":{"injectables/FilterService.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert(`${actionid",{"_index":1414,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":2603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1021,"title":{},"body":{"components/CardComponent.html":{}}}],["already",{"_index":2052,"title":{},"body":{"modules/ServicesModule.html":{}}}],["always",{"_index":1304,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":653,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["angular/animations",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["angular/compiler",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"components/LoginComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":489,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"classes/RouterStateUrl.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":260,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["appeffects",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appendfixedlengthalphanumericvalue",{"_index":2517,"title":{},"body":{"coverage.html":{}}}],["application",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["application/x",{"_index":690,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["applies",{"_index":1552,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":918,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["applyfilter",{"_index":580,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":1540,"title":{},"body":{"classes/Filter.html":{}}}],["appmetareducers",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":421,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appreducer",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appropriate",{"_index":792,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["approutingmodule",{"_index":432,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":308,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["archives",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"miscellaneous/variables.html":{}}}],["archives'},{'name",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":610,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":600,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":599,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":388,"title":{"components/ArchivesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["archivesmodule",{"_index":604,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":608,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["args",{"_index":1745,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":1746,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":1522,"title":{},"body":{"classes/Filter.html":{}}}],["array",{"_index":1352,"title":{},"body":{"components/DetailComponent.html":{}}}],["array(menus.length",{"_index":2002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array[0",{"_index":1959,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["arrow::after",{"_index":2432,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["asinputstring",{"_index":2340,"title":{},"body":{"injectables/TimeService.html":{}}}],["asinputstring(value",{"_index":2345,"title":{},"body":{"injectables/TimeService.html":{}}}],["ask",{"_index":646,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfromcode(code",{"_index":707,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfrompassword(login",{"_index":722,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenurl",{"_index":647,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["assets/i18n",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/styles/_variables.scss",{"_index":1830,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":659,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asstring",{"_index":2341,"title":{},"body":{"injectables/TimeService.html":{}}}],["asstring(value",{"_index":2347,"title":{},"body":{"injectables/TimeService.html":{}}}],["attachaction",{"_index":1325,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":1340,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":879,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/InitAuthStatus.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authentication.reducer.ts",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authentication.service",{"_index":1157,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologin",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologout",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffect",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":490,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["authenticationreducer",{"_index":532,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":643,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"coverage.html":{},"index.html":{}}}],["authenticationservice,private",{"_index":1159,"title":{},"body":{"injectables/CardService.html":{}}}],["authenticationservice.clearauthenticationinformation",{"_index":925,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.computeredirecturi",{"_index":719,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.decodetoken(payload.access_token",{"_index":782,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.extractidentificationinformation",{"_index":900,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.extracttoken",{"_index":799,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.getsecurityheader",{"_index":1180,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationservice.isexpirationdateover",{"_index":898,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.verifyexpirationdate",{"_index":755,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authinfo",{"_index":899,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":828,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobject",{"_index":613,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{}}}],["authorization",{"_index":797,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization_code",{"_index":714,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authservice",{"_index":835,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":522,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate)=>authstate.code",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstate)=>authstate.message",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["b[key",{"_index":1775,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":676,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["background",{"_index":2429,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["badge",{"_index":1018,"title":{},"body":{"components/CardComponent.html":{}}}],["basehref",{"_index":1811,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":1814,"title":{},"body":{"components/IconComponent.html":{}}}],["bearer",{"_index":798,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["before",{"_index":1860,"title":{},"body":{"injectables/IframeService.html":{}}}],["beginning",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviour",{"_index":1517,"title":{},"body":{"classes/Filter.html":{}}}],["beware",{"_index":715,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["big",{"_index":1786,"title":{},"body":{"components/IconComponent.html":{}}}],["big:boolean",{"_index":1804,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":1326,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":1344,"title":{},"body":{"components/DetailComponent.html":{}}}],["body",{"_index":2431,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":146,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["border",{"_index":1019,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":1516,"title":{},"body":{"classes/Filter.html":{}}}],["bottom",{"_index":1009,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":881,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{}}}],["browse",{"_index":2600,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1906,"title":{},"body":{"components/LoginComponent.html":{}}}],["build",{"_index":654,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["buildconfigselector",{"_index":634,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["buildfilterselector",{"_index":2288,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["business",{"_index":839,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["button",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["button.addeventlistener('click",{"_index":1413,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":1397,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":1409,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":1408,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":1402,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":1405,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1396,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":147,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["c",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["call",{"_index":672,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["call.pipe",{"_index":727,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["called",{"_index":100,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["calling",{"_index":916,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["canactivate",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["caps",{"_index":1014,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":157,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["card'},{'name",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card):observable",{"_index":1713,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["card.actions",{"_index":1131,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["card.actions.ts",{"_index":213,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:24",{"_index":1894,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:28",{"_index":1898,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:31",{"_index":1899,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:36",{"_index":1895,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:44",{"_index":1896,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:47",{"_index":1897,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:53",{"_index":2037,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:55",{"_index":2038,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:60",{"_index":215,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:63",{"_index":216,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:68",{"_index":2433,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.actions.ts:77",{"_index":1641,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.actions.ts:79",{"_index":1642,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.component.html",{"_index":980,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":979,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1041,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":1868,"title":{},"body":{"injectables/LightCardEffects.html":{},"coverage.html":{}}}],["card.effects.ts:20",{"_index":1870,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:30",{"_index":1881,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":1598,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.model",{"_index":220,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/Detail.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":2588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.publisher",{"_index":2180,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":2181,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.reducer",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.reducer.ts",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["card.service",{"_index":2048,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":1591,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":1599,"title":{},"body":{"injectables/FilterService.html":{}}}],["card1.startdate",{"_index":1091,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2",{"_index":1090,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1092,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card:card",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card:lightcard",{"_index":1595,"title":{},"body":{"injectables/FilterService.html":{}}}],["card==null?null:card.details",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardactions",{"_index":1631,"title":{},"body":{"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":1059,"title":{},"body":{"injectables/CardEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":1627,"title":{},"body":{"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":1628,"title":{},"body":{"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":1629,"title":{},"body":{"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":1630,"title":{},"body":{"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":390,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":392,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["cardeffects",{"_index":538,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfeedstate",{"_index":525,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardinitialstate",{"_index":1200,"title":{},"body":{"interfaces/CardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardlistcomponent",{"_index":394,"title":{"components/CardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["cardoperation",{"_index":1153,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":540,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardoperationsurl",{"_index":1134,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":2578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardreducer",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["cards",{"_index":1074,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["cards'},{'name",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards/cards.module",{"_index":1495,"title":{},"body":{"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1507,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1506,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1033,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":1049,"title":{"injectables/CardService.html":{}},"body":{"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/CustomRouterEffects.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"index.html":{}}}],["cardsmodule",{"_index":1201,"title":{"modules/CardsModule.html":{}},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":523,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardstate.selected",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardstate:cardstate",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardsurl",{"_index":1135,"title":{},"body":{"injectables/CardService.html":{}}}],["care",{"_index":1526,"title":{},"body":{"classes/Filter.html":{}}}],["case",{"_index":876,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/RouterStateUrl.html":{}}}],["catch",{"_index":813,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror",{"_index":630,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((err",{"_index":904,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{}}}],["catcherror((err,caught",{"_index":1876,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["catcherror((error",{"_index":1119,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["catcherror((error,caught",{"_index":1121,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror(authenticationservice.handleerror",{"_index":699,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(err",{"_index":1470,"title":{},"body":{"components/FeedComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror(errorresponse",{"_index":872,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":905,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["cell",{"_index":2420,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1022,"title":{},"body":{"components/CardComponent.html":{}}}],["chain",{"_index":1545,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":1533,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":1543,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":590,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changes",{"_index":1431,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":1456,"title":{},"body":{"components/DetailsComponent.html":{}}}],["character",{"_index":2143,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":693,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checauthentication",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["check",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["checkauthentication(token",{"_index":683,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checkauthenticationstatus",{"_index":63,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":833,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checking",{"_index":816,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checks",{"_index":673,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenresponse",{"_index":817,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{}}}],["checktokenurl",{"_index":644,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["child",{"_index":1316,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1508,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cid",{"_index":1511,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["claim",{"_index":667,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"index.html":{}}}],["clear",{"_index":756,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["clearauthenticationinformation",{"_index":757,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["click",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["clicked",{"_index":945,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/DetailsComponent.html":{}}}],["clicking",{"_index":941,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["clientid",{"_index":80,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["clientsecret",{"_index":649,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clone",{"_index":1534,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":1556,"title":{},"body":{"classes/Filter.html":{}}}],["cluster_appmodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":605,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":606,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":607,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":1202,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":1203,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":1204,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_providers",{"_index":1205,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":1481,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":1482,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":1484,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":1483,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":2039,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":2040,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":2055,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":2056,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":2094,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":2095,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":2096,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["code",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["codeflow",{"_index":1914,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":1909,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1083,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["color",{"_index":2430,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["commonmodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{}}}],["complex",{"_index":1303,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["component",{"_index":259,"title":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["components/card",{"_index":1212,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":1211,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/detail/detail.component",{"_index":1215,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":1214,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/icon/icon.component",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.component",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":1489,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/time",{"_index":1492,"title":{},"body":{"modules/FeedModule.html":{}}}],["computeredirecturi",{"_index":804,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["computethirdcssurl",{"_index":2225,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":2141,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":2165,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["config",{"_index":519,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["config:any",{"_index":1266,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":1245,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configactions",{"_index":1640,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":950,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":1635,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":1637,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":1638,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":1639,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":570,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configinitialstate",{"_index":1267,"title":{},"body":{"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configloaded",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":1226,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"index.html":{}}}],["configstate",{"_index":524,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configstate.config",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configstate.loaded",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configstate.retry",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configstate:configstate",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":1636,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configurl",{"_index":1255,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":818,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["connection",{"_index":702,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["consequence",{"_index":859,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1068,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["console.error('something",{"_index":2219,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(`error",{"_index":1188,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error(`i18",{"_index":1877,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.error(err",{"_index":906,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":734,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["console.error(message",{"_index":888,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(`location",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`this",{"_index":1376,"title":{},"body":{"components/DetailComponent.html":{}}}],["const",{"_index":176,"title":{},"body":{"classes/Action.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["constructor(access_token",{"_index":619,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":2363,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(details",{"_index":2053,"title":{},"body":{"classes/State.html":{}}}],["constructor(element",{"_index":1331,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(funktion",{"_index":1535,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":1139,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/ThirdsService.html":{}}}],["constructor(id",{"_index":2090,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":2024,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(iframeservice",{"_index":1838,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["constructor(key",{"_index":1778,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":2022,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["constructor(message",{"_index":1968,"title":{},"body":{"classes/Message.html":{}}}],["constructor(name",{"_index":2081,"title":{},"body":{"classes/Third.html":{}}}],["constructor(payload",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{}}}],["constructor(platformlocation",{"_index":1788,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(platformlocation:platformlocation",{"_index":1810,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(public",{"_index":77,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["constructor(router",{"_index":985,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(sanitizer",{"_index":1852,"title":{},"body":{"injectables/IframeService.html":{}}}],["constructor(states",{"_index":2030,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(sub",{"_index":1219,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(thirdsservice",{"_index":2105,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":1674,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":1319,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(type",{"_index":141,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":958,"title":{},"body":{"classes/Card.html":{}}}],["constructor(url",{"_index":2035,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["consume",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["containing",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contains",{"_index":678,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["content",{"_index":680,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["contentchildren",{"_index":1439,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":1436,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":148,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["context",{"_index":2514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":747,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["convert(payload",{"_index":781,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["copy",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["copyright",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["core",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correctly",{"_index":709,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["corresponding",{"_index":814,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["coverage",{"_index":2434,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["createentityadapter",{"_index":1086,"title":{},"body":{"interfaces/CardFeedState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('authentication",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('router",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createformgroup",{"_index":2278,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["createselector",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectauthenticationstate",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectcardstate",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectcardstateselection",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectconfig",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectconfigretry",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectfeed,selectactivefiltersarray",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectfilter",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectlightcardsstate",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectmenustate",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectrouterstate",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":1371,"title":{},"body":{"components/DetailComponent.html":{}}}],["csses",{"_index":2083,"title":{},"body":{"classes/Third.html":{}}}],["csses?:string",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":1365,"title":{},"body":{"components/DetailComponent.html":{}}}],["current",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["currently",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{}}}],["currentpath",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["currenttime",{"_index":2342,"title":{},"body":{"injectables/TimeService.html":{}}}],["custom",{"_index":2075,"title":{},"body":{"modules/StateModule.html":{}}}],["customroutereffects",{"_index":557,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customrouterstateserializer",{"_index":1283,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"coverage.html":{}}}],["dark",{"_index":1412,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dark:boolean",{"_index":1805,"title":{},"body":{"components/IconComponent.html":{}}}],["data",{"_index":228,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["date().valueof",{"_index":1168,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":778,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(0",{"_index":829,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["date(expirationdate",{"_index":790,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(minus2hour.valueof()+48*60*60*1000",{"_index":1171,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":1167,"title":{},"body":{"injectables/CardService.html":{}}}],["date(value",{"_index":1756,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date(value).toisostring",{"_index":2356,"title":{},"body":{"injectables/TimeService.html":{}}}],["date.now",{"_index":784,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ddthh:mm",{"_index":2355,"title":{},"body":{"injectables/TimeService.html":{}}}],["ddthh:mm:ss.sss",{"_index":2358,"title":{},"body":{"injectables/TimeService.html":{}}}],["deactivate",{"_index":1451,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":2290,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debug",{"_index":1972,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["decode",{"_index":637,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":811,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["decorators",{"_index":851,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["deep",{"_index":2427,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/variables.html":{}}}],["defaultfilters",{"_index":1572,"title":{},"body":{"injectables/FilterService.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["defines",{"_index":716,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delay",{"_index":1240,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delay(this.retrydelay",{"_index":1253,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delete",{"_index":2592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dentifier",{"_index":772,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["dependencies",{"_index":423,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["deps",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["deserializable",{"_index":679,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["desired",{"_index":2078,"title":{},"body":{"modules/StateModule.html":{}}}],["detail",{"_index":158,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["detail'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":1454,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":1322,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":1440,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":396,"title":{"components/DetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["details",{"_index":969,"title":{},"body":{"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/State.html":{}}}],["details'},{'name",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1213,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1028,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1027,"title":{},"body":{"components/CardDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:21",{"_index":1032,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1030,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1031,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1512,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1026,"title":{},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{},"coverage.html":{}}}],["details?:detail",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detailscomponent",{"_index":398,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["devtools",{"_index":2062,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["directive",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["directives",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["display",{"_index":919,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged",{"_index":2291,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":2316,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distributed",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":1750,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["documentation",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domsanitizer",{"_index":1336,"title":{},"body":{"components/DetailComponent.html":{},"injectables/IframeService.html":{}}}],["done",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":974,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["during",{"_index":1080,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["dynamic",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["effect",{"_index":852,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["effects",{"_index":1065,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["effectsmodule",{"_index":2060,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":2069,"title":{},"body":{"modules/StateModule.html":{}}}],["element",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["elementref",{"_index":1332,"title":{},"body":{"components/DetailComponent.html":{}}}],["emit",{"_index":857,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emits",{"_index":938,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["emittedby",{"_index":915,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["empty",{"_index":2111,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["enabletracing",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encoding",{"_index":2144,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":2326,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["enddate",{"_index":963,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["entire",{"_index":1302,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":245,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1087,"title":{},"body":{"interfaces/CardFeedState.html":{},"miscellaneous/variables.html":{}}}],["entitystate",{"_index":1069,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["entries",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["enum",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["enumerations",{"_index":2574,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/StateModule.html":{}}}],["environment",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/StateModule.html":{},"miscellaneous/variables.html":{}}}],["environment.urls.auth}/check_token",{"_index":645,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/code/redirect_uri=${authenticationservice.computeredirecturi",{"_index":803,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/token",{"_index":648,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.cards}/cards",{"_index":1164,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":1162,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":1263,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":2124,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environments/environment",{"_index":2110,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["err",{"_index":908,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error(`unhandled",{"_index":1118,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.tostring",{"_index":1191,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":1966,"title":{},"body":{"interfaces/MenuState.html":{},"miscellaneous/variables.html":{}}}],["error:string",{"_index":1964,"title":{},"body":{"interfaces/MenuState.html":{}}}],["errormsg",{"_index":846,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":889,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":887,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":875,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":1190,"title":{},"body":{"injectables/CardService.html":{}}}],["europe.com:2002/auth",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe.com:2002/cards",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe.com:2002/config",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe.com:2002/thirds",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evaluate",{"_index":1523,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":1156,"title":{},"body":{"injectables/CardService.html":{},"components/DetailComponent.html":{},"dependencies.html":{}}}],["eventemitter",{"_index":1994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["eventsource",{"_index":1144,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":1195,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":1194,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":1187,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":1184,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":1193,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":1142,"title":{},"body":{"injectables/CardService.html":{}}}],["executetemplate",{"_index":1658,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":1677,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exists",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["exp",{"_index":671,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expandedmenu",{"_index":1976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":1998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":741,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["expirationdate",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["expirationdate.gettime",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expireclaim",{"_index":651,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expired",{"_index":902,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":618,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["exports",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{}}}],["extended",{"_index":227,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1085,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["external",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":736,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["extractidentificationinformation",{"_index":773,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["extractparams",{"_index":1286,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":1288,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractstate",{"_index":2080,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":2088,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card:card):state",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extracttoken",{"_index":738,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["f5",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":1410,"title":{},"body":{"components/DetailComponent.html":{}}}],["faclock",{"_index":1502,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":230,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":1878,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["false",{"_index":195,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/Input.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/variables.html":{}}}],["fctargs[fctargs.length",{"_index":1749,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["feed.component",{"_index":1488,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":1460,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":1459,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filter(card=>filter.chainfilter(card,filters",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feed.filters.time.end.label",{"_index":2330,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":2329,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":2331,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":2416,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":2415,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.notification.label",{"_index":2418,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.question.label",{"_index":2417,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":2419,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed:lightcard[],filters:filter",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedactions",{"_index":597,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":589,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":584,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":595,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":399,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":566,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedinitialstate",{"_index":1095,"title":{},"body":{"interfaces/CardFeedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedmodule",{"_index":1480,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":1485,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":1465,"title":{},"body":{"components/FeedComponent.html":{}}}],["fetchcardoperation",{"_index":1136,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":1141,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":1256,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":2226,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":2137,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchi18njson",{"_index":2227,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchi18njson(publisher",{"_index":2150,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchthird",{"_index":2228,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":2134,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{}}}],["fill",{"_index":1831,"title":{},"body":{"components/IconComponent.html":{}}}],["filter",{"_index":417,"title":{"classes/Filter.html":{}},"body":{"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitFilters.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":2393,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(([action",{"_index":1252,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter((action",{"_index":1273,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af:applyfilter)=>af.payload.name",{"_index":1125,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t:third)=>!(!t.menuentries",{"_index":2168,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter.component",{"_index":1499,"title":{},"body":{"modules/FeedModule.html":{}}}],["filter.component.html",{"_index":2274,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":2384,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2272,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:26",{"_index":2285,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":2284,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":2391,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":2287,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":2390,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":2392,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":2280,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":2386,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2282,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":2387,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":2283,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":2388,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":2389,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:90",{"_index":2281,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":586,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":1514,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["filter.model.ts:22",{"_index":1537,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:27",{"_index":1538,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":1539,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:32",{"_index":1553,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:43",{"_index":1541,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:56",{"_index":1544,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:67",{"_index":1550,"title":{},"body":{"classes/Filter.html":{}}}],["filter/time",{"_index":1501,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{},"coverage.html":{}}}],["filter/type",{"_index":1498,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["filtered",{"_index":1549,"title":{},"body":{"classes/Filter.html":{}}}],["filtering",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["filters",{"_index":1082,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"miscellaneous/variables.html":{}}}],["filters'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component.html",{"_index":1611,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.effects",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":1474,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"coverage.html":{}}}],["filters.effects.ts:19",{"_index":1477,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:28",{"_index":1479,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.length>0",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filters.set(filtertype.recipient_filter",{"_index":1602,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":1604,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":1600,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.values",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterscomponent",{"_index":401,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["filterservice",{"_index":1476,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"index.html":{}}}],["filtertype",{"_index":587,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.time_filter",{"_index":1126,"title":{},"body":{"injectables/CardOperationEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":2410,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["first",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailsComponent.html":{},"injectables/IframeService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["flow",{"_index":706,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["font",{"_index":1011,"title":{},"body":{"components/CardComponent.html":{}}}],["fontawesome",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["for(let",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forcepositiveandoneminimum",{"_index":2518,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["form.action",{"_index":2412,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":2411,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":2323,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.notification",{"_index":2414,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.question",{"_index":2413,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":2322,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["formatter",{"_index":1760,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":1763,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formb",{"_index":2317,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol",{"_index":1926,"title":{},"body":{"components/LoginComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formdata",{"_index":685,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["formgroup",{"_index":1924,"title":{},"body":{"components/LoginComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":1311,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["forroot",{"_index":1208,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["france.com",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["freeze",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(_.difference(work",{"_index":2197,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(cards).pipe",{"_index":2178,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(menus).pipe",{"_index":2184,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromauthentication.getexpirationtime",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromrouter",{"_index":528,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1510,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["function",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{}}}],["function(a,b",{"_index":1771,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":1738,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":1520,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":819,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["future",{"_index":825,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["g",{"_index":1768,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":1515,"title":{},"body":{"classes/Filter.html":{}}}],["generaterandomarray",{"_index":2519,"title":{},"body":{"coverage.html":{}}}],["generaterandompositiveintegerwithinrangewithoneasminimum",{"_index":2520,"title":{},"body":{"coverage.html":{}}}],["generating",{"_index":703,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["gently",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getcardoperation",{"_index":1137,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":1615,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":1616,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring():string",{"_index":1622,"title":{},"body":{"classes/GuidService.html":{}}}],["getdefaultfilters",{"_index":1578,"title":{},"body":{"injectables/FilterService.html":{}}}],["getexpirationdate",{"_index":2475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getexpirationdate(state",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getexpirationtime",{"_index":2476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfilter",{"_index":2286,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["getfixedlengthalphanumericvalue",{"_index":2521,"title":{},"body":{"coverage.html":{}}}],["gethtmlcontent",{"_index":1354,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":992,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getidentifier",{"_index":2477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getitem",{"_index":776,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getonerandomaddcardoperation",{"_index":2522,"title":{},"body":{"coverage.html":{}}}],["getonerandomcard",{"_index":2523,"title":{},"body":{"coverage.html":{}}}],["getonerandomcarddetail",{"_index":2524,"title":{},"body":{"coverage.html":{}}}],["getonerandomcardwithrandomdetails",{"_index":2525,"title":{},"body":{"coverage.html":{}}}],["getonerandomligthcard",{"_index":2526,"title":{},"body":{"coverage.html":{}}}],["getonerandomthird",{"_index":2527,"title":{},"body":{"coverage.html":{}}}],["getpositiverandomnumberwithinrange",{"_index":2528,"title":{},"body":{"coverage.html":{}}}],["getrandomactions",{"_index":2529,"title":{},"body":{"coverage.html":{}}}],["getrandomalphanumericvalue",{"_index":2530,"title":{},"body":{"coverage.html":{}}}],["getrandomcarddetails",{"_index":2531,"title":{},"body":{"coverage.html":{}}}],["getrandomi18ndata",{"_index":2532,"title":{},"body":{"coverage.html":{}}}],["getrandomindex",{"_index":2533,"title":{},"body":{"coverage.html":{}}}],["getrandommenu",{"_index":2534,"title":{},"body":{"coverage.html":{}}}],["getrandomthird",{"_index":2535,"title":{},"body":{"coverage.html":{}}}],["getroutepe",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":796,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getselectedid",{"_index":2481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getseveralrandomlightcards",{"_index":2536,"title":{},"body":{"coverage.html":{}}}],["getthirdmenus",{"_index":1992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettoken",{"_index":2478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettoken(state",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gettranslation",{"_index":2104,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":2107,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["given",{"_index":701,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["gives",{"_index":675,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["goes",{"_index":2338,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["graph",{"_index":2601,"title":{},"body":{"modules.html":{}}}],["guard.service",{"_index":2047,"title":{},"body":{"modules/ServicesModule.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["guid.create",{"_index":1621,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":775,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["guidservice",{"_index":632,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"modules/ServicesModule.html":{},"coverage.html":{}}}],["handle",{"_index":239,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":1334,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":1737,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":1766,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":1752,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":1742,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":1732,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":1727,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":1753,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":1764,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":1759,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":1744,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":1748,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":1734,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":1695,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":1206,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"coverage.html":{},"index.html":{}}}],["handleerror(error",{"_index":733,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handleloginattempt",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handleloginattempt(payload",{"_index":954,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlemaxagainstmin",{"_index":2537,"title":{},"body":{"coverage.html":{}}}],["handlenewtoken(call",{"_index":726,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handlerejectedlogin",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handlerejectedlogin(errormsg",{"_index":844,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":238,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":1122,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":1416,"title":{},"body":{"components/DetailComponent.html":{}}}],["hashlocationstrategy",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["header",{"_index":795,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":688,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["headers}).pipe",{"_index":697,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["heartbeattimeout",{"_index":1181,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":2425,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["helper",{"_index":779,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["here",{"_index":1173,"title":{},"body":{"injectables/CardService.html":{},"components/TimeLineComponent.html":{}}}],["hidden",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":1910,"title":{},"body":{"components/LoginComponent.html":{}}}],["href",{"_index":1369,"title":{},"body":{"components/DetailComponent.html":{}}}],["hrefsofcsslink",{"_index":1324,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":1341,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":1330,"title":{},"body":{"components/DetailComponent.html":{}}}],["http",{"_index":794,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["http://localhost:2002/auth",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:2002/cards",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:2002/config",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:2002/thirds",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http://opfab.rte",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.rte",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http_interceptors",{"_index":2045,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpcall",{"_index":2152,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient",{"_index":627,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["httpclient:httpclient",{"_index":1158,"title":{},"body":{"injectables/CardService.html":{}}}],["httpclientmodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":2371,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":2369,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":628,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpheaders({'content",{"_index":689,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpinterceptor",{"_index":2372,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httploaderfactory",{"_index":2507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":1260,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('version',version",{"_index":2148,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":2366,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":1310,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["httpurlencodingcodec",{"_index":1261,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":144,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["i18n('login.error.token.expiration",{"_index":903,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":897,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":910,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n(key",{"_index":894,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18nlabelkey",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18npath",{"_index":2508,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["i18nprefix",{"_index":984,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":1457,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nprefix+lightcard.summary.key",{"_index":1005,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nprefix+lightcard.title.key",{"_index":1002,"title":{},"body":{"components/CardComponent.html":{}}}],["icon",{"_index":1781,"title":{},"body":{"components/IconComponent.html":{}}}],["icon'},{'name",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":1783,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":1782,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":1801,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":403,"title":{"components/IconComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["iconpath",{"_index":1784,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":1809,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":186,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["id'].nodevalue",{"_index":1398,"title":{},"body":{"components/DetailComponent.html":{}}}],["id.split",{"_index":2201,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["id:string",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["identifier",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":2191,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ids.push(id",{"_index":2190,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(!!next.status.end",{"_index":2307,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":2302,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(a[key]b[key",{"_index":1776,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(card",{"_index":1039,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.process",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(card.state",{"_index":178,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(changes['card'].currentvalue",{"_index":1455,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(filters",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(i",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["if(state!=null",{"_index":1399,"title":{},"body":{"components/DetailComponent.html":{}}}],["if(template",{"_index":1722,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(third",{"_index":2129,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(this.active",{"_index":1561,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":1563,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.dark||this.light",{"_index":1826,"title":{},"body":{"components/IconComponent.html":{}}}],["if(this.expandedmenu[index",{"_index":2007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(typeof",{"_index":1772,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":1000,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["if(v.active",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iframe",{"_index":1849,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframe.service",{"_index":1845,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay",{"_index":1833,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":2099,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":1835,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":1834,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":405,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["iframeservice",{"_index":1839,"title":{"injectables/IframeService.html":{}},"body":{"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["iframeurl",{"_index":1836,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["implementation",{"_index":1528,"title":{},"body":{"classes/Filter.html":{}}}],["implemented",{"_index":1417,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":838,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["imports",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["include",{"_index":2077,"title":{},"body":{"modules/StateModule.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1949,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["informatios",{"_index":760,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["inheritance",{"_index":1530,"title":{},"body":{"classes/Filter.html":{}}}],["iniitialized",{"_index":801,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["init",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["initauthstatus",{"_index":60,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code:window.location.href.substring(i",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["initfilter",{"_index":591,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":594,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":1478,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initialized",{"_index":710,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/IframeService.html":{}}}],["initializehandlebarstemplates",{"_index":1327,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":1328,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialstate",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initrecipientfilter",{"_index":1569,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimefilter",{"_index":1570,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittypefilter",{"_index":1571,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":1239,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":1246,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":626,"title":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/IframeService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/IframeService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"coverage.html":{}}}],["injectables",{"_index":830,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/IframeService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["injector",{"_index":1259,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input",{"_index":150,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["input[0",{"_index":2202,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[1",{"_index":2203,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inputs",{"_index":149,"title":{},"body":{"classes/Action.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["inputtype",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["instance",{"_index":780,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["instanciation",{"_index":1529,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":1368,"title":{},"body":{"components/DetailComponent.html":{}}}],["intercept",{"_index":2362,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":2368,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":1176,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":1177,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["interceptors",{"_index":2359,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":2046,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":516,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"coverage.html":{}}}],["interfaces",{"_index":517,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"index.html":{}}}],["intl.numberformat(this.translate.getbrowserlang",{"_index":1761,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":677,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["isauth",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["isexpirationdateover",{"_index":754,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["isinthefuture(expirationdate",{"_index":752,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture(time",{"_index":826,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnan(expirationdate",{"_index":750,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnotanumber",{"_index":749,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["issue",{"_index":242,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["istanbul",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["isused",{"_index":777,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["it's",{"_index":913,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["items",{"_index":1307,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["jnlp",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":636,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":670,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.login",{"_index":666,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.expireclaim",{"_index":785,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode",{"_index":635,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode(token",{"_index":812,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["key",{"_index":873,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Map.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["label",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label1",{"_index":2260,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":2263,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":2268,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["lang",{"_index":2109,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["langs",{"_index":2212,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["large",{"_index":2073,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1016,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1073,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["lastcards",{"_index":1072,"title":{},"body":{"interfaces/CardFeedState.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["lcard",{"_index":223,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["level",{"_index":1969,"title":{},"body":{"classes/Message.html":{}}}],["library",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["library.add(faclock",{"_index":1503,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["light",{"_index":235,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["light:boolean",{"_index":1806,"title":{},"body":{"components/IconComponent.html":{}}}],["lightcard",{"_index":218,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcard):boolean",{"_index":1560,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":1554,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.enddate|date:'short",{"_index":1004,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.enddate|date:\\'short",{"_index":1024,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.startdate|date:'short",{"_index":1003,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.startdate|date:\\'short",{"_index":1023,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcardactions",{"_index":255,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":221,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":217,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":254,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":246,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":249,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":250,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":247,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":251,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":253,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1093,"title":{},"body":{"interfaces/CardFeedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1096,"title":{},"body":{"interfaces/CardFeedState.html":{},"miscellaneous/variables.html":{}}}],["lightcardadapter.getselectors(selectlightcardsstate",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightcardeffects",{"_index":563,"title":{"injectables/LightCardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/LightCardEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lightcardreducer",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["lightcards",{"_index":248,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardListComponent.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards:${test",{"_index":1875,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["line",{"_index":2334,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line'},{'name",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":1494,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":2335,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":2333,"title":{},"body":{"components/TimeLineComponent.html":{},"coverage.html":{}}}],["line.component.ts:14",{"_index":2336,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:18",{"_index":2337,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/time",{"_index":1493,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{},"coverage.html":{}}}],["link",{"_index":1370,"title":{},"body":{"components/DetailComponent.html":{}}}],["link/button",{"_index":944,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link1",{"_index":2261,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":2264,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":2269,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["list",{"_index":198,"title":{},"body":{"classes/Action.html":{},"components/CardListComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1487,"title":{},"body":{"modules/FeedModule.html":{}}}],["list.component.html",{"_index":1100,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":1099,"title":{},"body":{"components/CardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:17",{"_index":1103,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:18",{"_index":1102,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/card",{"_index":1098,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{},"coverage.html":{}}}],["list/filters/filters.component",{"_index":1496,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":1610,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["list/filters/filters.component.ts:14",{"_index":1612,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:18",{"_index":1613,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/time",{"_index":1500,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{},"coverage.html":{}}}],["list/filters/type",{"_index":1497,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["list_radio",{"_index":199,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":936,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":854,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["literal",{"_index":214,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{}}}],["load",{"_index":224,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadbyid",{"_index":1048,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["loadcard",{"_index":1060,"title":{"classes/LoadCard.html":{}},"body":{"injectables/CardEffects.html":{},"injectables/CardService.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"injectables/MenuEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":1146,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":1278,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":1061,"title":{"classes/LoadCardFailure.html":{}},"body":{"injectables/CardEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1056,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":1062,"title":{"classes/LoadCardSuccess.html":{}},"body":{"injectables/CardEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1055,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":319,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":1242,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":1233,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1243,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":1232,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"modules/ServicesModule.html":{},"miscellaneous/variables.html":{}}}],["loadedi18n",{"_index":2118,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loader",{"_index":2553,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":1475,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nforlightcards",{"_index":2229,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards",{"_index":2239,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards:lightcard",{"_index":2177,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries",{"_index":2230,"title":{},"body":{"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":2270,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(menus",{"_index":2241,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries(menus:thirdmenu",{"_index":2183,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loading",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"injectables/LightCardEffects.html":{},"interfaces/MenuState.html":{},"miscellaneous/variables.html":{}}}],["loadingi18n",{"_index":2119,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadlightcard",{"_index":256,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["loadlightcardfailure",{"_index":258,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["loadlightcards",{"_index":222,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":226,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":229,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":225,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":1117,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadlightcardsuccess",{"_index":257,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["loadmenu",{"_index":1649,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":1651,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":1960,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":1650,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":1958,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":1108,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["local",{"_index":1380,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":1718,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["locales",{"_index":2084,"title":{},"body":{"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["locales?:string",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["localestorage",{"_index":743,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage",{"_index":737,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.clear",{"_index":758,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":748,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":774,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":739,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":769,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":767,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":763,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":765,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorageauthcontent",{"_index":640,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":806,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["location.pathname.length",{"_index":808,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["locationstrategy",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":151,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":152,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":639,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["login'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":1908,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.authenticate",{"_index":934,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.code",{"_index":880,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":884,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":885,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login.code",{"_index":1946,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.login.password",{"_index":1944,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":1945,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["loginclaim",{"_index":650,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["logincomponent",{"_index":98,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginmessage",{"_index":1911,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":1947,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["longtext",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["lttd",{"_index":967,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["lvalue",{"_index":1741,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":1754,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.format(options.hash.format",{"_index":1758,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level==messagelevel.error",{"_index":1932,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this.translate.getbrowserlang",{"_index":1757,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":965,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["manage",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["management",{"_index":832,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manager",{"_index":837,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":1235,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["mandatory",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":161,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["map((action",{"_index":849,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["map((auth",{"_index":730,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map((card",{"_index":1054,"title":{},"body":{"injectables/CardEffects.html":{}}}],["map((config",{"_index":1231,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map(action",{"_index":926,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(array",{"_index":1957,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(authenticationinfo",{"_index":870,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(card",{"_index":2179,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(check",{"_index":698,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(data",{"_index":728,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(isinthefuture",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["map(menu",{"_index":2185,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":1112,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(r",{"_index":2154,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(s=>handlebars.compile(s",{"_index":1725,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(t",{"_index":2169,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(card",{"_index":1715,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["margin",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/LoginComponent.html":{}}}],["matching",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1006,"title":{},"body":{"components/CardComponent.html":{}}}],["maxedretries",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["medium",{"_index":1787,"title":{},"body":{"components/IconComponent.html":{}}}],["medium:boolean",{"_index":1803,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["menu",{"_index":520,"title":{},"body":{"interfaces/AppState.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["menu.'+link.path",{"_index":2010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":2016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id",{"_index":2186,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu.logout",{"_index":2015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.version",{"_index":2187,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuactions",{"_index":1655,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":1648,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":1647,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":1652,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":1653,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":1654,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{}}}],["menueffects",{"_index":561,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuentries",{"_index":2085,"title":{},"body":{"classes/Third.html":{}}}],["menuentries?:thirdmenuentry",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuinitialstate",{"_index":1965,"title":{},"body":{"interfaces/MenuState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menureducer",{"_index":553,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["menus",{"_index":2176,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menus.push(menu",{"_index":2175,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menustate",{"_index":526,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menustate.menu",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menustate:menustate",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merge",{"_index":2112,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["merge(previous",{"_index":2160,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap",{"_index":2113,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap((id",{"_index":2199,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message('the",{"_index":896,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":909,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":892,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":952,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":1971,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":893,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["metadata",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["metareducer",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["methods",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{}}}],["minus2hour",{"_index":1166,"title":{},"body":{"injectables/CardService.html":{}}}],["miscellaneous",{"_index":2573,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":2354,"title":{},"body":{"injectables/TimeService.html":{}}}],["model/light",{"_index":2116,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["modification",{"_index":1079,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["module",{"_index":420,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["modules",{"_index":422,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/iframe.service",{"_index":1997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modulewithproviders",{"_index":1210,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":822,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/TimeService.html":{},"dependencies.html":{}}}],["moment(new",{"_index":1755,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(value).format('yyyy",{"_index":2357,"title":{},"body":{"injectables/TimeService.html":{}}}],["moment(value,'yyyy",{"_index":2353,"title":{},"body":{"injectables/TimeService.html":{}}}],["moment.moment",{"_index":2350,"title":{},"body":{"injectables/TimeService.html":{}}}],["mono.svg",{"_index":1828,"title":{},"body":{"components/IconComponent.html":{}}}],["more",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["movetocodeflowloginpage",{"_index":800,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["mozilla",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["mpl",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["multi",{"_index":2049,"title":{},"body":{"modules/ServicesModule.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeFilterComponent.html":{}}}],["name:string",{"_index":165,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["navbar",{"_index":112,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["navbar'},{'name",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":1974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcollapsed",{"_index":1977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":110,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["navigate",{"_index":856,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigatetocard",{"_index":1270,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigationactiontiming",{"_index":2063,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":2067,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":1297,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["navigationroutes",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["need",{"_index":1305,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["needed",{"_index":243,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{}}}],["needsconfirm",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["new",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":2373,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":1564,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":2399,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":2397,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":2306,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.notification",{"_index":2403,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.question",{"_index":2401,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":2301,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":1565,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":1566,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1421,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":2012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbmodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":1504,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngmodule",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["ngonchanges",{"_index":1422,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":1428,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":2279,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":244,"title":{},"body":{"classes/AddLightCardFailure.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":947,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":1088,"title":{},"body":{"interfaces/CardFeedState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":2276,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["none",{"_index":975,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["noselectioncomponent",{"_index":409,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":2375,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["notification",{"_index":1588,"title":{},"body":{"injectables/FilterService.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notify",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["null",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":205,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeService.html":{},"miscellaneous/variables.html":{}}}],["oauth2.client",{"_index":662,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["object",{"_index":2155,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["object[locale",{"_index":2156,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher",{"_index":2157,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher][version",{"_index":2158,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["observable.create(observer",{"_index":1183,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":1192,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":1185,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data",{"_index":1186,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["occured",{"_index":1189,"title":{},"body":{"injectables/CardService.html":{}}}],["of([new",{"_index":2256,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(false",{"_index":1880,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["of(new",{"_index":890,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(null",{"_index":700,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["of(template",{"_index":1723,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":2130,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":895,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":2271,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["ofactions/authentication.actions",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ofactions/card.actions",{"_index":1063,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["ofactions/config.actions",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":1132,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1130,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/menu.actions",{"_index":1962,"title":{},"body":{"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{}}}],["ofeffects/authentication.effects",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":539,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":162,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/card",{"_index":1154,"title":{},"body":{"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":159,"title":{},"body":{"classes/Action.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/feed",{"_index":585,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":160,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/light",{"_index":219,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/Detail.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":163,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["ofmodel/thirds.model",{"_index":1357,"title":{},"body":{"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["ofselectors/authentication.selectors",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{}}}],["ofselectors/config.selectors",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{}}}],["ofselectors/feed.selectors",{"_index":1466,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":1996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofservices/authentication.service",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofservices/card.service",{"_index":1058,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofservices/config.service",{"_index":1241,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":588,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":633,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/thirds.service",{"_index":1035,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/time.service",{"_index":1696,"title":{},"body":{"injectables/HandlebarsService.html":{},"modules/ServicesModule.html":{},"components/TimeFilterComponent.html":{}}}],["ofstates/authentication.state",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":556,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/menu.state",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/index",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":552,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1034,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":994,"title":{},"body":{"components/CardComponent.html":{}}}],["ofstore/state.module",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":946,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":1110,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":848,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":863,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":929,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":942,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1051,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":1229,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":1250,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":920,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":1124,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":1871,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":1954,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":1272,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oidc",{"_index":705,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ok",{"_index":914,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["once",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["onchanges",{"_index":1420,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":2273,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["one",{"_index":233,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":641,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ongoing",{"_index":1078,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["oninit",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onsubmit",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["opcards",{"_index":1115,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["open",{"_index":982,"title":{},"body":{"components/CardComponent.html":{}}}],["operation.cards",{"_index":1116,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":542,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":1105,"title":{},"body":{"injectables/CardOperationEffects.html":{},"coverage.html":{}}}],["operation.effects.ts:27",{"_index":1107,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:36",{"_index":1123,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:66",{"_index":1129,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":1155,"title":{},"body":{"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":2580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operation.type",{"_index":1113,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.type.tostring",{"_index":1114,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":1109,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":1729,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeFilterComponent.html":{}}}],["options",{"_index":1731,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":1762,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["otherwise",{"_index":682,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":1856,"title":{},"body":{"injectables/IframeService.html":{},"components/NavbarComponent.html":{}}}],["over",{"_index":753,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["overview",{"_index":2594,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":2540,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["pair",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["paload",{"_index":939,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":652,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["parameterlistitem",{"_index":208,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeFilterComponent.html":{}}}],["parameters['message",{"_index":907,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":1518,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":711,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["params.append('client_secret",{"_index":725,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('clientid",{"_index":717,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('code",{"_index":712,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('grant_type",{"_index":713,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('password",{"_index":724,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('redirect_uri",{"_index":718,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('username",{"_index":723,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.tostring",{"_index":721,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params['error",{"_index":886,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parentmodule",{"_index":2050,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2076,"title":{},"body":{"modules/StateModule.html":{}}}],["parsestring",{"_index":2343,"title":{},"body":{"injectables/TimeService.html":{}}}],["parsestring(value",{"_index":2351,"title":{},"body":{"injectables/TimeService.html":{}}}],["pass",{"_index":1532,"title":{},"body":{"classes/Filter.html":{}}}],["passes",{"_index":1542,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["past",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":494,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":807,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pathmatch",{"_index":1509,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["payload",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["payload.access_token",{"_index":789,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid",{"_index":788,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid.tostring",{"_index":770,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":768,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expires_in",{"_index":783,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.identifier",{"_index":764,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.password).pipe",{"_index":933,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":766,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload:{code",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payload:{filters",{"_index":596,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":592,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payloadforsuccessfulauthentication",{"_index":41,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":787,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pertinent",{"_index":1299,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pickarandomitemofanenum",{"_index":2538,"title":{},"body":{"coverage.html":{}}}],["pieces",{"_index":2079,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":862,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["pipe(catcherror",{"_index":866,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(map(flowmode=>flowmode",{"_index":1930,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(trans",{"_index":2206,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(tap(menus",{"_index":2000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["platformlocation",{"_index":1789,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":1812,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":1170,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":1301,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["popover",{"_index":2428,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["possible",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["postdata",{"_index":684,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.append('token",{"_index":687,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.tostring",{"_index":696,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["preloadallmodules",{"_index":486,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":821,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["previous",{"_index":2151,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["previous.pipe",{"_index":2161,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["primary",{"_index":1907,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["process",{"_index":177,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["process.states[card.state",{"_index":179,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":2086,"title":{},"body":{"classes/Third.html":{}}}],["processes?:ofmap",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":966,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["processing",{"_index":1081,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["prodi18npath",{"_index":2509,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["property",{"_index":1519,"title":{},"body":{"classes/Filter.html":{}}}],["provide",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":2072,"title":{},"body":{"modules/StateModule.html":{}}}],["providedin",{"_index":1580,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/IframeService.html":{}}}],["providers",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":2071,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"injectables/TimeService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["publishdate",{"_index":961,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["publisher",{"_index":959,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["publishers",{"_index":1879,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["publisherversion",{"_index":960,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":1720,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["push",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["put",{"_index":791,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["query",{"_index":1306,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querylist",{"_index":1435,"title":{},"body":{"components/DetailsComponent.html":{}}}],["queryparams",{"_index":1296,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["querytemplate",{"_index":1659,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":1679,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":1716,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":2231,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":2243,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname:string",{"_index":2125,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["question",{"_index":1586,"title":{},"body":{"injectables/FilterService.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["r",{"_index":2159,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["rangeend",{"_index":1149,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":1151,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart:rangestart,rangeend",{"_index":1198,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/Card.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["ready",{"_index":923,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["reason",{"_index":1531,"title":{},"body":{"classes/Filter.html":{}}}],["recipient_filter",{"_index":1607,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":1547,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":1546,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":841,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["redirectto",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["reduce",{"_index":2114,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((acc",{"_index":2162,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((ids",{"_index":2189,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus:thirdmenu[],menu:thirdmenu",{"_index":2174,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{}}}],["regarding",{"_index":820,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registerarrayatindex",{"_index":1660,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":1661,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":1662,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":1663,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":1664,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":704,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registeri18n",{"_index":1665,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":1666,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":1667,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":1668,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerpreservespace",{"_index":1669,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":1670,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":1671,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":1672,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":1673,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":1329,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":917,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rejectlogin",{"_index":69,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":891,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["related",{"_index":241,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":771,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["reload",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":132,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["removes",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rendered",{"_index":1084,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":1372,"title":{},"body":{"components/DetailComponent.html":{}}}],["replaysubject",{"_index":1857,"title":{},"body":{"injectables/IframeService.html":{}}}],["replaysubject(1",{"_index":1859,"title":{},"body":{"injectables/IframeService.html":{}}}],["replication",{"_index":1525,"title":{},"body":{"classes/Filter.html":{}}}],["request",{"_index":1175,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":2380,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":2374,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["require",{"_index":2515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["resetform",{"_index":1915,"title":{},"body":{"components/LoginComponent.html":{}}}],["resource",{"_index":1378,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":2145,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":2149,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":815,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["responsetype",{"_index":2140,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.id",{"_index":2217,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result.push(v",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.translation[lang",{"_index":2214,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result:any",{"_index":2211,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["results",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retries:number",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retry",{"_index":1225,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"miscellaneous/variables.html":{}}}],["retrydelay",{"_index":1227,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1308,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{}}}],["right",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["root",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/IframeService.html":{}}}],["root'},{'name",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["route",{"_index":1309,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["router",{"_index":521,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["router.effects",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":1269,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"coverage.html":{}}}],["router.effects.ts:20",{"_index":1271,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:28",{"_index":1281,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.state",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.state.url",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router_navigation",{"_index":1282,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["routerinitialstate",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":487,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":612,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":1274,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":527,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerstate",{"_index":1294,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":1279,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":1313,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":1276,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":1285,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":1292,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":530,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"coverage.html":{}}}],["routerstateurl(url",{"_index":1314,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":488,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":485,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":2426,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["rules",{"_index":840,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":745,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["rvalue",{"_index":1739,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/IframeService.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/tap",{"_index":1882,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["rxjs/operators",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["safe",{"_index":1377,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":1373,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":1381,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":1379,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":1350,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":1356,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":1843,"title":{},"body":{"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{}}}],["sanitizer",{"_index":1335,"title":{},"body":{"components/DetailComponent.html":{},"injectables/IframeService.html":{}}}],["save",{"_index":759,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["saveauthenticationinformation(payload",{"_index":762,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["scope",{"_index":1527,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":1391,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":1394,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":1393,"title":{},"body":{"components/DetailComponent.html":{}}}],["secret",{"_index":664,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["security",{"_index":1172,"title":{},"body":{"injectables/CardService.html":{}}}],["select",{"_index":232,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":1469,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(selectconfigloaded",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["selectactivefiltersarray",{"_index":2496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectauthenticationstate",{"_index":2487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcardstate",{"_index":2489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcardstateselection",{"_index":2490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcardstateselectiondetails",{"_index":2491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcode",{"_index":951,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfig",{"_index":2493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfigdata",{"_index":2494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfigloaded",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfigretry",{"_index":1244,"title":{},"body":{"injectables/ConfigEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrenturl",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectdetail",{"_index":1423,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":1432,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":1071,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"miscellaneous/variables.html":{}}}],["selectedcardid",{"_index":1070,"title":{},"body":{"interfaces/CardFeedState.html":{},"miscellaneous/variables.html":{}}}],["selectedcardid:string",{"_index":252,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["selectedvalues",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectfilter",{"_index":2497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectfilteredfeed",{"_index":2498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1101,"title":{},"body":{"components/CardListComponent.html":{},"components/FeedComponent.html":{},"components/NoSelectionComponent.html":{}}}],["selection'},{'name",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":1491,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":2019,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":2018,"title":{},"body":{"components/NoSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:14",{"_index":2020,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":2021,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":1490,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{},"coverage.html":{}}}],["selections",{"_index":2422,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectlastcards",{"_index":2499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlightcard",{"_index":231,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":1280,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectlightcardselection",{"_index":2500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlightcardsstate",{"_index":2501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmaxedretries",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmenustate",{"_index":2503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmenustatemenu",{"_index":1995,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmessage",{"_index":1927,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selectrouterstate",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecturl",{"_index":1851,"title":{},"body":{"injectables/IframeService.html":{}}}],["selecturl(url",{"_index":1854,"title":{},"body":{"injectables/IframeService.html":{}}}],["send",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["sequentially",{"_index":1551,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":1287,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":1291,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":2068,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["services/authentication.service",{"_index":948,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["services/handlebars.service",{"_index":1217,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":1216,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":433,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":1447,"title":{},"body":{"components/DetailsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["set(\"locale",{"_index":2138,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":2135,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["setheaders",{"_index":2379,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["setiframeurl",{"_index":1978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setiframeurl(url",{"_index":1984,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout",{"_index":1387,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":2008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["seturl",{"_index":1837,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["seturl(iframeurl",{"_index":1842,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["severity",{"_index":964,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":1585,"title":{},"body":{"injectables/FilterService.html":{}}}],["severity.alarm",{"_index":1584,"title":{},"body":{"injectables/FilterService.html":{}}}],["severity.notification",{"_index":1589,"title":{},"body":{"injectables/FilterService.html":{}}}],["severity.question",{"_index":1587,"title":{},"body":{"injectables/FilterService.html":{}}}],["simplechanges",{"_index":1429,"title":{},"body":{"components/DetailsComponent.html":{}}}],["size",{"_index":1015,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{}}}],["size:string",{"_index":1807,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":2044,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1013,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{}}}],["small:boolean",{"_index":1802,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":1300,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["sortbystartdate",{"_index":2505,"title":{},"body":{"coverage.html":{}}}],["sortbystartdate(card1",{"_index":1089,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortcomparer:sortbystartdate",{"_index":1094,"title":{},"body":{"interfaces/CardFeedState.html":{},"miscellaneous/variables.html":{}}}],["sortonkey",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["sortonkey(key",{"_index":1770,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":2589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["spec\\.ts",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["splitvalue",{"_index":1735,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sprites",{"_index":1785,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":1808,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../authentication.actions.ts",{"_index":2576,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.reducer.ts",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.selectors.ts",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":2585,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../authentication.state.ts",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":2579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":2577,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":2590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.reducer.ts",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.selectors.ts",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.state.ts",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.actions.ts",{"_index":2581,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../config.selectors.ts",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.state.ts",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.vps.ts",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.actions.ts",{"_index":2582,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../feed.selectors.ts",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.state.ts",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter.service.ts",{"_index":2583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../light",{"_index":2584,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":2586,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.reducer.ts",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.selectors.ts",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.state.ts",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.model.ts",{"_index":2587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../router.selectors.ts",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router.state.ts",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../thirds.model.ts",{"_index":2575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../translate.config.ts",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":484,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:27",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/icon/icon.component.ts",{"_index":1780,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/app/components/icon/icon.component.ts:18",{"_index":1793,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:19",{"_index":1796,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:20",{"_index":1795,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:21",{"_index":1791,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:22",{"_index":1792,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:23",{"_index":1794,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:24",{"_index":1798,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:25",{"_index":1799,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:26",{"_index":1790,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:32",{"_index":1797,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1905,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":1921,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":1925,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":1923,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1922,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":1916,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":1918,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":1919,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":1920,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:63",{"_index":1917,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1973,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":1990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":1991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":1989,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":1988,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":1981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1983,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:52",{"_index":1982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:56",{"_index":1993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":1987,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:66",{"_index":1985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":2591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":957,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:12",{"_index":970,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:41",{"_index":1320,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/feed",{"_index":1513,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["src/app/model/i18n.model.ts",{"_index":1777,"title":{},"body":{"classes/I18n.html":{},"coverage.html":{}}}],["src/app/model/i18n.model.ts:10",{"_index":1779,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":2593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":1948,"title":{},"body":{"classes/Map.html":{},"coverage.html":{}}}],["src/app/model/map.ts:8",{"_index":1951,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":1967,"title":{},"body":{"classes/Message.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:10",{"_index":1970,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/thirds.model.ts",{"_index":140,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/thirds.model.ts:115",{"_index":2023,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:18",{"_index":2089,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:29",{"_index":2092,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:38",{"_index":2091,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:47",{"_index":2031,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:5",{"_index":2087,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:54",{"_index":2054,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:69",{"_index":156,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/thirds.model.ts:98",{"_index":1866,"title":{},"body":{"classes/Input.html":{}}}],["src/app/modules/archives/archives",{"_index":611,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":598,"title":{},"body":{"components/ArchivesComponent.html":{},"coverage.html":{}}}],["src/app/modules/archives/archives.component.ts:15",{"_index":601,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:19",{"_index":602,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":609,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":1207,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:28",{"_index":1209,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/card",{"_index":1025,"title":{},"body":{"components/CardDetailsComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":978,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:22",{"_index":988,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:23",{"_index":987,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:24",{"_index":991,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:25",{"_index":986,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":990,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:37",{"_index":989,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:46",{"_index":993,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":1321,"title":{},"body":{"components/DetailComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:104",{"_index":1343,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:21",{"_index":1351,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:22",{"_index":1339,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:23",{"_index":1338,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:24",{"_index":1353,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:25",{"_index":1337,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":1348,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:38",{"_index":1347,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:53",{"_index":1346,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:69",{"_index":1355,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:73",{"_index":1349,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:88",{"_index":1345,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":1418,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:18",{"_index":1437,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:19",{"_index":1426,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:20",{"_index":1425,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:25",{"_index":1427,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:34",{"_index":1434,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:44",{"_index":1433,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:53",{"_index":1438,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:57",{"_index":1430,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":1656,"title":{},"body":{"injectables/HandlebarsService.html":{},"coverage.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:103",{"_index":1687,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:117",{"_index":1681,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:123",{"_index":1691,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:140",{"_index":1692,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:182",{"_index":1686,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:208",{"_index":1694,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:226",{"_index":1684,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:23",{"_index":1676,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:240",{"_index":1685,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:248",{"_index":1689,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:255",{"_index":1688,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:262",{"_index":1690,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:44",{"_index":1678,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:49",{"_index":1680,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:62",{"_index":1683,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:91",{"_index":1682,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:97",{"_index":1693,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1097,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["src/app/modules/feed/components/no",{"_index":2017,"title":{},"body":{"components/NoSelectionComponent.html":{},"coverage.html":{}}}],["src/app/modules/feed/components/time",{"_index":2332,"title":{},"body":{"components/TimeLineComponent.html":{},"coverage.html":{}}}],["src/app/modules/feed/feed",{"_index":1505,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":1458,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["src/app/modules/feed/feed.component.ts:23",{"_index":1464,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:24",{"_index":1461,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:29",{"_index":1463,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:38",{"_index":1462,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":1486,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/thirdparty/iframe.service.ts",{"_index":1850,"title":{},"body":{"injectables/IframeService.html":{},"coverage.html":{}}}],["src/app/modules/thirdparty/iframe.service.ts:17",{"_index":1855,"title":{},"body":{"injectables/IframeService.html":{}}}],["src/app/modules/thirdparty/iframe.service.ts:8",{"_index":1853,"title":{},"body":{"injectables/IframeService.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":1832,"title":{},"body":{"components/IframeDisplayComponent.html":{},"coverage.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:19",{"_index":1840,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:25",{"_index":1841,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:32",{"_index":1844,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":2100,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":2098,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":614,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:266",{"_index":620,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:269",{"_index":622,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:270",{"_index":624,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:271",{"_index":623,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:272",{"_index":625,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:281",{"_index":1220,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:283",{"_index":1223,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:284",{"_index":1222,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:285",{"_index":1221,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/card.service.ts",{"_index":1133,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/app/services/card.service.ts:20",{"_index":1152,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:21",{"_index":1140,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:29",{"_index":1147,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:33",{"_index":1145,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:43",{"_index":1143,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:67",{"_index":1150,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":1254,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/services/config.service.ts:18",{"_index":1257,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:24",{"_index":1258,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":1567,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:17",{"_index":1573,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:23",{"_index":1579,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:28",{"_index":1577,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:52",{"_index":1575,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:60",{"_index":1576,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:82",{"_index":1574,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":1614,"title":{},"body":{"classes/GuidService.html":{},"coverage.html":{}}}],["src/app/services/guid.service.ts:16",{"_index":1617,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:22",{"_index":1618,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:26",{"_index":1619,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":2360,"title":{},"body":{"interceptors/TokenInjector.html":{},"coverage.html":{}}}],["src/app/services/interceptors.service.ts:14",{"_index":2364,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":2370,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":2367,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/services.module.ts",{"_index":2042,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:42",{"_index":2043,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/thirds.service.ts",{"_index":2102,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["src/app/services/thirds.service.ts:109",{"_index":2235,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:123",{"_index":2240,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:129",{"_index":2242,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:136",{"_index":2246,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:188",{"_index":2247,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:193",{"_index":2106,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:197",{"_index":2108,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":2250,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:24",{"_index":2248,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:25",{"_index":2249,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:26",{"_index":2251,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:27",{"_index":2233,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:38",{"_index":2244,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:51",{"_index":2238,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:59",{"_index":2236,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:69",{"_index":2234,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:76",{"_index":2237,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/time.service.ts",{"_index":2339,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["src/app/services/time.service.ts:12",{"_index":2344,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:17",{"_index":2349,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:21",{"_index":2352,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:25",{"_index":2348,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:29",{"_index":2346,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:109",{"_index":2033,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:112",{"_index":2034,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:126",{"_index":138,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:142",{"_index":139,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:26",{"_index":2025,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:27",{"_index":2028,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:28",{"_index":2026,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:29",{"_index":2029,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:30",{"_index":2027,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:39",{"_index":1862,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:41",{"_index":1863,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:50",{"_index":1218,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:65",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:68",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:78",{"_index":2381,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:81",{"_index":2382,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:92",{"_index":2383,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":1624,"title":{},"body":{"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:19",{"_index":1883,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:22",{"_index":1884,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:25",{"_index":1885,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:28",{"_index":1886,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:32",{"_index":1887,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:35",{"_index":1888,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:40",{"_index":1625,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/card.actions.ts:43",{"_index":1626,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":1632,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:18",{"_index":1889,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:21",{"_index":1890,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:24",{"_index":1891,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:29",{"_index":1892,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:32",{"_index":1893,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:38",{"_index":1633,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/config.actions.ts:40",{"_index":1634,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":581,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:18",{"_index":582,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":583,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:24",{"_index":1864,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:27",{"_index":1865,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":212,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":1644,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:19",{"_index":1900,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:26",{"_index":1901,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:29",{"_index":1902,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:34",{"_index":1903,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:37",{"_index":1904,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:42",{"_index":1645,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/actions/menu.actions.ts:45",{"_index":1646,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":831,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/authentication.effects.ts:124",{"_index":943,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:145",{"_index":853,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:164",{"_index":927,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:188",{"_index":911,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:251",{"_index":845,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:37",{"_index":836,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:57",{"_index":921,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:79",{"_index":935,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":1104,"title":{},"body":{"injectables/CardOperationEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1047,"title":{},"body":{"injectables/CardEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/card.effects.ts:20",{"_index":1050,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:30",{"_index":1057,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":1224,"title":{},"body":{"injectables/ConfigEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/config.effects.ts:21",{"_index":1228,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:54",{"_index":1234,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:71",{"_index":1237,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":1268,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/feed",{"_index":1473,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/light",{"_index":1867,"title":{},"body":{"injectables/LightCardEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":1952,"title":{},"body":{"injectables/MenuEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/menu.effects.ts:19",{"_index":1953,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:29",{"_index":1961,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/index.ts",{"_index":518,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/reducers/authentication.reducer.ts",{"_index":2474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/reducers/card.reducer.ts",{"_index":2480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/reducers/config.reducer.ts",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["src/app/store/reducers/light",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["src/app/store/reducers/menu.reducer.ts",{"_index":2485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/authentication.selectors.ts",{"_index":2486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/card.selectors.ts",{"_index":2488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/config.selectors.ts",{"_index":2492,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/feed.selectors.ts",{"_index":2495,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/menu.selectors.ts",{"_index":2502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/router.selectors.ts",{"_index":2504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/state.module.ts",{"_index":2057,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:33",{"_index":2058,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":827,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/card.state.ts",{"_index":1199,"title":{},"body":{"interfaces/CardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/config.state.ts",{"_index":1265,"title":{},"body":{"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1067,"title":{},"body":{"interfaces/CardFeedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":1963,"title":{},"body":{"interfaces/MenuState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/router.state.ts",{"_index":1284,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/router.state.ts:37",{"_index":2036,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:48",{"_index":1293,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:55",{"_index":1290,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/translate.config.ts",{"_index":2506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2510,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2511,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.vps.ts",{"_index":2512,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2513,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tests/helpers.ts",{"_index":2516,"title":{},"body":{"coverage.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":2253,"title":{},"body":{"classes/ThirdsServiceMock.html":{},"coverage.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:14",{"_index":2255,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:5",{"_index":2254,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":1174,"title":{},"body":{"injectables/CardService.html":{}}}],["start",{"_index":2324,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["startdate",{"_index":962,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.actions[actionid",{"_index":1401,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.card",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.children",{"_index":1317,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.config",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.expirationdate",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.feed",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.filters",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.identifier",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.lastcards",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.menu",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.params",{"_index":1315,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.selectedcardid",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.token",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state:appstate",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":2436,"title":{},"body":{"coverage.html":{}}}],["statemodule",{"_index":434,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":2032,"title":{},"body":{"classes/Process.html":{}}}],["states?:ofmap",{"_index":189,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":1592,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":1590,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":1597,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.notification",{"_index":1594,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.question",{"_index":1593,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":1596,"title":{},"body":{"injectables/FilterService.html":{}}}],["still",{"_index":744,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["stillvalid",{"_index":751,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["stops",{"_index":1548,"title":{},"body":{"classes/Filter.html":{}}}],["store",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["store.select(buildconfigselector('security",{"_index":656,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["store/index",{"_index":2115,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["storeconfig",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":742,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["storedevtoolsmodule",{"_index":2061,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":2070,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["storemodule",{"_index":2059,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":2065,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":2064,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":2066,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/variables.html":{}}}],["string):observable",{"_index":1717,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":2074,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":1367,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":2142,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":668,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subject",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["submitted",{"_index":940,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["subscribe",{"_index":1106,"title":{},"body":{"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{},"injectables/IframeService.html":{}}}],["subscribe((maxedretries=>this.maxedretries=maxedretries",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1037,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(form",{"_index":2320,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(isauth",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(loaded",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m=>this.loginmessage=m",{"_index":1933,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(oauth2conf",{"_index":657,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subscribe(provider=>this.codeprovider={name:provider",{"_index":1935,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(third",{"_index":1044,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribetoloadi18n",{"_index":2232,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["subscribetoloadi18n(observable",{"_index":2188,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["subscription",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["subtitle",{"_index":1017,"title":{},"body":{"components/CardComponent.html":{}}}],["success",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":1236,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["such",{"_index":761,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["summary",{"_index":968,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["support",{"_index":2599,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":1751,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch",{"_index":874,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{}}}],["switch(operator",{"_index":1740,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":200,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":864,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(([payload",{"_index":868,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":930,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action:loadlightcardssuccess",{"_index":1872,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((af:applyfilter",{"_index":1127,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((ids:string",{"_index":2192,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(action",{"_index":1052,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["switchmap(menu=>zip(of(menu),this.service.loadi18nformenuentries(menu",{"_index":1956,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["switchmap(ts=>from(ts",{"_index":2167,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["t",{"_index":1950,"title":{},"body":{"classes/Map.html":{}}}],["t.i18nlabelkey",{"_index":2172,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":2173,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":2171,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":1446,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tab.active",{"_index":1445,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":2423,"title":{},"body":{"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2539,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1452,"title":{},"body":{"components/DetailsComponent.html":{}}}],["take",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{}}}],["takes",{"_index":1298,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":2292,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":2315,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":2313,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["tap",{"_index":631,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(authenticationservice.saveauthenticationinformation",{"_index":732,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["tap(t=>object.setprototypeof(t,third.prototype",{"_index":2132,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":1726,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(t=>this.thirdcache.set(key,t",{"_index":2133,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(test=>console.log(`loaded",{"_index":1874,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["tells",{"_index":855,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":1657,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":1697,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":977,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":2082,"title":{},"body":{"classes/Third.html":{}}}],["templates?:string",{"_index":168,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":1800,"title":{},"body":{"components/IconComponent.html":{}}}],["terms",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["test",{"_index":824,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["test_filter",{"_index":1609,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":197,"title":{},"body":{"classes/Action.html":{},"components/CardComponent.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/enumerations.html":{}}}],["that.time.currenttime().valueof",{"_index":1765,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["third",{"_index":164,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"components/DetailComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["third,html",{"_index":1384,"title":{},"body":{"components/DetailComponent.html":{}}}],["third.extractstate(this.card",{"_index":1045,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["thirdcache",{"_index":2121,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":185,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"coverage.html":{}}}],["thirdmenu('t1",{"_index":2257,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":2265,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":2170,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuentry",{"_index":182,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{},"coverage.html":{}}}],["thirdmenuentry('id1",{"_index":2259,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":2262,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":2267,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenus",{"_index":1980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdname",{"_index":2245,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":2127,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":2093,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":2097,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":1333,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"miscellaneous/variables.html":{}}}],["thirdservice",{"_index":1869,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdsi18nloader",{"_index":2101,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":2224,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":2223,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1029,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":2252,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{},"coverage.html":{}}}],["thirdsurl",{"_index":2117,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.$injector.get(translateservice",{"_index":2222,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this._defaultfilters",{"_index":1581,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._filter",{"_index":2293,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":2312,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":2408,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":2299,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":1385,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":997,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._thirdmenus",{"_index":2004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":1999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.actions",{"_index":861,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["this.actions$.pipe",{"_index":847,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":924,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.active",{"_index":1558,"title":{},"body":{"classes/Filter.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":658,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.attachaction(button",{"_index":1400,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":869,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":932,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(authenticationservice.extracttoken",{"_index":865,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":955,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.big",{"_index":1815,"title":{},"body":{"components/IconComponent.html":{}}}],["this.big?'big':this.medium?'medium':'small",{"_index":1821,"title":{},"body":{"components/IconComponent.html":{}}}],["this.bindactions(third",{"_index":1390,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card",{"_index":1038,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1363,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1043,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.cardoperationsurl",{"_index":1161,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":1179,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardsurl",{"_index":1163,"title":{},"body":{"injectables/CardService.html":{}}}],["this.clientid",{"_index":660,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.clientsecret",{"_index":663,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.configloaded",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":1262,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.convert(auth",{"_index":731,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.createformgroup",{"_index":2295,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentpath",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.dark",{"_index":1819,"title":{},"body":{"components/IconComponent.html":{}}}],["this.detail",{"_index":1361,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":1362,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":1364,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1040,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":1442,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":1444,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1046,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":1453,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":1395,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":1392,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":2001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":2006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":669,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.extractparams(child",{"_index":1318,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":1312,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.fetchcardoperation(new",{"_index":1178,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchi18njson(publisher",{"_index":2204,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchthird(thirdname,version",{"_index":2131,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.funktion",{"_index":1557,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":1562,"title":{},"body":{"classes/Filter.html":{}}}],["this.getcurrentguid().tostring",{"_index":1623,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guid",{"_index":1620,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":729,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":1160,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":1383,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":720,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.handlerejectedlogin('invalid",{"_index":956,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.hide",{"_index":1936,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":1375,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":1165,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":1264,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":2136,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":2153,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":2139,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":2166,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.post",{"_index":1197,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":695,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.iconpath",{"_index":1813,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iframeservice.selecturl(url",{"_index":2009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.iframeservice.urlupdate.subscribe",{"_index":1846,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.iframeurl",{"_index":1848,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.initfilters",{"_index":1582,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initializehandlebarstemplates",{"_index":1360,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":1359,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initrecipientfilter",{"_index":1603,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":1605,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":1601,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.isauthenticated",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["this.light",{"_index":1820,"title":{},"body":{"components/IconComponent.html":{}}}],["this.lightcard.publisher+'.'+this.lightcard.publisherversion",{"_index":998,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcards",{"_index":1467,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.loadedi18n",{"_index":2198,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadedi18n.push(result.id",{"_index":2218,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n",{"_index":2196,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n.push(id",{"_index":2200,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loginclaim",{"_index":665,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.medium",{"_index":1817,"title":{},"body":{"components/IconComponent.html":{}}}],["this.ngunsubscribe$.complete",{"_index":2297,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":2296,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.open=true",{"_index":996,"title":{},"body":{"components/CardComponent.html":{}}}],["this.processes[card.process",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(card.publisher,card.publisherversion,templatename).pipe",{"_index":1714,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindex",{"_index":1707,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":1710,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":1711,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":1702,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":1701,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":1704,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":1708,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":1712,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":1700,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":1699,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":1706,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":1705,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":1709,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":1703,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":1389,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.retry",{"_index":1249,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":1248,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate(['/'+this.currentpath,'cards',this.lightcard.id",{"_index":995,"title":{},"body":{"components/CardComponent.html":{}}}],["this.router.navigate(['/login",{"_index":850,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":1386,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":1374,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":1450,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1471,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":1955,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":1230,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.getcardoperation",{"_index":1111,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1053,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.movetocodeflowloginpage",{"_index":1943,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start,af.payload.status.end",{"_index":1128,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.seturl(iframeurl",{"_index":1847,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.size",{"_index":1822,"title":{},"body":{"components/IconComponent.html":{}}}],["this.small",{"_index":1818,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites",{"_index":1827,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":1829,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":1559,"title":{},"body":{"classes/Filter.html":{}}}],["this.store",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":2321,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{}}}],["this.store.pipe",{"_index":1468,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.mode",{"_index":1929,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":1934,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2298,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":2395,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselection",{"_index":1036,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":1472,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":999,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m=>m!=null",{"_index":1931,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subscribetoloadi18n(observable",{"_index":2182,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.templatecache[key",{"_index":1721,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":2128,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":1366,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":1724,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.loadi18nforlightcards(action.payload.lightcards",{"_index":1873,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1042,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":2123,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.timefilterform",{"_index":2294,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":2309,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":2308,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":2311,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":2304,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":2303,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":2310,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":2327,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":2325,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":2305,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":2300,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.translate().getlangs",{"_index":2205,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().settranslation(lang",{"_index":2215,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(lang",{"_index":2216,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate.getbrowserlang",{"_index":1719,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["this.typefilterform",{"_index":2394,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":2398,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true",{"_index":2405,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":2396,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true",{"_index":2404,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(!next.active",{"_index":2402,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(true",{"_index":2407,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(!next.active",{"_index":2400,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(true",{"_index":2406,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.updateasync",{"_index":1441,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.urlcleaner",{"_index":2122,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":2146,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlupdate.next(this.sanitizer.bypasssecuritytrustresourceurl(url",{"_index":1861,"title":{},"body":{"injectables/IframeService.html":{}}}],["this.usecodeflow",{"_index":1928,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform",{"_index":1937,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":1939,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":1940,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":1942,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":1938,"title":{},"body":{"components/LoginComponent.html":{}}}],["those",{"_index":1064,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["throw",{"_index":2051,"title":{},"body":{"modules/ServicesModule.html":{}}}],["throwerror",{"_index":629,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":708,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(err",{"_index":2210,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":735,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thrown",{"_index":681,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thus",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["time",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["time:timeservice",{"_index":1698,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["time_filter",{"_index":1608,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timefiltercomponent",{"_index":411,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["timefilterform",{"_index":2277,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timelinecomponent",{"_index":414,"title":{"components/TimeLineComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["timer",{"_index":2289,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":2319,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timeservice",{"_index":1675,"title":{"injectables/TimeService.html":{}},"body":{"injectables/HandlebarsService.html":{},"modules/ServicesModule.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["title",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{}}}],["titleposition",{"_index":972,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titlestyle",{"_index":976,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":2258,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":2266,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{entry.label",{"_index":2013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.entries[0].label",{"_index":2014,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":2011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["todo",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["togglemenu",{"_index":1979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":1986,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":2005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tokeninjector",{"_index":2041,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"coverage.html":{},"index.html":{}}}],["trace",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["trans",{"_index":2208,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translate",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translate.config",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["translateconfig",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["translateloader",{"_index":2103,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemoduleconfig",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translation",{"_index":2207,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translation',error",{"_index":2221,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translationelement",{"_index":2213,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tree",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["triggered.\\naction",{"_index":1415,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":922,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":740,"title":{},"body":{"classes/AuthObject.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["trylogout",{"_index":860,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":19,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":1941,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":72,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1521,"title":{},"body":{"classes/Filter.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type_filter",{"_index":1606,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2602,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":953,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":416,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["typefilterform",{"_index":2385,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":1774,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["types/jwt",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["u00a0",{"_index":1769,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["ui/assets/i18n",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uid",{"_index":971,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["unable",{"_index":878,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unavailable",{"_index":883,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["undefined",{"_index":1816,"title":{},"body":{"components/IconComponent.html":{}}}],["undefined,undefined",{"_index":1536,"title":{},"body":{"classes/Filter.html":{}}}],["unexpected",{"_index":240,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":655,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["unselectedvalues",{"_index":210,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unused",{"_index":1066,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["up",{"_index":973,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["updateasync",{"_index":1424,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updatecardsubscriptionwithdates",{"_index":1138,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":1148,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart:number,rangeend:number):observable",{"_index":1196,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":1076,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["updatedsubscription",{"_index":236,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateon",{"_index":2328,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updatestate",{"_index":153,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":237,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["upon",{"_index":1238,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uri",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["uribase",{"_index":805,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["uribase}${pathend",{"_index":810,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["url",{"_index":184,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/variables.html":{}}}],["url.endswith('/auth/check_token",{"_index":2376,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":2378,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":2377,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split('/')[1",{"_index":1001,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["urlcleaner",{"_index":2120,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":692,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["urls",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlsearchparams",{"_index":686,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["urlupdate",{"_index":1858,"title":{},"body":{"injectables/IframeService.html":{}}}],["usable",{"_index":793,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["use",{"_index":1524,"title":{},"body":{"classes/Filter.html":{}}}],["useclass",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeflow",{"_index":1912,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["usefactory",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":66,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["userform",{"_index":1913,"title":{},"body":{"components/LoginComponent.html":{}}}],["username",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["uses",{"_index":937,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":615,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/IframeService.html":{}}}],["utc",{"_index":823,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["utc_beginning_time",{"_index":2479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["v1",{"_index":1728,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":1730,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2163,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["valid",{"_index":674,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["validate",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["validity",{"_index":912,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.replace",{"_index":1767,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.slice(from",{"_index":1747,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.split(splitvalue)[index",{"_index":1736,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index",{"_index":1743,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":1733,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":2314,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["values",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["var",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variable",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2604,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":1012,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":843,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":746,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["version",{"_index":187,"title":{},"body":{"classes/Action.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":166,"title":{},"body":{"classes/Action.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["version:string):observable",{"_index":2126,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versionparam",{"_index":2147,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["via",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["visible",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/IframeService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["wait",{"_index":1388,"title":{},"body":{"components/DetailComponent.html":{}}}],["warning",{"_index":1411,"title":{},"body":{"components/DetailComponent.html":{}}}],["weather",{"_index":1077,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["web",{"_index":616,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["went",{"_index":2220,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["width",{"_index":1007,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["win",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["window.location.href",{"_index":802,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["window.location.href.indexof('code",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.pathname",{"_index":1295,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["withlatestfrom",{"_index":949,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":867,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":1251,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["work",{"_index":2193,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["works",{"_index":603,"title":{},"body":{"components/ArchivesComponent.html":{},"components/NoSelectionComponent.html":{}}}],["wrong",{"_index":928,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["www",{"_index":691,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["yes",{"_index":621,"title":{},"body":{"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/I18n.html":{},"classes/Message.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{}}}],["zip",{"_index":1358,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythird(this.card.publisher,this.card.publisherversion",{"_index":1382,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n\nTryToLogIn\nCheckAuthentication via handleLogInAttempt @method\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogOut\nRejectLogInAttempt\nConsume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:126\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:126\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:142\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                    Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {CheckAuthenticationStatus, InitAuthStatus} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {selectExpirationTime} from '@ofSelectors/authentication.selectors';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {isInTheFuture} from \"@ofServices/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false ;\n    private maxedRetries: boolean = false;\n\n    constructor(private store: Store,\n                private translate: TranslateService) {\n\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n        this.translate.setDefaultLang('en');\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`)\n        let i = window.location.href.indexOf('code');\n        if(i != -1){\n            this.store.dispatch(new InitAuthStatus({code:window.location.href.substring(i + 5)}))\n        }\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.store.pipe(select(selectExpirationTime),\n            map(isInTheFuture)\n                        ).subscribe(isAUth => this.isAuthenticated$ = isAUth);\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries=>this.maxedRetries=maxedRetries));\n        // First Action send by the application, is the user currently authenticated ?\n        this.store.dispatch(new LoadConfig());\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n        Application is loading ...\n    \n    \n        Application is not available yet, please reload later (F5)\n    \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n.button {margin-right: 8px;}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Application is loading ...                Application is not available yet, please reload later (F5)    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {IconComponent} from './components/icon/icon.component';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {translateConfig} from \"./translate.config\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faExternalLinkAlt);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule\n    ],\n    declarations: [AppComponent, NavbarComponent, LoginComponent, IconComponent],\n    providers: [ { provide: LocationStrategy, useClass: HashLocationStrategy }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from '@ofServices/guard.service';\nimport {LoginComponent} from './components/login/login.component';\nimport {environment} from \"@env/environment\";\n\nconst routes: Routes = [\n    // {\n    //     path: 'login',\n    //     component: LoginComponent\n    // },\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'archives',\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: '/feed'}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes,{ enableTracing: !environment.production, preloadingStrategy: PreloadAllModules })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:     AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:     CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:     CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers,\n    // initialState: {\n    //     router: routerInitialState,\n    // }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  archives works!\n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archives works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchivesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport {ArchivesComponent} from \"./archives.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ArchivesRoutingModule\n  ],\n  declarations: [ArchivesComponent]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to try to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:266\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:269\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:271\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:270\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:272\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError)\n        );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        identifier\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null\n};\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRejectedLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleRejectedLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleRejectedLogin(errorMsg: Message)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:251\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMsg\n                                                        \n                                                                    Message\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AuthenticationActions\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:145\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                        let message, key;\n                                        let params = new Map()\n                                        switch (errorResponse.status) {\n                                            case 401:\n                                                message = 'Unable to authenticate the user';\n                                                key = 'login.error.code';\n                                                break;\n                                            case 0:\n                                            case 500:\n                                                message = 'Authentication service currently unavailable';\n                                                key = 'login.error.unavailable';\n                                                break;\n                                            default:\n                                                message = 'Unexpected error';\n                                                key = 'login.error.unexpected';\n                                                params['error'] = errorResponse.message;\n                                        }\n                                        console.error(message, errorResponse);\n                                        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:188\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:57\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:164\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                let message, key;\n                                let params = new Map()\n                                switch (errorResponse.status) {\n                                    case 401:\n                                        message = 'Unable to authenticate the user';\n                                        key = 'login.error.authenticate';\n                                        break;\n                                    case 0:\n                                    case 500:\n                                        message = 'Authentication service currently unavailable';\n                                        key = 'login.error.unavailable';\n                                        break;\n                                    default:\n                                        message = 'Unexpected error';\n                                        key = 'login.error.unexpected';\n                                        params['error'] = errorResponse.message;\n                                }\n                                console.error(message, errorResponse);\n                                return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:79\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            map((action: TryToLogOut) => {\n                AuthenticationService.clearAuthenticationInformation();\n                return new AcceptLogOut();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:124\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable, of} from 'rxjs';\nimport {Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {catchError, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {Router} from \"@angular/router\";\nimport {ConfigActionTypes} from \"@ofActions/config.actions\";\nimport {selectCode} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructor\n     * @param store - {Store} state manager\n     * @param action$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogin\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                                let message, key;\n                                let params = new Map()\n                                switch (errorResponse.status) {\n                                    case 401:\n                                        message = 'Unable to authenticate the user';\n                                        key = 'login.error.authenticate';\n                                        break;\n                                    case 0:\n                                    case 500:\n                                        message = 'Authentication service currently unavailable';\n                                        key = 'login.error.unavailable';\n                                        break;\n                                    default:\n                                        message = 'Unexpected error';\n                                        key = 'login.error.unexpected';\n                                        params['error'] = errorResponse.message;\n                                }\n                                console.error(message, errorResponse);\n                                return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            map((action: TryToLogOut) => {\n                AuthenticationService.clearAuthenticationInformation();\n                return new AcceptLogOut();\n            })\n        );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                        let message, key;\n                                        let params = new Map()\n                                        switch (errorResponse.status) {\n                                            case 401:\n                                                message = 'Unable to authenticate the user';\n                                                key = 'login.error.code';\n                                                break;\n                                            case 0:\n                                            case 500:\n                                                message = 'Authentication service currently unavailable';\n                                                key = 'login.error.unavailable';\n                                                break;\n                                            default:\n                                                message = 'Unexpected error';\n                                                key = 'login.error.unexpected';\n                                                params['error'] = errorResponse.message;\n                                        }\n                                        console.error(message, errorResponse);\n                                        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        AuthenticationService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    // handleLogInAttempt(payload: CheckTokenResponse): AuthenticationActions {\n    //     if (payload) {\n    //         const authInfo = this.authService.extractIdentificationInformation();\n    //         return new AcceptLogIn(authInfo);\n    //\n    //     }\n    //     return this.handleRejectedLogin('invalid token');\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                    Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                currentPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :     LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        select()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit{\n\n    @Input() public open: boolean = true;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    private _i18nPrefix: string;\n\n    constructor(private router: Router,\n                private store: Store) {\n\n    }\n\n    public select() {\n        this.router.navigate(['/'+this.currentPath,'cards',this.lightCard.id]);\n        this.open=true;\n    }\n\n    ngOnInit() {\n        this._i18nPrefix = this.lightCard.publisher+'.'+this.lightCard.publisherVersion+'.'\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/')[1];\n        })\n        this.open=true;\n    }\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix+lightCard.title.key}}\n            ({{lightCard.startDate|date:'short'}} - {{lightCard.endDate|date:'short'}})\n        \n    \n    \n        \n        \n            {{i18nPrefix+lightCard.summary.key}}\n        \n    \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix+lightCard.title.key}}            ({{lightCard.startDate|date:\\'short\\'}} - {{lightCard.endDate|date:\\'short\\'}})                                            {{i18nPrefix+lightCard.summary.key}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\n\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n\n    constructor(private store: Store, private thirdsService: ThirdsService) {\n\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelection)\n            .subscribe(card => {\n                this.card = card;\n                if(card) {\n                    this.details = [...card.details];\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion)\n                        .subscribe(third => {\n                            const state = third.extractState(this.card)\n                            if (state != null)\n                                this.details.push(...state.details);\n                        });\n                }\n            });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from \"@ofStore/index\";\nimport {CardActionTypes, LoadCard, LoadCardFailure, LoadCardSuccess} from \"@ofActions/card.actions\";\nimport {Card} from \"@ofModel/card.model\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\n\n\n            \n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function sortByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:sortByStartDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n})\nexport class CardListComponent  {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: string;\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n  \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    map(operation => {\n                        if (operation.type && operation.type.toString() === 'ADD') {\n                            const opCards = operation.cards;\n                            return new LoadLightCardsSuccess({lightCards: opCards});\n                        }\n                        return new AddLightCardFailure(\n                            {\n                                error:\n                                    new Error(`unhandled action type '${operation.type}'`)\n                            });\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af:ApplyFilter)=>af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af:ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start,af.payload.status.end)\n                .pipe(\n                    map(()=> {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:66\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LoadLightCardsSuccess,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    map(operation => {\n                        if (operation.type && operation.type.toString() === 'ADD') {\n                            const opCards = operation.cards;\n                            return new LoadLightCardsSuccess({lightCards: opCards});\n                        }\n                        return new AddLightCardFailure(\n                            {\n                                error:\n                                    new Error(`unhandled action type '${operation.type}'`)\n                            });\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af:ApplyFilter)=>af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af:ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start,af.payload.status.end)\n                .pipe(\n                    map(()=> {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadCard\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, guidService: GuidService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                    GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchCardOperation\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventSource\n                                                        \n                                                                    EventSourcePolyfill\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCardOperation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCardOperation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadCard(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateCardSubscriptionWithDates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rangeStart\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rangeEnd\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication.service';\nimport {Card} from \"@ofModel/card.model\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\n\n@Injectable()\nexport class CardService {\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n\n    constructor(private httpClient:HttpClient, private authenticationService: AuthenticationService,private guidService: GuidService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        let minus2Hour = new Date(new Date().valueOf()-2*60*60*1000);\n        let plus48Hours = new Date(minus2Hour.valueOf()+48*60*60*1000);\n        //security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {headers: AuthenticationService.getSecurityHeader(),\n                heartbeatTimeout: 600000}));\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occured from ES: ${error.toString()}`)\n                }\n\n            } catch (error) {\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        })\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart:number,rangeEnd:number):Observable{\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart:rangeStart,rangeEnd: rangeEnd});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport interface CardState{\n    selected: Card,\n    loading: boolean,\n    error: string\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/cards.module.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\n\n@NgModule({\n  declarations: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n  imports: [\n    CommonModule,\n      TranslateModule\n  ],\n    exports: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n    providers: [HandlebarsService]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:281\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:285\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:284\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:283\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError)\n        );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:54\n                            \n                        \n\n                \n                    \n                        Manages load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:71\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retry = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retry = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages load -> service request -> success/message\n     */\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retry: Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchConfiguration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/config.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToCard\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {CardService} from \"@ofServices/card.service\";\nimport {Observable} from \"rxjs\";\nimport {ROUTER_NAVIGATION, RouterNavigationAction} from \"@ngrx/router-store\";\nimport {filter, switchMap} from \"rxjs/operators\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {SelectLightCard} from \"@ofActions/light-card.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            extractParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractParams(state: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/states/router.state.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Params\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \nserialize(routerState: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/states/router.state.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerState\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RouterStateUrl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                    TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                    HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :     Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :     Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        button\n                                                        \n                                                                    HTMLButtonElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    Action\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        actionId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bindActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nbindActions(third: Third)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        third\n                                                        \n                                                                    Third\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializeHandlebarsTemplates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeHandlebarsTemplates()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializeHrefsOfCssLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeHrefsOfCssLink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reinsertScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nreinsertScripts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from \"../../../../services/thirds.service\";\nimport {HandlebarsService} from \"../../services/handlebars.service\";\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Action, Third} from \"@ofModel/thirds.model\";\nimport {zip} from \"rxjs\";\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                //needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}' and with local version '${safeCssUrl.toLocaleString()}'`)\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThird(this.card.publisher,this.card.publisherVersion),\n        this.handlebars.executeTemplate(this.detail.templateName, this.card))\n            .subscribe(\n                ([third,html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (let button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if(state!=null)\n                        this.attachAction(button, state.actions[actionId], actionId);\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (let c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :     Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectDetail(detail: DetailComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detail\n                                                        \n                                                                    DetailComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateAsync()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n})\nexport class DetailsComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    {{i18nPrefix+detailC.detail.title.key}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{i18nPrefix+detailC.detail.title.key}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from \"rxjs/operators\";\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n    }\n\n\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {FeedActions, InitFilters} from \"@ofActions/feed.actions\";\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters});\n            }));\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent],\n    exports: [FeedComponent]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(card: LightCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:43\n                            \n                        \n\n\n                \n                    \n                            apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    LightCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chainFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nchainFilter(card: LightCard, next: Filter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:56\n                            \n                        \n\n\n                \n                    \n                            Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    LightCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    Filter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            chainFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        chainFilter(card: LightCard, next: Filter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:67\n                            \n                        \n\n\n                \n                    \n                            Sequentially applies a chain of filters to a card\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    LightCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    Filter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clone\n                            \n                            \n                        \n                    \n                \n                \n                    \nclone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Filter\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initRecipientFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultFilters\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initFilters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Map\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initRecipientFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initRecipientFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initTimeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTimeFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initTypeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTypeFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultFilters\n                    \n                \n\n                \n                    \n                        getdefaultFilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filter.service.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    get defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const question = Severity.QUESTION;\n        const notification = Severity.NOTIFICATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.question && card.severity == question ||\n                    status.notification && card.severity == notification;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                question: true,\n                notification: false\n            }\n        );\n    }\n\n    private initRecipientFilter() {\n        return new Filter(\n            (card, status) => false,\n            false,\n            {}\n        );\n    }\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        filters.set(FilterType.RECIPIENT_FILTER, this.initRecipientFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentGuid\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentGuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Guid\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentGuidString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentGuidString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString():string{\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:77\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error'\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            executeTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        executeTemplate(templateName: string, card: Card)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        card\n                                                        \n                                                                    Card\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queryTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        queryTemplate(publisher: string, version: string, name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerArrayAtIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerArrayAtIndex()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerArrayAtIndexLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerArrayAtIndexLength()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerBool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerBool()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerCardAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerCardAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerDateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerDateFormat()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:240\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerI18n\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerI18n()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:182\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerMath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerMath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerNow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerNow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:255\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerNumberFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerNumberFormat()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerPreserveSpace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerPreserveSpace()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:262\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSlice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSlice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSplit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSplit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSvg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSvg()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:208\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n\n    constructor(private time:TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n    }\n\n    public executeTemplate(templateName: string, card: Card):Observable {\n        return this.queryTemplate(card.publisher,card.publisherVersion,templateName).pipe(\n            map(t=>t(card)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this.translate.getBrowserLang();\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (value, splitValue, index, options) {\n            return value.split(splitValue)[index];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this.translate.getBrowserLang());\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this.translate.getBrowserLang(), options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                big\n                            \n                            \n                                dark\n                            \n                            \n                                icon\n                            \n                            \n                                light\n                            \n                            \n                                medium\n                            \n                            \n                                small\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        big\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dark\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        light\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        medium\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        small\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() small:boolean;\n  @Input() medium:boolean;\n  @Input() big:boolean;\n  @Input() dark:boolean;\n  @Input() light:boolean;\n  size:string;\n  sprites:string;\n  iconPath:string;\n  constructor(platformLocation:PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.big = this.big != undefined;\n    this.medium = this.medium != undefined && !this.big;\n    this.small = this.small != undefined && !this.medium;\n    this.dark = this.dark != undefined;\n    this.light = this.light != undefined && ! this.dark;\n    let size = this.big?'big':this.medium?'medium':'small'\n    switch (size) {\n        case 'big':\n          this.size = '64px';\n          break;\n        case 'medium':\n          this.size = '32px';\n          break;\n         default:\n          this.size = '16px';\n    }\n    if(this.dark||this.light){\n      this.sprites='sprites-mono.svg'\n    }else{\n      this.sprites='sprites.svg'\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iframeService: IframeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iframeService\n                                                  \n                                                        \n                                                                    IframeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(iframeURL: SafeUrl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iframeURL\n                                                        \n                                                                    SafeUrl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {IframeService} from \"./iframe.service\";\nimport {SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  iframeURL : SafeUrl;\n\n  constructor(\n      private iframeService : IframeService\n  ) { }\n\n  ngOnInit() {\n\n    this.iframeService.urlUpdate.subscribe(\n        iframeURL => this.setUrl(iframeURL)\n    )\n  }\n\n  setUrl(iframeURL : SafeUrl){\n    this.iframeURL = iframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  No iframe URL to display.\n\n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  No iframe URL to display.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IframeService.html":{"url":"injectables/IframeService.html","title":"injectable - IframeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IframeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/thirdparty/iframe.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframe.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectURL(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframe.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable, Output} from '@angular/core';\nimport {ReplaySubject} from \"rxjs\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IframeService {\n\n  constructor(\n      private sanitizer: DomSanitizer\n  ) { }\n\n  @Output() urlUpdate: ReplaySubject = new ReplaySubject(1);\n  //Using ReplaySubject because the first urlUpdate is emitted before the component can subscribe to it (when it is initialized).\n\n  selectURL(url){\n    this.urlUpdate.next(this.sanitizer.bypassSecurityTrustResourceUrl(url));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {LightCardActionTypes, LoadLightCardsExtendedData, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {tap} from \"rxjs/internal/operators/tap\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error'\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error'\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error'\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeFlow$\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \ncodeFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeFlow$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeFlow$: Observable;\n    loginMessage: Message\n    // codeProvider$: Observable;\n    codeProvider: any;\n    /* istanbul ignore next */\n    constructor( private store: Store, private service: AuthenticationService) {}\n\n    ngOnInit() {\n        this.useCodeFlow$ = this.store.select(buildConfigSelector('security.oauth2.flow.mode'))\n            .pipe(map(flowMode=>flowMode === 'CODE'));\n        this.store.select(selectMessage).pipe(filter(m=>m!=null && m.level==MessageLevel.ERROR))\n            .subscribe(m=>this.loginMessage=m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider=>this.codeProvider={name:provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void{\n        this.service.moveToCodeFlowLoginPage();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                    Identifier\n                    \n                    \n                        Password\n                        \n                    \n                    \n                        login.login.password\n                        login.reset\n                    \n                \n            \n            login.login.code\n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Identifier                                                                Password                                                                                        login.login.password                        login.reset                                                            login.login.code            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action => this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {LoadMenuFailure, LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action => this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setIframeURL\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, iframeService: IframeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iframeService\n                                                  \n                                                        \n                                                                    IframeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setIframeURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetIframeURL(url)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMenu(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {IframeService} from \"../../modules/thirdparty/iframe.service\";\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: any;\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n\n    constructor(private store: Store,\n                private iframeService : IframeService) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/')[1];\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n    }\n\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    setIframeURL(url){\n        this.iframeService.selectURL(url);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\">\n        \n        1\"\n                translate\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n              {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}\n            \n              \n            \n          \n        \n        \n        \n          {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}\n          \n            \n          \n        \n      \n      \n        \n          menu.logout\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{\\'menu.\\'+link.path}}                  1\">                1\"                translate        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                    {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}                                                                                  {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}                                                                      menu.logout                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogin;\nCheckAuthentication\nand in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:109\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:109\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/services.module.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication.service';\nimport {TokenInjector} from './interceptors.service';\n// import {AuthenticationGuard} from './guard.service';\nimport {CardService} from './card.service';\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {ConfigService} from \"@ofServices/config.service\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        },\n        GuidService,\n        FilterService\n\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/state.module.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            extractState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractState(card: Card)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/thirds.model.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    Card\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     State\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IframeDisplayComponent } from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: IframeDisplayComponent,\n        // canActivate: [AuthenticationGuard]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:193\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTranslation(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:197\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        let langs = this.translate().getLangs();\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadedI18n\n                            \n                            \n                                    Private\n                                loadingI18n\n                            \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                fetchI18nJson\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                loadI18nForLightCards\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                            \n                                queryThird\n                            \n                            \n                                    Private\n                                subscribeToLoadI18n\n                            \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, store: Store, $injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        $injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeThirdCssUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styleName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeThirdsMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomputeThirdsMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchHbsTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        locale\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchI18nJson\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchI18nJson(publisher: string, version: string, locales: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        locales\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fetchThird\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fetchThird(publisher: string, version: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadI18nForLightCards\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadI18nForLightCards(cards: LightCard[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cards\n                                                        \n                                                                    LightCard[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadI18nForMenuEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadI18nForMenuEntries(menus: ThirdMenu[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menus\n                                                        \n                                                                    ThirdMenu[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryThird\n                            \n                            \n                        \n                    \n                \n                \n                    \nqueryThird(thirdName: string, version: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribeToLoadI18n\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribeToLoadI18n(observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observable\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        translate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:188\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     TranslateService\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadedI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        let langs = this.translate().getLangs();\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeThirdsMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomputeThirdsMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tests/mocks/thirds.service.mock.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadI18nForMenuEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadI18nForMenuEntries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tests/mocks/thirds.service.mock.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                    TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFormGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start));\n                    else\n                        this.timeFilterForm.get('start').setValue(null);\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end)\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end));\n                    else\n                        this.timeFilterForm.get('end').setValue(null);\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null);\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null);\n            }\n        });\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  Time Line goes here\n  \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Time Line goes here        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/time.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asInputString\n                            \n                            \n                                    Public\n                                asString\n                            \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                parseString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/time.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asInputString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asInputString(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/time.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asString(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/time.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        currentTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/time.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     moment.Moment\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseString(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/time.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Moment\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable()\nexport class TimeService {\n\n    constructor() {\n    }\n\n    public currentTime(): moment.Moment {\n        return moment();\n    }\n\n    public parseString(value: string): moment.Moment {\n        return moment(value,'YYYY-MM-DDTHH:mm');\n    }\n\n    public asString(value: number): string {\n        return new Date(value).toISOString();\n    }\n\n    public asInputString(value: number): string {\n        return moment(value).format('YYYY-MM-DDTHH:mm:ss.SSS');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAuthHeadersIfNecessary\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAuthHeadersIfNecessary(request: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/interceptors.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpRequest\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/interceptors.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    /* istanbul ignore next */\n    constructor(private authenticationService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const update = {setHeaders: AuthenticationService.getSecurityHeader()};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFormGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            question: new FormControl(),\n            notification: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm);\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action);\n                this.typeFilterForm.get('question').setValue(!next.active || next.status.question);\n                this.typeFilterForm.get('notification').setValue(!next.active || next.status.notification);\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true);\n                this.typeFilterForm.get('action').setValue(true);\n                this.typeFilterForm.get('question').setValue(true);\n                this.typeFilterForm.get('notification').setValue(true);\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.question && form.notification),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n        \n            \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                feed.filters.type.action.label\n            \n            \n                \n                feed.filters.type.question.label\n            \n            \n                \n                feed.filters.type.notification.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        feed.filters.type.alarm.label                                                        feed.filters.type.action.label                                                        feed.filters.type.question.label                                                        feed.filters.type.notification.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    // | LoadLightCard\n    // | LoadLightCardSuccess\n    // | LoadLightCardFailure\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/model/card.model.ts\n            \n            class\n            Card\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/card.model.ts\n            \n            class\n            Detail\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/feed-filter.model.ts\n            \n            class\n            Filter\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/model/i18n.model.ts\n            \n            class\n            I18n\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/map.ts\n            \n            class\n            Map\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/message.model.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Input\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            ParameterListItem\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Process\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            State\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Third\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            ThirdMenu\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            ThirdMenuEntry\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/archives/archives.component.ts\n            \n            component\n            ArchivesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/card-details/card-details.component.ts\n            \n            component\n            CardDetailsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/detail/detail.component.ts\n            \n            component\n            DetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/cards/services/handlebars.service.ts\n            \n            injectable\n            HandlebarsService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/modules/cards/services/handlebars.service.ts\n            \n            function\n            sortOnKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/card-list.component.ts\n            \n            component\n            CardListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n            \n            component\n            TimeFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n            \n            component\n            TypeFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/no-selection/no-selection.component.ts\n            \n            component\n            NoSelectionComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/time-line/time-line.component.ts\n            \n            component\n            TimeLineComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/thirdparty/iframe.service.ts\n            \n            injectable\n            IframeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/thirdparty/iframedisplay.component.ts\n            \n            component\n            IframeDisplayComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            class\n            AuthObject\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            class\n            CheckTokenResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                44 %\n                (11/25)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            function\n            isInTheFuture\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            ONE_SECOND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/card.service.ts\n            \n            injectable\n            CardService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/filter.service.ts\n            \n            injectable\n            FilterService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/guid.service.ts\n            \n            class\n            GuidService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/interceptors.service.ts\n            \n            interceptor\n            TokenInjector\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/thirds.service.ts\n            \n            class\n            ThirdsI18nLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/thirds.service.ts\n            \n            injectable\n            ThirdsService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/thirds.service.ts\n            \n            function\n            ThirdsI18nLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/time.service.ts\n            \n            injectable\n            TimeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            AcceptLogIn\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            AcceptLogOut\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            AcceptLogOutSuccess\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            CheckAuthenticationStatus\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            InitAuthStatus\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            PayloadForSuccessfulAuthentication\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            RejectLogIn\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            TryToLogIn\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            TryToLogOut\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            LoadCard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            LoadCardFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            LoadCardSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            LoadConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            LoadConfigFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            LoadConfigSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/feed.actions.ts\n            \n            class\n            ApplyFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/feed.actions.ts\n            \n            class\n            InitFilters\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            AddLightCardFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCards\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCardsExtendedData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCardsFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCardsSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            SelectLightCard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            UpdatedSubscription\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            LoadMenu\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            LoadMenuFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            LoadMenuSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/authentication.effects.ts\n            \n            injectable\n            AuthenticationEffects\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/store/effects/card-operation.effects.ts\n            \n            injectable\n            CardOperationEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/card.effects.ts\n            \n            injectable\n            CardEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/effects/config.effects.ts\n            \n            injectable\n            ConfigEffects\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/custom-router.effects.ts\n            \n            injectable\n            CustomRouterEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/effects/feed-filters.effects.ts\n            \n            injectable\n            FeedFiltersEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/effects/light-card.effects.ts\n            \n            injectable\n            LightCardEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/effects/menu.effects.ts\n            \n            injectable\n            MenuEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            appEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            appMetaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            appReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            storeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getExpirationDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getExpirationTime\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getIdentifier\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            UTC_beginning_time\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/card.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/card.reducer.ts\n            \n            variable\n            getSelectedId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/config.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/light-card.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/menu.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/menu.reducer.ts\n            \n            variable\n            getSelectedId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectAuthenticationState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectExpirationTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/card.selectors.ts\n            \n            variable\n            selectCardState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/card.selectors.ts\n            \n            variable\n            selectCardStateSelection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/card.selectors.ts\n            \n            variable\n            selectCardStateSelectionDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            function\n            buildConfigSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfigData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfigLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfigRetry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectMaxedRetries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            function\n            buildFilterSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectActiveFiltersArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectFilteredFeed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectLastCards\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectLightCardSelection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectLightCardsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/menu.selectors.ts\n            \n            variable\n            selectMenuState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/menu.selectors.ts\n            \n            variable\n            selectMenuStateMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/router.selectors.ts\n            \n            variable\n            selectCurrentUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/router.selectors.ts\n            \n            variable\n            selectRouterState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/authentication.state.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/store/states/authentication.state.ts\n            \n            variable\n            authInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/card.state.ts\n            \n            interface\n            CardState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/states/card.state.ts\n            \n            variable\n            cardInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/config.state.ts\n            \n            interface\n            ConfigState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/store/states/config.state.ts\n            \n            variable\n            CONFIG_LOAD_MAX_RETRIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/config.state.ts\n            \n            variable\n            configInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            interface\n            CardFeedState\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            function\n            sortByStartDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            variable\n            feedInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            variable\n            LightCardAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/menu.state.ts\n            \n            interface\n            MenuState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/states/menu.state.ts\n            \n            variable\n            menuInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/router.state.ts\n            \n            class\n            CustomRouterStateSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/states/router.state.ts\n            \n            class\n            RouterStateUrl\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/states/router.state.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            variable\n            i18nPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            variable\n            prodI18nPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            variable\n            translateConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.vps.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            appendFixedLengthAlphanumericValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            forcePositiveAndOneMinimum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            generateRandomArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            generateRandomPositiveIntegerWithinRangeWithOneAsMinimum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getFixedLengthAlphanumericValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomAddCardOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomCardDetail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomCardWithRandomDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomLigthCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomThird\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getPositiveRandomNumberWithinRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomAlphanumericValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomCardDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomI18nData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomIndex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomThird\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getSeveralRandomLightCards\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            handleMaxAgainstMin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            pickARandomItemOfAnEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/mocks/thirds.service.mock.ts\n            \n            class\n            ThirdsServiceMock\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.2.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.12\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.24.0\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                 URI\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n            \n        \n\n    src/app/services/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n                        \n                            \n                                Value : QUESTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    52 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        19 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        LoadCard | LoadCardSuccess | LoadCardFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appEffects   (src/.../index.ts)\n                        \n                        \n                            appMetaReducers   (src/.../index.ts)\n                        \n                        \n                            appReducer   (src/.../index.ts)\n                        \n                        \n                            authInitialState   (src/.../authentication.state.ts)\n                        \n                        \n                            cardInitialState   (src/.../card.state.ts)\n                        \n                        \n                            CONFIG_LOAD_MAX_RETRIES   (src/.../config.state.ts)\n                        \n                        \n                            configInitialState   (src/.../config.state.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.vps.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            feedInitialState   (src/.../feed.state.ts)\n                        \n                        \n                            getExpirationDate   (src/.../authentication.reducer.ts)\n                        \n                        \n                            getExpirationTime   (src/.../authentication.reducer.ts)\n                        \n                        \n                            getIdentifier   (src/.../authentication.reducer.ts)\n                        \n                        \n                            getSelectedId   (src/.../card.reducer.ts)\n                        \n                        \n                            getSelectedId   (src/.../menu.reducer.ts)\n                        \n                        \n                            getToken   (src/.../authentication.reducer.ts)\n                        \n                        \n                            i18nPath   (src/.../translate.config.ts)\n                        \n                        \n                            initialState   (src/.../router.state.ts)\n                        \n                        \n                            LightCardAdapter   (src/.../feed.state.ts)\n                        \n                        \n                            menuInitialState   (src/.../menu.state.ts)\n                        \n                        \n                            ONE_SECOND   (src/.../authentication.service.ts)\n                        \n                        \n                            prodI18nPath   (src/.../translate.config.ts)\n                        \n                        \n                               (src/.../feed.selectors.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectActiveFiltersArray   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectAuthenticationState   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectCardState   (src/.../card.selectors.ts)\n                        \n                        \n                            selectCardStateSelection   (src/.../card.selectors.ts)\n                        \n                        \n                            selectCardStateSelectionDetails   (src/.../card.selectors.ts)\n                        \n                        \n                            selectCode   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectConfig   (src/.../config.selectors.ts)\n                        \n                        \n                            selectConfigData   (src/.../config.selectors.ts)\n                        \n                        \n                            selectConfigLoaded   (src/.../config.selectors.ts)\n                        \n                        \n                            selectConfigRetry   (src/.../config.selectors.ts)\n                        \n                        \n                            selectCurrentUrl   (src/.../router.selectors.ts)\n                        \n                        \n                            selectExpirationTime   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectFilter   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectFilteredFeed   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectLastCards   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectLightCardSelection   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectLightCardsState   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectMaxedRetries   (src/.../config.selectors.ts)\n                        \n                        \n                            selectMenuState   (src/.../menu.selectors.ts)\n                        \n                        \n                            selectMenuStateMenu   (src/.../menu.selectors.ts)\n                        \n                        \n                            selectMessage   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectRouterState   (src/.../router.selectors.ts)\n                        \n                        \n                            storeConfig   (src/.../index.ts)\n                        \n                        \n                            translateConfig   (src/.../translate.config.ts)\n                        \n                        \n                            UTC_beginning_time   (src/.../authentication.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appEffects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CardEffects,\n    ConfigEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appMetaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production\n    ? [storeFreeze]\n    : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    metaReducers: appMetaReducers,\n    // initialState: {\n    //     router: routerInitialState,\n    // }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/authentication.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/card.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cardInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    selected: null,\n    loading: false,\n    error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/config.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_LOAD_MAX_RETRIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.vps.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n    urls: {\n      authentication: '',\n        auth: 'http://opfab.rte-europe.com:2002/auth',\n        cards: 'http://opfab.rte-europe.com:2002/cards',\n        archives : '',\n        thirds: 'http://opfab.rte-europe.com:2002/thirds',\n        config: 'http://opfab.rte-europe.com:2002/config'\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n    urls: {\n      authentication: '',\n        auth: 'http://localhost:2002/auth',\n        cards: 'http://localhost:2002/cards',\n        archives : '',\n        thirds: 'http://localhost:2002/thirds',\n        config: 'http://localhost:2002/config'\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n    urls: {\n        authentication: '',\n        auth: '/auth',\n        cards: '/cards',\n        archives : '',\n        thirds: '/thirds',\n        config: '/config'\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/feed.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            feedInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CardFeedState\n\n                        \n                    \n                    \n                        \n                            Default value : LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LightCardAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntityAdapter\n\n                        \n                    \n                    \n                        \n                            Default value : createEntityAdapter({\n    sortComparer:sortByStartDate\n})\n                        \n                    \n\n\n            \n        \n\n    src/app/store/reducers/authentication.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getExpirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => state.expirationDate\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpirationTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => {\n    const expirationDate = getExpirationDate(state);\n    const token = getToken(state);\n    if (token && expirationDate) {\n        return expirationDate.getTime();\n    } else {\n        return UTC_beginning_time;\n    }\n}\n                        \n                    \n\n                \n                    \n                        return the stored expiration time otherwise the beginning\nof the UTC time which should be always in the past.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => state.identifier\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => state.token\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UTC_beginning_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/app/store/reducers/card.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getSelectedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: CardFeedState) => state.selectedCardId\n                        \n                    \n\n\n            \n        \n\n    src/app/store/reducers/menu.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getSelectedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: CardFeedState) => state.selectedCardId\n                        \n                    \n\n\n            \n        \n\n    src/app/translate.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            i18nPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/assets/i18n/\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prodI18nPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/ui/assets/i18n/\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateModuleConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/router.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/menu.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    menu:[],\n    loading: false,\n    error:null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ONE_SECOND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/feed.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardAdapter.getSelectors(selectLightCardsState)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectActiveFiltersArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectFilter,\n    (filters) =>{\n      let result = [];\n      for(let v of filters.values()) {\n        if(v.active)\n          result.push(v);\n      }\n      return result;\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectLightCardsState,\n    state => state.filters)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectFilteredFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectFeed,selectActiveFiltersArray,\n    (feed:LightCard[],filters:Filter[])=>{\n    if(filters && filters.length>0)\n      return feed.filter(card=>Filter.chainFilter(card,filters));\n    else return feed;\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLastCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectLightCardsState,\n    state => state.lastCards)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLightCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectLightCardsState,\n    state => state.selectedCardId)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLightCardsState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.feed\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/authentication.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectAuthenticationState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('authentication')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectAuthenticationState, (authState)=>authState.code)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectExpirationTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectAuthenticationState, fromAuthentication.getExpirationTime)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectAuthenticationState, (authState)=>authState.message)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/card.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectCardState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.card\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCardStateSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectCardState, (cardState:CardState)=> cardState.selected)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCardStateSelectionDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectCardStateSelection, (card:Card)=> {\n    return card==null?null:card.details;\n})\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/config.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.config\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfigData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfig, (configState:ConfigState)=> configState.config)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfigLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfig, (configState:ConfigState)=> configState.loaded)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfigRetry\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfig, (configState:ConfigState)=> configState.retry)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMaxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfigRetry, (retries:number)=> retries >= CONFIG_LOAD_MAX_RETRIES)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/router.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectCurrentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectRouterState,\n    (router) => {\n        if (router)\n            return router.state && router.state.url\n        return null;\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectRouterState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('router')\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/menu.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectMenuState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.menu\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMenuStateMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectMenuState, (menuState:MenuState)=> menuState.menu)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
